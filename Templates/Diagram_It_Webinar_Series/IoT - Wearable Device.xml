<?xml version="1.0" encoding="UTF-8"?>
<project ref="iot-wearable-device" name="IoT - Wearable Device" isSyncing="false" tags="" modelUpdated="2024-04-24 15:33:14" workflowState="" locked="false">
  <desc/>
  <diagram draft="false">
    <schema>PG14R3JhcGhNb2RlbCBkeD0iMjg2MyIgZHk9IjExMjYiIGdyaWQ9IjAiIGdyaWRTaXplPSIxMCIgZ3VpZGVzPSIxIiB0b29sdGlwcz0iMSIgY29ubmVjdD0iMSIgYXJyb3dzPSIwIiBmb2xkPSIxIiBwYWdlPSIwIiBwYWdlU2NhbGU9IjEiIHBhZ2VXaWR0aD0iODUwIiBwYWdlSGVpZ2h0PSIxMTAwIiBtYXRoPSIwIiBzaGFkb3c9IjAiIGlyRHJhd2lvVmVyc2lvbj0iNi40LjAiIGlySXJpdXNSaXNrVmVyc2lvbj0iNC4yNy4zIj48cm9vdD48bXhDZWxsIGlkPSIwIi8+PG14Q2VsbCBpZD0iMSIgc3R5bGU9IiIgcGFyZW50PSIwIi8+PG14Q2VsbCBpZD0iMyIgdmFsdWU9IkludGVybmV0IiBzdHlsZT0iaXIucmVmPWYwYmE3NzIyLTM5YjYtNGM4MS04MjkwLWEzMGEyNDhiYjhkOTtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO3JlY3Vyc2l2ZVJlc2l6ZT0wO2h0bWw9MTt2ZXJ0aWNhbEFsaWduPXRvcDthbGlnbj1sZWZ0O2Rhc2hlZD0xO3N0cm9rZVdpZHRoPTE7YXJjU2l6ZT0zO2Fic29sdXRlQXJjU2l6ZT0xO3NwYWNpbmdUb3A9MTtzcGFjaW5nTGVmdD0zMjtzdHJva2VDb2xvcj0jNzU3NUVCO2ZpbGxDb2xvcj0jRjBGMEZGO2ZpbGxPcGFjaXR5PTMwO2ZvbnRDb2xvcj0jNTY1MUUwO2Nvbm5lY3RhYmxlPTA7Y29udGFpbmVyPTE7c291cmNlPWlyaXVzcmlzaztpci50eXBlPVRSVVNUWk9ORTsiIHBhcmVudD0iMSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSItNDM1IiB5PSIyMjIiIHdpZHRoPSIxMjY3IiBoZWlnaHQ9IjQyMyIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG9iamVjdCBsYWJlbD0iaU9TIERldmljZSBDbGllbnQiIGlyLnNvdXJjZVN0eWxlPSJyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzazt2ZXJ0aWNhbEFsaWduPXRvcDtzdHJva2VXaWR0aD0xO2NvbnRhaW5lcj0wO3JlY3Vyc2l2ZVJlc2l6ZT0xO2FsaWduPWNlbnRlcjthcmNTaXplPTkwO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BITjBlV3hsUGlZamVHRTdJQ0FnSUM1cFkyOXVMV1pwYkd3Z2V5WWplR0U3SUNBZ0lDQWdJQ0JtYVd4c09pQWpNVEZCT0VOR095WWplR0U3SUNBZ0lIMG1JM2hoT3p3dmMzUjViR1UrSmlONFlUczhaeUJqYkdsd0xYQmhkR2c5SW5WeWJDZ2pZMnhwY0RBcElqNG1JM2hoT3p4d1lYUm9JR1E5SWswd0xqWTFORFV6TkNBd0xqVXdOemMwTWtNd0xqWTFOREkxTmlBd0xqUTJNRFF4T0NBd0xqWTNOVFk1T0NBd0xqUXlORGMxTWlBd0xqY3hPRGs1TmlBd0xqTTVPRFExTTBNd0xqWTVORGM0SURBdU16WXpOelU1SURBdU5qVTRNVFF5SURBdU16UTBOamMzSURBdU5qQTVPRFEzSURBdU16UXdPVGs1UXpBdU5UWTBNVElnTUM0ek16Y3pPVEVnTUM0MU1UUXdPU0F3TGpNMk56WTBOU0F3TGpRNU5UYzNNU0F3TGpNMk56WTBOVU13TGpRM05qUXhNaUF3TGpNMk56WTBOU0F3TGpRek1qRTBNaUF3TGpNME1qSTBPQ0F3TGpNNU56TXdPQ0F3TGpNME1qSTBPRU13TGpNeU5UUXlNU0F3TGpNME16TTFPQ0F3TGpJME9UQXlNeUF3TGpNNU9UVTJOQ0F3TGpJME9UQXlNeUF3TGpVeE16a3hOME13TGpJME9UQXlNeUF3TGpVME56Y3hJREF1TWpVMU1UazVJREF1TlRneU5qRXpJREF1TWpZM05UVWdNQzQyTVRnMU5UZERNQzR5T0RRd05qVWdNQzQyTmpVNE9DQXdMak0wTXpZd01TQXdMamM0TVRneklEQXVOREExTnpBMElEQXVOemM1T1RVMlF6QXVORE00TVRjNElEQXVOemM1TVRreklEQXVORFl4TVRRMklEQXVOelUyT1RFNUlEQXVOVEF6TkRBMElEQXVOelUyT1RFNVF6QXVOVFEwTkRFeklEQXVOelUyT1RFNUlEQXVOVFkxTmpRMklEQXVOemM1T1RVMklEQXVOakF4T0RZM0lEQXVOemM1T1RVMlF6QXVOalkwTlRJMklEQXVOemM1TURVMElEQXVOekU0TXpjeUlEQXVOamN6TmpVeUlEQXVOek0wTURVMElEQXVOakkyTVRnNVF6QXVOalV3TURJMElEQXVOVGcyTlRZNElEQXVOalUwTlRNMElEQXVOVEV3TVRjZ01DNDJOVFExTXpRZ01DNDFNRGMzTkRKV01DNDFNRGMzTkRKYVRUQXVOVGd4TmpBMklEQXVNamsyTVRBMFF6QXVOakUyTnpnMklEQXVNalUwTXpNeUlEQXVOakV6TlRrMElEQXVNakUyTXpBMklEQXVOakV5TlRVeklEQXVNakF5TmpNM1F6QXVOVGd4TkRZM0lEQXVNakEwTkRReElEQXVOVFExTlRJeklEQXVNakl6T0NBd0xqVXlOVEExTkNBd0xqSTBOell3TVVNd0xqVXdNalV3TWlBd0xqSTNNekV6TmlBd0xqUTRPVEkwT1NBd0xqTXdORGN3T0NBd0xqUTVNakE1TkNBd0xqTTBNRE13TlVNd0xqVXlOVFkzT0NBd0xqTTBNamczTXlBd0xqVTFOak0wT0NBd0xqTXlOVFU1TlNBd0xqVTRNVFl3TmlBd0xqSTVOakV3TkZZd0xqSTVOakV3TkZvaUlHTnNZWE56UFNKcFkyOXVMV1pwYkd3aUx6NG1JM2hoT3p3dlp6NG1JM2hoT3p4a1pXWnpQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNQzQzTVRBMU5EY2lJR2hsYVdkb2REMGlNQzQzTVRBMU5EY2lJR1pwYkd3OUluZG9hWFJsSWlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3dMakV6TlRrNE5pQXdMakV6TmpFd09Da2lMejRtSTNoaE96d3ZZMnhwY0ZCaGRHZytKaU40WVRzOEwyUmxabk0rSmlONFlUczhMM04yWno0PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tOyIgaWQ9IjYiPjxteENlbGwgc3R5bGU9ImlyLnJlZj02NTQzZDYxNS0yYjNlLTQzMmItYTcyZC03ZTNiNzY5NDE1NDc7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1jdXN0b207aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9aW9zLWRldmljZS1jbGllbnQ7dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTtjb250YWluZXI9MTtyZWN1cnNpdmVSZXNpemU9MDthbGlnbj1sZWZ0O2FyY1NpemU9MztwZXJpbWV0ZXI9cmVjdGFuZ2xlUGVyaW1ldGVyO3RleHREaXJlY3Rpb249bHRyO3NwYWNpbmdUb3A9MTtzcGFjaW5nTGVmdD0zMjsiIHBhcmVudD0iMyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSI0OCIgeT0iNjEiIHdpZHRoPSI0MjAiIGhlaWdodD0iMzE5IiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L29iamVjdD48bXhDZWxsIGlkPSI1NiIgdmFsdWU9IklvVCBPcGVyYXRpbmcgU3lzdGVtIC0+IFdpLUZpIHBvcnQiIHN0eWxlPSJpci5yZWY9YzM3NmI0YzktNzAyMy00N2U0LTk2NGUtZmNjZTQ4MTQ4ZjViO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtleGl0WD0xO2V4aXRZPTAuMjU7ZXhpdER4PTA7ZXhpdER5PTA7ZW50cnlYPTA7ZW50cnlZPTAuNTtlbnRyeUR4PTA7ZW50cnlEeT0wO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSI2IiBzb3VyY2U9IjUiIHRhcmdldD0iMTgiIGVkZ2U9IjEiPjxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48b2JqZWN0IGxhYmVsPSJJb1QgT3BlcmF0aW5nIFN5c3RlbSIgaXIuc291cmNlU3R5bGU9InJvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO3ZlcnRpY2FsQWxpZ249dG9wO3N0cm9rZVdpZHRoPTE7Y29udGFpbmVyPTA7cmVjdXJzaXZlUmVzaXplPTE7YWxpZ249Y2VudGVyO2FyY1NpemU9OTA7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEhOMGVXeGxQaVlqZUdFN0lDQWdJQzVwWTI5dUxXWnBiR3dnZXlZamVHRTdJQ0FnSUNBZ0lDQm1hV3hzT2lBak1URkJPRU5HT3lZamVHRTdJQ0FnSUgwbUkzaGhPend2YzNSNWJHVStKaU40WVRzOFp5QmpiR2x3TFhCaGRHZzlJblZ5YkNnalkyeHBjREFwSWo0bUkzaGhPenh3WVhSb0lHUTlJazB3TGpNNE1EUTNOaUF3TGpjeE5qWTNPRU13TGpNMU56ZzNNU0F3TGpjeU5UVTNNeUF3TGpNek1qY3dPQ0F3TGpjek1EQXlNU0F3TGpNd05EazROaUF3TGpjek1EQXlNVU13TGpJM056STJNeUF3TGpjek1EQXlNU0F3TGpJMU1qRWdNQzQzTWpVMU56TWdNQzR5TWprME9UWWdNQzQzTVRZMk56aERNQzR5TURZNE9URWdNQzQzTURjM09ETWdNQzR4T0Rnek16a2dNQzQyT1RVNU1qTWdNQzR4TnpNNE16Z2dNQzQyT0RFd09UaERNQzR4TlRrek16Y2dNQzQyTmpZeU56TWdNQzR4TkRjeE9ESWdNQzQyTkRnMk9UUWdNQzR4TXpjek56SWdNQzQyTWpnek5qTkRNQzR4TWpjMU5qTWdNQzQyTURnd016RWdNQzR4TWpBMU1qWWdNQzQxT0RjeU56WWdNQzR4TVRZeU5qRWdNQzQxTmpZd09UaERNQzR4TVRFNU9UWWdNQzQxTkRRNU1Ua2dNQzR4TURrNE5qTWdNQzQxTWpJNE9UTWdNQzR4TURrNE5qTWdNQzQxTURBd01rTXdMakV3T1RnMk15QXdMalEzTnpFME55QXdMakV4TVRrNU5pQXdMalExTlRFeU1TQXdMakV4TmpJMk1TQXdMalF6TXprME0wTXdMakV5TURVeU5pQXdMalF4TWpjMk5DQXdMakV5TnpVMk15QXdMak01TWpBd09TQXdMakV6TnpNM01pQXdMak0zTVRZM04wTXdMakUwTnpFNE1pQXdMak0xTVRNME5pQXdMakUxT1RNek55QXdMak16TXpjMk55QXdMakUzTXpnek9DQXdMak14T0RrME1rTXdMakU0T0RNek9TQXdMak13TkRFeE55QXdMakl3TmpnNU1TQXdMakk1TWpJMU55QXdMakl5T1RRNU5pQXdMakk0TXpNMk1rTXdMakkxTWpFZ01DNHlOelEwTmpjZ01DNHlOemN5TmpNZ01DNHlOekF3TWlBd0xqTXdORGs0TmlBd0xqSTNNREF5UXpBdU16TXlOekE0SURBdU1qY3dNRElnTUM0ek5UYzROekVnTUM0eU56UTBOamNnTUM0ek9EQTBOellnTUM0eU9ETXpOakpETUM0ME1ETXdPQ0F3TGpJNU1qSTFOeUF3TGpReU1UWXpNeUF3TGpNd05ERXhOeUF3TGpRek5qRXpOQ0F3TGpNeE9EazBNa013TGpRMU1EWXpOU0F3TGpNek16YzJOeUF3TGpRMk1qYzVJREF1TXpVeE16UTJJREF1TkRjeU5UazVJREF1TXpjeE5qYzNRekF1TkRneU5EQTVJREF1TXpreU1EQTVJREF1TkRnNU5EUTJJREF1TkRFeU56WTBJREF1TkRrek56RXhJREF1TkRNek9UUXpRekF1TkRrM09UYzJJREF1TkRVMU1USXhJREF1TlRBd01UQTRJREF1TkRjM01UUTNJREF1TlRBd01UQTRJREF1TlRBd01ESkRNQzQxTURBeE1EZ2dNQzQxTWpJNE9UTWdNQzQwT1RjNU56WWdNQzQxTkRRNU1Ua2dNQzQwT1RNM01URWdNQzQxTmpZd09UaERNQzQwT0RrME5EWWdNQzQxT0RjeU56WWdNQzQwT0RJME1Ea2dNQzQyTURnd016RWdNQzQwTnpJMU9Ua2dNQzQyTWpnek5qTkRNQzQwTmpJM09TQXdMalkwT0RZNU5DQXdMalExTURZek5TQXdMalkyTmpJM015QXdMalF6TmpFek5DQXdMalk0TVRBNU9FTXdMalF5TVRZek15QXdMalk1TlRreU15QXdMalF3TXpBNElEQXVOekEzTnpneklEQXVNemd3TkRjMklEQXVOekUyTmpjNFdrMHdMakkwTmpFeU9TQXdMalkxTVRnM01VTXdMakkyTXpFNE9TQXdMalkyTVRZeE15QXdMakk0TWpnd09DQXdMalkyTmpRNE5TQXdMak13TkRrNE5pQXdMalkyTmpRNE5VTXdMak15TnpFMk5DQXdMalkyTmpRNE5TQXdMak0wTmpjNE1pQXdMalkyTVRRd01pQXdMak0yTXpnME1pQXdMalkxTVRJek5rTXdMak00TURrd01pQXdMalkwTURZME55QXdMak01TkRFeU5DQXdMall5TmpnNElEQXVOREF6TlRBM0lEQXVOakE1T1RNM1F6QXVOREV5T0RrZ01DNDFPVEk1T1RVZ01DNDBNVGszTVRNZ01DNDFOelUwTVRZZ01DNDBNak01TnpnZ01DNDFOVGN5TURORE1DNDBNamcyTnlBd0xqVXpPRFUyTlNBd0xqUXpNVEF4TmlBd0xqVXhPVFV3TkNBd0xqUXpNVEF4TmlBd0xqVXdNREF5UXpBdU5ETXhNREUySURBdU5EYzVOamc1SURBdU5ESTROamNnTUM0ME5qQXlNRFFnTUM0ME1qTTVOemdnTUM0ME5ERTFOamRETUM0ME1UazNNVE1nTUM0ME1qSTFNRFlnTUM0ME1USTRPU0F3TGpRd05EY3hOaUF3TGpRd016VXdOeUF3TGpNNE9ERTVOME13TGpNNU5ERXlOQ0F3TGpNM01UWTNOeUF3TGpNNE1Ea3dNaUF3TGpNMU9EVTBOaUF3TGpNMk16ZzBNaUF3TGpNME9EZ3dORU13TGpNME5qYzRNaUF3TGpNek9EWXpPQ0F3TGpNeU56RTJOQ0F3TGpNek16VTFOaUF3TGpNd05EazROaUF3TGpNek16VTFOa013TGpJNE1qZ3dPQ0F3TGpNek16VTFOaUF3TGpJMk16RTRPU0F3TGpNek9EZzFJREF1TWpRMk1USTVJREF1TXpRNU5EUkRNQzR5TWprd05qa2dNQzR6TlRrMk1EVWdNQzR5TVRVNE5EZ2dNQzR6TnpNeE5pQXdMakl3TmpRMk5TQXdMak01TURFd00wTXdMakU1TnpBNE1pQXdMalF3TnpBME5pQXdMakU1TURBME5TQXdMalF5TkRnek5pQXdMakU0TlRNMU15QXdMalEwTXpRM00wTXdMakU0TVRBNE9DQXdMalEyTVRZNE55QXdMakUzT0RrMU5pQXdMalE0TURVek5pQXdMakUzT0RrMU5pQXdMalV3TURBeVF6QXVNVGM0T1RVMklEQXVOVEl3TXpVeUlEQXVNVGd4TURnNElEQXVOVFF3TURRNElEQXVNVGcxTXpVeklEQXVOVFU1TVRBNVF6QXVNVGt3TURRMUlEQXVOVGMzTnpRMklEQXVNVGszTURneUlEQXVOVGsxTXpJMElEQXVNakEyTkRZMUlEQXVOakV4T0RRMFF6QXVNakUxT0RRNElEQXVOakk0TXpZeklEQXVNakk1TURZNUlEQXVOalF4TnpBMUlEQXVNalEyTVRJNUlEQXVOalV4T0RjeFdpSWdZMnhoYzNNOUltbGpiMjR0Wm1sc2JDSXZQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVOek0yT1RZMElEQXVOek13TURJeFF6QXVOamszTXlBd0xqY3pNREF5TVNBd0xqWTJNamsyTnlBd0xqY3lNRFE1SURBdU5qTXpPVFkxSURBdU56QXhOREk1UXpBdU5qQTBPVFl6SURBdU5qZ3hPVFExSURBdU5UZzBPVEU0SURBdU5qVTFORGN5SURBdU5UY3pPREk1SURBdU5qSXlNREE1VERBdU5qTTJOVEkwSURBdU5UazVNVE0yUXpBdU5qUTFPVEEzSURBdU5qRTVPRGt4SURBdU5qVTVOVFUxSURBdU5qTTJOREV4SURBdU5qYzNORFk0SURBdU5qUTROamswUXpBdU5qazFNemd4SURBdU5qWXdOVFUxSURBdU56RTJNRFkySURBdU5qWTJORGcxSURBdU56TTVOVEl6SURBdU5qWTJORGcxUXpBdU56WTBNallnTUM0Mk5qWTBPRFVnTUM0M09ETTROemtnTUM0Mk5qQTFOVFVnTUM0M09UZ3pPQ0F3TGpZME9EWTVORU13TGpneE16TXdOeUF3TGpZek5qZ3pOQ0F3TGpneU1EYzNNU0F3TGpZeE9UZzVNU0F3TGpneU1EYzNNU0F3TGpVNU56ZzJOa013TGpneU1EYzNNU0F3TGpVNE9EVTBOeUF3TGpneE9EWXpPQ0F3TGpVNE1EQTNOaUF3TGpneE5ETTNNeUF3TGpVM01qUTFNVU13TGpneE1EVXpOU0F3TGpVMk5EUXdNeUF3TGpnd05qQTFOaUF3TGpVMU56Z3pPQ0F3TGpnd01Ea3pPU0F3TGpVMU1qYzFOVU13TGpjNU5UZ3lNU0F3TGpVME56WTNNaUF3TGpjNE56a3pJREF1TlRReU5UZzVJREF1TnpjM01qWTRJREF1TlRNM05UQTJRekF1TnpZMk5qQTJJREF1TlRNeUlEQXVOelUzTmpRNUlEQXVOVEkzT1RjMklEQXVOelV3TXprNUlEQXVOVEkxTkRNMFF6QXVOelF6TlRjMUlEQXVOVEl5TkRZNUlEQXVOek16TXpNNUlEQXVOVEU0TmpVM0lEQXVOekU1TmpreElEQXVOVEV6T1RrNFF6QXVOekF5TmpNeElEQXVOVEE0TURZNElEQXVOamc1T0RNMklEQXVOVEF6TkRBNUlEQXVOamd4TXpBMklEQXVOVEF3TURKRE1DNDJOekkzTnpZZ01DNDBPVFkyTXpFZ01DNDJOakUwTnpRZ01DNDBPVEV4TWpVZ01DNDJORGMwSURBdU5EZ3pOVEF4UXpBdU5qTXpOelV5SURBdU5EYzFORFV6SURBdU5qSXpNekF6SURBdU5EWTNOakUzSURBdU5qRTJNRFV5SURBdU5EVTVPVGt5UXpBdU5qQTVNakk0SURBdU5EVXhPVFEwSURBdU5qQXpNRFEwSURBdU5EUXhOVFkzSURBdU5UazNORGs1SURBdU5ESTRPRFpETUM0MU9URTVOVFVnTUM0ME1UWXhOVElnTUM0MU9Ea3hPRE1nTUM0ME1ERTVOak1nTUM0MU9Ea3hPRE1nTUM0ek9EWXlPVEZETUM0MU9Ea3hPRE1nTUM0ek5UTTJOelVnTUM0Mk1ERTVOemdnTUM0ek1qWXhORE1nTUM0Mk1qYzFOamdnTUM0ek1ETTJPVFJETUM0Mk5UTXhOVGNnTUM0eU9ERXlORFFnTUM0Mk9EYzVNVGNnTUM0eU56QXdNaUF3TGpjek1UZzBOaUF3TGpJM01EQXlRekF1TnpZNE5USTFJREF1TWpjd01ESWdNQzQzT1RnMU9UTWdNQzR5Tnpnd05qY2dNQzQ0TWpJd05TQXdMakk1TkRFMk0wTXdMamcwTlRrek5DQXdMak14TURJMU9TQXdMamcyTVRreU9DQXdMak16TVRZME9TQXdMamczTURBek1TQXdMak0xT0RNek5Vd3dMamd3T0RZeE5pQXdMak0zT0RZMk5rTXdMamd3TWpZME5TQXdMak0yTlRFeE1pQXdMamM1TWpZeU1pQXdMak0xTkRNeE1TQXdMamMzT0RVME55QXdMak0wTmpJMk0wTXdMamMyTkRrZ01DNHpNemMzT1RFZ01DNDNORGMyTWpZZ01DNHpNek0xTlRZZ01DNDNNalkzTWpnZ01DNHpNek0xTlRaRE1DNDNNRFUwTURNZ01DNHpNek0xTlRZZ01DNDJPRGcxTlRjZ01DNHpNemd5TVRVZ01DNDJOell4T0RnZ01DNHpORGMxTXpSRE1DNDJOalF5TkRZZ01DNHpOVFk0TlRJZ01DNDJOVGd5TnpVZ01DNHpOams1T0RNZ01DNDJOVGd5TnpVZ01DNHpPRFk1TWpaRE1DNDJOVGd5TnpVZ01DNHpPVGd6TmpJZ01DNDJOakk1TmpjZ01DNDBNRGcxTWpnZ01DNDJOekl6TlNBd0xqUXhOelF5TTBNd0xqWTRNVGN6TXlBd0xqUXlOak14T0NBd0xqWTVNVFUwTWlBd0xqUXpNamc0TkNBd0xqY3dNVGMzT0NBd0xqUXpOekV4T1VNd0xqY3hNakF4TkNBd0xqUTBNVE0xTlNBd0xqY3lOelU0TVNBd0xqUTBOekEzTXlBd0xqYzBPRFEzT1NBd0xqUTFOREkzTkVNd0xqYzJNVEkzTkNBd0xqUTFPRGt6TXlBd0xqYzNNRFkxTnlBd0xqUTJNalV6TkNBd0xqYzNOall5T0NBd0xqUTJOVEEzTlVNd0xqYzRNekF5TmlBd0xqUTJOekU1TXlBd0xqYzVNakU1TlNBd0xqUTNNVEF3TlNBd0xqZ3dOREV6TnlBd0xqUTNOalV4TWtNd0xqZ3hOakEzT1NBd0xqUTRNakF4T0NBd0xqZ3lOVEkwT1NBd0xqUTROekV3TVNBd0xqZ3pNVFkwTmlBd0xqUTVNVGMyUXpBdU9ETTRNRFEwSURBdU5EazFPVGsySURBdU9EUTFOVEE0SURBdU5UQXhPVEkySURBdU9EVTBNRE0zSURBdU5UQTVOVFZETUM0NE5qSTFOamNnTUM0MU1UY3hOelVnTUM0NE5qZzVOalVnTUM0MU1qVXdNVEVnTUM0NE56TXlNeUF3TGpVek16QTFPVU13TGpnM056a3lNU0F3TGpVME1EWTRNeUF3TGpnNE1UYzJJREF1TlRVd01qRTBJREF1T0RnME56UTFJREF1TlRZeE5qVkRNQzQ0T0RneE5UY2dNQzQxTnpJMk5qTWdNQzQ0T0RrNE5qTWdNQzQxT0RRMU1qTWdNQzQ0T0RrNE5qTWdNQzQxT1RjeU0wTXdMamc0T1RnMk15QXdMall6T0RjMElEQXVPRGMxTlRjMklEQXVOamN4TXpVMklEQXVPRFEzSURBdU5qazFNRGMyUXpBdU9ERTROREkxSURBdU56RTRNemN5SURBdU56Z3hOelEySURBdU56TXdNREl4SURBdU56TTJPVFkwSURBdU56TXdNREl4V2lJZ1kyeGhjM005SW1samIyNHRabWxzYkNJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU16WTNOVEV6SURBdU5EZzJOREUxUXpBdU16YzBNakl5SURBdU5Ea3pNVEkwSURBdU16Z3dNREUxSURBdU5UQXhNalFnTUM0ek9EUTBNamtnTUM0MU1EazROamxETUM0ek9EY3lOVGdnTUM0MU1UVTBNREVnTUM0ek9EVXdOamdnTUM0MU1qSXhOemtnTUM0ek56azFNellnTUM0MU1qVXdNRGhETUM0ek56UXdNRFFnTUM0MU1qYzRNemNnTUM0ek5qY3lNallnTUM0MU1qVTJORGNnTUM0ek5qUXpPVGNnTUM0MU1qQXhNVFZETUM0ek5qRXdNalFnTUM0MU1UTTFNVGtnTUM0ek5UWTFPVGtnTUM0MU1EY3pNaUF3TGpNMU1UWXdNeUF3TGpVd01qTXlORU13TGpNeU5EWTRNU0F3TGpRM05UUXdNaUF3TGpJNE1UQXpJREF1TkRjMU5EQXlJREF1TWpVME1UQTRJREF1TlRBeU16STBRekF1TWpRNE9EYzJJREF1TlRBM05UVTJJREF1TWpRME5qTWdNQzQxTVRNME16UWdNQzR5TkRFek5Ua2dNQzQxTVRrNE9UbERNQzR5TXpnMU5UVWdNQzQxTWpVME5EUWdNQzR5TXpFM09EY2dNQzQxTWpjMk5qVWdNQzR5TWpZeU5ESWdNQzQxTWpRNE5rTXdMakl5TURZNU9DQXdMalV5TWpBMU5pQXdMakl4T0RRM055QXdMalV4TlRJNE9DQXdMakl5TVRJNE1TQXdMalV3T1RjME5FTXdMakl5TlRZeU5DQXdMalV3TVRFMU9TQXdMakl6TVRJM05DQXdMalE1TXpNek9DQXdMakl6T0RFNU9DQXdMalE0TmpReE5VTXdMakkzTXprd055QXdMalExTURjd05TQXdMak16TVRnd05DQXdMalExTURjd05TQXdMak0yTnpVeE15QXdMalE0TmpReE5WcE5NQzR6TkRRME5qSWdNQzQxTWpBd05qbERNQzR6TkRrMk5EUWdNQzQxTWpVeU5URWdNQzR6TlRNNE9UTWdNQzQxTXpFMU9UUWdNQzR6TlRZNE5USWdNQzQxTXpnek5EVkRNQzR6TlRrek5EVWdNQzQxTkRRd016WWdNQzR6TlRZM05UUWdNQzQxTlRBMk56RWdNQzR6TlRFd05qTWdNQzQxTlRNeE5qUkRNQzR6TkRVek56SWdNQzQxTlRVMk5UZ2dNQzR6TXpnM016Y2dNQzQxTlRNd05qWWdNQzR6TXpZeU5ETWdNQzQxTkRjek56WkRNQzR6TXpRek9ETWdNQzQxTkRNeE16RWdNQzR6TXpFM01ETWdNQzQxTXpreE15QXdMak15T0RVMU15QXdMalV6TlRrM09VTXdMak14TkRNMUlEQXVOVEl4TnpjM0lEQXVNamt4TXpJMElEQXVOVEl4TnpjM0lEQXVNamMzTVRJeUlEQXVOVE0xT1RjNVF6QXVNamN6T1RreUlEQXVOVE01TVRBNUlEQXVNamN4TkRNM0lEQXVOVFF5T1RReElEQXVNalk1TlRZZ01DNDFORGN5TXpKRE1DNHlOamN3TmprZ01DNDFOVEk1TWpRZ01DNHlOakEwTXpZZ01DNDFOVFUxTVRrZ01DNHlOVFEzTkRRZ01DNDFOVE13TWpoRE1DNHlORGt3TlRJZ01DNDFOVEExTXpnZ01DNHlORFkwTlRZZ01DNDFORE01TURRZ01DNHlORGc1TkRjZ01DNDFNemd5TVRKRE1DNHlOVEU1TVRjZ01DNDFNekUwTWpRZ01DNHlOVFl3TXpZZ01DNDFNalV5TkRZZ01DNHlOakV5TVRJZ01DNDFNakF3TmpsRE1DNHlPRFF5TURFZ01DNDBPVGN3T0RFZ01DNHpNakUwTnpRZ01DNDBPVGN3T0RFZ01DNHpORFEwTmpJZ01DNDFNakF3TmpsYVRUQXVNemszTVRVNElEQXVORFU1TXpBMlF6QXVOREF5T0RjeklEQXVORFkxTURJeElEQXVOREE0TWpZeElEQXVORGN4TlRRZ01DNDBNVEk1TlRFZ01DNDBOemd6TXpaRE1DNDBNVFkwT0RFZ01DNDBPRE0wTlNBd0xqUXhOVEU1TmlBd0xqUTVNRFExTmlBd0xqUXhNREE0TXlBd0xqUTVNems0TlVNd0xqUXdORGsyT1NBd0xqUTVOelV4TkNBd0xqTTVOemsyTXlBd0xqUTVOakl6SURBdU16azBORE0wSURBdU5Ea3hNVEUzUXpBdU16a3dORGs1SURBdU5EZzFOREUySURBdU16ZzFPVGM1SURBdU5EYzVPVFEySURBdU16Z3hNalE0SURBdU5EYzFNakUyUXpBdU16TTNOamcxSURBdU5ETXhOalV6SURBdU1qWTNNRFUxSURBdU5ETXhOalV6SURBdU1qSXpORGt4SURBdU5EYzFNakUyUXpBdU1qRTVJREF1TkRjNU56QTNJREF1TWpFME5USTFJREF1TkRnMU1UZ2dNQzR5TVRBME16WWdNQzQwT1RFd056TkRNQzR5TURZNE9UUWdNQzQwT1RZeE56Z2dNQzR4T1RrNE9EVWdNQzQwT1RjME5EWWdNQzR4T1RRM09DQXdMalE1TXprd05FTXdMakU0T1RZM05TQXdMalE1TURNMk15QXdMakU0T0RRd055QXdMalE0TXpNMU15QXdMakU1TVRrME9TQXdMalEzT0RJME9FTXdMakU1TmpjMk5DQXdMalEzTVRNd09DQXdMakl3TWpBNElEQXVORFkwT0RBNElEQXVNakEzTlRneElEQXVORFU1TXpBMlF6QXVNalU1T1RNeElEQXVOREEyT1RVMklEQXVNelEwT0RBNElEQXVOREEyT1RVMklEQXVNemszTVRVNElEQXVORFU1TXpBMldrMHdMak14TkRNNE5DQXdMalUxTURreFF6QXVNekl3T1RjNElEQXVOVFUzTlRBMElEQXVNekl3T1RjNElEQXVOVFk0TVRrMklEQXVNekUwTXpnMElEQXVOVGMwTnpreFF6QXVNekEzTnpnNUlEQXVOVGd4TXpnMklEQXVNamszTURrM0lEQXVOVGd4TXpnMklEQXVNamt3TlRBeUlEQXVOVGMwTnpreFF6QXVNamd6T1RBM0lEQXVOVFk0TVRrMklEQXVNamd6T1RBM0lEQXVOVFUzTlRBMElEQXVNamt3TlRBeUlEQXVOVFV3T1RGRE1DNHlPVGN3T1RjZ01DNDFORFF6TVRVZ01DNHpNRGMzT0RrZ01DNDFORFF6TVRVZ01DNHpNVFF6T0RRZ01DNDFOVEE1TVZvaUlHTnNZWE56UFNKcFkyOXVMV1pwYkd3aUx6NG1JM2hoT3p3dlp6NG1JM2hoT3p4a1pXWnpQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOWpiR2x3VUdGMGFENG1JM2hoT3p3dlpHVm1jejRtSTNoaE96d3ZjM1puUGc9PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tOyIgaWQ9IjUiPjxteENlbGwgc3R5bGU9ImlyLnJlZj04ZWZmOGNhNi1lZmE0LTQ0MjAtOTY5Ni03MGYwNDExZGY3YTk7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1jdXN0b207aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9aW90LW9wZXJhdGluZy1zeXN0ZW07dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTtjb250YWluZXI9MTtyZWN1cnNpdmVSZXNpemU9MDthbGlnbj1sZWZ0O2FyY1NpemU9MztwZXJpbWV0ZXI9cmVjdGFuZ2xlUGVyaW1ldGVyO3RleHREaXJlY3Rpb249bHRyO3NwYWNpbmdUb3A9MTtzcGFjaW5nTGVmdD0zMjsiIHBhcmVudD0iNiIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSIzMCIgeT0iMzgiIHdpZHRoPSIyMDgiIGhlaWdodD0iMjQyIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L29iamVjdD48bXhDZWxsIGlkPSIxMiIgdmFsdWU9IklvVCBNb2JpbGUgQXBwbGljYXRpb24iIHN0eWxlPSJpci5yZWY9ZjU0M2VhZjQtZjEyMC00OTA4LTkwZWUtMDE1MTVmOGUxM2FkO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWlvdC1tb2JpbGUtYXBwbGljYXRpb247aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEhOMGVXeGxQaVlqZUdFN0lDQWdJQzVwWTI5dUxXWnBiR3dnZXlZamVHRTdJQ0FnSUNBZ0lDQm1hV3hzT2lBak1URkJPRU5HT3lZamVHRTdJQ0FnSUgwbUkzaGhPend2YzNSNWJHVStKaU40WVRzOFp5QmpiR2x3TFhCaGRHZzlJblZ5YkNnalkyeHBjREFwSWo0bUkzaGhPenh3WVhSb0lHWnBiR3d0Y25Wc1pUMGlaWFpsYm05a1pDSWdZMnhwY0MxeWRXeGxQU0psZG1WdWIyUmtJaUJrUFNKTk1DNHpOVFl5TlRRZ01DNHhNVFU1TmpkRE1DNHpNRE15TXpVZ01DNHhNVFU1TmpjZ01DNHlOakF5TlRRZ01DNHhOVGc1TkRjZ01DNHlOakF5TlRRZ01DNHlNVEU1TmpaV01DNDNPRGM1TmpSRE1DNHlOakF5TlRRZ01DNDROREE1T0RNZ01DNHpNRE15TXpVZ01DNDRPRE01TmpRZ01DNHpOVFl5TlRRZ01DNDRPRE01TmpSSU1DNDJORFF5TlRSRE1DNDJPVGN5TnpNZ01DNDRPRE01TmpRZ01DNDNOREF5TlRRZ01DNDROREE1T0RNZ01DNDNOREF5TlRRZ01DNDNPRGM1TmpSV01DNHlNVEU1TmpaRE1DNDNOREF5TlRRZ01DNHhOVGc1TkRjZ01DNDJPVGN5TnpNZ01DNHhNVFU1TmpjZ01DNDJORFF5TlRRZ01DNHhNVFU1TmpkSU1DNHpOVFl5TlRSYVRUQXVNek15TWpVMElEQXVNVGs1T1RZMlF6QXVNek15TWpVMElEQXVNVGcyTnpFeUlEQXVNelF5T1RrNUlEQXVNVGMxT1RZMklEQXVNelUyTWpVMElEQXVNVGMxT1RZMlNEQXVOalEwTWpVMFF6QXVOalUzTlRBNUlEQXVNVGMxT1RZMklEQXVOalk0TWpVMElEQXVNVGcyTnpFeUlEQXVOalk0TWpVMElEQXVNVGs1T1RZMlZqQXVOekkzT1RZMFF6QXVOalk0TWpVMElEQXVOelF4TWpFNUlEQXVOalUzTlRBNUlEQXVOelV4T1RZMElEQXVOalEwTWpVMElEQXVOelV4T1RZMFNEQXVNelUyTWpVMFF6QXVNelF5T1RrNUlEQXVOelV4T1RZMElEQXVNek15TWpVMElEQXVOelF4TWpFNUlEQXVNek15TWpVMElEQXVOekkzT1RZMFZqQXVNVGs1T1RZMldrMHdMalEzTWpJMU5DQXdMamcwTnprMk0wTXdMalExTmpjNUlEQXVPRFEzT1RZeklEQXVORFEwTWpVMElEQXVPRE0xTkRJM0lEQXVORFEwTWpVMElEQXVPREU1T1RZelF6QXVORFEwTWpVMElEQXVPREEwTlNBd0xqUTFOamM1SURBdU56a3hPVFkwSURBdU5EY3lNalUwSURBdU56a3hPVFkwU0RBdU5USTRNalUwUXpBdU5UUXpOekU0SURBdU56a3hPVFkwSURBdU5UVTJNalUwSURBdU9EQTBOU0F3TGpVMU5qSTFOQ0F3TGpneE9UazJNME13TGpVMU5qSTFOQ0F3TGpnek5UUXlOeUF3TGpVME16Y3hPQ0F3TGpnME56azJNeUF3TGpVeU9ESTFOQ0F3TGpnME56azJNMGd3TGpRM01qSTFORm9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0bUkzaGhPend2Wno0bUkzaGhPenhuSUdOc2FYQXRjR0YwYUQwaWRYSnNLQ05qYkdsd01Ta2lQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVOVFUzTnpRMElEQXVORFUzTURZNFF6QXVOVFl6TnpBNElEQXVORFl6TURNeUlEQXVOVFk0T0RVM0lEQXVORGN3TWpRM0lEQXVOVGN5TnpnZ01DNDBOemM1TVRoRE1DNDFOelV5T1RVZ01DNDBPREk0TXpVZ01DNDFOek16TkRnZ01DNDBPRGc0TmlBd0xqVTJPRFF6TVNBd0xqUTVNVE0zTkVNd0xqVTJNelV4TkNBd0xqUTVNemc0T1NBd0xqVTFOelE0T1NBd0xqUTVNVGswTWlBd0xqVTFORGszTkNBd0xqUTROekF5TlVNd0xqVTFNVGszTlNBd0xqUTRNVEUyTWlBd0xqVTBPREEwTWlBd0xqUTNOVFkxTWlBd0xqVTBNell3TWlBd0xqUTNNVEl4TVVNd0xqVXhPVFkzTVNBd0xqUTBOekkzT1NBd0xqUTRNRGczSURBdU5EUTNNamM1SURBdU5EVTJPVE01SURBdU5EY3hNakV4UXpBdU5EVXlNamc1SURBdU5EYzFPRFl5SURBdU5EUTROVEUwSURBdU5EZ3hNRGcySURBdU5EUTFOakEzSURBdU5EZzJPRE16UXpBdU5EUXpNVEUwSURBdU5Ea3hOell5SURBdU5ETTNNRGs0SURBdU5Ea3pOek0ySURBdU5ETXlNVGNnTUM0ME9URXlORE5ETUM0ME1qY3lORElnTUM0ME9EZzNOU0F3TGpReU5USTJOeUF3TGpRNE1qY3pOQ0F3TGpReU56YzJJREF1TkRjM09EQTJRekF1TkRNeE5qSWdNQzQwTnpBeE56VWdNQzQwTXpZMk5ETWdNQzQwTmpNeU1qTWdNQzQwTkRJM09UY2dNQzQwTlRjd05qaERNQzQwTnpRMU16a2dNQzQwTWpVek1qWWdNQzQxTWpZd01ESWdNQzQwTWpVek1qWWdNQzQxTlRjM05EUWdNQzQwTlRjd05qaGFUVEF1TlRNM01qVTBJREF1TkRnMk9UZzBRekF1TlRReE9EWXhJREF1TkRreE5Ua3hJREF1TlRRMU5qTTNJREF1TkRrM01qSTVJREF1TlRRNE1qWTNJREF1TlRBek1qTkRNQzQxTlRBME9EUWdNQzQxTURneU9Ea2dNQzQxTkRneE9DQXdMalV4TkRFNE5pQXdMalUwTXpFeU1TQXdMalV4TmpRd00wTXdMalV6T0RBMk15QXdMalV4T0RZeUlEQXVOVE15TVRZMUlEQXVOVEUyTXpFMklEQXVOVEk1T1RRNUlEQXVOVEV4TWpVM1F6QXVOVEk0TWprMUlEQXVOVEEzTkRnMElEQXVOVEkxT1RFeklEQXVOVEF6T1RJM0lEQXVOVEl6TVRFeUlEQXVOVEF4TVRJM1F6QXVOVEV3TkRnNElEQXVORGc0TlRBeklEQXVORGt3TURJZ01DNDBPRGcxTURNZ01DNDBOemN6T1RZZ01DNDFNREV4TWpkRE1DNDBOelEyTVRRZ01DNDFNRE01TURrZ01DNDBOekl6TkRNZ01DNDFNRGN6TVRZZ01DNDBOekEyTnpVZ01DNDFNVEV4TWpsRE1DNDBOamcwTmpFZ01DNDFNVFl4T0RrZ01DNDBOakkxTmpRZ01DNDFNVGcwT1RZZ01DNDBOVGMxTURRZ01DNDFNVFl5T0RKRE1DNDBOVEkwTkRVZ01DNDFNVFF3TmpnZ01DNDBOVEF4TXpnZ01DNDFNRGd4TnpJZ01DNDBOVEl6TlRJZ01DNDFNRE14TVRKRE1DNDBOVFE1T1RJZ01DNDBPVGN3TnpnZ01DNDBOVGcyTlRNZ01DNDBPVEUxT0RZZ01DNDBOak15TlRRZ01DNDBPRFk1T0RSRE1DNDBPRE0yT0RrZ01DNDBOalkxTlNBd0xqVXhOamd5SURBdU5EWTJOVFVnTUM0MU16Y3lOVFFnTUM0ME9EWTVPRFJhVFRBdU5UZzBNRGsxSURBdU5ETXlPVGN5UXpBdU5UZzVNVGMxSURBdU5ETTRNRFV5SURBdU5Ua3pPVFkwSURBdU5EUXpPRFEzSURBdU5UazRNVE16SURBdU5EUTVPRGc0UXpBdU5qQXhNamN4SURBdU5EVTBORE16SURBdU5qQXdNVEk1SURBdU5EWXdOall4SURBdU5UazFOVGd6SURBdU5EWXpOems0UXpBdU5Ua3hNRE00SURBdU5EWTJPVE0xSURBdU5UZzBPREVnTUM0ME5qVTNPVFFnTUM0MU9ERTJOek1nTUM0ME5qRXlORGhETUM0MU56Z3hOellnTUM0ME5UWXhPREVnTUM0MU56UXhOVGdnTUM0ME5URXpNVGtnTUM0MU5qazVOVE1nTUM0ME5EY3hNVFJETUM0MU16RXlNeUF3TGpRd09ETTVNU0F3TGpRMk9EUTBOeUF3TGpRd09ETTVNU0F3TGpReU9UY3lOQ0F3TGpRME56RXhORU13TGpReU5UY3pNeUF3TGpRMU1URXdOaUF3TGpReU1UYzFOQ0F3TGpRMU5UazNNU0F3TGpReE9ERXlJREF1TkRZeE1qRkRNQzQwTVRRNU56SWdNQzQwTmpVM05EZ2dNQzQwTURnM05ERWdNQzQwTmpZNE56UWdNQzQwTURReU1ETWdNQzQwTmpNM01qWkRNQzR6T1RrMk5qVWdNQzQwTmpBMU56Z2dNQzR6T1RnMU16a2dNQzQwTlRRek5EY2dNQzQwTURFMk9EY2dNQzQwTkRrNE1VTXdMalF3TlRrMk55QXdMalEwTXpZMElEQXVOREV3TmpreUlEQXVORE0zT0RZeUlEQXVOREUxTlRneUlEQXVORE15T1RjeVF6QXVORFl5TVRFMklEQXVNemcyTkRNNElEQXVOVE0zTlRZeUlEQXVNemcyTkRNNElEQXVOVGcwTURrMUlEQXVORE15T1RjeVdrMHdMalV4TURVeE9DQXdMalV4TkRNNU9VTXdMalV4TmpNNElEQXVOVEl3TWpZeElEQXVOVEUyTXpnZ01DNDFNamszTmpVZ01DNDFNVEExTVRnZ01DNDFNelUyTWpkRE1DNDFNRFEyTlRZZ01DNDFOREUwT0RrZ01DNDBPVFV4TlRJZ01DNDFOREUwT0RrZ01DNDBPRGt5T1NBd0xqVXpOVFl5TjBNd0xqUTRNelF5T0NBd0xqVXlPVGMyTlNBd0xqUTRNelF5T0NBd0xqVXlNREkyTVNBd0xqUTRPVEk1SURBdU5URTBNems1UXpBdU5EazFNVFV5SURBdU5UQTROVE0ySURBdU5UQTBOalUySURBdU5UQTROVE0ySURBdU5URXdOVEU0SURBdU5URTBNems1V2lJZ1kyeGhjM005SW1samIyNHRabWxzYkNJdlBpWWplR0U3UEM5blBpWWplR0U3UEdSbFpuTStKaU40WVRzOFkyeHBjRkJoZEdnZ2FXUTlJbU5zYVhBd0lqNG1JM2hoT3p4eVpXTjBJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUdacGJHdzlJbmRvYVhSbElpOCtKaU40WVRzOEwyTnNhWEJRWVhSb1BpWWplR0U3UEdOc2FYQlFZWFJvSUdsa1BTSmpiR2x3TVNJK0ppTjRZVHM4Y21WamRDQjNhV1IwYUQwaU1DNHlOQ0lnYUdWcFoyaDBQU0l3TGpJME1EQXdNaUlnWm1sc2JEMGlkMmhwZEdVaUlIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREF1TXpnd016Y3hJREF1TXpRNU9UYzJLU0l2UGlZamVHRTdQQzlqYkdsd1VHRjBhRDRtSTNoaE96d3ZaR1ZtY3o0bUkzaGhPend2YzNablBnPT07dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VXaWR0aD0xOyIgcGFyZW50PSI1IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjU5IiB5PSI3OCIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIxNCIgdmFsdWU9IkJsdWV0b290aCBwb3J0IC0+IElvVCBNb2JpbGUgQXBwbGljYXRpb24iIHN0eWxlPSJpci5yZWY9OTBiNjQzZTctMGU3NC00MGMyLWIyYTMtZTc4Yzg4NGMwYzUwO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iNiIgc291cmNlPSI5IiB0YXJnZXQ9IjEyIiBlZGdlPSIxIj48bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ij48QXJyYXkgYXM9InBvaW50cyI+PG14UG9pbnQgeD0iMjE0IiB5PSIyMzkiLz48L0FycmF5PjwvbXhHZW9tZXRyeT48L214Q2VsbD48bXhDZWxsIGlkPSI5IiB2YWx1ZT0iQmx1ZXRvb3RoIHBvcnQiIHN0eWxlPSJpci5yZWY9MjA0YmVmMTgtNmE0NS00Y2EwLTg2YzctNGE5ZjMwNWZjYmJmO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPUNELUJMVUVUT09USC1QT1JUO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJeElpQjJhV1YzUW05NFBTSXdJREFnTVNBeElpQm1hV3hzUFNKdWIyNWxJaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lQanh6ZEhsc1pUNGdJQ0FnTG1samIyNHRabWxzYkNCN0lDQWdJQ0FnSUNCbWFXeHNPaUFqTVRGQk9FTkdPeUFnSUNCOVBDOXpkSGxzWlQ0OFp5QmpiR2x3TFhCaGRHZzlJblZ5YkNnalkyeHBjREJmTWpJMk4xOHlNalk0TVNraVBqeHdZWFJvSUdROUlrMHdMakUzTkRNeE5pQXdMakl4TWpnMk5rTXdMakUzTkRNeE5pQXdMakU1TVRjeE1TQXdMakU1TVRRMk55QXdMakUzTkRVMk1TQXdMakl4TWpZeU1pQXdMakUzTkRVMk1VZ3dMamM0TnpJeE1VTXdMamd3T0RNMk5pQXdMakUzTkRVMk1TQXdMamd5TlRVeE5pQXdMakU1TVRjeE1TQXdMamd5TlRVeE5pQXdMakl4TWpnMk5sWXdMamM0TnpRMU5VTXdMamd5TlRVeE5pQXdMamd3T0RZeElEQXVPREE0TXpZMklEQXVPREkxTnpZZ01DNDNPRGN5TVRFZ01DNDRNalUzTmtnd0xqSXhNall5TWtNd0xqRTVNVFEyTnlBd0xqZ3lOVGMySURBdU1UYzBNekUySURBdU9EQTROakVnTUM0eE56UXpNVFlnTUM0M09EYzBOVFZXTUM0eU1USTROalphSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BIQmhkR2dnWkQwaVRUQXVNVGd6TVRBMUlEQXVNakl3TmpKRE1DNHhPRE14TURVZ01DNHlNREF3TXpZZ01DNHhPVGszT1RJZ01DNHhPRE16TlNBd0xqSXlNRE0zTmlBd0xqRTRNek0xU0RBdU56YzVORE0xUXpBdU9EQXdNREU1SURBdU1UZ3pNelVnTUM0NE1UWTNNRFVnTUM0eU1EQXdNellnTUM0NE1UWTNNRFVnTUM0eU1qQTJNbFl3TGpjM09UWTNPVU13TGpneE5qY3dOU0F3TGpnd01ESTJNeUF3TGpnd01EQXhPU0F3TGpneE5qazFJREF1TnpjNU5ETTFJREF1T0RFMk9UVklNQzR5TWpBek56WkRNQzR4T1RrM09USWdNQzQ0TVRZNU5TQXdMakU0TXpFd05TQXdMamd3TURJMk15QXdMakU0TXpFd05TQXdMamMzT1RZM09WWXdMakl5TURZeVdpSWdabWxzYkQwaWQyaHBkR1VpSUdacGJHd3RiM0JoWTJsMGVUMGlNQzQ0SWk4K1BIQmhkR2dnWkQwaVRUQXVORGMwTnpZNUlEQXVNamt4TVRjM1F6QXVORGd4TURnZ01DNHlPRGd5TnpVZ01DNDBPRGcxTURNZ01DNHlPRGt6TVRRZ01DNDBPVE0zTnpZZ01DNHlPVE00TXpaTU1DNDJNVGd5TnlBd0xqUXdNRFl3TlVNd0xqWXlNakkwTXlBd0xqUXdOREF4TWlBd0xqWXlORFV4TkNBd0xqUXdPRGs1T0NBd0xqWXlORFEzTmlBd0xqUXhOREl6TWtNd0xqWXlORFF6T1NBd0xqUXhPVFEyTnlBd0xqWXlNakE1TnlBd0xqUXlORFF4T1NBd0xqWXhPREEzTlNBd0xqUXlOemMyT1V3d0xqVXlOemM0TkNBd0xqVXdNams0TjB3d0xqWXhPREEzT0NBd0xqVTNPREl6TVVNd0xqWXlNakE1T1NBd0xqVTRNVFU0TWlBd0xqWXlORFEwSURBdU5UZzJOVE0xSURBdU5qSTBORGMySURBdU5Ua3hOemRETUM0Mk1qUTFNVE1nTUM0MU9UY3dNRFVnTUM0Mk1qSXlOREVnTUM0Mk1ERTVPU0F3TGpZeE9ESTJOaUF3TGpZd05UTTVOMHd3TGpRNU16YzNNaUF3TGpjeE1qRXdOa013TGpRNE9EUTVPU0F3TGpjeE5qWXlOaUF3TGpRNE1UQTNOeUF3TGpjeE56WTJNeUF3TGpRM05EYzJOaUF3TGpjeE5EYzJNVU13TGpRMk9EUTFOaUF3TGpjeE1UZzFPU0F3TGpRMk5EUXhNeUF3TGpjd05UVTBPQ0F3TGpRMk5EUXhNeUF3TGpZNU9EWXdNMVl3TGpVMU5UYzNPRXd3TGpRd05EWTFOeUF3TGpZd05UVTFPRU13TGpNNU56RXhJREF1TmpFeE9EUTFJREF1TXpnMU9EazJJREF1TmpFd09ESTBJREF1TXpjNU5qQTVJREF1TmpBek1qYzNRekF1TXpjek16SXlJREF1TlRrMU56TWdNQzR6TnpRek5EUWdNQzQxT0RRMU1UWWdNQzR6T0RFNE9TQXdMalUzT0RJeU9Vd3dMalEyTkRReE15QXdMalV3T1RRNE0xWXdMalE1TmpRM09Vd3dMak00TVRnNE9DQXdMalF5Tnpjd09FTXdMak0zTkRNME1pQXdMalF5TVRReUlEQXVNemN6TXpJeklEQXVOREV3TWpBMUlEQXVNemM1TmpFeElEQXVOREF5TmpaRE1DNHpPRFU0T1RrZ01DNHpPVFV4TVRRZ01DNHpPVGN4TVRNZ01DNHpPVFF3T1RRZ01DNDBNRFEyTlRrZ01DNDBNREF6T0RKTU1DNDBOalEwTVRNZ01DNDBOVEF4TnpkV01DNHpNRGN6TXpaRE1DNDBOalEwTVRNZ01DNHpNREF6T0RrZ01DNDBOamcwTlRjZ01DNHlPVFF3TnprZ01DNDBOelEzTmprZ01DNHlPVEV4TnpkYVRUQXVOVEF3TURBeklEQXVORGM1T0RNMVREQXVOVGM1TVRReklEQXVOREV6T1RBM1REQXVORGs1T1RneklEQXVNelEyTURFNFZqQXVORGM1T0RFNVREQXVOVEF3TURBeklEQXVORGM1T0RNMVdrMHdMalE1T1RrNU9TQXdMalV5TmpFek0wd3dMalE1T1RrNE15QXdMalV5TmpFME4xWXdMalkxT1Rrek5Vd3dMalUzT1RFME1TQXdMalU1TWpBNE5Vd3dMalE1T1RrNU9TQXdMalV5TmpFek0xb2lJR05zWVhOelBTSnBZMjl1TFdacGJHd2lMejQ4TDJjK1BHUmxabk0rUEdOc2FYQlFZWFJvSUdsa1BTSmpiR2x3TUY4eU1qWTNYekl5TmpneElqNDhjbVZqZENCM2FXUjBhRDBpTUM0NE9DSWdhR1ZwWjJoMFBTSXdMamc0SWlCbWFXeHNQU0ozYUdsMFpTSWdkSEpoYm5ObWIzSnRQU0owY21GdWMyeGhkR1VvTUM0d05qQXdOVGcySURBdU1EWXdNRFU0TmlraUx6NDhMMk5zYVhCUVlYUm9Qand2WkdWbWN6NDhMM04yWno0PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjYiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iMjc4IiB5PSIxODgiIHdpZHRoPSI5MCIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iMTUiIHZhbHVlPSJJb1QgTW9iaWxlIEFwcGxpY2F0aW9uIC0+IEJsdWV0b290aCBwb3J0IiBzdHlsZT0iaXIucmVmPWQzMGRmNGJmLTc4NmYtNDY3NC05ODJlLTViNGYwMmM5M2IwZDtlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yO2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7IiBwYXJlbnQ9IjYiIHNvdXJjZT0iMTIiIHRhcmdldD0iOSIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+PEFycmF5IGFzPSJwb2ludHMiPjxteFBvaW50IHg9IjI0MiIgeT0iMTc0Ii8+PC9BcnJheT48L214R2VvbWV0cnk+PC9teENlbGw+PG14Q2VsbCBpZD0iMTgiIHZhbHVlPSJXaS1GaSBwb3J0IiBzdHlsZT0iaXIucmVmPTE5Y2RkMmZiLTRjOTQtNGJiMi1iN2I4LTNkMDhlMWU2MGUzZTtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1DRC1XSS1GSS1QT1JUO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJeElpQjJhV1YzUW05NFBTSXdJREFnTVNBeElpQm1hV3hzUFNKdWIyNWxJaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lQanh6ZEhsc1pUNGdJQ0FnTG1samIyNHRabWxzYkNCN0lDQWdJQ0FnSUNCbWFXeHNPaUFqTVRGQk9FTkdPeUFnSUNCOVBDOXpkSGxzWlQ0OFp5QmpiR2x3TFhCaGRHZzlJblZ5YkNnalkyeHBjREJmTWpJMk4xOHlNamcxTWlraVBqeHdZWFJvSUdROUlrMHdMakUzTkRNeE5pQXdMakl4TWpnMk5rTXdMakUzTkRNeE5pQXdMakU1TVRjeE1TQXdMakU1TVRRMk55QXdMakUzTkRVMk1TQXdMakl4TWpZeU1pQXdMakUzTkRVMk1VZ3dMamM0TnpJeE1VTXdMamd3T0RNMk5pQXdMakUzTkRVMk1TQXdMamd5TlRVeE5pQXdMakU1TVRjeE1TQXdMamd5TlRVeE5pQXdMakl4TWpnMk5sWXdMamM0TnpRMU5VTXdMamd5TlRVeE5pQXdMamd3T0RZeElEQXVPREE0TXpZMklEQXVPREkxTnpZZ01DNDNPRGN5TVRFZ01DNDRNalUzTmtnd0xqSXhNall5TWtNd0xqRTVNVFEyTnlBd0xqZ3lOVGMySURBdU1UYzBNekUySURBdU9EQTROakVnTUM0eE56UXpNVFlnTUM0M09EYzBOVFZXTUM0eU1USTROalphSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BIQmhkR2dnWkQwaVRUQXVNVGd6TVRBMUlEQXVNakl3TmpKRE1DNHhPRE14TURVZ01DNHlNREF3TXpZZ01DNHhPVGszT1RJZ01DNHhPRE16TlNBd0xqSXlNRE0zTmlBd0xqRTRNek0xU0RBdU56YzVORE0xUXpBdU9EQXdNREU1SURBdU1UZ3pNelVnTUM0NE1UWTNNRFVnTUM0eU1EQXdNellnTUM0NE1UWTNNRFVnTUM0eU1qQTJNbFl3TGpjM09UWTNPVU13TGpneE5qY3dOU0F3TGpnd01ESTJNeUF3TGpnd01EQXhPU0F3TGpneE5qazFJREF1TnpjNU5ETTFJREF1T0RFMk9UVklNQzR5TWpBek56WkRNQzR4T1RrM09USWdNQzQ0TVRZNU5TQXdMakU0TXpFd05TQXdMamd3TURJMk15QXdMakU0TXpFd05TQXdMamMzT1RZM09WWXdMakl5TURZeVdpSWdabWxzYkQwaWQyaHBkR1VpSUdacGJHd3RiM0JoWTJsMGVUMGlNQzQ0SWk4K1BIQmhkR2dnWkQwaVRUQXVNemM0TnpBNUlEQXVNekkzTnpJNVREQXVNell4T0RFMklEQXVNalEzTWpnMlNEQXVNemMzTWpFMVREQXVNemcxT1RRNUlEQXVNamt5TlRZMFF6QXVNemcyTVRjNUlEQXVNamt6TnprZ01DNHpPRFl6TnlBd0xqSTVORGc0TVNBd0xqTTROalV5TkNBd0xqSTVOVGd6T1VNd0xqTTROalkzTnlBd0xqSTVOamM1TnlBd0xqTTROamd4TVNBd0xqSTVOemcxSURBdU16ZzJPVEkySURBdU1qazRPVGs1UXpBdU16ZzNNRGM1SURBdU1qazNPVEkzSURBdU16ZzNNamN4SURBdU1qazJPRGN6SURBdU16ZzNOVEF4SURBdU1qazFPRE01UXpBdU16ZzNOek1nTUM0eU9UUTNOallnTUM0ek9EYzVPVGdnTUM0eU9UTTJOelVnTUM0ek9EZ3pNRFVnTUM0eU9USTFOalJNTUM0ek9UazNNemtnTUM0eU5EY3lPRFpJTUM0ME1USTBPVFZNTUM0ME1qTTVPRGNnTUM0eU9USTFNRFpETUM0ME1qUXlPVE1nTUM0eU9UTTFOemtnTUM0ME1qUTFORElnTUM0eU9UUTJNeklnTUM0ME1qUTNNelFnTUM0eU9UVTJOamRETUM0ME1qUTVNalVnTUM0eU9UWTNNREVnTUM0ME1qVXdPVGdnTUM0eU9UYzNOVFFnTUM0ME1qVXlOVEVnTUM0eU9UZzRNamRETUM0ME1qVTBNRFFnTUM0eU9UYzNPVE1nTUM0ME1qVTFOVGNnTUM0eU9UWTNPVGNnTUM0ME1qVTNNVEVnTUM0eU9UVTRNemxETUM0ME1qVTVNRElnTUM0eU9UUTRORE1nTUM0ME1qWXdPVFFnTUM0eU9UTTRNamdnTUM0ME1qWXlPRFVnTUM0eU9USTNPVFJNTUM0ME16VTBNakVnTUM0eU5EY3lPRFpJTUM0ME5UQTNOak5NTUM0ME16TXpOVE1nTUM0ek1qYzNNamxJTUM0ME1UazROVXd3TGpRd056QTVOQ0F3TGpJM09UUTJNME13TGpRd05qZ3lOaUF3TGpJM09EVTBOQ0F3TGpRd05qVTVOaUF3TGpJM056WTJNeUF3TGpRd05qUXdOQ0F3TGpJM05qZ3lRekF1TkRBMk1qVXhJREF1TWpjMU9UYzNJREF1TkRBMk1EazRJREF1TWpjMU1EQXhJREF1TkRBMU9UUTFJREF1TWpjek9EbERNQzQwTURVM05UTWdNQzR5TnpVd016a2dNQzQwTURVMU5qSWdNQzR5TnpZd01UWWdNQzQwTURVek55QXdMakkzTmpneVF6QXVOREExTWpFM0lEQXVNamMzTmpJMUlEQXVOREExTURJMUlEQXVNamM0TkRnMklEQXVOREEwTnprMklEQXVNamM1TkRBMlREQXVNemt5TXpJM0lEQXVNekkzTnpJNVNEQXVNemM0TnpBNVdpSWdZMnhoYzNNOUltbGpiMjR0Wm1sc2JDSXZQanh3WVhSb0lHUTlJazB3TGpRMk5EQTFOQ0F3TGpNeU56Y3lPVll3TGpJMk9UQXdOa2d3TGpRM09EUXhPRll3TGpNeU56Y3lPVWd3TGpRMk5EQTFORnBOTUM0ME56RXlNellnTUM0eU5qRTJOVEZETUM0ME5qZzVNemdnTUM0eU5qRTJOVEVnTUM0ME5qWTVORFlnTUM0eU5qQTRNamNnTUM0ME5qVXlOaUF3TGpJMU9URTRRekF1TkRZek5qRXpJREF1TWpVM05EazFJREF1TkRZeU56a2dNQzR5TlRVMU1ETWdNQzQwTmpJM09TQXdMakkxTXpJd05VTXdMalEyTWpjNUlEQXVNalV3T1RBMklEQXVORFl6TmpFeklEQXVNalE0T1RVeklEQXVORFkxTWpZZ01DNHlORGN6TkRSRE1DNDBOalk1TURjZ01DNHlORFUyT1RjZ01DNDBOamc0T1RrZ01DNHlORFE0TnpNZ01DNDBOekV5TXpZZ01DNHlORFE0TnpORE1DNDBOek0yTkRrZ01DNHlORFE0TnpNZ01DNDBOelUyTmlBd0xqSTBOVFkzTnlBd0xqUTNOekkyT1NBd0xqSTBOekk0TmtNd0xqUTNPRGczT0NBd0xqSTBPRGc1TlNBd0xqUTNPVFk0TWlBd0xqSTFNRGcyT0NBd0xqUTNPVFk0TWlBd0xqSTFNekl3TlVNd0xqUTNPVFk0TWlBd0xqSTFOVFUwTVNBd0xqUTNPRGcxT1NBd0xqSTFOelV6TXlBd0xqUTNOekl4TWlBd0xqSTFPVEU0UXpBdU5EYzFOakF6SURBdU1qWXdPREkzSURBdU5EY3pOakV4SURBdU1qWXhOalV4SURBdU5EY3hNak0ySURBdU1qWXhOalV4V2lJZ1kyeGhjM005SW1samIyNHRabWxzYkNJdlBqeHdZWFJvSUdROUlrMHdMalE1TmpRNE5DQXdMak13TURZd09GWXdMakk0TmpnM05VZ3dMalV5TmpJME4xWXdMak13TURZd09FZ3dMalE1TmpRNE5Gb2lJR05zWVhOelBTSnBZMjl1TFdacGJHd2lMejQ4Y0dGMGFDQmtQU0pOTUM0MU5ETTROVFlnTUM0ek1qYzNNamxXTUM0eU5EY3lPRFpJTUM0MU9UY3pOVll3TGpJMk1UUXlNVWd3TGpVMU9EY3pPRll3TGpJM09URXhPVWd3TGpVNE16UTBOVll3TGpJNU16STFNMGd3TGpVMU9EY3pPRll3TGpNeU56Y3lPVWd3TGpVME16ZzFObG9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OGNHRjBhQ0JrUFNKTk1DNDJNRGt6T0RRZ01DNHpNamMzTWpsV01DNHlOamt3TURaSU1DNDJNak0zTkRsV01DNHpNamMzTWpsSU1DNDJNRGt6T0RSYVRUQXVOakUyTlRZMklEQXVNall4TmpVeFF6QXVOakUwTWpZNElEQXVNall4TmpVeElEQXVOakV5TWpjMklEQXVNall3T0RJM0lEQXVOakV3TlRreElEQXVNalU1TVRoRE1DNDJNRGc1TkRRZ01DNHlOVGMwT1RVZ01DNDJNRGd4TWlBd0xqSTFOVFV3TXlBd0xqWXdPREV5SURBdU1qVXpNakExUXpBdU5qQTRNVElnTUM0eU5UQTVNRFlnTUM0Mk1EZzVORFFnTUM0eU5EZzVOVE1nTUM0Mk1UQTFPVEVnTUM0eU5EY3pORFJETUM0Mk1USXlNemdnTUM0eU5EVTJPVGNnTUM0Mk1UUXlNeUF3TGpJME5EZzNNeUF3TGpZeE5qVTJOaUF3TGpJME5EZzNNME13TGpZeE9EazRJREF1TWpRME9EY3pJREF1TmpJd09Ua3hJREF1TWpRMU5qYzNJREF1TmpJeU5pQXdMakkwTnpJNE5rTXdMall5TkRJd09DQXdMakkwT0RnNU5TQXdMall5TlRBeE15QXdMakkxTURnMk9DQXdMall5TlRBeE15QXdMakkxTXpJd05VTXdMall5TlRBeE15QXdMakkxTlRVME1TQXdMall5TkRFNE9TQXdMakkxTnpVek15QXdMall5TWpVME1pQXdMakkxT1RFNFF6QXVOakl3T1RNeklEQXVNall3T0RJM0lEQXVOakU0T1RReElEQXVNall4TmpVeElEQXVOakUyTlRZMklEQXVNall4TmpVeFdpSWdZMnhoYzNNOUltbGpiMjR0Wm1sc2JDSXZQanhuSUdOc2FYQXRjR0YwYUQwaWRYSnNLQ05qYkdsd01WOHlNalkzWHpJeU9EVXlLU0krUEhCaGRHZ2daRDBpVFRBdU5qUXlPVEk1SURBdU5UUTBOak0wUXpBdU5qVTNOamd6SURBdU5UVTVNemc0SURBdU5qY3dOREl5SURBdU5UYzNNak0zSURBdU5qZ3dNVEkzSURBdU5UazJNakV6UXpBdU5qZzJNelE1SURBdU5qQTRNemMzSURBdU5qZ3hOVE15SURBdU5qSXpNamd5SURBdU5qWTVNelkzSURBdU5qSTVOVEF6UXpBdU5qVTNNakF6SURBdU5qTTFOekkxSURBdU5qUXlNams0SURBdU5qTXdPVEE0SURBdU5qTTJNRGMzSURBdU5qRTROelEwUXpBdU5qSTROalU0SURBdU5qQTBNak01SURBdU5qRTRPVEk0SURBdU5Ua3dOakEzSURBdU5qQTNPVFF5SURBdU5UYzVOakl4UXpBdU5UUTROek01SURBdU5USXdOREUzSURBdU5EVXlOelVnTUM0MU1qQTBNVGNnTUM0ek9UTTFORFlnTUM0MU56azJNakZETUM0ek9ESXdOREVnTUM0MU9URXhNallnTUM0ek56STNNRE1nTUM0Mk1EUXdOVEVnTUM0ek5qVTFNVEVnTUM0Mk1UZ3lOamxETUM0ek5Ua3pORFFnTUM0Mk16QTBOakVnTUM0ek5EUTBOakVnTUM0Mk16VXpORFlnTUM0ek16SXlOamtnTUM0Mk1qa3hOemxETUM0ek1qQXdOemNnTUM0Mk1qTXdNVElnTUM0ek1UVXhPVElnTUM0Mk1EZ3hNamtnTUM0ek1qRXpOVGtnTUM0MU9UVTVNemRETUM0ek16QTVNRGdnTUM0MU56Y3dOVGtnTUM0ek5ETXpNelFnTUM0MU5UazROaUF3TGpNMU9EVTFPU0F3TGpVME5EWXpORU13TGpRek56QTROaUF3TGpRMk5qRXdPQ0F3TGpVMk5EUXdNeUF3TGpRMk5qRXdPQ0F3TGpZME1qa3lPU0F3TGpVME5EWXpORnBOTUM0MU9USXlOQ0F3TGpZeE9EWTBNME13TGpZd016WXpOU0F3TGpZek1EQXpPQ0F3TGpZeE1qazNPU0F3TGpZME16azROeUF3TGpZeE9UUTROQ0F3TGpZMU9EZ3pNME13TGpZeU5EazJPQ0F3TGpZM01UTTBOeUF3TGpZeE9USTJPQ0F3TGpZNE5Ua3pOeUF3TGpZd05qYzFOQ0F3TGpZNU1UUXlNVU13TGpVNU5ESTBJREF1TmprMk9UQTFJREF1TlRjNU5qUTVJREF1TmpreE1qQTJJREF1TlRjME1UWTJJREF1TmpjNE5qa3hRekF1TlRjd01EYzFJREF1TmpZNU16VTJJREF1TlRZME1UZ3hJREF1TmpZd05UVTRJREF1TlRVM01qVXpJREF1TmpVek5qTkRNQzQxTWpZd01qSWdNQzQyTWpJek9Ua2dNQzQwTnpVek9EWWdNQzQyTWpJek9Ua2dNQzQwTkRReE5UVWdNQzQyTlRNMk0wTXdMalF6TnpJM01pQXdMalkyTURVeE15QXdMalF6TVRZMU5DQXdMalkyT0RrMElEQXVOREkzTlRJMklEQXVOamM0TXpjMVF6QXVOREl5TURRNUlEQXVOamt3T0RreUlEQXVOREEzTkRZeUlEQXVOamsyTlRrNUlEQXVNemswT1RRMUlEQXVOamt4TVRJeVF6QXVNemd5TkRJM0lEQXVOamcxTmpRMUlEQXVNemMyTnpJZ01DNDJOekV3TlRnZ01DNHpPREl4T1RjZ01DNDJOVGcxTkVNd0xqTTRPRGN5T1NBd0xqWTBNell4TWlBd0xqTTVOemM0TmlBd0xqWXpNREF5TmlBd0xqUXdPVEUyT1NBd0xqWXhPRFkwTTBNd0xqUTFPVGN5TWlBd0xqVTJPREE1SURBdU5UUXhOamcySURBdU5UWTRNRGtnTUM0MU9USXlOQ0F3TGpZeE9EWTBNMXBOTUM0M01EZ3hNaUF3TGpRNE5UQXlNa013TGpjeU1EWTROeUF3TGpRNU56VTRPU0F3TGpjek1qVXpOU0F3TGpVeE1Ua3lOU0F3TGpjME1qZzBPU0F3TGpVeU5qZzNRekF1TnpVd05qRWdNQzQxTXpneE1UUWdNQzQzTkRjM09EWWdNQzQxTlRNMU1qSWdNQzQzTXpZMU5ERWdNQzQxTmpFeU9ETkRNQzQzTWpVeU9UWWdNQzQxTmprd05EUWdNQzQzTURrNE9Ea2dNQzQxTmpZeU1Ua2dNQzQzTURJeE1qZ2dNQzQxTlRRNU56UkRNQzQyT1RNME56Y2dNQzQxTkRJME16a2dNQzQyT0RNMU16VWdNQzQxTXpBME1TQXdMalkzTXpFek15QXdMalV5TURBd09FTXdMalUzTnpNek5TQXdMalF5TkRJeE1TQXdMalF5TWpBeE5pQXdMalF5TkRJeE1TQXdMak15TmpJeE9DQXdMalV5TURBd09FTXdMak14TmpNME15QXdMalV5T1RnNE5DQXdMak13TmpVd01TQXdMalUwTVRreE9TQXdMakk1TnpVeElEQXVOVFUwT0RjNVF6QXVNamc1TnpJeUlEQXVOVFkyTVRBMUlEQXVNamMwTXpBNElEQXVOVFk0T0RreklEQXVNall6TURneElEQXVOVFl4TVRBMVF6QXVNalV4T0RVMUlEQXVOVFV6TXpFM0lEQXVNalE1TURZNElEQXVOVE0zT1RBeklEQXVNalUyT0RVMklEQXVOVEkyTmpjMlF6QXVNalkzTkRRMUlEQXVOVEV4TkRFeklEQXVNamM1TVRNMElEQXVORGszTVRJZ01DNHlPVEV5TXpJZ01DNDBPRFV3TWpKRE1DNDBNRFl6TlRJZ01DNHpOams1TURJZ01DNDFPVEk1T1RrZ01DNHpOams1TURJZ01DNDNNRGd4TWlBd0xqUTROVEF5TWxwTk1DNDFNall3T1RVZ01DNDJPRFkwTmpKRE1DNDFOREExT1RjZ01DNDNNREE1TmpRZ01DNDFOREExT1RjZ01DNDNNalEwTnpjZ01DNDFNall3T1RVZ01DNDNNemc1TnpsRE1DNDFNVEUxT1RNZ01DNDNOVE0wT0RFZ01DNDBPRGd3T0NBd0xqYzFNelE0TVNBd0xqUTNNelUzT0NBd0xqY3pPRGszT1VNd0xqUTFPVEEzTmlBd0xqY3lORFEzTnlBd0xqUTFPVEEzTmlBd0xqY3dNRGsyTkNBd0xqUTNNelUzT0NBd0xqWTROalEyTWtNd0xqUTRPREE0SURBdU5qY3hPVFlnTUM0MU1URTFPVE1nTUM0Mk56RTVOaUF3TGpVeU5qQTVOU0F3TGpZNE5qUTJNbG9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OEwyYytQQzluUGp4a1pXWnpQanhqYkdsd1VHRjBhQ0JwWkQwaVkyeHBjREJmTWpJMk4xOHlNamcxTWlJK1BISmxZM1FnZDJsa2RHZzlJakF1T0RnaUlHaGxhV2RvZEQwaU1DNDRPQ0lnWm1sc2JEMGlkMmhwZEdVaUlIUnlZVzV6Wm05eWJUMGlkSEpoYm5Oc1lYUmxLREF1TURZd01EVTROaUF3TGpBMk1EQTFPRFlwSWk4K1BDOWpiR2x3VUdGMGFENDhZMnhwY0ZCaGRHZ2dhV1E5SW1Oc2FYQXhYekl5TmpkZk1qSTROVElpUGp4eVpXTjBJSGRwWkhSb1BTSXdMalE1TnprM05pSWdhR1ZwWjJoMFBTSXdMak0yTXprd05pSWdabWxzYkQwaWQyaHBkR1VpSUhSeVlXNXpabTl5YlQwaWRISmhibk5zWVhSbEtEQXVNalV3T1RjM0lEQXVNemswTnpjMUtTSXZQand2WTJ4cGNGQmhkR2crUEM5a1pXWnpQand2YzNablBnPT07dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VXaWR0aD0xOyIgcGFyZW50PSI2IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjI4MCIgeT0iMjgiIHdpZHRoPSI5MCIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iMTkiIHZhbHVlPSJSb3V0ZXIiIHN0eWxlPSJpci5yZWY9ZjM2MmRmZTktNjlhNS00NmU4LTk3MTctZDBlYmJhMzE0ODhlO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPUNELVJPVVRFUjtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJaUIyYVdWM1FtOTRQU0l3SURBZ01TQXhJaUJtYVd4c1BTSnViMjVsSWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGp4bklHTnNhWEF0Y0dGMGFEMGlkWEpzS0NOamJHbHdNRjh5TkRVM1h6SXpNVFEzS1NJK1BHY2dZMnhwY0Mxd1lYUm9QU0oxY213b0kyTnNhWEF4WHpJME5UZGZNak14TkRjcElqNDhjR0YwYUNCa1BTSk5NQzR6TVRZeU5EY2dNQzR5T0Rjd016bERNQzR6TVRVME9URWdNQzR5T1RVeU5qa2dNQzR6TVRFM09EWWdNQzR6TURJNU5Ea2dNQzR6TURVNE1UTWdNQzR6TURnMk5qRk1NQzR6TlRNM05UY2dNQzQwTkRBek9EVk1NQzR6TWpneE9TQXdMalEwT1RZNU1Vd3dMakk0TURJME5pQXdMak14TnprMk5rTXdMakkyTnpFNE1pQXdMak14TnpBM05TQXdMakkxTlRFMk1pQXdMak13T0RjeE1TQXdMakkxTURReE55QXdMakk1TlRZM01rTXdMakkwTWpnM09TQXdMakkzTkRrMk15QXdMakkxTmpjd015QXdMakkxTVRZNU1TQXdMakk0TURVMElEQXVNalE1T1RZMFF6QXVNamt4T1RZMUlEQXVNalE1TVRNMUlEQXVNekF6TXpRMUlEQXVNalUwTlRRNElEQXVNekE1T1RJMklEQXVNall6T0RjNVF6QXVNekUwTnpVNElEQXVNamN3TlRneklEQXVNekUzTURBeklEQXVNamM0T0RBNUlEQXVNekUyTWpRM0lEQXVNamczTURNNVdpSWdabWxzYkQwaUl6QkNRVEJDTnlJdlBqeHdZWFJvSUdROUlrMHdMalV5T1RZMU55QXdMakk0TkRJNU4wTXdMalV5TmpFek1pQXdMakk1TVRjM01pQXdMalV5TURBeU15QXdMakk1TnpjeU1TQXdMalV4TWpRMU55QXdMak13TVRBME5sWXdMalEwTVRJeU5FZ3dMalE0TlRJME9WWXdMak13TVRBME5rTXdMalEzTXpJM09DQXdMakk1TlRjME1TQXdMalEyTkRnME5DQXdMakk0TXpjMk9TQXdMalEyTkRnME5DQXdMakkyT1RnNU5FTXdMalEyTkRnME5DQXdMakkwTnpnMU5pQXdMalE0TlRjNU15QXdMakl6TURjeE5TQXdMalV3T0RjNE5DQXdMakl6TnpJME5VTXdMalV4T1Rnd015QXdMakkwTURNM015QXdMalV5T0RZME5TQXdMakkwT1RNMU1pQXdMalV6TVRZek9DQXdMakkyTURNM01VTXdMalV6TXpnNE5pQXdMakkyT0RNeU5DQXdMalV6TXpFNE1pQXdMakkzTmpneU1pQXdMalV5T1RZMU55QXdMakk0TkRJNU4xb2lJR1pwYkd3OUlpTXdRa0V3UWpjaUx6NDhjR0YwYUNCa1BTSk5NQzQzTkRBeE16SWdNQzR6TURjME5EaERNQzQzTXpReU5qTWdNQzR6TVRNeU5qY2dNQzQzTWpZME9EZ2dNQzR6TVRZM05qZ2dNQzQzTVRneU5ERWdNQzR6TVRjek1EUk1NQzQyTnpBeU9UY2dNQzQwTkRrd01qbE1NQzQyTkRRM015QXdMalF6T1RjeU0wd3dMalk1TWpZM05DQXdMak13TnprNU9VTXdMalk0TXpJek9TQXdMakk1T0RreE9TQXdMalkzT1RRd09DQXdMakk0TkRjNE5TQXdMalk0TkRFMU5DQXdMakkzTVRjME5rTXdMalk1TVRZNU1TQXdMakkxTVRBek55QXdMamN4TnpJMElEQXVNalF5TURrMUlEQXVOek0yTmpFZ01DNHlOVFl3T1RWRE1DNDNORFU0T1RVZ01DNHlOakk0TURNZ01DNDNOVEV4TXpNZ01DNHlOelF5TmpVZ01DNDNOVEF4TnpjZ01DNHlPRFUyTkRORE1DNDNORGsxTmprZ01DNHlPVE00T0RVZ01DNDNORFl3TURFZ01DNHpNREUyTXlBd0xqYzBNREV6TWlBd0xqTXdOelEwT0ZvaUlHWnBiR3c5SWlNd1FrRXdRamNpTHo0OGNHRjBhQ0JtYVd4c0xYSjFiR1U5SW1WMlpXNXZaR1FpSUdOc2FYQXRjblZzWlQwaVpYWmxibTlrWkNJZ1pEMGlUVEF1TWpVMk16UTRJREF1TmpZNE9UUTFRekF1TWpVNE1EYzJJREF1TmpnME56WTVJREF1TWpjeE5EYzVJREF1TmprM01EYzFJREF1TWpnM056WTBJREF1TmprM01EYzFRekF1TXpBd01qUTRJREF1TmprM01EYzFJREF1TXpFeE1EUXpJREF1TmpnNU9ETTRJREF1TXpFMk1UYzVJREF1TmpjNU16STVTREF1TXpBMU5qVTNRekF1TWpnNE1UQTRJREF1TmpjNU16STVJREF1TWpjeE5ESTBJREF1TmpjMU5qSXhJREF1TWpVMk16UTRJREF1TmpZNE9UUTFXaUlnWm1sc2JEMGlJekJDUVRCQ055SXZQanh3WVhSb0lHWnBiR3d0Y25Wc1pUMGlaWFpsYm05a1pDSWdZMnhwY0MxeWRXeGxQU0psZG1WdWIyUmtJaUJrUFNKTk1DNDNNVEE1TXpnZ01DNDJOemt5T1RoRE1DNDNNVFl3TnpZZ01DNDJPRGs0TURnZ01DNDNNalk0TnpFZ01DNDJPVGN3TkRRZ01DNDNNemt6TlRjZ01DNDJPVGN3TkRSRE1DNDNOVFUyTXlBd0xqWTVOekEwTkNBd0xqYzJPVEF5T0NBd0xqWTRORGMxTnlBd0xqYzNNRGMyTnlBd0xqWTJPRGswTlVNd0xqYzFOVGN3TnlBd0xqWTNOVFl3TWlBd0xqY3pPVEEwT0NBd0xqWTNPVEk1T0NBd0xqY3lNVFV5TXlBd0xqWTNPVEk1T0Vnd0xqY3hNRGt6T0ZvaUlHWnBiR3c5SWlNd1FrRXdRamNpTHo0OGNHRjBhQ0JtYVd4c0xYSjFiR1U5SW1WMlpXNXZaR1FpSUdOc2FYQXRjblZzWlQwaVpYWmxibTlrWkNJZ1pEMGlUVEF1TnpnNE56RWdNQzQwTmpFME5UbElNQzR5TXpjM09ETkRNQzR5TWpJME16WWdNQzQwTmpFME5Ua2dNQzR5TURrNU9UUWdNQzQwTnpNNUlEQXVNakE1T1RrMElEQXVORGc1TWpRNFZqQXVOakkwTnpJeVF6QXVNakE1T1RrMElEQXVOalF3TURZNUlEQXVNakl5TkRNMUlEQXVOalV5TlRFeElEQXVNak0zTnpneklEQXVOalV5TlRFeFNEQXVOemc0TnpBNVF6QXVPREEwTURVM0lEQXVOalV5TlRFeElEQXVPREUyTkRrNUlEQXVOalF3TURZNUlEQXVPREUyTkRrNUlEQXVOakkwTnpJeVZqQXVORGc1TWpRNFF6QXVPREUyTkRrNUlEQXVORGN6T1NBd0xqZ3dOREExTnlBd0xqUTJNVFExT1NBd0xqYzRPRGN4SURBdU5EWXhORFU1V2swd0xqSXpOemM0TXlBd0xqUXpOVEExT1VNd0xqSXdOemcxTlNBd0xqUXpOVEExT1NBd0xqRTRNelU1TkNBd0xqUTFPVE15SURBdU1UZ3pOVGswSURBdU5EZzVNalE0VmpBdU5qSTBOekl5UXpBdU1UZ3pOVGswSURBdU5qVTBOalVnTUM0eU1EYzROVFVnTUM0Mk56ZzVNVEVnTUM0eU16YzNPRE1nTUM0Mk56ZzVNVEZJTUM0M09EZzNNRGxETUM0NE1UZzJNemNnTUM0Mk56ZzVNVEVnTUM0NE5ESTRPVGtnTUM0Mk5UUTJOU0F3TGpnME1qZzVPU0F3TGpZeU5EY3lNbFl3TGpRNE9USTBPRU13TGpnME1qZzVPU0F3TGpRMU9UTXlJREF1T0RFNE5qTTRJREF1TkRNMU1EVTVJREF1TnpnNE56RWdNQzQwTXpVd05UbElNQzR5TXpjM09ETmFJaUJtYVd4c1BTSWpNRUpCTUVJM0lpOCtQR05wY21Oc1pTQmplRDBpTUM0MU9UUTRORFVpSUdONVBTSXdMalUxTnpJME55SWdjajBpTUM0d01qSTFOemc1SWlCbWFXeHNQU0lqTUVKQk1FSTNJaTgrUEdWc2JHbHdjMlVnWTNnOUlqQXVOalkzTVRFaUlHTjVQU0l3TGpVMU56STBOeUlnY25nOUlqQXVNREl5TlRjNUlpQnllVDBpTUM0d01qSTFOemc1SWlCbWFXeHNQU0lqTUVKQk1FSTNJaTgrUEdWc2JHbHdjMlVnWTNnOUlqQXVOek01TXpjMklpQmplVDBpTUM0MU5UY3lORGNpSUhKNFBTSXdMakF5TWpVM09TSWdjbms5SWpBdU1ESXlOVGM0T1NJZ1ptbHNiRDBpSXpCQ1FUQkNOeUl2UGp4d1lYUm9JR1pwYkd3dGNuVnNaVDBpWlhabGJtOWtaQ0lnWTJ4cGNDMXlkV3hsUFNKbGRtVnViMlJrSWlCa1BTSk5NQzR5TlRZNE16WWdNQzQxTlRjeE5URkRNQzR5TlRZNE16WWdNQzQxTkRjME16RWdNQzR5TmpRM01UWWdNQzQxTXprMU5URWdNQzR5TnpRME16WWdNQzQxTXprMU5URklNQzQwTWpjNU56TkRNQzQwTXpjMk9UTWdNQzQxTXprMU5URWdNQzQwTkRVMU56TWdNQzQxTkRjME16RWdNQzQwTkRVMU56TWdNQzQxTlRjeE5URkRNQzQwTkRVMU56TWdNQzQxTmpZNE56RWdNQzQwTXpjMk9UTWdNQzQxTnpRM05URWdNQzQwTWpjNU56TWdNQzQxTnpRM05URklNQzR5TnpRME16WkRNQzR5TmpRM01UWWdNQzQxTnpRM05URWdNQzR5TlRZNE16WWdNQzQxTmpZNE56RWdNQzR5TlRZNE16WWdNQzQxTlRjeE5URmFJaUJtYVd4c1BTSWpNRUpCTUVJM0lpOCtQQzluUGp3dlp6NDhaR1ZtY3o0OFkyeHBjRkJoZEdnZ2FXUTlJbU5zYVhBd1h6STBOVGRmTWpNeE5EY2lQanh5WldOMElIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJR1pwYkd3OUluZG9hWFJsSWk4K1BDOWpiR2x3VUdGMGFENDhZMnhwY0ZCaGRHZ2dhV1E5SW1Oc2FYQXhYekkwTlRkZk1qTXhORGNpUGp4eVpXTjBJSGRwWkhSb1BTSXdMamc0SWlCb1pXbG5hSFE5SWpBdU9EZ2lJR1pwYkd3OUluZG9hWFJsSWlCMGNtRnVjMlp2Y20wOUluUnlZVzV6YkdGMFpTZ3dMakEyTURBMU9EWWdNQzR3TmpBd05UZzJLU0l2UGp3dlkyeHBjRkJoZEdnK1BDOWtaV1p6UGp3dmMzWm5QZz09O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iMyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSI1NTUiIHk9IjU4IiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxvYmplY3QgbGFiZWw9IkdlbmVyaWMgaGFyZHdhcmUiIGlyLnNvdXJjZVN0eWxlPSJyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJaUIyYVdWM1FtOTRQU0l3SURBZ01TQXhJaUJtYVd4c1BTSnViMjVsSWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGp4emRIbHNaVDRnSUNBZ0xtbGpiMjR0Wm1sc2JDQjdJQ0FnSUNBZ0lDQm1hV3hzT2lBak1URkJPRU5HT3lBZ0lDQjlQQzl6ZEhsc1pUNDhaeUJqYkdsd0xYQmhkR2c5SW5WeWJDZ2pZMnhwY0RCZk1qSTJOMTh5TXpBME5Da2lQanh3WVhSb0lHWnBiR3d0Y25Wc1pUMGlaWFpsYm05a1pDSWdZMnhwY0MxeWRXeGxQU0psZG1WdWIyUmtJaUJrUFNKTk1DNDNNVEV5TkRZZ01DNHpPVGN5TVRkRE1DNDNNVFV3TXpRZ01DNHpPVGN5TVRjZ01DNDNNVGd4TmpZZ01DNDBNREF3TXlBd0xqY3hPRFkxT0NBd0xqUXdNelk0TTB3d0xqY3hPRGN5TnlBd0xqUXdORFk1TjB3d0xqY3hPRGN6TlNBd0xqUXlOemc0TlVNd0xqY3pNek00TnlBd0xqUXpNRGcyTWlBd0xqYzBORGt5TmlBd0xqUTBNalF3TmlBd0xqYzBOemt3TWlBd0xqUTFOekExT0V3d0xqYzNNVEE0T0NBd0xqUTFOekExTmtNd0xqYzNOVEl4T1NBd0xqUTFOekExTmlBd0xqYzNPRFUyT0NBd0xqUTJNRFF3TlNBd0xqYzNPRFUyT0NBd0xqUTJORFV6TjBNd0xqYzNPRFUyT0NBd0xqUTJPRE15TXlBd0xqYzNOVGMxTXlBd0xqUTNNVFExTXlBd0xqYzNNakV3TWlBd0xqUTNNVGswT1V3d0xqYzNNVEE0T0NBd0xqUTNNakF4TjBnd0xqYzBPRFkxVmpBdU5EZzVORGRJTUM0M056RXdPRGhETUM0M056UTROellnTUM0ME9EazBOeUF3TGpjM09EQXdOQ0F3TGpRNU1qSTROU0F3TGpjM09EVWdNQzQwT1RVNU16Vk1NQzQzTnpnMU5qZ2dNQzQwT1RZNU5VTXdMamMzT0RVMk9DQXdMalV3TURjek5pQXdMamMzTlRjMU15QXdMalV3TXpnMk5pQXdMamMzTWpFd01pQXdMalV3TkRNMk1rd3dMamMzTVRBNE9DQXdMalV3TkRRek1VZ3dMamMwT0RZMVZqQXVOVEl4T0RnelNEQXVOemN4TURnNFF6QXVOemMwT0RjMklEQXVOVEl4T0RneklEQXVOemM0TURBMElEQXVOVEkwTmprNElEQXVOemM0TlNBd0xqVXlPRE0wT1V3d0xqYzNPRFUyT0NBd0xqVXlPVE0yTkVNd0xqYzNPRFUyT0NBd0xqVXpNVGMxTWlBd0xqYzNOelExTVNBd0xqVXpNemczT0NBd0xqYzNOVGN3TnlBd0xqVXpOVEkwT0VNd0xqYzNORFk0TlNBd0xqVXpOakExTVNBd0xqYzNNelEwT1NBd0xqVXpOalU1TWlBd0xqYzNNakV3TWlBd0xqVXpOamMzTmt3d0xqYzNNVEE0T0NBd0xqVXpOamcwTkV3d0xqYzBOemc1T0NBd0xqVXpOamcxTWtNd0xqYzBORGt5TXlBd0xqVTFNVFVnTUM0M016TXpPRE1nTUM0MU5qTXdNemdnTUM0M01UZzNNelVnTUM0MU5qWXdNVE5NTUM0M01UZzNNamNnTUM0MU9Ea3lNRE5ETUM0M01UZzNNamNnTUM0MU9UTXpNelFnTUM0M01UVXpOemdnTUM0MU9UWTJPRFFnTUM0M01URXlORFlnTUM0MU9UWTJPRFJETUM0M01EYzBOaklnTUM0MU9UWTJPRFFnTUM0M01EUXpNeUF3TGpVNU16ZzNJREF1TnpBek9ETTRJREF1TlRrd01qRTRUREF1TnpBek56Y2dNQzQxT0RreU1ETldNQzQxTmpZM05UTklNQzQyT0RZek1EWk1NQzQyT0RZek1UUWdNQzQxT0RreU1ETkRNQzQyT0RZek1UUWdNQzQxT1RJNU9URWdNQzQyT0RNMU1ESWdNQzQxT1RZeE1Ua2dNQzQyTnprNE5USWdNQzQxT1RZMk1UVk1NQzQyTnpnNE16TWdNQzQxT1RZMk9EUkRNQzQyTnpVd05Ea2dNQzQxT1RZMk9EUWdNQzQyTnpFNU1UY2dNQzQxT1RNNE55QXdMalkzTVRReU5TQXdMalU1TURJeE9Fd3dMalkzTVRNMU5pQXdMalU0T1RJd00wd3dMalkzTVRNME5TQXdMalUyTmpjMU0wZ3dMalkxTXpsV01DNDFPRGt5TURORE1DNDJOVE01SURBdU5Ua3lPVGt4SURBdU5qVXhNRGc1SURBdU5UazJNVEU1SURBdU5qUTNORE00SURBdU5UazJOakUxVERBdU5qUTJOREl6SURBdU5UazJOamcwUXpBdU5qUXlOak0xSURBdU5UazJOamcwSURBdU5qTTVOVEF6SURBdU5Ua3pPRGNnTUM0Mk16a3dNVEVnTUM0MU9UQXlNVGhNTUM0Mk16ZzVORE1nTUM0MU9Ea3lNRE5NTUM0Mk16ZzVORGNnTUM0MU5qWXdNVGRETUM0Mk1qUXlPU0F3TGpVMk16QTBOQ0F3TGpZeE1qYzBNeUF3TGpVMU1UUTVPQ0F3TGpZd09UYzJPQ0F3TGpVek5qZzBNa3d3TGpVNE5qVTRNaUF3TGpVek5qZzBORU13TGpVNE1qUTFNU0F3TGpVek5qZzBOQ0F3TGpVM09URXdNaUF3TGpVek16UTVOU0F3TGpVM09URXdNaUF3TGpVeU9UTTJORU13TGpVM09URXdNaUF3TGpVeU5UVTNPQ0F3TGpVNE1Ua3hOeUF3TGpVeU1qUTBPQ0F3TGpVNE5UVTJOeUF3TGpVeU1UazFNa3d3TGpVNE5qVTRNaUF3TGpVeU1UZzRNMHd3TGpZd09UQXlJREF1TlRJeE9EY3pWakF1TlRBME5ERTVUREF1TlRnMk5UZ3lJREF1TlRBME5ETXhRekF1TlRneU56azBJREF1TlRBME5ETXhJREF1TlRjNU5qWTJJREF1TlRBeE5qRTJJREF1TlRjNU1UY2dNQzQwT1RjNU5qVk1NQzQxTnpreE1ESWdNQzQwT1RZNU5VTXdMalUzT1RFd01pQXdMalE1TXpFMk5DQXdMalU0TVRreE55QXdMalE1TURBek5DQXdMalU0TlRVMk55QXdMalE0T1RVek9Fd3dMalU0TmpVNE1pQXdMalE0T1RRM1REQXVOakE1TURJZ01DNDBPRGswTmxZd0xqUTNNakF3T0V3d0xqVTROalU0TWlBd0xqUTNNakF4TjBNd0xqVTRNamM1TkNBd0xqUTNNakF4TnlBd0xqVTNPVFkyTmlBd0xqUTJPVEl3TWlBd0xqVTNPVEUzSURBdU5EWTFOVFV4VERBdU5UYzVNVEF5SURBdU5EWTBOVE0zUXpBdU5UYzVNVEF5SURBdU5EWXdOelV4SURBdU5UZ3hPVEUzSURBdU5EVTNOakl4SURBdU5UZzFOVFkzSURBdU5EVTNNVEkxVERBdU5UZzJOVGd5SURBdU5EVTNNRFUyVERBdU5qQTVOemN5SURBdU5EVTNNRFEzUXpBdU5qRXlOelV4SURBdU5EUXlNemsySURBdU5qSTBNamswSURBdU5ETXdPRFUzSURBdU5qTTRPVFEzSURBdU5ESTNPRGd6VERBdU5qTTRPVFF6SURBdU5EQTBOamszUXpBdU5qTTRPVFF6SURBdU5EQXdOVFkySURBdU5qUXlNamt5SURBdU16azNNakUzSURBdU5qUTJOREl6SURBdU16azNNakUzUXpBdU5qVXdNakE0SURBdU16azNNakUzSURBdU5qVXpNek01SURBdU5EQXdNRE1nTUM0Mk5UTTRNekVnTUM0ME1ETTJPRE5NTUM0Mk5UTTVJREF1TkRBME5qazNWakF1TkRJM01USTJTREF1TmpjeE16UTFUREF1TmpjeE16VTJJREF1TkRBME5qazNRekF1TmpjeE16VTJJREF1TkRBd09UQTVJREF1TmpjME1UWTRJREF1TXprM056YzVJREF1TmpjM09ERTRJREF1TXprM01qZzFUREF1TmpjNE9ETXpJREF1TXprM01qRTNRekF1TmpneU5qSXhJREF1TXprM01qRTNJREF1TmpnMU56VXpJREF1TkRBd01ETWdNQzQyT0RZeU5EVWdNQzQwTURNMk9ETk1NQzQyT0RZek1UUWdNQzQwTURRMk9UZE1NQzQyT0RZek1EWWdNQzQwTWpjeE1qWklNQzQzTURNM04xWXdMalF3TkRZNU4wTXdMamN3TXpjM0lEQXVOREF4TWpVMUlEQXVOekEyTURreklEQXVNems0TXpVMUlEQXVOekE1TWpVNUlEQXVNemszTkRnMFREQXVOekV3TWpNeUlEQXVNemszTWpnMVREQXVOekV4TWpRMklEQXVNemszTWpFM1drMHdMalkwTnpRNElEQXVORFEwTWpJelF6QXVOak0xTlRVeElEQXVORFEwTWpJeklEQXVOakkxT0RneElEQXVORFV6T0RrMElEQXVOakkxT0RneElEQXVORFkxT0RJMFZqQXVOVEk0TWpJelF6QXVOakkxT0RneElEQXVOVFF3TVRVMElEQXVOak0xTlRVeElEQXVOVFE1T0RJMElEQXVOalEzTkRnZ01DNDFORGs0TWpSSU1DNDNNRGs0T0RGRE1DNDNNakU0TURrZ01DNDFORGs0TWpRZ01DNDNNekUwT0NBd0xqVTBNREUxTkNBd0xqY3pNVFE0SURBdU5USTRNakl6VmpBdU5EWTFPREkwUXpBdU56TXhORGdnTUM0ME5UTTRPVFFnTUM0M01qRTRNRGtnTUM0ME5EUXlNak1nTUM0M01EazRPREVnTUM0ME5EUXlNak5JTUM0Mk5EYzBPRnBOTUM0Mk56ZzNNeUF3TGpRMk9ESTNNVU13TGpZNU5EWXpNeUF3TGpRMk9ESTNNU0F3TGpjd056VXlOeUF3TGpRNE1URTJOU0F3TGpjd056VXlOeUF3TGpRNU56QTNRekF1TnpBM05USTNJREF1TlRFeU9UYzJJREF1TmprME5qTXpJREF1TlRJMU9EY3hJREF1TmpjNE56TWdNQzQxTWpVNE56RkRNQzQyTmpJNE1qTWdNQzQxTWpVNE56RWdNQzQyTkRrNU1qa2dNQzQxTVRJNU56WWdNQzQyTkRrNU1qa2dNQzQwT1Rjd04wTXdMalkwT1RreU9TQXdMalE0TVRFMk5TQXdMalkyTWpneU15QXdMalEyT0RJM01TQXdMalkzT0RjeklEQXVORFk0TWpjeFdrMHdMalkzT0RjeklEQXVORGd5TmpkRE1DNDJOekEzTnpZZ01DNDBPREkyTnlBd0xqWTJORE16SURBdU5EZzVNVEU1SURBdU5qWTBNek1nTUM0ME9UY3dOME13TGpZMk5ETXpJREF1TlRBMU1ESTBJREF1Tmpjd056YzJJREF1TlRFeE5EY3hJREF1TmpjNE56TWdNQzQxTVRFME56RkRNQzQyT0RZMk9DQXdMalV4TVRRM01TQXdMalk1TXpFeU55QXdMalV3TlRBeU5DQXdMalk1TXpFeU55QXdMalE1TnpBM1F6QXVOamt6TVRJM0lEQXVORGc1TVRFNUlEQXVOamcyTmpnZ01DNDBPREkyTnlBd0xqWTNPRGN6SURBdU5EZ3lOamRhSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BIQmhkR2dnWm1sc2JDMXlkV3hsUFNKbGRtVnViMlJrSWlCamJHbHdMWEoxYkdVOUltVjJaVzV2WkdRaUlHUTlJazB3TGpFMk5qazVNaUF3TGpJek16RTNNVU13TGpFMk5qazVNaUF3TGpJeU5UZzRNU0F3TGpFM01qa3dNaUF3TGpJeE9UazNNU0F3TGpFNE1ERTVNaUF3TGpJeE9UazNNVWd3TGpJd016WTFPVU13TGpJeU16a3dPU0F3TGpJeE9UazNNU0F3TGpJME1ETXlOaUF3TGpJek5qTTROeUF3TGpJME1ETXlOaUF3TGpJMU5qWXpOMVl3TGpNeE16Z3pOMGd3TGpneE9UWTFPVU13TGpnek9Ua3dPU0F3TGpNeE16Z3pOeUF3TGpnMU5qTXlOaUF3TGpNek1ESTFOQ0F3TGpnMU5qTXlOaUF3TGpNMU1EVXdORll3TGpZME16Z3pOME13TGpnMU5qTXlOaUF3TGpZMk5EQTRPQ0F3TGpnek9Ua3dPU0F3TGpZNE1EVXdOQ0F3TGpneE9UWTFPU0F3TGpZNE1EVXdORWd3TGpJME1ETXlObFl3TGpjMk1URTNNVU13TGpJME1ETXlOaUF3TGpjMk9EUTJNU0F3TGpJek5EUXhOaUF3TGpjM05ETTNNU0F3TGpJeU56RXlOaUF3TGpjM05ETTNNVU13TGpJeE9UZ3pOU0F3TGpjM05ETTNNU0F3TGpJeE16a3lOaUF3TGpjMk9EUTJNU0F3TGpJeE16a3lOaUF3TGpjMk1URTNNVll3TGpJMU5qWXpOME13TGpJeE16a3lOaUF3TGpJMU1EazJOeUF3TGpJd09UTXlPU0F3TGpJME5qTTNNU0F3TGpJd016WTFPU0F3TGpJME5qTTNNVWd3TGpFNE1ERTVNa013TGpFM01qa3dNaUF3TGpJME5qTTNNU0F3TGpFMk5qazVNaUF3TGpJME1EUTJNU0F3TGpFMk5qazVNaUF3TGpJek16RTNNVnBOTUM0eU5EQXpNallnTUM0Mk5UUXhNRFJJTUM0NE1UazJOVGxETUM0NE1qVXpNamtnTUM0Mk5UUXhNRFFnTUM0NE1qazVNallnTUM0Mk5EazFNRGNnTUM0NE1qazVNallnTUM0Mk5ETTRNemRXTUM0ek5UQTFNRFJETUM0NE1qazVNallnTUM0ek5EUTRNelFnTUM0NE1qVXpNamtnTUM0ek5EQXlNemNnTUM0NE1UazJOVGtnTUM0ek5EQXlNemRJTUM0eU5EQXpNalpXTUM0Mk5UUXhNRFJhSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BIQmhkR2dnWm1sc2JDMXlkV3hsUFNKbGRtVnViMlJrSWlCamJHbHdMWEoxYkdVOUltVjJaVzV2WkdRaUlHUTlJazB3TGpJNE9EVTROU0F3TGpZMk56SXpOa013TGpJNU16UTBOU0F3TGpZMk56SXpOaUF3TGpJNU56TTROU0F3TGpZM01URTNOaUF3TGpJNU56TTROU0F3TGpZM05qQXpObFl3TGpjeE1USXpOa013TGpJNU56TTROU0F3TGpjeE5qQTVOaUF3TGpNd01UTXlOU0F3TGpjeU1EQXpOaUF3TGpNd05qRTROU0F3TGpjeU1EQXpOa2d3TGpVeU5qRTROVU13TGpVek1UQTBOU0F3TGpjeU1EQXpOaUF3TGpVek5EazROU0F3TGpjeE5qQTVOaUF3TGpVek5EazROU0F3TGpjeE1USXpObFl3TGpZM05qQXpOa013TGpVek5EazROU0F3TGpZM01URTNOaUF3TGpVek9Ea3lOU0F3TGpZMk56SXpOaUF3TGpVME16YzROU0F3TGpZMk56SXpOa013TGpVME9EWTBOU0F3TGpZMk56SXpOaUF3TGpVMU1qVTROU0F3TGpZM01URTNOaUF3TGpVMU1qVTROU0F3TGpZM05qQXpObFl3TGpjeE1USXpOa013TGpVMU1qVTROU0F3TGpjeU5UZ3hOeUF3TGpVME1EYzJOU0F3TGpjek56WXpOaUF3TGpVeU5qRTROU0F3TGpjek56WXpOa2d3TGpNd05qRTROVU13TGpJNU1UWXdOU0F3TGpjek56WXpOaUF3TGpJM09UYzROU0F3TGpjeU5UZ3hOeUF3TGpJM09UYzROU0F3TGpjeE1USXpObFl3TGpZM05qQXpOa013TGpJM09UYzROU0F3TGpZM01URTNOaUF3TGpJNE16Y3lOU0F3TGpZMk56SXpOaUF3TGpJNE9EVTROU0F3TGpZMk56SXpObG9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OGNHRjBhQ0JtYVd4c0xYSjFiR1U5SW1WMlpXNXZaR1FpSUdOc2FYQXRjblZzWlQwaVpYWmxibTlrWkNJZ1pEMGlUVEF1TmpRNU5ESTFJREF1TmpVNE5EUTNRekF1TmpVME1qZzFJREF1TmpVNE5EUTNJREF1TmpVNE1qSTFJREF1TmpZeU16ZzNJREF1TmpVNE1qSTFJREF1TmpZM01qUTNWakF1TnpFeE1qUTNRekF1TmpVNE1qSTFJREF1TnpFMk1UQTNJREF1TmpZeU1UWTFJREF1TnpJd01EUTNJREF1TmpZM01ESTFJREF1TnpJd01EUTNTREF1TnpneE5ESTFRekF1TnpnMk1qZzFJREF1TnpJd01EUTNJREF1Tnprd01qSTFJREF1TnpFMk1UQTNJREF1Tnprd01qSTFJREF1TnpFeE1qUTNWakF1TmpZM01qUTNRekF1Tnprd01qSTFJREF1TmpZeU16ZzNJREF1TnprME1UWTFJREF1TmpVNE5EUTNJREF1TnprNU1ESTFJREF1TmpVNE5EUTNRekF1T0RBek9EZzFJREF1TmpVNE5EUTNJREF1T0RBM09ESTFJREF1TmpZeU16ZzNJREF1T0RBM09ESTFJREF1TmpZM01qUTNWakF1TnpFeE1qUTNRekF1T0RBM09ESTFJREF1TnpJMU9ESTRJREF1TnprMk1EQTFJREF1TnpNM05qUTNJREF1TnpneE5ESTFJREF1TnpNM05qUTNTREF1TmpZM01ESTFRekF1TmpVeU5EUTFJREF1TnpNM05qUTNJREF1TmpRd05qSTFJREF1TnpJMU9ESTRJREF1TmpRd05qSTFJREF1TnpFeE1qUTNWakF1TmpZM01qUTNRekF1TmpRd05qSTFJREF1TmpZeU16ZzNJREF1TmpRME5UWTFJREF1TmpVNE5EUTNJREF1TmpRNU5ESTFJREF1TmpVNE5EUTNXaUlnWTJ4aGMzTTlJbWxqYjI0dFptbHNiQ0l2UGp4d1lYUm9JR1pwYkd3dGNuVnNaVDBpWlhabGJtOWtaQ0lnWTJ4cGNDMXlkV3hsUFNKbGRtVnViMlJrSWlCa1BTSk5NQzR5TnpnNE1UWWdNQzQwTVRRNE1URkRNQzR5TnpnNE1UWWdNQzQwTURjMU1qRWdNQzR5T0RRM01qWWdNQzQwTURFMk1URWdNQzR5T1RJd01UWWdNQzQwTURFMk1URklNQzQwTnpNNE9ETkRNQzQwT0RFeE56TWdNQzQwTURFMk1URWdNQzQwT0Rjd09ETWdNQzQwTURjMU1qRWdNQzQwT0Rjd09ETWdNQzQwTVRRNE1URkRNQzQwT0Rjd09ETWdNQzQwTWpJeE1ERWdNQzQwT0RFeE56TWdNQzQwTWpnd01URWdNQzQwTnpNNE9ETWdNQzQwTWpnd01URklNQzR5T1RJd01UWkRNQzR5T0RRM01qWWdNQzQwTWpnd01URWdNQzR5TnpnNE1UWWdNQzQwTWpJeE1ERWdNQzR5TnpnNE1UWWdNQzQwTVRRNE1URmFUVEF1TWpjeU9UUTVJREF1TkRreE1EYzRRekF1TWpjeU9UUTVJREF1TkRnek56ZzRJREF1TWpjNE9EVTVJREF1TkRjM09EYzRJREF1TWpnMk1UUTVJREF1TkRjM09EYzRTREF1TXpjME1UUTVRekF1TXpneE5ETTVJREF1TkRjM09EYzRJREF1TXpnM016UTVJREF1TkRnek56ZzRJREF1TXpnM016UTVJREF1TkRreE1EYzRRekF1TXpnM016UTVJREF1TkRrNE16WTRJREF1TXpneE5ETTVJREF1TlRBME1qYzRJREF1TXpjME1UUTVJREF1TlRBME1qYzRTREF1TWpnMk1UUTVRekF1TWpjNE9EVTVJREF1TlRBME1qYzRJREF1TWpjeU9UUTVJREF1TkRrNE16WTRJREF1TWpjeU9UUTVJREF1TkRreE1EYzRXaUlnWTJ4aGMzTTlJbWxqYjI0dFptbHNiQ0l2UGp4amFYSmpiR1VnWTNnOUlqQXVNekEzTmpRMUlpQmplVDBpTUM0Mk1EWTVOakVpSUhJOUlqQXVNREl5SWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BHVnNiR2x3YzJVZ1kzZzlJakF1TXpjM09UVTNJaUJqZVQwaU1DNDJNRFk1TmpFaUlISjRQU0l3TGpBeU1pSWdjbms5SWpBdU1ESXlJaUJqYkdGemN6MGlhV052YmkxbWFXeHNJaTgrUEdOcGNtTnNaU0JqZUQwaU1DNDBORGczTlRnaUlHTjVQU0l3TGpZd05qazJNU0lnY2owaU1DNHdNaklpSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OGNHRjBhQ0JtYVd4c0xYSjFiR1U5SW1WMlpXNXZaR1FpSUdOc2FYQXRjblZzWlQwaVpYWmxibTlrWkNJZ1pEMGlUVEF1TVRZMU5USTNJREF1TlRVelF6QXVNVFkxTlRJM0lEQXVOVFF6TWpnZ01DNHhOek0wTURjZ01DNDFNelUwSURBdU1UZ3pNVEkzSURBdU5UTTFORWd3TGpJek5Ua3lOMVl3TGpVMU0wd3dMakU0TXpFeU55QXdMalUxTTFZd0xqWXpNakpJTUM0eU16VTVNamRXTUM0Mk5EazRTREF1TVRnek1USTNRekF1TVRjek5EQTNJREF1TmpRNU9DQXdMakUyTlRVeU55QXdMalkwTVRreU1TQXdMakUyTlRVeU55QXdMall6TWpKV01DNDFOVE5hSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K1BDOW5QanhrWldaelBqeGpiR2x3VUdGMGFDQnBaRDBpWTJ4cGNEQmZNakkyTjE4eU16QTBOQ0krUEhKbFkzUWdkMmxrZEdnOUlqQXVPRGdpSUdobGFXZG9kRDBpTUM0NE9DSWdabWxzYkQwaWQyaHBkR1VpSUhSeVlXNXpabTl5YlQwaWRISmhibk5zWVhSbEtEQXVNRFl3TURVNE5pQXdMakEyTURBMU9EWXBJaTgrUEM5amJHbHdVR0YwYUQ0OEwyUmxabk0rUEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtzdHJva2VXaWR0aD0xOyIgaWQ9IjciPjxteENlbGwgc3R5bGU9ImlyLnJlZj0xNzkxYzNiOC1hNTFjLTQ1YzItODZhZi0xYzQ3OWYzM2JkYzg7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249bGVmdDtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1jdXN0b207aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtR0VORVJJQy1IQVJEV0FSRTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VXaWR0aD0xO2NvbnRhaW5lcj0xO3BlcmltZXRlcj1yZWN0YW5nbGVQZXJpbWV0ZXI7cmVjdXJzaXZlUmVzaXplPTA7dGV4dERpcmVjdGlvbj1sdHI7c3BhY2luZ1RvcD0xO3NwYWNpbmdMZWZ0PTMyOyIgcGFyZW50PSIzIiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjY4NiIgeT0iMzMiIHdpZHRoPSI1MzkiIGhlaWdodD0iMzYzIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L29iamVjdD48bXhDZWxsIGlkPSIzOCIgdmFsdWU9IklvVCBBcHBsaWNhdGlvbiAtPiBFbWJlZGRlZCBTdG9yYWdlIiBzdHlsZT0iaXIucmVmPTc2ZDlmZGM4LWI3MzktNDkwMS04MWJjLTUxYzgwZmI0NDEwNjtlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7ZXhpdFg9MC4yNTtleGl0WT0wO2V4aXREeD0wO2V4aXREeT0wO2VudHJ5WD0wLjI1O2VudHJ5WT0wLjkzMztlbnRyeUR4PTA7ZW50cnlEeT0wO2VudHJ5UGVyaW1ldGVyPTA7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yO2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7IiBwYXJlbnQ9IjciIHNvdXJjZT0iNCIgdGFyZ2V0PSIzNCIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+PEFycmF5IGFzPSJwb2ludHMiPjxteFBvaW50IHg9IjE3OCIgeT0iMTYxIi8+PC9BcnJheT48L214R2VvbWV0cnk+PC9teENlbGw+PG14Q2VsbCBpZD0iNCIgdmFsdWU9IklvVCBBcHBsaWNhdGlvbiIgc3R5bGU9ImlyLnJlZj05YzRiNmRjMi00ZDRiLTQ4MWYtYmZmNS05NmE2MjQ3ZWRhMWU7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9aW90LWFwcGxpY2F0aW9uO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHY2dZMnhwY0Mxd1lYUm9QU0oxY213b0kyTnNhWEF3S1NJK0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0Mk9UTXhPVGtnTUM0Mk9EYzFNREZETUM0Mk9UTXhPVGtnTUM0Mk56VXdOelFnTUM0M01ETXlOek1nTUM0Mk5qVXdNREVnTUM0M01UVTJPVGtnTUM0Mk5qVXdNREZETUM0M01qZ3hNalVnTUM0Mk5qVXdNREVnTUM0M016Z3hPVGtnTUM0Mk56VXdOelFnTUM0M016Z3hPVGtnTUM0Mk9EYzFNREZETUM0M016Z3hPVGtnTUM0Mk9UazVNamNnTUM0M01qZ3hNalVnTUM0M01UQXdNREVnTUM0M01UVTJPVGtnTUM0M01UQXdNREZETUM0M01ETXlOek1nTUM0M01UQXdNREVnTUM0Mk9UTXhPVGtnTUM0Mk9UazVNamNnTUM0Mk9UTXhPVGtnTUM0Mk9EYzFNREZhSWlCbWFXeHNQU0lqTVRGQk9FTkdJaTgrSmlONFlUczhjR0YwYUNCbWFXeHNMWEoxYkdVOUltVjJaVzV2WkdRaUlHTnNhWEF0Y25Wc1pUMGlaWFpsYm05a1pDSWdaRDBpVFRBdU5qTXpNVEkxSURBdU5qTTROamMzUXpBdU5qTXpNVEkxSURBdU5qSXdNRE0zSURBdU5qUTRNak0xSURBdU5qQTBPVEkzSURBdU5qWTJPRGMxSURBdU5qQTBPVEkzU0RBdU56WTBNemMxUXpBdU56Z3pNREUxSURBdU5qQTBPVEkzSURBdU56azRNVEkxSURBdU5qSXdNRE0zSURBdU56azRNVEkxSURBdU5qTTROamMzVmpBdU56TTJNVGMzUXpBdU56azRNVEkxSURBdU56VTBPREUySURBdU56Z3pNREUxSURBdU56WTVPVEkzSURBdU56WTBNemMxSURBdU56WTVPVEkzU0RBdU5qWTJPRGMxUXpBdU5qUTRNak0xSURBdU56WTVPVEkzSURBdU5qTXpNVEkxSURBdU56VTBPREUySURBdU5qTXpNVEkxSURBdU56TTJNVGMzVmpBdU5qTTROamMzV2swd0xqYzJNRFk1T1NBd0xqWTROelV3TVVNd0xqYzJNRFk1T1NBd0xqWTJNalkwT0NBd0xqYzBNRFUxTWlBd0xqWTBNalV3TVNBd0xqY3hOVFk1T1NBd0xqWTBNalV3TVVNd0xqWTVNRGcwTmlBd0xqWTBNalV3TVNBd0xqWTNNRFk1T1NBd0xqWTJNalkwT0NBd0xqWTNNRFk1T1NBd0xqWTROelV3TVVNd0xqWTNNRFk1T1NBd0xqY3hNak0xTkNBd0xqWTVNRGcwTmlBd0xqY3pNalV3TVNBd0xqY3hOVFk1T1NBd0xqY3pNalV3TVVNd0xqYzBNRFUxTWlBd0xqY3pNalV3TVNBd0xqYzJNRFk1T1NBd0xqY3hNak0xTkNBd0xqYzJNRFk1T1NBd0xqWTROelV3TVZvaUlHWnBiR3c5SWlNeE1VRTRRMFlpTHo0bUkzaGhPenh3WVhSb0lHWnBiR3d0Y25Wc1pUMGlaWFpsYm05a1pDSWdZMnhwY0MxeWRXeGxQU0psZG1WdWIyUmtJaUJrUFNKTk1DNDNNVFUyTWpVZ01DNDVNRE13TlRKRE1DNDRNelEzTVRFZ01DNDVNRE13TlRJZ01DNDVNekV5TlNBd0xqZ3dOalV4TXlBd0xqa3pNVEkxSURBdU5qZzNOREkzUXpBdU9UTXhNalVnTUM0MU5qZ3pOQ0F3TGpnek5EY3hNU0F3TGpRM01UZ3dNaUF3TGpjeE5UWXlOU0F3TGpRM01UZ3dNa013TGpVNU5qVXpPU0F3TGpRM01UZ3dNaUF3TGpVZ01DNDFOamd6TkNBd0xqVWdNQzQyT0RjME1qZERNQzQxSURBdU9EQTJOVEV6SURBdU5UazJOVE01SURBdU9UQXpNRFV5SURBdU56RTFOakkxSURBdU9UQXpNRFV5V2swd0xqYzNOVFV5TWlBd0xqVTBOekUxUXpBdU56YzBOemMzSURBdU5UUXhOalU1SURBdU56Y3dNRGNnTUM0MU16YzBNamNnTUM0M05qUXpOelVnTUM0MU16YzBNamRNTUM0M05qSTRORGdnTUM0MU16YzFNamxNTUM0M05qRXpPRFFnTUM0MU16YzRNamxETUM0M05UWTJNak1nTUM0MU16a3hNemdnTUM0M05UTXhNalVnTUM0MU5ETTBPVGtnTUM0M05UTXhNalVnTUM0MU5EZzJOemRXTUM0MU9ESTBNVEpJTUM0M01qWTROa3d3TGpjeU5qZzNOU0F3TGpVME9EWTNOMHd3TGpjeU5qYzNNaUF3TGpVME56RTFRekF1TnpJMk1ESTNJREF1TlRReE5qVTVJREF1TnpJeE16SWdNQzQxTXpjME1qY2dNQzQzTVRVMk1qVWdNQzQxTXpjME1qZE1NQzQzTVRRd09UZ2dNQzQxTXpjMU1qbERNQzQzTURnMk1EY2dNQzQxTXpneU56UWdNQzQzTURRek56VWdNQzQxTkRJNU9ERWdNQzQzTURRek56VWdNQzQxTkRnMk56ZE1NQzQzTURRek5pQXdMalU0TWpReE1rZ3dMalkzT0RFeU5WWXdMalUwT0RZM04wd3dMalkzT0RBeU1pQXdMalUwTnpFMVF6QXVOamMzTWpjM0lEQXVOVFF4TmpVNUlEQXVOamN5TlRjZ01DNDFNemMwTWpjZ01DNDJOalk0TnpVZ01DNDFNemMwTWpkRE1DNDJOakEyTmpJZ01DNDFNemMwTWpjZ01DNDJOVFUyTWpVZ01DNDFOREkwTmpRZ01DNDJOVFUyTWpVZ01DNDFORGcyTnpkTU1DNDJOVFUyTXpJZ01DNDFPRE0xTlRGRE1DNDJNek0xT1RNZ01DNDFPRGd3TWpFZ01DNDJNVFl5TXpJZ01DNDJNRFV6TnpjZ01DNDJNVEUzTlRNZ01DNDJNamMwTVRKTU1DNDFOelk0TnpVZ01DNDJNamMwTWpkTU1DNDFOelV6TkRnZ01DNDJNamMxTWpsRE1DNDFOams0TlRjZ01DNDJNamd5TnpRZ01DNDFOalUyTWpVZ01DNDJNekk1T0RFZ01DNDFOalUyTWpVZ01DNDJNemcyTnpkTU1DNDFOalUzTWpnZ01DNDJOREF5TURORE1DNDFOalkwTnpNZ01DNDJORFUyT1RRZ01DNDFOekV4T0NBd0xqWTBPVGt5TnlBd0xqVTNOamczTlNBd0xqWTBPVGt5TjB3d0xqWXhNRFl5TlNBd0xqWTBPVGt4TWxZd0xqWTNOakUyTWt3d0xqVTNOamczTlNBd0xqWTNOakUzTjB3d0xqVTNOVE0wT0NBd0xqWTNOakkzT1VNd0xqVTJPVGcxTnlBd0xqWTNOekF5TkNBd0xqVTJOVFl5TlNBd0xqWTRNVGN6TVNBd0xqVTJOVFl5TlNBd0xqWTROelF5TjB3d0xqVTJOVGN5T0NBd0xqWTRPRGsxTTBNd0xqVTJOalEzTXlBd0xqWTVORFEwTkNBd0xqVTNNVEU0SURBdU5qazROamMzSURBdU5UYzJPRGMxSURBdU5qazROamMzVERBdU5qRXdOakkxSURBdU5qazROall5VmpBdU56STBPVEV5VERBdU5UYzJPRGMxSURBdU56STBPVEkzVERBdU5UYzFNelE0SURBdU56STFNREk1UXpBdU5UWTVPRFUzSURBdU56STFOemMwSURBdU5UWTFOakkxSURBdU56TXdORGd4SURBdU5UWTFOakkxSURBdU56TTJNVGMzUXpBdU5UWTFOakkxSURBdU56UXlNemtnTUM0MU56QTJOaklnTUM0M05EYzBNamNnTUM0MU56WTROelVnTUM0M05EYzBNamRNTUM0Mk1URTNOU0F3TGpjME56UXlOa013TGpZeE5qSXlOQ0F3TGpjMk9UUTJPU0F3TGpZek16VTRPQ0F3TGpjNE5qZ3pNU0F3TGpZMU5UWXpNaUF3TGpjNU1UTXdNMHd3TGpZMU5UWXlOU0F3TGpneU5qRTNOMHd3TGpZMU5UY3lPQ0F3TGpneU56Y3dNME13TGpZMU5qUTNNeUF3TGpnek16RTVOQ0F3TGpZMk1URTRJREF1T0RNM05ESTNJREF1TmpZMk9EYzFJREF1T0RNM05ESTNUREF1TmpZNE5EQXlJREF1T0RNM016STBRekF1Tmpjek9Ea3pJREF1T0RNMk5UYzVJREF1TmpjNE1USTFJREF1T0RNeE9EY3lJREF1TmpjNE1USTFJREF1T0RJMk1UYzNWakF1TnpreU5ERXlTREF1TnpBME16Wk1NQzQzTURRek56VWdNQzQ0TWpZeE56ZE1NQzQzTURRME56Z2dNQzQ0TWpjM01ETkRNQzQzTURVeU1qTWdNQzQ0TXpNeE9UUWdNQzQzTURrNU15QXdMamd6TnpReU55QXdMamN4TlRZeU5TQXdMamd6TnpReU4wd3dMamN4TnpFMU1pQXdMamd6TnpNeU5FTXdMamN5TWpZME15QXdMamd6TmpVM09TQXdMamN5TmpnM05TQXdMamd6TVRnM01pQXdMamN5TmpnM05TQXdMamd5TmpFM04wd3dMamN5TmpnMklEQXVOemt5TkRFeVNEQXVOelV6TVRJMVZqQXVPREkyTVRjM1REQXVOelV6TWpJNElEQXVPREkzTnpBelF6QXVOelV6T1RjeklEQXVPRE16TVRrMElEQXVOelU0TmpnZ01DNDRNemMwTWpjZ01DNDNOalF6TnpVZ01DNDRNemMwTWpkRE1DNDNOekExT0RnZ01DNDRNemMwTWpjZ01DNDNOelUyTWpVZ01DNDRNekl6T1NBd0xqYzNOVFl5TlNBd0xqZ3lOakUzTjB3d0xqYzNOVFl6TXlBd0xqYzVNVE5ETUM0M09UYzJOalVnTUM0M09EWTRNalFnTUM0NE1UVXdNaUF3TGpjMk9UUTNNU0F3TGpneE9UUTVOeUF3TGpjME56UXpPVXd3TGpnMU5ETTNOU0F3TGpjME56UXlOMHd3TGpnMU5Ua3dNaUF3TGpjME56TXlORU13TGpnMk1UTTVNeUF3TGpjME5qVTNPU0F3TGpnMk5UWXlOU0F3TGpjME1UZzNNaUF3TGpnMk5UWXlOU0F3TGpjek5qRTNOMHd3TGpnMk5UVXlNaUF3TGpjek5EWTFRekF1T0RZME56YzNJREF1TnpJNU1UVTVJREF1T0RZd01EY2dNQzQzTWpRNU1qY2dNQzQ0TlRRek56VWdNQzQzTWpRNU1qZElNQzQ0TWpBMk1qVldNQzQyT1RnMk56ZElNQzQ0TlRRek56Vk1NQzQ0TlRVNU1ESWdNQzQyT1RnMU56UkRNQzQ0TmpFek9UTWdNQzQyT1RjNE1qa2dNQzQ0TmpVMk1qVWdNQzQyT1RNeE1qSWdNQzQ0TmpVMk1qVWdNQzQyT0RjME1qZE1NQzQ0TmpVMU1qSWdNQzQyT0RVNVF6QXVPRFkwTnpjM0lEQXVOamd3TkRBNUlEQXVPRFl3TURjZ01DNDJOell4TnpjZ01DNDROVFF6TnpVZ01DNDJOell4TnpkSU1DNDRNakEyTWpWV01DNDJORGs1TWpkSU1DNDROVFF6TnpWTU1DNDROVFU1TURJZ01DNDJORGs0TWpSRE1DNDROakV6T1RNZ01DNDJORGt3TnprZ01DNDROalUyTWpVZ01DNDJORFF6TnpJZ01DNDROalUyTWpVZ01DNDJNemcyTnpkRE1DNDROalUyTWpVZ01DNDJNekkwTmpRZ01DNDROakExT0RnZ01DNDJNamMwTWpjZ01DNDROVFF6TnpVZ01DNDJNamMwTWpkTU1DNDRNVGsxSURBdU5qSTNORE5ETUM0NE1UVXdNamdnTUM0Mk1EVXpPVEVnTUM0M09UYzJOeUF3TGpVNE9EQXpJREF1TnpjMU5qTXpJREF1TlRnek5UVTBUREF1TnpjMU5qSTFJREF1TlRRNE5qYzNUREF1TnpjMU5USXlJREF1TlRRM01UVmFJaUJtYVd4c1BTSWpNVEZCT0VOR0lpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDRNVEEyT1RNZ01DNDBOVEkzT1RaRE1DNDNPVFF5T0RjZ01DNDBNakl6TkRFZ01DNDNOek0wTWpVZ01DNHpPVE0zT1RJZ01DNDNORGsxTXpJZ01DNHpOams0T1RoRE1DNDJNVEkyTkRjZ01DNHlNek13TVRRZ01DNHpPVEEzTVRRZ01DNHlNek13TVRRZ01DNHlOVE00TWprZ01DNHpOams0T1RoRE1DNHlNamN5T0RnZ01DNHpPVFkwTXprZ01DNHlNRFUyTWpnZ01DNDBNalkwTWlBd0xqRTRPRGs0TXlBd0xqUTFPVE15TjBNd0xqRTNPREl6TXlBd0xqUTRNRFU0SURBdU1UZzJOelEzSURBdU5UQTJOVEkwSURBdU1qQTRJREF1TlRFM01qYzBRekF1TWpJNU1qVXpJREF1TlRJNE1ESTBJREF1TWpVMU1UazNJREF1TlRFNU5UQTVJREF1TWpZMU9UUTNJREF1TkRrNE1qVTJRekF1TWpjNE5EZzBJREF1TkRjek5EY3hJREF1TWprME56WXhJREF1TkRVd09UUXlJREF1TXpFME9ERTJJREF1TkRNd09EZzJRekF1TkRFNE1ERTVJREF1TXpJM05qZ3pJREF1TlRnMU16UXlJREF1TXpJM05qZ3pJREF1TmpnNE5UUTFJREF1TkRNd09EZzJRekF1Tmprd01ERTVJREF1TkRNeU16WWdNQzQyT1RFME9DQXdMalF6TXpnMk1pQXdMalk1TWpreU9DQXdMalF6TlRNNE9VTXdMamN3TURRek5pQXdMalF6TkRjeE9TQXdMamN3T0RBMElEQXVORE0wTXpjMklEQXVOekUxTnpJeklEQXVORE0wTXpjMlF6QXVOelE1TXpBNUlEQXVORE0wTXpjMklEQXVOemd4TXpZM0lEQXVORFF3T1RFNElEQXVPREV3TmpreklEQXVORFV5TnprMldpSWdabWxzYkQwaUl6RXhRVGhEUmlJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU5EYzNNamswSURBdU5qQXlNekF5UXpBdU5EWTNOemdnTUM0Mk1qZzVNalVnTUM0ME5qSTFPVGdnTUM0Mk5UYzJNRGdnTUM0ME5qSTFPVGdnTUM0Mk9EYzFNREpETUM0ME5qSTFPVGdnTUM0Mk9UYzBNak1nTUM0ME5qTXhOamtnTUM0M01EY3lNVEVnTUM0ME5qUXlOemtnTUM0M01UWTRNelZETUM0ME5qQTNOalFnTUM0M01UUTBPVFVnTUM0ME5UYzBNamNnTUM0M01URTNOelFnTUM0ME5UUXpNallnTUM0M01EZzJOek5ETUM0ME1qa3dORFlnTUM0Mk9ETXpPVFFnTUM0ME1qa3dORFlnTUM0Mk5ESTBNRGdnTUM0ME5UUXpNallnTUM0Mk1UY3hNamxETUM0ME5qRXdOalFnTUM0Mk1UQXpPU0F3TGpRMk9Ea3hPU0F3TGpZd05UUTBPQ0F3TGpRM056STVOQ0F3TGpZd01qTXdNbG9pSUdacGJHdzlJaU14TVVFNFEwWWlMejRtSTNoaE96eHdZWFJvSUdROUlrMHdMall3TmprNElEQXVORFU0T0RaRE1DNDFOelUxTkRZZ01DNDBOek00TXpZZ01DNDFORGMyT0RjZ01DNDBPVFV4TURRZ01DNDFNalV3TXpJZ01DNDFNakV3TXpWRE1DNDBPREl3TVRZZ01DNDFNVE0zTkRJZ01DNDBNell5TXpjZ01DNDFNalkyT1RZZ01DNDBNRE13TXpjZ01DNDFOVGs0T1RaRE1DNHpPVEV3TXpjZ01DNDFOekU0T1RVZ01DNHpPREV5TkRZZ01DNDFPRFkxT0RRZ01DNHpOelF3TkRrZ01DNDJNRE13TTBNd0xqTTJORFV3TWlBd0xqWXlORGcxSURBdU16TTVNRGMwSURBdU5qTTBOems1SURBdU16RTNNalUwSURBdU5qSTFNalV4UXpBdU1qazFORE0xSURBdU5qRTFOekEwSURBdU1qZzFORGcySURBdU5Ua3dNamMySURBdU1qazFNRE16SURBdU5UWTRORFUyUXpBdU16QTJORElnTUM0MU5ESTBNelFnTUM0ek1qSXlNRGdnTUM0MU1UZzNOU0F3TGpNME1qQTFJREF1TkRrNE9UQTRRekF1TkRFek56Y2dNQzQwTWpjeE9EY2dNQzQxTWpFM05UZ2dNQzQwTVRNNE16Z2dNQzQyTURZNU9DQXdMalExT0RnMldpSWdabWxzYkQwaUl6RXhRVGhEUmlJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU9USXpOekVnTUM0ek16ZzVNekpETUM0NU1EVTNNeUF3TGpNeE1qZzRNU0F3TGpnNE5UQTNPQ0F3TGpJNE56ZzVNU0F3TGpnMk16RTNNU0F3TGpJMk5UazRORU13TGpZMk1qUTVOeUF3TGpBMk5UTXhJREF1TXpNM01UUWdNQzR3TmpVek1TQXdMakV6TmpRMk5pQXdMakkyTlRrNE5FTXdMakV4TlRNM055QXdMakk0TnpBM015QXdMakE1TlRBd01EZ2dNQzR6TVRFNU9Ea2dNQzR3TnpZMU5ETXhJREF1TXpNNE5UazFRekF1TURZeU9UWTNNeUF3TGpNMU9ERTJOQ0F3TGpBMk56Z3lOVGdnTUM0ek9EVXdNek1nTUM0d09EY3pPVFE1SURBdU16azROakE1UXpBdU1UQTJPVFkwSURBdU5ERXlNVGcxSURBdU1UTXpPRE16SURBdU5EQTNNekkySURBdU1UUTNOREE1SURBdU16ZzNOelUzUXpBdU1UWXpNRGd5SURBdU16WTFNVFkwSURBdU1UZ3dNak01SURBdU16UTBNVGcySURBdU1UazNORFV6SURBdU16STJPVGN5UXpBdU16WTBORFExSURBdU1UVTVPVGdnTUM0Mk16VXhPVElnTUM0eE5UazVPQ0F3TGpnd01qRTRNeUF3TGpNeU5qazNNa013TGpneU1ETXhOU0F3TGpNME5URXdOQ0F3TGpnek56WTBOU0F3TGpNMk5qQTNNaUF3TGpnMU1qY3lOaUF3TGpNNE56a3lNME13TGpnMk5qSTFOQ0F3TGpRd056VXlOU0F3TGpnNU16RXhNaUF3TGpReE1qUTBPQ0F3TGpreE1qY3hNeUF3TGpNNU9Ea3hPVU13TGprek1qTXhOU0F3TGpNNE5UTTVNU0F3TGprek56SXpPQ0F3TGpNMU9EVXpNeUF3TGpreU16Y3hJREF1TXpNNE9UTXlXaUlnWm1sc2JEMGlJekV4UVRoRFJpSXZQaVlqZUdFN1BDOW5QaVlqZUdFN1BHUmxabk0rSmlONFlUczhZMnhwY0ZCaGRHZ2dhV1E5SW1Oc2FYQXdJajRtSTNoaE96eHlaV04wSUhkcFpIUm9QU0l3TGprek56VWlJR2hsYVdkb2REMGlNQzQ1TXpjMUlpQm1hV3hzUFNKM2FHbDBaU0lnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01DNHdNekV5TlNBd0xqQXpNVEkxS1NJdlBpWWplR0U3UEM5amJHbHdVR0YwYUQ0bUkzaGhPend2WkdWbWN6NG1JM2hoT3p3dmMzWm5QZz09O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iNyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSIxODQiIHk9IjIxOCIgd2lkdGg9IjEwNSIgaGVpZ2h0PSIxMDEiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjgiIHZhbHVlPSJCbHVldG9vdGggcG9ydCIgc3R5bGU9ImlyLnJlZj1jNzdlYmQ3Ni1jNmM1LTRlZmMtOGNlNy0xMjk0MGI4YTIwZjk7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtQkxVRVRPT1RILVBPUlQ7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUIzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWlCMmFXVjNRbTk0UFNJd0lEQWdNU0F4SWlCbWFXeHNQU0p1YjI1bElpQjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaVBqeHpkSGxzWlQ0Z0lDQWdMbWxqYjI0dFptbHNiQ0I3SUNBZ0lDQWdJQ0JtYVd4c09pQWpNVEZCT0VOR095QWdJQ0I5UEM5emRIbHNaVDQ4WnlCamJHbHdMWEJoZEdnOUluVnliQ2dqWTJ4cGNEQmZNakkyTjE4eU1qWTRNU2tpUGp4d1lYUm9JR1E5SWswd0xqRTNORE14TmlBd0xqSXhNamcyTmtNd0xqRTNORE14TmlBd0xqRTVNVGN4TVNBd0xqRTVNVFEyTnlBd0xqRTNORFUyTVNBd0xqSXhNall5TWlBd0xqRTNORFUyTVVnd0xqYzROekl4TVVNd0xqZ3dPRE0yTmlBd0xqRTNORFUyTVNBd0xqZ3lOVFV4TmlBd0xqRTVNVGN4TVNBd0xqZ3lOVFV4TmlBd0xqSXhNamcyTmxZd0xqYzROelExTlVNd0xqZ3lOVFV4TmlBd0xqZ3dPRFl4SURBdU9EQTRNelkySURBdU9ESTFOellnTUM0M09EY3lNVEVnTUM0NE1qVTNOa2d3TGpJeE1qWXlNa013TGpFNU1UUTJOeUF3TGpneU5UYzJJREF1TVRjME16RTJJREF1T0RBNE5qRWdNQzR4TnpRek1UWWdNQzQzT0RjME5UVldNQzR5TVRJNE5qWmFJaUJqYkdGemN6MGlhV052YmkxbWFXeHNJaTgrUEhCaGRHZ2daRDBpVFRBdU1UZ3pNVEExSURBdU1qSXdOakpETUM0eE9ETXhNRFVnTUM0eU1EQXdNellnTUM0eE9UazNPVElnTUM0eE9ETXpOU0F3TGpJeU1ETTNOaUF3TGpFNE16TTFTREF1TnpjNU5ETTFRekF1T0RBd01ERTVJREF1TVRnek16VWdNQzQ0TVRZM01EVWdNQzR5TURBd016WWdNQzQ0TVRZM01EVWdNQzR5TWpBMk1sWXdMamMzT1RZM09VTXdMamd4Tmpjd05TQXdMamd3TURJMk15QXdMamd3TURBeE9TQXdMamd4TmprMUlEQXVOemM1TkRNMUlEQXVPREUyT1RWSU1DNHlNakF6TnpaRE1DNHhPVGszT1RJZ01DNDRNVFk1TlNBd0xqRTRNekV3TlNBd0xqZ3dNREkyTXlBd0xqRTRNekV3TlNBd0xqYzNPVFkzT1ZZd0xqSXlNRFl5V2lJZ1ptbHNiRDBpZDJocGRHVWlJR1pwYkd3dGIzQmhZMmwwZVQwaU1DNDRJaTgrUEhCaGRHZ2daRDBpVFRBdU5EYzBOelk1SURBdU1qa3hNVGMzUXpBdU5EZ3hNRGdnTUM0eU9EZ3lOelVnTUM0ME9EZzFNRE1nTUM0eU9Ea3pNVFFnTUM0ME9UTTNOellnTUM0eU9UTTRNelpNTUM0Mk1UZ3lOeUF3TGpRd01EWXdOVU13TGpZeU1qSTBNeUF3TGpRd05EQXhNaUF3TGpZeU5EVXhOQ0F3TGpRd09EazVPQ0F3TGpZeU5EUTNOaUF3TGpReE5ESXpNa013TGpZeU5EUXpPU0F3TGpReE9UUTJOeUF3TGpZeU1qQTVOeUF3TGpReU5EUXhPU0F3TGpZeE9EQTNOU0F3TGpReU56YzJPVXd3TGpVeU56YzROQ0F3TGpVd01qazROMHd3TGpZeE9EQTNPQ0F3TGpVM09ESXpNVU13TGpZeU1qQTVPU0F3TGpVNE1UVTRNaUF3TGpZeU5EUTBJREF1TlRnMk5UTTFJREF1TmpJME5EYzJJREF1TlRreE56ZERNQzQyTWpRMU1UTWdNQzQxT1Rjd01EVWdNQzQyTWpJeU5ERWdNQzQyTURFNU9TQXdMall4T0RJMk5pQXdMall3TlRNNU4wd3dMalE1TXpjM01pQXdMamN4TWpFd05rTXdMalE0T0RRNU9TQXdMamN4TmpZeU5pQXdMalE0TVRBM055QXdMamN4TnpZMk15QXdMalEzTkRjMk5pQXdMamN4TkRjMk1VTXdMalEyT0RRMU5pQXdMamN4TVRnMU9TQXdMalEyTkRReE15QXdMamN3TlRVME9DQXdMalEyTkRReE15QXdMalk1T0RZd00xWXdMalUxTlRjM09Fd3dMalF3TkRZMU55QXdMall3TlRVMU9FTXdMak01TnpFeElEQXVOakV4T0RRMUlEQXVNemcxT0RrMklEQXVOakV3T0RJMElEQXVNemM1TmpBNUlEQXVOakF6TWpjM1F6QXVNemN6TXpJeUlEQXVOVGsxTnpNZ01DNHpOelF6TkRRZ01DNDFPRFExTVRZZ01DNHpPREU0T1NBd0xqVTNPREl5T1V3d0xqUTJORFF4TXlBd0xqVXdPVFE0TTFZd0xqUTVOalEzT1V3d0xqTTRNVGc0T0NBd0xqUXlOemN3T0VNd0xqTTNORE0wTWlBd0xqUXlNVFF5SURBdU16Y3pNekl6SURBdU5ERXdNakExSURBdU16YzVOakV4SURBdU5EQXlOalpETUM0ek9EVTRPVGtnTUM0ek9UVXhNVFFnTUM0ek9UY3hNVE1nTUM0ek9UUXdPVFFnTUM0ME1EUTJOVGtnTUM0ME1EQXpPREpNTUM0ME5qUTBNVE1nTUM0ME5UQXhOemRXTUM0ek1EY3pNelpETUM0ME5qUTBNVE1nTUM0ek1EQXpPRGtnTUM0ME5qZzBOVGNnTUM0eU9UUXdOemtnTUM0ME56UTNOamtnTUM0eU9URXhOemRhVFRBdU5UQXdNREF6SURBdU5EYzVPRE0xVERBdU5UYzVNVFF6SURBdU5ERXpPVEEzVERBdU5EazVPVGd6SURBdU16UTJNREU0VmpBdU5EYzVPREU1VERBdU5UQXdNREF6SURBdU5EYzVPRE0xV2swd0xqUTVPVGs1T1NBd0xqVXlOakV6TTB3d0xqUTVPVGs0TXlBd0xqVXlOakUwTjFZd0xqWTFPVGt6TlV3d0xqVTNPVEUwTVNBd0xqVTVNakE0TlV3d0xqUTVPVGs1T1NBd0xqVXlOakV6TTFvaUlHTnNZWE56UFNKcFkyOXVMV1pwYkd3aUx6NDhMMmMrUEdSbFpuTStQR05zYVhCUVlYUm9JR2xrUFNKamJHbHdNRjh5TWpZM1h6SXlOamd4SWo0OGNtVmpkQ0IzYVdSMGFEMGlNQzQ0T0NJZ2FHVnBaMmgwUFNJd0xqZzRJaUJtYVd4c1BTSjNhR2wwWlNJZ2RISmhibk5tYjNKdFBTSjBjbUZ1YzJ4aGRHVW9NQzR3TmpBd05UZzJJREF1TURZd01EVTROaWtpTHo0OEwyTnNhWEJRWVhSb1Bqd3ZaR1ZtY3o0OEwzTjJaejQ9O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iNyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSIzNSIgeT0iMjA5IiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjM5IiB2YWx1ZT0iRW1iZWRkZWQgU3RvcmFnZSAtPiBJb1QgQXBwbGljYXRpb24iIHN0eWxlPSJpci5yZWY9ODM1YTM2ODUtMTRmZS00MGU5LTk5MjQtNmI2YmRiNzM0NjBiO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtleGl0WD0wLjc1O2V4aXRZPTE7ZXhpdER4PTA7ZXhpdER5PTA7ZW50cnlYPTAuNzU7ZW50cnlZPTA7ZW50cnlEeD0wO2VudHJ5RHk9MDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iNyIgc291cmNlPSIzNCIgdGFyZ2V0PSI0IiBlZGdlPSIxIj48bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ij48QXJyYXkgYXM9InBvaW50cyI+PG14UG9pbnQgeD0iMzA3IiB5PSIxNTEiLz48L0FycmF5PjwvbXhHZW9tZXRyeT48L214Q2VsbD48bXhDZWxsIGlkPSI0MCIgdmFsdWU9IkVtYmVkZGVkIFN0b3JhZ2UgLT4gT3RoZXIgZGF0YWJhc2UiIHN0eWxlPSJpci5yZWY9MGRiYjY4MmEtMDY4MC00OTg3LWI3NGEtNmViMjA2Yzc0MmVjO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtleGl0WD0xO2V4aXRZPTAuMjU7ZXhpdER4PTA7ZXhpdER5PTA7ZW50cnlYPTA7ZW50cnlZPTAuMjU7ZW50cnlEeD0wO2VudHJ5RHk9MDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iNyIgc291cmNlPSIzNCIgdGFyZ2V0PSIzNSIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+PEFycmF5IGFzPSJwb2ludHMiPjxteFBvaW50IHg9IjM0NSIgeT0iMzgiLz48L0FycmF5PjwvbXhHZW9tZXRyeT48L214Q2VsbD48bXhDZWxsIGlkPSIzNCIgdmFsdWU9IkVtYmVkZGVkIFN0b3JhZ2UiIHN0eWxlPSJpci5yZWY9NTI1ODU5ODYtZTEwYS00YTU5LWJmNTEtOTEwZjc2ZGJkNmU1O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0ZGMzMzMztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWVtYmVkZGVkLXN0b3JhZ2U7aW1hZ2U9ZGF0YTppbWFnZS9wbmcsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU1nQUFBRElDQVlBQUFDdFdLNmVBQUJxakVsRVFWUjQydTJkZjl6MmR6bi9yei82WTMvMHh4NlA5dERTTUFxamZRa2hoQWhSR0lycEI4T2lxRXlTcGNuU2FQM0FNQmxLaTFHU2ZsbFpESGRaM0JTTkZpc3JkNnlNTnQzVnlxcFY1L2Z6L0xpZTkrTzFZOGY3YzE3WDNYMXY5MzNkMS9sNGZCN25lWjNYNS96OGVIK08zOGZyT0k2TmpkM1hZWHV0VnFzVHB1MCswM2JHdEoyN3VWMHdiUmR2Ym5zMnR5dW5iVi9aM3JENXY4dGovMmR0SHVPY2FYdll0TjE3Mm83ZlhlbmQxNUhNQk1kTjI2blRkdHEwbmIxSnlIdW5iZi9xdG50ZFAyMVhUTnRGMC9iNGFYdmd0SjB5YlhmWWZVSzdyOXVhSVk3ZlpJWUxwKzJxMVpIOXVubFRPNTAvYmZlZnRqdnVQc0hkMTZGbWlEdHVFdGV6Tm9udGFIN2R2S25kenB1Mis2TDlkcC93N3V0Z21PS2VtMFMwZDVPb2R1cnJwazAvQjUvbTdydFBmdmUxeEJRbmJkcnZWNjZPM1JkK3pDTUpMdXhTeE81TEI1dG8wR1U3WEZNY2pHWjU4YWF2dGV2b0g0T01jYi9OYU5PTnU3eXdwUWdaQVlsNzcxTE96bWFLTzJ4cWl4MXZRbjM4NHgrLzFkOTE2MzZ6aGYzd1YwN2JwYWFkeHhnazZxN1o2VXpoOXJHUGZld0FjZnZkUnovNjBRUGZkMHhROTEvREtGZnVNc3JPOEMvT21yWnJqd1U3YUVUWU1nWHZ5U0F3VEdXUTNLL3VQM2hkdlNsOGR2MlVvNGd4anQ5a2pPdU9OVk9xRW5yZGIvLysvYXZYdk9ZMXExLzZwVjlhUGVFSlQxajkxbS85MXVxYWE2NDV3QXdmL3ZDSFZ6ZmZmUE4yR01RWDJ2bk0zYnpLa2M4Y1o5N0dFSS9ibkJrNnM2Z3lCeStJKzZhYmJscTkrOTN2WHYzcG4vN3A2aG5QZU1icU83L3pPMWVubm5ycTZqTSs0ek5XSjU5ODh1b3VkN25MNml1KzRpdFd2L2lMdjdoNjYxdmZlaXZtU0xOc2k2OXJkMDJ2STVNeDdyV1oxTnZ4NWxNU0xRU3RxZVRyUXgvNjBPcnRiMy83NmxXdmV0WHE2VTkvK3VxTU04NVlmYzNYZk0zcW52ZTg1N3g5d1JkOHdlcmU5NzczNnN1Ly9NdFhYL3pGWDd6NndpLzh3dFhuZi83bnI3N2xXNzVsOVlJWHZHRDFILy94SC9NeDJUN3lrWS9jU29Nc09mcnh1bXczOFhqa21GTVg3dVFjUnZvRk1BUkVLNU1vOGZsdTM3NTlxMWUrOHBXcnB6M3RhYXZ2L3U3dlhuM3BsMzdwekJCZjhpVmZzcnJQZmU0emIxLzVsVjg1YXd3M21NVFBNQXVNZ3BiNXd6Lzh3OVY3My92ZW9UK3pMaUlXdVpSemQ4MnUyNDg1SHJhVC9ZeEttRXIwOUMwKzhJRVByUDd5TC85eVpvcHYvZFp2WFgzTzUzek82ck0vKzdOWFgvUkZYelFUUFV6eDFWLzkxZk5ubU9PcnZ1cXJEakNMLytjZERmTzFYL3UxczJiQi9QcmN6LzNjMVZsbm5iWDZ4My84eDZHSnR3MUd3VCs1L3k3RjNuYU1jY29tSkdMSE8rRHBEL0NDU2Q3M3Z2ZXQvdVZmL21YMW5PYzhaemFmUHUvelBtOTE5N3ZmZlg2LzE3M3VOV3NGVFNnWmduYzJtRVJONHViLytQN0x2dXpMWm9iQzdMcmIzZTQyYTVWZitaVmZXZjNYZi8zWExVeTVVY1JyemV0bHdIbDJLZmp3TXNmWk84bWMyb29KQTJIKzkzLy85K3JLSzYrY2ZZUWYrWkVmT2VCVFlCSWxBMGpvTW9LYnpESGErRCthUk1iaW5iOHh6ejdyc3o1cmRmcnBwNi8rNkkvK2FMNk95cncxdjdMbUJYTGhqRjFLUHZTTWNjS200N2ZqTklRT2NjMUxvQ25lK01ZM3JwNy8vT2ZQVEhHLys5MXYxaEwzdU1jOVp2OGlDUnlwbjFwQ1h3TmlyeG9qdHpTMS9DeURxRTM0SGtZayt2WERQL3pEcTcvKzY3OWUvZS8vL3U4QkJpRW9rQXl5UldhNWVMYzI1ZEF4eDMyT3RtVGZFbkZVdjZLYUp2L3pQLyt6dXV5eXkxYVBmZXhqVi9lOTczMW5jd2ZHd054SjRrN0Nya3dnc2J2UGlFSFNZUjl0NmNqajI4QTQ1NTEzM3VxZDczem4veFdZYkFZS0RDMVhqYmp3b3RqczFGMEtQMFpOcWhHVFNEZ1FGcC9KVlZ4Ly9mV3paUDZwbi9xcDJWbkdmRUppd3hUOFhTWDl5SnhhTXFOR0RMVEVHRENEREtKRzRacE9PZVdVT1N6ODZsZS9lblhqalRjZTBINWQ3bVNOSnRrMXVZNDFrMnFVTTBpQytlQUhQempuRzY2NDRvclZNNS81ekRtMGlvTk5CQXJtd01TQkFkQWdFbXYxR2FxZnNjNlVxdi9maXRiZ1hUTXRUVEIrajZuMy8vN2YvMXM5N25HUG15TnBob1dYb0NvTHpMSnJjdTFrazJxcllWRE1KNkFldi96THY3ejZ3Ui84d1puUXNlOWhDaVF6VWpxMVFwcEpOUXExRmFib2lMOGVmNnZhSkpuRWE0R3BZUkkweTgvOTNNK3QzdmEydHgwd3RkUW0yd2dINzVwY1cyQ08wNDlHazZxR1BaTUlJSkovL2RkL1hmMzJiLy8yNnFFUGZlak1CR3c0MmthUDFCWVNvZ1FvZ2FibVdJcEtaVEt3bWtqSklFbnNIUU9sYzEvMzgvd3doZWZpWG1BVUFnbC84QWQvTUp1TjNudjFTOVpvRWt5dSsrNXlRczhjWisyRTZCUytCWFk1bWUyWHZleGxxOGM4NWpFekFYMzZwMy82YkpaZ1BobDVJbHlibWlDSnI1cFIxYnhhMnRJODZoaWttbDdkVnBteUpoamRQQWNNampiOGxFLzVsRG5hOVEvLzhBOXp0Q3MxeWhZalhBaklCKzF5eEMyWjQxbEhFMUsyKzk0RTNzdGYvdkxWazU3MHBOVURIdkNBMlhRaXUwMzBCMktEaU5pNmtLeEVPV0tBZE16WG1WWkxQa2FlWngyemRlZEpzNnVhWHJ4amR1SEVjNTgvLy9NL3YzckxXOTV5SUNDeHhDRGxPNWprckYzRytMOWlwb3R2NzdxSjBmOUhRTUhVRnU5NHh6dG1wbmppRTUrNCtyWnYrN2FaNlBBbjBCcG1zMlVNTklQdkVtZEdvNVlJVm8yajJkUnBsQ1Q2Tk0rcVpuQS96YVNxVlphMFZXZWFwVk52eEl2d05KRzQwMDQ3YmZWN3YvZDdjNlN1VzlzMTJ1VzhZNWs1N3JnSlA3amRzdGVkVnFqK1JCZVpldi83MzcvYXMyZlA2cWQvK3FkbmdqZWlveFExRXkyeFFZaVp6Sk00M1pKb3Q2TkJrcmtxUVhjWjlYb3N0Vmt5VTJXNHpzd2I1VW5Tck5PVTVIdTA2RU1lOHBEVjNyMTcyN1hPWEVxalhTNDY1Z3F5TmxHNFY5eWVEdlZTZlFVUExLSGtnQVJoQ2pMYnYvQUx2N0Q2bnUvNW5sbENmdVpuZnViTUdCQUVEbXJpb0hTK0srRUxJS3dNSTdHbmhzbmZwSU84eEVUdW4vNkhuLzF0NTRUbjcvTmNIbXRkbEN2dk85LzVQUm9WSHd5b1BjREtmL3UzZnp0Z2RsbWtWWkVFNWZYaVl3WVZ2Sm5qdVBwSXdUOTFKcFloU3N5QzE3Lys5YXZuUGU5NXEwYy8rdEdyci8vNnJ6K0FnY0tNa0RBbGFvaWlFbmhsRUJtbjdpT0JqaGhuWFZaOGxQdElSdkgzRXE3L3E3K1I4TlV1Nnhpa01wdmhhbXRPaEs2SUNuandneCs4ZXVFTFh6aXZMK3NzazZ4eDRLL1k4VXl5YVZiZExwcWp3d3QxZGk4Skw1aUNzQ3dSS094K0hqTE9KdzlaWXRhZnFHWkxaNkowWWRyMFE5TFBxTWVxK1krYVJWK0tkcVg1bElSZkNiNXFrc3pZMTN6TUtPS1YrK2J4WlE0MzlrR1RzRDN5a1k5Y3ZmYTFyNTNEd2hrUzdrTERvVW51c0ZPWkE0ZjgwdHRMYTZqR3Uxd0YvNk1LNzVKTExwbUJnVHhnL0FxMGhjREFsUElWSURnaStFckFTV1RwSUZjZm9OTXVsWkVxZzJTK3BNTnNlUTZJTk0ydXZLYXFhZExmV05KZTVsenFjVWYraVg0YVpiOHd5bE9mK3RRNTJDRnpXUGN5S1BlOWFLY3l5Q1dIMGtSYXltU1BvT1F1dkJnbzZoeW8xMzdLVTU2eSt1WnYvdWE1VUlqSWk1cENMZEZGaWpybVdJcENMVW5oSlFMc3RGQW1HRWNhSklrM3RVVks4eVdDVm9QVTBIQjNyWm1Zck5Hc1BIYitqZUNCU1dBUUlEWkV1NmlJSkZ5ZW1maUI0MzdlVG1PT0N3NEh2bWtyT1l2Y0Y2WUFEdkhuZi83bnEyYzk2MW1yQnozb1FiUHBoRzJNR1pXT2JLY3BPbE9uKzd6T0wraE1ueVM2R3QzcW1DYXZkYXQrU1RLTnZrZVgvRnZLc2xlenFwcDlWVnZVUUVIK2JUa3dmK09iRU8wNjg4d3o1d2doeWRZMVBzbFpPNFU1empwVVdxT0xtUzgxUXZNMzExNTc3YXdwTHJqZ2dobnVvZVNDT1hqQStCa1NaR2ZYYjhXL1NQTm9GS0pOcGx1WHZSNlpXSjJ6dngzbXlGRHhrbWFzSUVrMVFnZUFyREFWdFlVK1J6WHg4djlHdi9qTTg4QzA1WmcwbkNEeG1qNWtob0tuN2VqUHVHL1dqUjhTQjN2VUFLMHIrVFEwKzgvLy9NOXp5U2hOREhnUWdnTFRCOGljUU9ZbVJpV3E3cmZFQkowWlV2TWY2d2g0eVp4TFgySTdrYTFSeUhpZHo1T2g0eTc3WHgzNU5LZHE4VmJWTGgyVG9WblFKbHdMZmlIb1o3RmQyV2xsZXVZM0g3WFlyZFgvTllpKytWQXlTR1dHbENnNDJ1UXEzdld1ZDgyQXVSLzRnUitZRjF1b1J6WXZTRWM1ZlkyYW4xZ24wZXZ2L08xSUs4Z1lGYjYrbEJpczVoM242eUpMNjQ3VitVTDFXcmZMSU5YOHFnNDVRa2xmWTFSbllwUXIvN2EySHJPTEpoS1BldFNqWm13WEpuSVQ1YnJ4cUVNQlR4ZDg0cUhzT0ZMTnA0eEd2ZWM5NzFtOStjMXZYcjNvUlMrYU8zR0FnY0o4d3RsbXNTRW9UQ2dKTXdrNTM2dm1HRW4vVHFyWDMzVEVtNS9YbGNLT3ppR1JJbUdOcmxYRTcxWTB5S2pjdG02amV4cEJUZEsvcWM2NVc5VWczbzlyVXBuSWlDTHZOTCtqd1IxNWt4S3l2K3FvcVNmWkRPZGUvb2tBQWtkMnB5L1VMQzB6NmQ5RUZkNjNmL3Uzend1STVGRWlwWm1Ta2owWm9vTjlMREZJL2UwNllreFRLazJTRGxXN3ptZmhIVUxDaHpyLy9QTlhqM2pFSTI3RktCMzhaS3QrU1pwQ28veklPaXhXUFVZMXQycmtMTFZHMWU1WkY4LzFZUVdnVVFpc1lIYUo3WXJrN3NWSEM0T2N1NDFXbGJkZ2hvUWJkTDZGOWRxZ1piL2hHNzVoamo2eGNCQktSbjkwZ2xOU2o4S3kyOTA2Skd6blNIZkF4SnBRNjQ1YkNkVDlZQVJDb2E5NHhTdm03aUovKzdkL3Uvcis3Ly8rQXhXSUVsUXRzS3FFWFczL3FxRzZxRnFhWDBzWjljb2dGZjNiTVZidXk1YWFwbU5HbmpYMy9QQ0hQM3hlQTJsbnM2SGVHVWU4MzBGMFlic01rblhhQ1RtZ1l3WW1GQ0EzMUt1NUN1RFVPTnVZVG1DZ3FOdE9hY3Yzd0VJNmRHcU4vQndzbzFSSHV6cTliZ2x2OTMvSklGMVFBQ0xnL3RqOEhvSWhzLy9zWno5N2JqNTk0WVVYcnM0NTU1eDVYelJuQ29TdXNLb3lTSWF3YTNoNVZNWXJBOWU4U1dwR2lUczErUWpjMk9HMmxxRDZDQW12eXlaNVFPcEo4bTdtdUk1Y2Z3Uy9ZeUxxNjVaaTExc1o3QUtqWEhmZGRhdlh2ZTUxYy9meEgvcWhINW9KSHZ3VEdpT1RlQmw5U2lMVTc5aXFwa2lDcnViVzBtOUczL0VPMDdMVlkwbklmT1lhVXlvclBYL2lKMzVpOVdkLzltY3pUSnlPaWZiUUJVNlB3d3FqOFA1ZDMvVmRzNi9GLy9DOTBLcHFrNlVpcWRSa0thblgxWUtzTXhjenRGdUx0V29Tc2pydGhwQ1g5czAxNG5zMENVeUNpWTNaaFdZOUl2MFIvSTdwd2k3ZlltUGpOdkZIQmhWTjhkem5QdmRBSHlna294aW85QjhnUEJtZ1lwdVdDTDJHZGtlTXNiUjF0UlJkYVd5Vnlxa0pkRXhCQXNQNFNFYk5oKy80anUrWUh6YkpNcnFHSUNHNVY1aUEvUWxBOEh0K0EzUHdONk1NRUNoLzhSZC9NVE9PU2M5cTduU2gzazRUTERuMW5VbmxQbXFOdW4rTlhOVndyNlpoTmJ0R3lPSGN4M1hrbnFueko5OTEwMDAzWFh4RStoMVZFMlFsV2RkS244K1VwdjdPNy96TzZ2dSs3L3ZtbStabURmTjE0ZFFLRnR5cTFGK0NqWFNtVnBwSWVaNmxzRzluTW5WK0VROFZhWThtSUhPY2NIR2NVQUlQMUpvOCtjbFBYdjNrVC83a2ZDeE1DckJMbi9acG56YTNCUVZxai9Ra3gzUFJSUmZOUlZ0QU5jajdmTk0zZmROOGpzeVhkTDdCQ0k1U3NWZzFHbGROdHNvSUZWWEF2WTNnTmNrOE5TUmNOVWc5WjVwei9KWXVrRVM4ME1BVFhaMXhwRERIdlVqWWRNeGhPQzdqMXRRcFkwTGhiRC8rOFkrZkNZY2JZK05Hay9DelJEVUp0cFBzU3pEelVaUnFLZC9SNVVVNjMyVXBWS3pOcmwva1E4WS9RbFBpWDlFZ21tcEU5a1ZMUU5qM3YvLzlaMGFoSFJESG9jNmIzOEl3ZEEvaGVHZ09pT0Vidi9FYjUvQTJhM24yMldldmZ1ekhmbXcrUGd5bFdjcStWamhtbVd5YVdSM0N0L29jWGJZOTYwRE1qS2RQbHVmc1RLNzZYZlY5UnRmWEFTSHRLL3pKbi96SkNJa2JKeFAxcENQQnRIckRxTCtzbitsQ2ppTkYveVJNQm14bmJ0NTVGWFlZWDJjcXJkdXFRN3dkQnVuMkg5VnVkNXFwU3pKQzdHejZUa3JyNy8zZTc1MmQ3Ti85M2QrZC9Rd0NFREFGNjRHZ29CazFuOUdtYUEwaWRjQmt5QUg4MHovOTB3eXU1RnlhWEJ3WHJZRy9nbWxLRUFQQ0FxNkJIOGQ2cTVXN1pnNmRTYVAycTFHdkxpRllJMjhaRWN2SVd1ZXcxMGhXaDFNYk5hRG9mSk0wWHljVDlHVzNONE04Y2xSOGhBYkJmUHJqUC83ajFjLys3TS9PRFpDdExqTjJyeStSMHIvVEZDT3RVUW0vU3U5Ui9tSTdUbnRYUTk2RmNtdDVLOTloUW1IMi9QcXYvL29zNmZVTkh2akFCODdCQitvaDhMY3dMeUZncXU1NHlEeGdpQnpHZ2xIUUpqQVJFU3hNS0lRTURFRmVBSVpDdzZBeCtBME14YkZZODcvN3U3K2JrNmd3Q1owUTllZEdoTmFGZWRjMWlLaStSV2RDVmFjK2ZZOEtPK25nS0VuOFcybVJxbG0zaWUyNi8rM0ZIQ2RNRExHL05qTEFyTUpoSkpsRjNCNDdtWWNIY1hEeE90bWRXWlJtRll5VFcvb0NYU1JKTXlhMVNDWDBycVBJaUVuY3YydTRZR2JlL0lSVG0yemp3OE9FNkYveWtwZXNycnJxcXJtdEtLV20vSVl3TllTdFk4NjZzRVpvalljOTdHRnp0OFcvK3F1L21zdDZMU3ppbkdnZEhIQ1lpdnB1bUFkL3hGa2dPT3lzTS92ajM4QWdJSmJSSWpBWDE4TTFjajZkV3A1RGh5aXVlSzJ1N3FRU3RwSS9mWjZ1N3FReVNNMndkMmpnRVdOMCs3Q3VIbTlUR0Y4elBiZmJ2aEp4WW95THN3OFU2di9paXkrZUh5QUxnWDNNUTFTYThqQlEvMGFma25CbGdpVGswVGJLZ0V1NGVmenFZRytWUVFRbHBvYXJZRVUySkQxRWh5RGdlek8vUEJ5Y2I1Z0NoeHVUaUp3RlpoVE1nS2JBVG9ZcFdLZVRUanBwWGh0S2UvL21iLzVtTnFQbzZ2NTFYL2QxTStHemozNEU3ekRZWGU5NjF6bThpWVppZjRxT1dHKzd2Nk4xeUxhendWemNpMzRlR3N4anBZOVhnWlpkVSt4OFQ4S3Q5ZXVWMkVmRW5iVXBYZFJyM2UrN3JIOWx1dW43YzI5VDVwaVk0ajZrK25Fd21Wbng0ei8rNDNNYzNwcGpIYVlrN0U0YjZIZU16S21xSFpZNmd4Z2xrckE3YzZzenM1YTBTUFVwc21zSkQ0QjcvdFZmL2RYWmpDRWtpeG1KUkZmcTQyUlRmdzJ4d2h3d0JJNHprU2RoOXhBdGE0Yi9BRUxnM0hQUG5kK0pYa0hJTUFoYWg4Z1Z2NGZCK0EzWFFnTUpaaEZTMy9MaUY3OTR6aTd6ZjVPcFBBK2gvZnlXKy9qTjMvek51VmZWUzEvNjB0bVp0dy93T2t4WCtpWFZuNmhhWXJ0aDI4NThHbW1SSmRPck1vWkJnMGtZM0RUUnhXMHpNM0hQbmoxM3VPU1NTNjRpV2dLQlFCQTJNVEEwVzZWdk1rUktlNUdwUzA3M3V2eUc5citTc0FzSDEvMlgvSkdPZ1Zoa2lNMzZFUjFCdENWYWsrRXlFQnkrQWVlSDRDRlN3NDRnVXRFU0VDMmpBNjYrK3VwNXd3eGk3VEI1V0VlUUFtZ2oxaFhpOWZjZ2s0bDBvVEg0RzZiaEdvaGU4VDBiRVM0WUZET0xFREFiSmhqbjVEZGNFNElNUnNJdnhQemo3elJ6cWovUmxReG5NNGVSczUzSFNLM1V0VEd0djYwMUpWblRYcjgzZ2xieFc3a0YwdUN5MjRSQnBvZDNscUZERmc0eklIc3N1VldOa2M1NE1zaUlLYnBRYjJXeUJQS05jaHhMREpJU3NVYlFaRjRXbUFRVURqSk90L2ZPNHFNRklES2tQYkYzQ0piZlE1aWYrcW1mT2pNRnhBa1RJTm5SQ0J5SHZBOFJMSngzRW9NNDR1d25JY01BYUF6TU1NNkpId01PRGFMbW1pUjZyaCttNFJqQ2NEZ3ZUSWJmd1c4NW51UFpNUHU0Vm9RYlRFV0xVQmhURFlYcHAwL1RNVVpYNDE2alR0VXY2WmhwbE5lb1ROUTU3VmxvVmZGbitiZjdDay9aRERrZjNoSFZrOU56NG5UU0cvVXAwblNxeEY1OWg4Njhxa3cwOGh1Mm0rSHVycUZMTXFaUGthbytaL2JoRUJOMHdNOTYwNXZlTkVlZllCQ2tQc3lDUTR5UXdJU0N1Smc5anZUSGxLR0xPOGVEUWRqd015QktDSmZvRmU5OFp4NElJb1dZT2E0RlF3UTdTQVRDVEhSYTRmY3dWSnBkZk9ZZGh1SmFNUGZJc2RCL0NzYmxtREFWMTRBcEJ6UEJyRndiRE1WNTBIN01TeWZhbFVSbGtpL0R2c2xBQ1ZYSnhGOFNlUWQxMzhyd25sRzcweTRLbGxHMWV2NzQvYldIMVdHZkRuNWVsY1Exd3JUa1lGZEc2ckxXMVZsUHpOVlNrckQrZndtRm0zL0Q2RHJYMnVRUWlGQnl0QUxFK1d1Lzltc3owWlBodGthQjhDcGFBbk1HQW9YWUlGQWNiSUlXK0NiNENSd0hEUUtCWnVLUTd3bkw4aG5peEovRG5FTGFvMFZnQkNKYk9Ob3dCcjI1SUdDUFpWZDFFNEpFYldCZ3RCUkRQZ252a2xqa25Qd0dVdzh0d2ZYQ01MeGJaNEdXb3JNSUNVd3o4WlZCYWlsdWRjYVRFVEpwT0lvNHJkdnFYSkpSK0pmekdERHBjanpsZkdjZUx1WTRmdHIyWjlSalhjU3AweGhML2tZU3VhT0pxeTh4Q3ZFbWc0NllvNE9rUTR5WUtiLy8rNzgvdzZjWmFJTlUxKzlBMGhKeUpVeUt6MEhTVFdmYm5sbWFNUkFyazJjNUJnU1BCaUdTQmVQQlVCQXA1aGVFQ29HaU5UZ09qamxhQ29haUk3d2dSQk9CRUFIWHhEV2pOZmllM3pCckJJSUd4TWgrYWdpdUZYTUtac0Z4NTMrY3krYlNNSWJSTWJRSkVUQ3VsUTJObGMwc09KZk5GU3F4ci9ORHNySEVra08rRG5lMUxzU2JwbFU5Zm5OZGhIMFBmVyt0NlNiUFRYTklQMk5rVW8yMnBTaFVyUkUzeXJYVTM3Ym1ManJtOE5nbTNoSmN4enZFQm5vV2dpTnNTcDJGeEtGVHJKU0cwUGdieURsVG9vZ2dRVkJJYy90bzhYdWtQa1NLaVlZSlJGaVcvem1oRnNiaW1EQVBFQkVZQ2FjZFV3ZUdoRUROcHJQQmdKcDJNQUIxSWVSWEFEVkM0QnhQVTgxOGlDMC9ZVVorUXdpWmFibjRJTjRmYTRCeno3Vmk5c0hnRUJQSHdXVGtlamtXKzJlOVNtZEtkWURHa2JtekJEbXBZZURxMzlRSVdJVzdWSE91WWNvekRyWDJPQTd0b2QvaGhsVFRsaCtaT3ZYN0NoeE1SdXNnNjZsNWx1ckEweS9xVEMwV21KQXIwbGI3RmlJa1lzVEFUQkN4NUN4KzVtZCtaaVltQ1VpaVErcXo4Umt6Q0ljWjZNemxsMTgrSitRNEo4ZER1NWdZaGFoTkFpTE42ZTNMTUIwaVdmd2ZBdVRCWVRiQlNPUXJlT2Y2SUdxTHdUVDNOQ1BRWkRBVjF5eWdrZVBBaURycWFBa2phREFoZmd3SlNMUWs4QlljZSsrUDMzQy9odW01WHRZU1ZESERPb25Rb1dtOGpscG5zcFUyUVVzUWtRd05WL3hWTlp1RTFkZE1mbzFlZGIyRFk5K3JEeldEbkZVZGJVMmc2bENQR0tUNkdUSld4eUFIQXplcFlkN0toQkErZGpZYmlUditCd0ZDMVBnTkVBeDVDOHdiQ0FFQ2c1bUlVaEVWRXFiQk80Uk1GQWlHZ2tEWmg0WG5OeEFiVWh2Q1ZBUGh5T1BEb0tYUU9FU3dPSitaY3ZaVCswQ2sraGpDY25Mai8xdzcwQlZNUXhnSzRzWDA0bjZJck1IZ0VJL2FCek9SNnlSWlNZNkY2K2JldURhWUdZYlFOMkdEU1dBK2NpeG9WWUNsM0c4NnhGMXo3WTQ1dW5tS1ZRTVlnY29BeVNpcm50R3E3ZFM5MThqWElZdG9vVDBtQXI2dVJwMUdZZHRSSktrajVHNW1SdjE5Ri8zcWZCMlJuTTc4RTcycWo0RlBRTU5rOGdEZ21TQlFTM2IxSDh4ZlFOd1FIZ1NOR1lXMmdIbllWeE1OelNQaWx2UGpXL0E5a2gyTkpETnhQVVM0K0o0TjFDM0VCNEZhR2VseERTSGI4Tm1BZ1RCdzN2bWZwaGZ2Tmx6alBKaGFKRzlwZDRTcEJxTnpQeHlmNitXZTJkQlk3RStBZ2M4TTRtU05EQXlZNDBHb3FGbUJ1WEIrODE2Y1U3TnJuWU85Tk9xdGFwQUVPVlp0VUtzVmwwQ1RYZmRJMTNEemYxY2VGdTNSTWNpb0VVTG5xQ2NPcTB2dUxjRklPa2RlUHdWaXhING00Z1NCNmxpeUdFaHdIamhSSUtKUzJPQktYU1FuSm9rMnQwazRwQzFKUUNRL0VoOEp6T0pDSEVoWmJYM2VUenp4eFBsY09QcnZmdmU3WitReTBTT09CeUZEcEZ3bkRJVVRqY2FDc0kxRTJkWEQzRXN5aUxIODNHUSttRWtHaDhDSlhIR3RYRGV3Rlh3THpnRWpjby9jbStCR29tZVluR2dJeTVyUlB1eVBadUdhTU0xWUo3U1ZFVGNZaVBYRFh5TGFKUnA3cXdOQk00U3JWSy81RTdWRUhhblE0YlpHaU9UNmU3OExCdm5FdFFqZS9yUmRNOHBscE1hbzFYU2owdGVSajlEQnhkTjV6eExXWkNwaDVUaTIrQVJVSm1McmsyT3dWbHRKWjJLVGE0SXhXQ3lrSktIWTFDZ3NKS1lXVWhOaVFNSVNiczNzT0dhUXM4eGhBcHhjd3NEbUxIRGlJU0NsTXZ0cjhzQllFTFVtVkQ3TTZwaFdlOXA5WFdQK0Q1RkN5QWdHTnV0RE1LMDArekNqekxOd2oyeUVyRWxhd2t5RXBna1VjSDZ1bWV2VjNPSjZDVEx3RG1QUXZwVXUrUFFmNDVwRUdBaEdYWnA5bUdIYnpJVFhSZzJqS0ZWWGhaaCtTOVUydFY0K0JjKzA3Zm1FR0dSeXdrK3ZDTnNSeW5YMGZRZE83Q0RxbFVrU3JwSkF1cFF5U2x3VzRFZC85RWRuNHFSdWduQWxrU2xOTEFpSWh3dGg2M1JEdEpnaG1DTzBFRUxxY2p5SWc5K0lkb1hJdVFZZFlDSTlFQlNNeFNJamNka2ZVd1V0eFhWWUtjajFjazRsUGtUcHVHZWxXVEpCRW9HTVV5RVhWUW82ZDRQamN2MW9TMHc2UThKb0Q2NEg3YUxRTUFDQmhvR2gwS3k4RXhMV0wrR2QreFYweWp2Q2hSQTJ6RVRTa25VdzRwWlo2M1dOOFdwVGlPcHNXMVZZQzdHcUNWWlJ3bDBVclBiYXFoQ1Y2WnJ2L1lsb2tFczc1M3VySWQxMUVhM3VmM1lwcVNGYmJzcDY3VXN2dlhTV2ttZ09ieHBIbWtnUnNCRGU4UTBnWGg2eXRqc0VhcVFHNllyRVJIc1FoY0l2Z1VBRUQwSllTRjBqVjBoVENJcHprMUZuaGdnK2hlUFhZRGdXSFlhQ2tMSm0zUFBuS0lWdW9JM0VvQjlpVFg1RnFYWU00OHh5OHlkbTVuSFlpYlNCL1NLQ0JTTndiL29Rckx2UlNNNXJzaE1RSnZmS1dvb0U0QnBZSTRTRWlVdnVWODBvWTR2aXJqQ1VVYzE3Tng2aHEwRFVIS3Z0a1VhaDQ3cFdYYVJyK3QrRkI4c2NKMHlMZDNPSGtkb3FNM1FWZCs2bmRzZ0tOUGVUOEJNU3drT0VtSEZDYVdwTUhnQ2IzcXBFOHdSS2FleGx6Q2lnRmlUaEFCVHlNSDNZVnZZSkI4ZC80VHo4RGdMU0FkWlBZSkZoUGhKcE9NTmtuOUZTWENQRUp2eERDV3pOaHlaYndqZEduUTJ0WVVBTDRSdlFMUktmUlFtZDVrRXhGVzdoMUl2ZzVYdTBCalVoQ0FNQ0ZWdy8rM0NQaHFCbEpyN2pONWlIYUZiYXVBSmI0UnBjRTYrRisrYmVXR1B1Rzhaam5Ra0pJOGpFZEtYV0grVXBFaXFTKzNVYW9QTkhxbGxWc1ZsVmM1VHQrb05LSE9LY2R6N0hWckxuMWF6cXNGb0phRXkvSTlVMG0wVkltREJJYkhJSU9NQThSSWhiZ3JlaWpvZk5RM053NUovOHlaL004Rzc4RWdnRUFyUzR5S1pyWXArd3M3a0d0TlFiM3ZDR21RRnNlbzJFUkV2QkpFaGx6bzFHY1pwckRjbW01S29tZ2FhaGt0Ly9jeDZnOElSVmNmVFprT1JPemhVRE5ZcjlKMEhZVnd0aWhmblpSQUt3VGpDRVVIck5LUDdHbCtHK0VRSXdFMEtKKzRYaE5WRlpYNWlMWS9BZDZ3QUNBT3lYMTJ6SGtiVC91NEtwTHZsWENibXJPY21JVnExNTc3VFNpREUzVGNQdE8rc1RFYjhoZllDUmViVGtmOVF0OHlaWmdLU1pnV3JIZjhBVW9LMm85cTJxbFVnTkR3TWlzb1NYQjhaeFlTRExMTmw0T1BnQk9LSXdGWnNTUHgxWEhqUVBtZThnVUh3TEVtbzBTNmFGRE9hRUlXQUl5R1FkbXhHcVd2aVROblpLUG9rRnd1VTZJRjZ1SFdsckFST01CM0Z5clJBb3dvQVFyWGtSR2JHcnFhZ2pCVVFPV1BuSXRiTmVtRkVJRDB3b012Rm9XWDZEa0dBZk5ETm9BRGFlQWI5bmZjejhjMTlxVjg2QkJ1WTZXVHY4T2o1and0b0F6eEIyTjhTbjYvUmVDNkZHZzRCR0RleGtuSUhHdU5XKzA3RmV2RjN0Y2FwUm8rMW9qNjRmbE16Q3NYQWcrU3dzUXdhUmtMQjNrVVQwZHlKSmhmVGltSnBRRUtPWUl4ODBqQUloWTNiaFI4QmtOcS9tdDBoOUhqaVNrOXlENFZsQ25EQWN4MkovcjRla0h5RmRFMnRFc25Sc2RmakZYcGxvN0dBTnRUWTdJMUJJYVlDRW1vb3dpc2VHQUxsT2hBQ1NtMzNWamhBZG9WakQyaU1idnM0cjF5blhKOE5jUlJBUjlVTVlrRmxubllUUklEQU1LbkJONUhoNEo4R0tKc2FuUWZod1BOYUJaNGpQeHpYam8vRFpaOEQxR2RyT3RScVpQUXJQVEFZbTBYZFJyR3E2WmRmNHpteXJmdEgwL1UzVHZaNndIZHpWK1puNDI2NURuc3lTenJmMUZTeGdQbWdYQm1LRUtDMENJa0hGd3NJSVBDU2ttRTYyNER1aVZoQVpHQ3BzZHNLeVJwZXNzUkJPUWI2Q1l4Q0owUnpBYkpOaCtRMmFDR0tCU0dFaTY3MlJoRDQ0eloyYTBjMkh3Q1l6S1FuNW0vdm5uQlF0c2RIUHl2Q3FSTVgxaW4vaSt0RjBNQXVCQWJvSGtwdXBBMnd5NWw5ekNabXA1dHE1TjY2Qk5XYTlrZnpjYTlhdTRJdXBOYmdITkFtTWhEQ0NRVUFNODF5TjdsbHpJakNTWjhZekpkTEZBQ01FbnY1VU5uM1RIRTFUTExWeFpZUzZUNGZSU2hPMDY5NlNrYk00N2lPM1kxNWRtM0R3VWIxRzlUMjZKbXErYzNGSUpCNEljWFJLZG5uUUdlSGhPQkNvcGFvd0ZVa3Qvc2ZmbUJxWktJTjVZQ3FjV3VMK21GT1lLQkFXRXRlSWp0bDFIaHdTamhBbEpoekVDUnBXOUtvbUU3LzFIU0tSSVRUM1RISjE0NDlUZXFNeElVWnpOWmJBNHRBQytiQndpV3cxditIODNKOGF5aVFmOTQxMnhDVENwd0lOZ1BuRC9sbjFtSTU3bW5mNmRuelduT082RUZLc0IvZlB1U0JxM2trTXNyYWlpVms3bmdtWUw2NlZkWWFwb0EzV3lldTB6TmQycU53bmpBRkQ0ZXhqT3FZSktNNnNHekM2bEh5c0xZazZKSEdOOG5uT3pOV1Yzc0ZYYklrNUprSy8zeExVWTZuSlFpYnVhbGlUdjFsNGNoVklUa3dwQjkyWXVNb0dCVHlVTzkvNXp2TkNreDMrei8vOHp6bXlnazlndUpZSHd6bVYrcGdnL0U4VENnTGs0VXM0N00vM0pQNnNBR1FqYjhELzlHRTRoaWplVk92WjlVL0NxeVdsYmpBdEVwL3J4cHpTeE9DNFhEUFNGQk1QUWhVT3ozbXp5eURyeUZvUWZZUFlyRjVFeUVEWUdjRlRNaWNCZHRDTE5Mc01VRURrQ0FMdUJRZWJkY2JNeGJGblhkU2dyQk9tS2lZaGF3MERvVzBRQk95TE9laHhPU2ZDQ2taU1c3SHVvb01OalJ2bFMyMDhtcUZZc1dDMS9xVDZKZW1MZFB2VmMyMnBibjNhNlRram1NaVNNeTVIaXpiRldST1p5c2xkWUlnVzRtUmo0U0JzRTFPaVVKV2dmSWRwQVlOZ1BpRTVDYTlDVUphcG10RTIrNHZHNFRmWTFreXhSWG9oS1VYVzhvNW00Z0VqbVNGY2lVQUhQSjN0cm83QmQ0aVNhMmZMdGpQY0oyWWNJVS9DeTBURmlINlpGOUdQVWlnWVNjb0hhUkdRZmdEM0RGT3hYcndMYXVRKzBKNFFvMlpMMSsrMm1pUThENW5MbW5qeUdtVFcwVlNzTlZFL2hKcmExTnlKZURXaVdXZ1c3aEhNR211TlQ1akJDNjZQNjBVUVFOU1lpNXdMMmtBNDhYK2hOVFY3bmhueVducWJTZFRPekRVeU9ocm8wMEhocDJPZXN4WHphbC9GVGxWUVlXM1hZeVNLQlVlUzBMQU1FNHAzVENBYkxyTzQ3TWVpSU5tNWFjcEVXVkFrTHZGNkcwR1lRMEJpd1ZUQ0o1Q2szQXdoUnV4a0dFSzROc2ZoZjBndEhqU1NtM2ZNQW9kMnFoM2NqR2laZTZsWld6VkZCY2hwNHVFbmNVMCtRSTZQUkNYZ2dMYmp1c2xGb0xrZ0RtY2ttZ2dVMHA1Z09oK2NKb2kxSXdvT3JobmloSGp4dmZidjN6OFhXNkZoYkU3bk1XbzVzUVNVSVdrSkZDWkdjQ25FTlAwME9mRURLU2xXb09pNGcwRkRDSUJHSUxqQnNleUg1cWJ3TW5sSi95K3VHM1F6VEdaK3hlczBDS0VwTktwRzdMU0NuVnF5ZjFlYXhCMWVhL1A1N2xtblBVN09xTk9vWGp3akVEcnhuSng5VWYrV3FDTDVoWHdJM0dPQlhEd2VNcHFBYUJXT0hNTWFNYjh3bVV4S1FjU2NBOGJCMU9EY1BDak9pVTNMQStHelVTYXVDZk1EYWNnRFI3TENaREpJTm5WV1kzU2hXU05zbWNGTkprQ2lReGhna3FpWk1PS21aR1kvQ0ZndFpYT0VhcXBKQkJrVWtUR3pXN3JYS21DU3p6QWZUakRFeWJWd0RaelA0L05ianF2SmxyaW5SQWliV09RY21IMnNQK1lTMXdOUnc1Q3NJWUtINzAzS2NxODQ3OWJYdzZDaWZ0T2Y0MW5yNDNGdThGejRmbXhjTjR6bzJxbzV1MFlRUzFXRjZXL1Vtdm51TndsbmliVythYkZtZmZybkdha1p1aGtYL0I4VDZqZCs0emZtRzhWY1Nld04wZ0VZQXNUSk96Nkc1bzBKTjMwSXBCRHFGMVdPOUFFdkJPQ1AzeWloZFA3RVUrRm9JNkhSRFAvKzcvOCsxMzRERlJHaW9hUExkVU9nN0d0eVVJbmNkU3F2OHk2VXZKcEUrbFRtRkxoUEhqQUV5a2JZVkJ0Yy80aHoyZGFITmZEY05SNXZoajBacEdhZzh6cDF1REVkSVU2MEw4VEpaNDZoZHN4TytWbGtsQXpvLzlUQVJnbGRhNTRiSWQzWHZ2YTFzOG1LYjRKNVpOU1AzME1EckxYRmFHcEtoQk1ST3NLLytrdU9LVUJMb1dWNUorQ2dId3BUNmZNa3ZtdGQ0N21NaEhYaDd3bzlVVERVL05HMDNYZUpRUzVKMHlvWlJEOENWQ3RoVlFnVEo1U2tFTC9SUkZIU21TbVgwSEhTY01veGszSTRJL3NoaFdBbUhqVE1oNlpBU3lDOVRPU1pjQkxXampPSkNZV21zaHNILzJmcmJIMU5Hck83RmV0VHNVS2FIMFNia05CSWE1a0VJc0lYRUpPRTFJU3BuY3dxRTFWdzRWSnR4R2ljUWkwNFNqQWoxNE4yZ2pqeGUvZ2ZmaHpud3IrRGNTSENIQ2RSaDkwa29mQ3U4T0kzM2t1YXJBQVZlWlltU3ROZnRQQ0s5WWRoZ2N0QUoxZ0ZtSmdRditYRzBBYlhqU2EyL1NySDVIZUU3cUV6VGUxdWxGdlZITFVsNnFnTFNrYjNCazNtemx0aWtPc1NHaUtqdUtEY0NLWUx2Z0xxSEVjVUJyRUF4L3dEa2dlcGI1a3FkanFaYVV3Um1Bb204R0hZQUNGajQ1aGgvQTN4NHl4Q2lNYk1PUzdFWUgwSDBnMkpoQlJUYXB1dDFyWk9oN3VibDhGK2R2SEljQzNNUVZ0UGFqendwNUNJaG80dGR1SzhiRDVrN3FtYmxaN0RLdXNjampvdnNDWmJ1OUhMK25RSlVMUzdDbUZZU25zWk5VSGRPaElhWWRFMVVNaUpWR25pYU1wWlNzQzlZMFlSaVVKemNaK0NPUEVGMlRnSFRNRHpRWE1vdk9oa2o2WVE0bS9aZ0UzdStNeTlZSkVBQzNJV0pVeVZKUUZkV0xlT1Z4aEZ0cEpCS2kwb0lEYTE5OTRSYzV6U3RlYXhtNGFxSFRVS3RJQkZoekJaUEJaU1hJNWRNSXo3Y3l3ZUdHWVFESVhrUjdycHFNcFFMQlFhQXllUTM0RzF3b1RDMlNmMnoyS2xodUNtTUo4TURoaGhTYlJuUnFPeWVVTVNtZWFYNWtWS1ppUW4wZ3lCUUI0QzdXZTRXRkNpRVRqTm1ady8yRTI4cllqVy9MNTJZY25wdkxXME5mdFdLUXhZRzU0WDY4djZzZGFZd2dpb1VUK3ArbmRDNlRtMmE1M3pGZTBpei9jY216WEMwZGFNRWdpS2RrVzRvVjBKeWxpQ3JGL0N1eWdGbmlYUUdyUWVtb3JOd3JkMHBKZGFDTlhhODFwWnVPVFloMmwyODBTemQrd1k1SkVkZzJUalpyV0lEcmtkT3BBSU9GcmtOcHh3cEMzT2dsc25iVE5saUYzZlFvbmk0dklaUnhQTmhKWkMrdkNnV1dUUnVpNnlvVjQrMnhPNEVoRDMwSFV1ZDErT2l5L0JBN0ZDVGp3WERpdGFDbTNGaGkxZHg2QnB0dFU2bGE3WmRoSjd6dEJZR3MwOGFwRFE1VG00RHM2Smo2Qm1oVUFWTHZwbjFvL0lZR3VhcmQyaWVZVkFSOWFBNXdOY0JrUUNTVmNzQ1VQV1BDZnVIVUhETlhGK3pDKytJM0JESUllUXNKQWQ3bzlyWnIyNVpwaUR3SUQ1RXEvZkFFVTM4RWNhemVkYk83R01HanhrUzZQcHUxdVBUSmhNcVJjdVBWZ2ZscWFSdGlvWGpiUkF5cE5nd3BSQ0VsZ2pyaS9nRUJrMnBJOWFBcWVQL1oyRnJSYUFHTkZTU0NHSUUxdVZCYlo3dWM1K3AxcHJwVmxIZUJBSUR3Qy9pQkFwMXc1emkvMHkrNjZVNTloSVV6UHJOY21VV3FEcnFOS05YVjVxYnBjdFVldnNrMHJBR1pLMi9vUm5DSEVLeCtlNllYaUg5ckMyYWJvWS9hbTVueHB1OXBranhNaEpJY0RRSUx6ajcxaEJxWU12UTlrRERNR0h1VXFUT2dRcUlYL0R4dUs2RUZRaUMrektndm5GdGNOQW1sMVpQbENqZzB1RGdtcWdwSTZtbSs3NS9FNkQ3SzhKd2RvWnBEcVQrZ3hJS3N3b0ZneHpoTmc0RHBoY2IwZHlUUkgreGd6QXZzZm14QzlCVld2M0dnWTJvODRHVTNFK29sekUwR0VxR3hOM2crNFQyNk1XekRvQk5weDlqdU4xVzNxcnVXWDhYNmtvUEw0bUVrY3pDaE9hWHNkUmR3dzFtcHhiVGJCUnA1Q01TQmxpMVRlQjZBaXBJdTB4WGZsc0JqL25hblFhS3MwVlM0elpUNnNBeWM4NzUxRFRxRzJzM3VROCtDWXdFdVkyYTQ1QVFsczRUczdaaXpyOC9BMDlzTy9mLy8zZno5ZE5QUkFDbWQ5STZCa0V5YlpBQ3ZUYVRMdEM1bXRlNUZZTkhjaC8xR1lJWFdsczEraU5pME1LaU9URUo4SGVORE51bENNSDN2TTdJQlBjT0hrVHBBcC9jK0htU3h4RjVrSlpJa3RVaEJtSE5FRkRDbHFZVk1PMUtZMnpTNGJkR21FdTdIWE1FYTRaVTR2anNZOXpPeExabWhvcG95WlZNM1J6enlzalpCZzlJVHRMODl0dGlWUG5zOWVSenNtUTdHdkNsZnRqdmZFREVRUjhSaGlJQXRBeFh4by9rTnJHU0dIYSthd2JuVkpnRkJpQlZxcEVvMFE1d0Z4Y2gva3BISGZNTXBFUU1MVjFKanh2R0F3dGFQMlBtZ3J6Uy9NMlE3elNzSG1yQk0xMjNWUXFrMFJFNytaYkZGRk5EK24rWGJaODFNa3d2M2ZCbEphcVJnaVhjQ0RvVDVDZmhFVVRtTWpDSU1HUklFZ0VtTXlXbkdvU0NWL1ZDeE94V0VoN3BCQk9zNDYrZmtEWFlqUlZxcHJQYXpFM29VbUlCT05hY1JZeEc0bmFHQ2F1dlp4R3BsRm5uaTUxbWUvVzI5L1VqcEYxbjI3WXBlaG9udy9YRHpNaXdDQk1pQlNwejI5RVNMc1crcGdqUWxLREd0elE0YmIzTDc4amVtV3ZYMEs4NUlkRVZVUDROVUNDNll3Mkk2QkFpeVg3RTV0Z1JJQVJTc2U4Z21aNFB1WmhOUDlNZEthdjJYVmVySENUcnVCczgvdFRVb004dW5QUTY0T3JmYWl5enNFOGcwNHVmZ09oT3V4N1NqRUo5L0dRVE9aWm5NTytFQ3RTZysrUWJtQjZrQlk2elNhWVlDb2VNcXFkRFp0YWZKV0VMeUhYYVZMVkFYVkJqT0ZyQjdNdnFwKzZCNjZkZTNBd1RwMmJzVFRmY05UcnF4TTJJNjFSbmZTbEpoZExMWERFYzlsYVNGL0YrZzhJRDMrQUhBZUpXM05GSTl4UzVsQWtVRGFJbG1lRXB1YzU4c3pSVkR3ejYyNnlTWjBOOW5nT0JHSXduN0FRY1BpSmxrSVBWajdLVU9abitCNExnTjl4N1ZnaVB0TVUzRjNVYnRRQXUzUk9lV0F5eUlXWlFYZFUybWlnWlRjSE1HSFhuQVFHSVZyQkFtSG44NW5GMTFtejJzMmFhTlFyaVVLd09SQW5KaFNhUWtDZk5TQkdNVnhzSGd6cUY4ZVBiTHlkeVd0ZW9jNEhyN0JwR1FkcHA5bUhZNGhKSW56Q0JlL0N0dXNHZ05hY1JwcGJXWmpXTlRYb1pwN1Vmc1ZkbHJtaVhyUERpNFNISmtIS2t6ZUJPREZoc2kvQXVwbUNPWWZEeGc0SUx4eDIxbzEzNkVtejFWbnYxcndnNFBCWDhWdXhDa0Frc09aY2w0Z0VzL29HR3pnV05BQmQ4ZHlwN1NIWXcyKzBKTExoM2xMaXNGWmh4dmI0QkNoZVZ2dmdyaHRGMEEyOTFJZmdJbUVHZkJGOEUyeE9iRkUwaHpVSE5tY1dzY29Od0NBVzhMQklPTzVjZzhrd0hXWVhpZ1huTjVoeGRCcWhNYk1STkxPd1hmS3RScDM4TEphTHNDaFNqd2RNY2d6MXI4TXJmTVJqNS96d3JreWdhb3djZDl4cGhXNy9aTUljN2xOekpWWEthNGNicXRYMEZReklob25MbW1YemJKdGhwSE8rbEtTVHlGaHpmUTNQYlFOdE5yUUNxQVI4RTlaWHZCWnJpUytvNlFlRE9jL1JRSWs1SjBjOEl3Z1JZZ2hnckEydW4zdkowSHNtR1pmYWtuYWgzMm03S0RYSXRhTUlWdGNrcm1vTllTVVNYcmFzRWVhQUJFQjZFTzBDMTBPR0hFSVVDb0swd0NIRGJNTG14R0VXT20ya3hYRUZBZ0l0UGtMNjhHQlpMTExmSE1lZ1FJWURPemhIYnVZSXJNdlE0ZVBCOEg4ZUF2QUpDcTZzZ2M5QlBKMW02TXl3N1BVMW1sc3ljdHB6SHFNZ3h5NEJtbFdOK0hlWWpRZ1NpQXFKcm9DQ0VQRUJFV0NFdlZsemlBdEdxbDFFUmpYbDJRR1M4eUc4MEZCRzB2aE1XSmpJR2UySGlGenlHYzBobWxvejJyQXk5SUttc1R5WTBnRVF4aklLNXlTL2h2REZXdUVkb2F3cHB5YVJGcnVCb1oyUEZVeDBoY3h4eDlHZ3phN3RaNkpPUi9QSWpScHBsMnJuUS9qZ3VGQ0xoR29KMmJKL0pnbXRSak04eVFMYlNBRm9OOGRRU21qenNsQThZRGJyU3pnbmpKSXcreVRLcFdHVlpxVU5NL00zV0N6TVAreGtyaDlDUzBCaERjZm1NTkhSTEpOdVBMVU9jaDFwM1dtWG5KQ1ZzSENGbFlsYUVNL1VuNk5sOFFmUmloSzB4VllTcHdTZVRSWnFzN1ZhaU9TN3dvWGpTc2hHMFdBOEJCZytBd1NQT1lWMUlkYk9FSy9XQWI0SnYyTi9Pc3hnL3JIK2FKcTBKdEtrY3VvV1dYbDhJSVFaSmlOMGtGV01YVkZWYzIvWHl5RDNyQUJGbTdkVjU3dzY4cFZCcXAyZDZvdi9FMEVoRWdYQjAyVUViWUxHTUVPcU0ybk9oSnRGRmNNWUpDREJGY0ZVamp0alh5V1ZvOHNjU1lZbUlma0hNYU95VFo2bFRaOG1WamZxbVAzVlhFU3owRkpvS3p0NDhOdWNONUp0TjlOY0hmVWNUbk0xTmJGbTBXaW9hTlUram5JdytHRllXc2dNcGlyYWp6WG5IZFNEZm9aTW9obWpXYUlQazNYakNYak1zbFdkZGRZQ000ZW0zeVJna2VpYWR0eVhjMVB3Uy9nTUlXSjY2YmdieGRSUDRqbXoxdmJ6d2ljbE5DeU15U2lhZVRaaCtOQVZnUjc4S25KdG1PMkp5NnY0czRxMDBDeGphQlFNY25yVkhyVVdwRE81dW5CbGw0RlA1NUhqb3NiRjZXaENHZjR6MUtpcHcrS3prQkNqdFI5c2FBMFRkenhZajhHaXNzZ3doSjFPY1BpQmtlQkhRRGc1dFNwajVYWFlUc0xDdVI1SERhQ2xPSDUyYnN3d2FVSk5sZ2FKMWp4VDlVZHFhTGp6VXpUcmVKZ1FuclhmRGdCU2czQ3RtQ0I4ei9WanZ4dTUwNHpzQnRGMDlua1hEVFRNaWcvQk5kREtsUTFUbFA4YmFkUjN5MGdVeklHcFRjVW9sWXhjbjgwcjdCTUdRd2xUTXJybGM3Y2RrL2c0MW9Na05BeUZRTUN2d2pTRGxybk9ETW9raURRWnlIdWFQdDhiQmptblZoREtJTmtHdE91dXVHNXNzMzlubWFjbjU5MmlLWmlGbkFNaFZkdnMyRktIODdOb0p2TXdwM2p3cW1BREErWTE3TlBFd3JBUlBXT2hZRVlXTWl2TGNrWkpuVktWaFZOMlBVazR2OUlhWnFFQkJGcE8xUEZXOGh5am5FbHQ4cDM3WlFPMmxPQ1lsY0RSc2UyUm1rQXlyTXhVc2t2d0dSVTB4SzYyWDNKb2s1QmtEb1dhUk0vOTI4cVZ5Q0ltbGNLTTlUTHBhMGRIMXMrQnB3aXpmZnYyelNZNDk2T0RibE03YzFIOERsK1czMkUrRVJMbUdYTk5qb0ZBQ0NNUW9BTXNFRkhCQm9NcTQ2Y3BxYld6ZWM4UG0ydlFVM3NJMys1cXoydXA3Vlo2N2RaeHpVNWVFcFdMUk9EaFlncXg4WENSMXBwUWdnT1ZVaFlEa1RCQ1MrRHdZLzc0ZnhzNTJHUk9aNThiaHhuRmVvbTg3WnozMnNYUHFJOVNrR3ZuWVNDSkFUclM2QTRURUNrSUEydVdWUUx2MXFjYkg1ZStuNHdzck1ja1hkYUZRQWlZZjVoUEVDZmFsbnZXT2ZYYU5XWFRhVlhyWlgxTWJidmo5NDVrdytUQkh5RFNtSFVoRUswQkZoeG5pTk1TQmYxQ1RXQjlQSzZUNjRXeHpQQnpQeUlZY3BxdjZBYnVIOU1MODRsY0ZUUkFORk9FdFcxWFhTZWhOMnJVV2pSVmEwbWlYL0k1TU1qRnRjdzJUYXlhRHhrNTgxMlNzUnQ5WUNzaHBSK0xRWkVNdGowTDVZeStST25LVEhZY3g3WWwwNDNEeklZRXg0eGdYMjdZdklwMTNHZ2JhdCtSVERBVkM0dlpaZzFMZFlickJGY1gwUHZUSWVVNnVXWTBsUzFSU2JyVjNFWFZCalU4cTJEcWNqWnFPUnhQSkNhWUpFeEcvczRCbjZ3ajE4TTdhMkZCV2pZOXFGMEtVek1rUkQvbmRtaE9tZFJsM1JCa09NMDR6OWo3VmdMS0JQcEFac2xoSUtLTkJBcndUZEFxMmZVUllZY21WdXB6UHdZTDBCYUNIUVhKRXBWanZmRkpqRjdDSUhacHNWN0hSR2gyVU1tOFI1cForbDJsVHVUY2pZbnJYMnhpTUlrZjUwNUgzYjlIMDJ2WHRTR3RCT0gvV0Vpa2psMzV4RU54OGVSTElPeEVBd3QzUityb2owQ1UySnVZWWRyVk1vYWdSeGFMNjRTcE1FUG95MFhMVFVGdlNmdzFYNUdBUVAwWGsyNzhqY2JBTjBGYWN2MFFybzZ5cHFKTTJKbGNTY0ErQjk2VHVmaE0wSUVJRkdZSTVnaUU2aVF0S3kzVGxGVlM2MEIzTlNVNTBpejlpaXlKMW96VjRVZVFvVUhRVmhBbzVvMElDVXVreFZPWnErTFpPSzJMTmtoWURKWUdpNkJRTzNFZlRnSzJGUzN3RXpTUytURDdEdWhYc2Y0SVRZR3RxUlZ5Y0U3dG5xSmxrMjJjc3NuZTlQMnpZSkE5K2huVlVUZWlsVkd0T2pUVGdUUkxjMFFxd0RGYmpnclBUbWVQUllOaFNDZ2g4WWw4MmJQS0lpejc4d283NGZjVVhCbGExRzdWTk1HVVMwbVBqVXhFeERpNUMxUVpwQU1HeXVqV01tUnROOFRCWndnSm53cjdHczJWM2V0ekhiT3hkZTAwNG5vaFJJaEVJU2t4b1FoOWduUGpHb1gyNktUcVh4amtxT1crRllaU2s1ZmNEMnVMTUVIYTYxZVpwM0FpcnFCRGF6WTBQd1VlV2tCbVpNc0tWTjVaRzU2SGdpdzd6TE4rYkt3TEdENkVBUUlOQjk2eVhXYzRzcDZzRGUrT3JPaHdWNk1KdUxXeU14RVZtMHgyTVVERlBhTThTTTdycUxDSWRmbVNVZlNyMnZ6R3lYUDJIdWNFdUVabUhKT0N4VUdDR0MzU0w4bVpmYWhpYnBER2ROakhNSUtvWFJmRFhBa3FuWWdJanF3bHYybHFqSXFZS3J4Y1UwdXR4UVBpSFRQTG1SeGNQeHFPZGF1SlJZOGpVNUNmd0VsRk1NRDBXYzhPUWZFZDEwNVVCeUpPQnExSnV3UnFwdWJJNkdMdGtNNjVFSGlDRFlIR0UzeXdVRXdKYlZtekNUMEVFMy9EQUR3ckJCSG5zMkVGdmhyWGJrTnNub0ZPdFQyMjFEYWFYdHd2NjJhOUNWcUwrM2Jtb21hM1BxRmF0TTRpcksyRHVoa2lxVzJ5UDhHMHo4d2cxM1R6QjVkZ0p0VWN5M0VHT1k0NVJ4eU1USzZzV3BSWWtCU1lGRXA3RmdxaWt5bTBNKzNPemtKekxLU3JGVzZZSTRUN05CZVVyam5iejA0cm1DdnNqMjFQZGpmOWtpNlJtQ0hnbWt6amQwaE14d2RnSS9NWkxXSVZYMGFpTkdrdzFXQU9vbENZSW1TYU1kZVV6QkNHMms3Y0U5OTFYVkpxRWplWjJudVFxQnczYmRZZERjRjEyMjhBNGtUVHFyMU4waGxTZDZ3YnBoWU9NeVlVNzRSV05ZdjFCM1dLK2F6VHpYM1R6UWFtZFBJdTU0QXVoSjdJVlBndTFyWExCS1lGYW5qYWlKdkk1dEZRMFZwaFduSWpsK09rNzZzRVB4cVlxU05aQ1Q4LzY0UjN5Y1Z1UG1ITkE5anhBdFV0amd2cFk0OG0xWGlPQStCQlk0TkM2TmpHSnBVd1F3eHpXc09RWTQ4aERFTE1TSHVJRXVKRVVpRkZhN0ZTQlRqbWVtUWhGc2VFR1hTYXNaVzVEeE5RMXNkQU9OcS8zQVAzNlBWRG5Gdy92N09WcHhFOVRRa3hWYlZ4UVZkZW5GbDNUVUdjWnFiK2NoN3VsL05ZSTRPV1l0MnQyMEJvYUxvaFZJU0cyT2FWMzVDTTA0Umk0MTQ0dDBMSUNrUFdYVk9LZWhUQys3UVRvdmNBUW9GMTFZL1JpZWM3MXNnd2JqYllHK0dwRkdEU0NOZmlySm5PQkt1ejJUZTNQWFJ5djc3NkhaWDR1d20xSStlODVrQkc1dGdJMDJVa0loTTNQRGhNS0I0UzlpdXRMbm5YaDlFT3g5bUhJQ0ZPaDhWbzN3b2J5WG5qdkJQOXdMWkgwb05YNGgxSmxYN0p5QS94bm1VY0djUjhqOStaRkdQOVlBQktYb25jMmFHUmE4R1dkdEFOa3BPTnRURXkxL1hTeWpMVER2bWJzZjJzdHNOVVFTaFFvWWNwaGFiUVhMUTNzdHFRZHhHNG1LUTJneER5WWVremE0K3c0ZGdJQnY3UHZabnZNS091T2NvNU1DbFpjNDZKQm9IQjBDZytVeEVTbXQ1c1dZOVN5MmU3TGlaMTNhcTJxR3RUT3MyL1lTTjlpMDZUWkgrc3lpQnBobFdza2Z2VW5FbzF0VEpobHcvV3NLS1JDeFlWalVCbUhHblBPMzhidm5NL0hyS1JIS1VWeVVjaUlUaDl3QmUwM1RrbVVzeTVoanhnVkxrbVNNNFlUTWlNS3R1MXEwM1pKRFRqL1h6bTl4QUE1b2Q5YkNFa3IxK05tTlZ0RW10WGIrL0RUa0JrQmtFeUwyU3dRc2VkUWpPSUhPSmtRK1BDb0JLa1hXYUV4VVBrL0IvL0RyK0tTQm81SDU1dHdueUV4M0FPblcrZWk0MEdNYnZVNUh6UDJvTnhZKzBSREFnM25vKzVEZ016bWF2Skx2YmRRSjNha3plamRkbnlxSnNvWENlQlRlLzdObXJ1WTVUbjBHRkhIYk9OQ0w4enkwYmQ0ZXVzOVFxeHlIWkRuSk5vRnVvYmFjTURSbzJyUllSYkc5YlZSZ2E2VGEwQWN6WHdUWGpJUmoxMEluWGtPYWRqQUlpMWN4N1VQbWFHV2lGekJYbnRNb3dhSmMwQWZrdWRDZGNMazNMdDNJZTliM1BJalRIOGJKOVUremxWeUx5YVN1UXk1OFBNNHh6WTk0NjQxaHpsYjRnUys5Nm1kMm5DT0dMTkFJQXdFcTlicVc5RGJoSFhKdXJFVlhFTS9ERjZEdENIRjQyRktXYWkxWTd5MElpT3Y1V0NGZitWZ013VVNEVzNVMzFGbjBVbVhIUDBkdnFSTW5kMGM5eTNrWENTQkNxT0lsb3lSekpXcllHb1RqbjdWeWUvTWtkRnQyWlV3WnZUaEJMdzV1QjdLOVJzYTZPdDc5Qjc3R3lrSkE0bkR4bkpiUmhZU2Nmdk1TTWdUcTREd2tKU01uZWRxQmpuemJoNjlpWDJYcEpKRWxzbG9CSHR4SFZqMWhGMElOdHZQNitNeWRkaXJvdytWWWU3WnZ5dHU2ZXREclg3WEQ4RlVYWVBzUWJEWTlyMFRxRkNnQVF6RThMTzBkVkVvbUFtdEFHbUVaOUZUdnRidFk2UkpkWUlVNWhRTjlFb3Jna2ZqM1BLV1BvMC9qNmJNYVJmbFNIcDJpV3lqZ2pQa0swQzFtZlR0VjFOcGlzWXZXczNxaG1WeEYrbGZkMFMwdDBOOCt6YW1OYklWN2QvbHZTNmp4RWNOUmZmWXdvd05Zb0haZFFGU1MwbWl3ZVY4L1pRNTVoUi9GNjcyS3k3Y1g2a0lFUkNnZ29Od29iVTU3ZUdsVE81VjB0bjg2SEoyQmI1OEJzaVUyeXNoWjNhc3h0NTFvSjA5ZTRKTWNrNWdSN0RZVGVHU0dGMENOUEJRbHdMeEdtQ0RnSjE1QVQ3b0cyWmJndENBVDlKTUtDZFRCTGdpWmJBUCtFekVVT1lBVWJNM21MNEl2WnFSbU1obk96QWFhUXA0Ui9ad0M2alV6SkZGNGJQUGdPalVRZlZqK3oyYXpyVnpCcGsveEtEVkltZlJKOU1zbVNpYlhWK2VzZEFHWTJ4U2t4MTdnZ0FvQ1owaDZmMEVtd1V6cVRtaXRMWjQvTTNKcFI5ZDlFb0VJWVAxQmFkTUJSU0ZFbVB0RXhZdnI1SjJyVzFPakUxaU5ndlE2dHF0NUVwa1VuVkd2SEw1dFVRSHFGdDNyWFBPVGJTSGszRnRST3RRdXBEdU9acDlDMkVoVmpUVHpnYUJLNE51ZEc4TUxQVHVqU2hqRWhaK21vRHVSdHV1R0hPZ3hCUkZLREk4ektoYkgyT2plVjhucG03NllaMzFpUnpIUURiZFU2c1Ruak5ZVlVobDM4SFZ1dEtmSkI5blROZWlUenJGZHhmWmpMYlhuK3pUdnRVSkd1R2h6dlRTOGJKYUJHMk1Xb2Izd0pWanJURTRUT1VLa2pQREMwUGh3ZkRReVcwU1A5YWlyY3cxOHcxYVA5elBweFQ3dDBLTnlKYytCSVFYNDQ3cXc5VzA0ZDc0bDF0NVdETHJDRVoxWHRVUVpWei9kQm8xTHZjZE5OTmN5UUtocERwTEpkVlczRk1XL0p3elpoNE1KV1JLeU5DOWp0bVl4ODJTNTVaTys2Zk5iSTBtV3NoYjRLUVFWT1JSNEt4T0k2QkVNMDNFNEVkK3FCRzJyb09tRlZ6cEZQZE5RYXZmWkZyY0tOT3I1S3UxSkNiLzk4ek00aEVuaEQzTHZTYlRGRzFUUkp4RnlwZVNrSW1rcmptU1RyTmsvQnNwQlhTSGltUHRPU2hHcmNYUkdkN0dFdDErUTBNQW5MWWtRdVlCMWxGYUMyMFpvUmxvd0R1SUVvY1RoS1pkWnBxMVI2WnhZZndrTzRRMkZMTG9CUVEyVmpiNmtqV2wrc2xYQXl1Q1EyS3RPZmNhaWdGZ2s2ek0xVWdZSnFJNDV2UTVJSnJWeU9MalVQUzQ4aHpQSm1DMytLSDhiMkViNXRZeHkvd0ROQzY2ZU1KSVRJYVZac2pKSUYzTlVUZEFNNk1WTlhKdG15MWNyUk9HKzRZcUJ0TlBtMTdacWhKTWtqVkNKVXBSa3pRbVVtZGFkYjVLcldLc2V1aTBwbG1MaHlmQ1EvYVRsOVVLVVFKMDJCZW1BUGhvWEV1ekNvSUZpZWVCOHpEdHdqSGJLNG1rYVlRWVVxaVdrQkJJRXBDbC9nL2xxZG1LeVNaaGdkR09KcndMc04ycU1YSFQ4b3hZZG1BSVRQMDNKTzlvTEx6T211R1BZOFc0ZjZBKzZNUlRJcmFxRTBUUjE5RmpCVnRja2dTMGtBQnpXUGVRWWRieGtJd1dOQkVUVGhkN3ZGTmNOSkY2d29OWW8xaGZnZXQybWFvWTRpYW05Qzhxb1ZNcVZWcXA1YXMxMGxtc2I2bFEwQ2tzNStJN1dTZzdLMXdBSXNsZ2RyUDFVaFZwMFd5M3ZwZ0dXUXAzMkkvMlJGakpJTm9meHFOOG9IeG1SQXFENU5XK3VDSlNCcWFwQko3eFhtZEFPV0lNWTZIQklTWTFEaUdXMGxBUW93UUp1OHdGd3lwdHRMUmQ3SEZGQkVTQmZoSDdnQWZDV2tyZzNjOXNmZ3RSSW1HSUJLRkNZVlpWMEdZTUpwRXlURk1wbkpPVEUrdVRiZ0gzOFBNTUN1K2x5YVVYZG10empTeEo2UUVBbWN0dVg0WWkzd1NKaTNNYTRjWGZSdUx5TEliWmRkVHEwcnhUS3FtTTI1ZXd3eDRBajVyTFU4ZCtsbkJwdFVrUzc4bnoxZit2aGdUNjJXcEVhb2Ywam5obzJoVmwwK3Bma1g2RWwxRVRIVG1VdFpkNHNwdUtrWXhlRkJJTTdMakVCaVNIcWxONk5KOGc3QnN3NUthSWRqcmFBZ2tKU0Zlb21LQzgvUm4wRkpFeHRnNHR6Ri9yaGVpNXRyMGM5andXV0FtaUl5TlhBNndFcEc0RUdLMkVMSXNsUDBjVmMyR2ZROURlRDNXeXpqUDNBMG14cWRDV3dIcHQ5ZXdDVDJZaWV0RXUwTGtGaVNwQ1J3Q1pMWWJJc0tuZ0xGSU1NSlVhQkNFaWhsMzgwZ0dPaEtmMW8xeXJxWm9oclZIVGZQOHphaGJmZ3Faa2I4aEkrWG9pSHJlRkx6VCt3VXd5TVZWNGxkSHZZdHNWZk1Jd2s1VExQMlVMZ2ZTYVpyODN5anFsVWxJdFUxS0V4Z0FRdkpCWW9Md2NKSDJsdkVLWFJBbUxqb1l6WUFwUVNTRzNBRm1DRTVvQXZ2c3RKS1RYdEZPZEYzQk40RW9rZFFlM3h3Q1VwM3J3cFRqSHN3eVp6L1pKQ3hNS0VLbk1Bb1NuM2QrNzZBYTd5RnJaU0I0d3ROY08yVUMxS2NqR0RROUxHQ0NJYndIUTd6NE5JUjNFUTVFeHF3elFYaHdmVncvakFYRElVaU1FbnE5RnBMVnZFVWRqMTJyRi9PN3JxMXE1NmpYQVoxMTNFVTNpazFHTWh5ZWMyODZjMnpUWVQvM0ZnelNhUkVUaENuUms3aXRCNm4raXhDSTFDYTE2S3ByRkpGbTJtZzJ1OGROMUhEMjVOTDg0S0hhd0k3L0VjV1JZRG1PKytwRVFyeEtlVGFxNVNBS3c3TFpwalJibGFLdEFOMEJIOEdKUi9PSWp0VW5zRU84WVZMK1IxZ1ZNeERZakJCeGN5YmNFOWZOUFdEdVdkdU5md0JEdU01ZW0wTm91SDRZQ3FFQWcrRTNjWTNtUzZ6WHlBRkFNRGdCQzY2ZGpwYVlVZmc5TUk4d0g4K2pUNlk1bVVHSzJ0d2g1eTEySXlGcTVHclV0Nnd5VW9VMGRTTW1qUHJWMEhzWENVc3pMWDBlR2VUY3FqSFNhYzVrb0U1TU1oS2Fvd011SnZHdTB4YlZKRnNLRDNmNWxWd0VvMXY2RGs1Skl2ZkJBMFhDVW1jQ0lhQmxuTWZuR0RnWUFyc2N6VUh1dzFvVFVjWTZ0QndYSXVNN2lCQm1zc0xSSWlOOW9oeVRabUtTNDZPaElNcTllL2ZPL2dtTUlQUEpVQklvakVIWk1QZExTSnR5VjZyMC9JMG1vQ08yMFdLY0EyRmdsdHJ4Y0dLL3VHK096ejNEVUZ3L1VCQ0tzekRWc2pPS2VEZC9sNzJ5dWtac25ZblZKZmk2L01hby9XclZGTm56b0pwYStpMFpJcGRoMHVxb2ZsTDZSZFAvemdEdS9yRE85NmlFbTZhTmYrdlFwOVJQRGVMZndzY3piRHNLQlM5cGo5b090VUphNmd6c2JDRUVzZGthaDVwcWlKSm9GQnBHNkxiUkh4dlk4UTdFSHI4RHFVcXRBdzJla2RRNUh4QzdIa2x2NXhXdVN4U3h1UmVuM0FyQUkrOENVZUo4WTk1QW5HU2JsZlNpZkFVYzJpZ05VNUZLUmE2ZmpldkJ0TkpVaEprNVowTDdNYW5RcURBaHRlU0V0bmtXYWdYV0M2RkExaHRtNFoyMXRINm1UbXBLZ2s4Sm5BU2NUblp0a3lwQloyODFvVHFwQ1dvTnk2aHhlTlV3dFJhbTAwYmRjTlRhQUhEYTdnT0QzR3Zrbk5jY1JacGMxUnpyc3V4ZFhxVnJMN1FVT3E3NWttUzBwV3JGWEZBalZraDJ6QStrUGNTSldRTlJaN01CaUZJSWh0SVMyQWFOSGtDeXdseVlWRnlyazY2RWZOdU1HU0tGT1pEZ01CWmFBblBINlZnUUpkZk8vOWt3WjVEWVhLc1o3Z3cxV3dMQWZTSGhZU2czN2dVdDRaeVU5RThjYzhkeHVRZTZyOUN2aWc0cy9OYU9KSUlqOWMvVVdMWWZUVnlVVG0yVjNsb0tpZTVPeWQ2Vk51UnpxZzU4S1gyOWxXbFU2L296RTE1N0lDUVRaK01OdTkybjFlUmMrYzJHR1NmQUlNZVA4Rklad1VyTjBJV0JhOHVnTG05U3MrMWQxbjRwRkt6RDMrVlZhaWVWWEd3WEdrbXJwSVF4aU9RNGVzRU1kQmIzODdkRFNHRW11NjdBWkh4dkJFckdjaklTa2g1VEI5Z0dUQVZSSXZYUkdoWWUyWWhaVThVWmZueFBib0t3S2prTHpMeEVCYUNwdUc3OEpkNjVGNUc0WnNWejVKMW1GL2VBK1VkeWs0MTdZRzBNeWVib1o1a3RSeXgzeEZ2YkkyVVkxdWRTY3hkTFVTZWZjdzNMNnNPa2MxNFpzWVA0MUs2Vk5jbFl0VlBaWjMvT0o3eXVScDlTUTR4QWgxM0d2Zk5uUmhDV3BhM0w3TXNnV2RhN1ZPK2VEeUtIOHVRQUdKc3NrSWttZWdVRDZHdEljSGFEdEppSlNBNkVaVVJMYVdzSktOb0VBa1pxTzkyWFhBaFJOZk1ZWnUzTkhXaU84VHUwam5VWG1JSDRlVG1QM0FTZ2pJWEc0cGc0NklTME9aOGRRc3htdzB4RXhxekx4NVNTcVdvU3JUclR0VDFuRXJab2dVVFBWdTJkbWVvS0o2bElna1JLNVBVc0RUck5RRUR0VXRsbDB6Tmkxa1hMTnYrM055ZE03Umt4U09ZZWt1Z3plbFhEdTZPd2NacHB1WFVNWmR1aHppbFBFNnd6N3hMeFd5ZEI2YUJtcUJlemhVeTNOU05JV0NOREpzSnNDQ0MyQ0llWnhVU3pnUFlsdHlFRHN1RzNXRlBOUnFZYlU4aEJwRFlzU0RRcjcyVE9ZU2FnTUJ5WDJndDhrK3kyN20rNURvOUhpSnE2ZWdDRE1CWk1ZaWRGazZkMmllUTRCZ0VNZmVwdzUwaUhORitTZUR2SWZiYlBxVnFqZG91cFJVNFZxRm5iTHRYRVluV3lQVTYxTHVyK0ZmMmJsYUJWT0JEZFRRMXkwWWhCc2s1a2xLdW96bm1uUlNCNGN5VWpaSENOa0ZYRzBPR3ZXbTNKb1UvYk0rdFhMSTdoZVBnSFNIcUlFYUpFOHVPSUM4bUdXV3lRVEtpWS9BZkhBR29DNFBFREgvakFUSnhvbHV4T2IrUkxVME9DNW1IZ2JCUDlNdHZOcGpsa3ZRaEJCZndtSE94RUVvdUV0WkVheDhCOHNrb1F3Q1lNUW1oWTNKUk92R0ZuUG5QL0NZK3BqbTNXNVdTUHJwcUVTNDJmU2R3Nmw2WG1yRG9FUWZWcmN2WmdWbkdtSnVxQ05wVUp1akVTbmZrVmFZMnpEekRJOU1WWk5ibVhIVXBHQU1icWpIZUp3dFFJYXAwbE02d0RNc29ZbmVhcERTU3E3MU45azhUYUtIa2MzdUxJYVQ0THk4NVIxamtHbWQvQUlFU0VnSS9nYjVBeDE3RTM1eUFzSEtaaVE3UGdXekMvRHhnSlFFbStzNU9nbmRBenhBNWo4VnVZRnVhQmNleE82WFdoWlRnLy9ndE1CWUNUK3pVYjNrVnMxQnBkWjhrNjkyWFV6VCsxZE00cVNST244d2xHemJvMTZXcG0yMnZXT2hpTjNsN1h2YithYzVWSnBKSHBHazVMRSt1Qkl4TXBtYVZyS0pjSnd3UTRqaGlrbWtLZDFxbmFvSFA0UitESlVhQWhtU1hEaXRhQkc0V3hmeFdTSG9rT0k0Z1FUb2NhcVUyV0htSmtBMStWcy9oTXlCbmQwcXlEK1NqQ0FnWkQyQlVHNHp2M3liYVpSckw0bTFBeSsyc0dha0ladGVLelNGdzJ3N1MyOUtuaDJRVDRkVU5HRTlrNm1xL1l3VFM2RXVwYVNsM0hXcWZqM1hXMjcvYXZDT2l1dDFYWC9LOGJocW9peU5tRzA3TS9OU2RNblRKeXdLcy9rTkFTSytPc20xaW5RVG96YmFtbVpLUmhhclNzZTRpcFpUcE5rMkZLSkw3WUpoc1d3RGc0N3NBdjN2T2U5OHk0S0NjejZWeHpMR3N1OEM4Z05tZi91VDdtWWl4bXd1R0htZkFaWUR5aVNVVFdiQTZoSXk2V3kycEJma05pVVNnTStROStsNG5PekhvYlpCajFnVXJ6S2lzM2EzRlNOMW0zSTdJUmczVFBwR3FqTGt1ZVdyOG1EYnRCcHQ2Yk9iZnNIMUMzaWhaUEZJRFA5dVNUVHo3dUZyUFNwd1BmV0VPMGxZZzdwenVaeUcwckRESWEydE9OWXVpWU44OVRzVjVMU2M3VUptbmZDbDR6MDB5VUIvZ0Y0VmxnSkNDQ3M0dUtnMzdzK3FFWkJaRVNDYU56Q1lCQi9BSzFEczQxN3pBVGZnWCtobkI1Zm10WnE2YWM0RDg3dUdOQ0NZTWhZZ1dEV01xYlphY3BQV3ZJTldjY2RpMk1xaFpaR2x0ZHh6V2tnNTErUVMydFRxRldJMUtqWjlPWmRqWGZsY0dFYnF5Mng4eW1JeWFTYzdEczlIN1ZSbjFOUDdvMHMrS2RDVFFLM2JyZmtoL1NhWkRxWXl5MUcrcWdNSG0rMGJXT3VxblV6dk5wa3lKSmNMakZOWkZESUxLRnhNOU80VWFITkkrUS9KaGttRTlNd3lMVERSS1g4TENWZVBvbG1sTlc2L0Uva25jazh4Z2RSa2hZSjV5TmEwUDdrUGtuRndKejJkWS9vZDVjKzZpYlpkZHlxV3NiT3hyc1V4bXVRbjNTejBtaXp5UmpWby9tNUFDUDdYTmM4aC9TVjZpTVZMVkVwZ1VTSTJnOXZHSDNmSisyQzIvRklEanFvNFRkVm5JYlhiaTJobTA3VFpTZFVpcithNlNOUnFaZ2QvN2E5VEhCbHFQbTJrcGtva0FRSTlsdUVvdElLMnBHc29lc1RyRE9QQTQwVVRHVGltejZHTm1QeTkvYTRJQnFQQkM0Wk9ycDV3dVRjVzVOSmV2Z0hRUWpoRjNJZG9Zdk80bGZwWHhYeFZqUkM3V2w3TktNK0l4QTFaeEh3a2hxclg1ZW83NVRqVUIyUU1aYXQ5OEpncXhTelVaNm1xNnVyUmFCMzAzUDVyUmJNVWlkVmJoZEJxblo4cEVHR1pscU5WeTdsRlBwR0dEcEduTWh1eUt2eWlEaXBRUThHcm15a0loSUY2MkE2QUNDZHJCcG11aGVBSVMySjRJNUlBUW5KbG5DcTJsazFSME1ncFp5VGpnTVJtN0Z4aE9HZFlXcVpLNmgxc0YzWTZZN1I3c2JxOWYxQktpUnFOSDByRG9ueHV0eW5FT0ZpVGh3MUd1eWZDRmhLeDB6ZHBHeGpHcm1zN2UxcTB3ZzdpNFpKRDl2TXNqeEc5MkxEaWRKbkoxMFRxS3V1WTJjSzlJNTRoMU9xeWIzbHVZbGpreXZ5bWlqZ3ErYVhPek1oWlJPOW5YVmZHS0RhRUhSVXRkTlJBa2ZCWFBNMm11WVFQd1V2N1haQVk0LzVoY2hZZndTb2xJOERPMWdISHFIWE5xUG1Qdkp0a0JWbWh1QjZreXBORHZ6dnRLR0h5RVJVakJXbjZMRHdZMHkzZXVpV2hsUnEzaTdhdWJWZTZoTVVndnkzRDgxdlg2ZERKTGZ4L3VWRzZPWHczUlMybS9IdDZoSTNoRlJkeHBpeWRmcFJzUXRNVXJISkYzaDEyam9UeTV3bWwwc0xKS2VaQno1Q3pzODJzWEQ3b1pXNU5sUmhRMnRZcU5tR2o3UWJNR20wU0tKcmFmV0Q5S3ByeHFoVnRoMUlleWEwQjBOQnUwMGhyOTMvNHdFSmtOMkRKWUU3SHFuODF5NzJHUlNjbW0yWXpKaGFyVzBFakphSjBTL01vWkZjOGtvWlh2V2tFR21HM3BreHlEcktnNjc1ZzViTmRHV2lyVkdHZmxxcnFXSnRnN3cyS0VBbHFvWC9leWk0NCtRakNNVFR0MEVaYWc0ekphMDZyam41RmlJZ0p3SmRSeUVhaW5yaGNIQVJEbnJXNG1XL2ttMkhhM1RlTk5XcjFLM0cxWTBHaDVxNW5qVVc4RElrb25KS3JYek54a2RTc2FxWWVTRUxuWDFIZlU2UFdiNk1iVWdyM1p6VDZLWEthb3pua0VRdCtuNyt3OFpaRkx6cDZUNWxObnZyZ05qOTcrUjFtQmZrbTJZRXNsOE9hbXFSdEE2RTZxR2s1Y1lwRHFlbzhaNG85cVM2dUFiSytmY01BV2hXajdiOElEL2dkamwrNXlhNWZkQVMyQXFvbVBrTllTbUdKck5rY3lacGVaYWpPOVhoRUJLNzVHNVdFMUhHYWRxMVZyM1h3bDR5YkhQcGdvMWFKT0F4V3pLb2ZtV3hENUtVaWJLMS93VDM5dE5NU2NqcDdid081bEdqV0wwc2V4NzgyUkczM0ZqNlRVdDJIVTF1alN5OTd0eTIyb081VEd5d2xEZnhZV3BPWmpPdDZqaDVHcmFyWVBOWndTckpoN3JROVZwOU9GSldKa1pGN2FPYndJc25hNGZILzd3aCtjY0NDQkdIcHdsdER3Z1FyVGtWM2duRjJKU1NtZmRURzVITEdueWRPWlUxNld5T3M0VmI1U2Q0VHNiZnQzYzloUXVHZkdxYTE0SG1sWnRrbWlOT2tLandreDhKa0psQkpWV2hxaWF3cjVjNlpSbmk5VE43L2R1ckh0Tko3OGt5MmxIa3J6Mnpxb2gyVkVSVmo2MExqZFN6N2RkZnlQUDYrSXZkWmdmbVpHamtkaGRtU1ovb3hWdzNpbmxKUWRDbU5aTXR5RmVvUi9aeVIwSldCc1NqS0FkM1pUY21vQWJoVzFySnhnRlZqS2t4SnpDYk5RbXRpdG9HeUd1ZlU4ZlMwRlpuMDBLcEVSSzVQWGFwVDZqVUNPVHljMFF1UTBFMC85d24rbjc4OVl5eUhTeHAyMlhRRk5iYkNWdmtRUlpJMW1kLzdOVkJ1bHlINk9oUUtNQlFSSktwMVZTc3FZL1lMVWlpRnFIOFFDaHg4ZXdnVnIyRms1b1F3ZS9HR1d0TzhUcWtzTmRJMXpkYkpmTy9rOFRzNDdTNnhLUW94QndSdE1xOUgxVVlsMFpJczNiTEVQTzZGUG1NNG8vY1FzR2tTR3NuRXptMnZSZDdybVdRYVlMdXNOMEE5Y3ZFZWRTVzlLdU5Xa0hXbFF5ZDdpdjdXaU4wY2lHcFJxU1VWNGxOVThTd1Nnem56MlVNSnVjdU92R2NaellxdGFwUTRVNjIzKzBkVG1OVVg1ajFHYXBOdFpJcDdvbUIvVUxhMENnWnE1SGVLMzhuZjZIdmtwRmpGZWhwYzlsSCthcytMU0tNM01iYVVyVnlGUXlpL2trUVo3dVAzMS81Y1pXWDlQT0YzYjIrcExUWE1PM1czR3dFL2pvM3pXdmt0cGtpVm1yMWhsMW9oL2xXUEo0Nlh2VUlFRFdwV1N0aHhXRkJoNTRzT0N6SE5uUUVYTXliQ1hTVWJ2VlRnTjJ5SURhYUx6bW1qcWZvUVB4NVc4NnRIVTk5aWlobDExR2N1MnFwV0FDTWV0ZFVoTlVoenNUZi9tLzZwUDRQejluTi8vTkVYbVAzektEVENlNHR4TloxMkd3dXJEckNGeVlFU3dKVCtiSXYydTU3UWdhWDY5ajFKR2xtazVabDdMRUtFczl2TG9hZU0ybWJKZFR0VmQxYm10ZjRuWDlqL1AzV1lKYzBjMTFnRkhGUG5YK1dHV1lycnQrRGUxMm5UTXIzcXFhWENPa3VCV1BtY1JMaHpzWnBtYkNLNFA0Ry8yT3JMdjNIQ1IxTjBjNDNQell4ejcycEkzdHZLYURYNjI5UEVMWWRsMVBLckszTTdsa2dLcE5LaWFyeThWVWN5MDFUNFhEZDhPQXV0ek1xTTYrWXd6UG1RVkZTU2daclZucURsUHJhRVlWa2gyWXNFc0Nqa3pNWko1a2dBeDdKOXdqMTZzaWZUdUJVVTI2Q2dISmZFajFEV1Z3dytINkFwVkIwb2VvVEpLZlpaQTB1M1RJaldMWmRoYkc0QnFvSHIzaWlpc3UyOWp1YXpyZ09WNmN0dlBTRktxdXVyQ1cyOG9RRW5ObGhrcEEyM0hVSmR3OGZrcW5lcDFkVjVhbEtWcHFubG80Vm4yQnBjRkRHVjd0YWxTNkNGRksxeEhUalFqWTQxUVRlTlF5cVpvLzFlUWJqZEhyZkorTVJubk9LalJ0VXlTSU03VkNFbmFIbVVxelNnYXEyZkhVT2h5UDBvUzczT1V1ODdrWng4ZkFwUTk5NkVPcjZmV3diVFBJZE5FbmVVSVRXVnRwenBEU08xRzV1VGlkSTk2Tlg2am0wS2dYVjVwcXFaV1NNU3VqalVDWFhlV2l4NWRCMGg3MzJGMXBiNmNSc3JkWU4xTmxIWU5VSjN0VTc5SXhaYjIvT3Nnb3MrcHBkamtJcU5aMjVEWFdOYTB0WW4wdU5xZXc4NlIxR1BvSDFheGFsdzJ2RUpMVUpqcjM0Tm5vSmVDa1huQjB2RDcrOFkrdlB2clJqOTQ0ZlR4dTQyQmUwOFh1eVl0Q2t5UUIxMUVKWFUxR2RjNjdaRjhORVZkbThudDltR1N5cXFVazVPNzh1WDgzQzZXR25sTkNjbHo2YW5WbW51Y2IxYWpVaUZnRlRuYTVvczZmNktKcG5RWlo2alhXTlFJYzVZZGt6RFFscSticHJJb01sR1JpTHlFMVJwSFNOUExkM21UcGo5U0VYL1ZOTW9PdVZuS2dLTVZtWU45STRNb1liQi83Mk1mWUx0NDQyTmQwd2pNclROaFcvU09ZU2ZVTlJneFNtYUQ3WEdQcFpKOHJnOVQ4eWFpR3ZacC9iaGtVcUwrRElTc0VKcE9uMWJmb2dKM1p1N2o2R1IzYWVRUi9HYzErckxOYkt0eDdaR1oyT1l2S0hKMURYNituOC9mU0gzTStvMkhha1U4aGc5VHZyTitvMFNmTnJab3R0OTBxZEFyK2pSb2J5cVluVFRFenhNMDMzenkvd3lDYnIvc2ROSU5NTjNuY2RPTHIwdW5oSm0xbmcwUk5abkRSSktMcW9DZWpqTGIwVlpiTXJTNGFOc3I4cDExZGZhSDBoMnI0TVJuYTgxcUhYODI4M0wvK3JzSTRSbEQ4VWEvaUxzK1RjK2hyTGlOL0k0Tm1LTFltQ2J2SVhXZFNkWDVQOWlmdytFTDlLeU5raEVtYWtzaFRDMlR5THYrWFhTeHRqaUZxbHpvYmVwWHhtU3BRMnF1Ky8vM3ZWMHVzUHZLUmp4eGdFaGxrMnE3YytFUmYwOFdja3pka0Mzd3VuZ1dCU1pTMG5lYW9mNjlqbEtYLzF3ckZKZTNRSlJKSDBiVmF0RFZDSE5kN1RDSm1EVmdMR1hDcE84dFNicVlMSzQ4aVhOWEhxQVN2UUtnOWM3T3BXamZiSlgyYW1pU3NqS3FnVVdQWXdiTHpHWkpCTXZ6YU9kZHFELzJTTkxuOHJmNEZ6amQvZzMrakl5VU13RXVOd1FaenlDQ2FXQWZsbk5jWDFWWFRSZTJ2MlVtZEtTTmNFa2duK2F0VVhhZEZPdUx0Zkk1UjlHbUVHZXR5TFg0bmszZEJoNnFsdHRLQ3RRc3pkeUhtNmx4M3ZsQUh3ZS9hR2kwVm5OWGd3dEpNK3pvSnJJT091SWFXeWFicHBBQ3RKbEVpYnF0cFZCbEpoc2hqcUZIMEx6Z1hxR282VWNJWU1FQTQzek5qeUF6NkhPR0RYRE45dk1QR29YaE5GMzV1VlkycU9jcy9POEpQYzJZN1crZlRWQWQvSk1tNzY2aWQ2VHRUTENOVjY1REVvenI0VWJDaXc0aU5jR0NqWnVEVlRLdGFyWXRNMWVTYzk3aWtxYm9oU1oyZzRITkNQclFzS2lpd2htR1RjZEtzeW1pVXByelFFSjEyU2dvb1YrYWRIZ0gwSWFZeE9KTzkwcS9Jei9VOVhtZHNIS29YV21SaWhwdGtpT3hibTdaZzVpQ1dZQ1pMMnlnaG1NZE53a2tpV2RKUVhUSnlpZWlYOWhtWlRHaWhwVjdGbVc4WU5ibnJZUHdkZzNRTTFlVmF1dVlabzdaTE5jcW5ka3Nmdy9xT3hEVFZzbFY3ZW1VVVNwcXBabFV5VVFJTEU0b09ROXoxcm5lZFo3VlFsc3c0Q1lhemFqTFY5OVFXdnBmWHRZZE1ld1NUWENBemRJWHVUbDB5Yzd0ZDdWSE5ucTcyZlFtSFZjT3I2WVRuTmdvL1oydlRFWk50dFVuM1ZnUkVwOEZxTjVkMXpTcEdXcVhXWTR5SzNWS1QxdkI4WnJxejQzb0NCMnVQNEE3L2xCRW5HU2ZOcW1TUzdBTm1jd3A4REw2akxTeU1nZG1rUmtqL0lqVkVtbFdONXVCMTFzYWhmdDNqSHZjNGNickptNm9mVWhNellyaTJ5aEJWNm8rSXF3dkgxa2hSMVNZcCtTcGhka1RiNVVlNjM0NUtqak54dUdTbWRYWDJTdmFsc3VVTXJYYlJydFRDQ1JJY2xTVFVmRThYZXM2UmRoMXN2S3ZnUzFOSlRlTFl0aXhha3NIUzlISjREMXFEOHpPQml4cWJEMzd3Zzdjd2w0eEdsYWpVTGZZWk1NZDFCNTBZM0s0V3lkNU8yVitJRzdWWWFhUkpLc0duYjdBa3dkT21ybEt3ODFkcXlIZ3JnWUdSRmx2SElGdEZIcS9MNUkvcVdrWjRycTdjb0d0eTBkMW5oZEtJRnNqQ0pKOXpKKzFIVEpKT2RZZkU5VmhxQ3h4dlIycFRza3lIZXFaNjBUbS8raEtWOEJmOGpOdEdlNFN6ZnZlSlFXNnU3VktxRFdwQ3lPcTBmRWd5aklTZGtyOUdpU3J6cEpUdm9DdHB3eWVScFAwOENpY3ZFWElYUGg2MUpPcVNoNk5TNWE1dVpna2ZsaEdtcFdiZHFjbHk3UkxSN0xHTTRHWHo1dlFEbHJxQzFNM29VMDNrMVgxRU9xY1poZGFnYlBtU1N5NlpaMEZTdXF3Wk5mQWpEdWExZjlxTzN6aWNyK21tejJ0YU5kNGlUSmRxR096TmtwU3YvYlR5NFNVQlpMUHNsSFFKWVI5QlhHUzZEaHZXU2RXbEZrZlZGS3ZIVGZPbjNuTVgrdTdNdk81K011cVY5ek1DV1ZhbVQvK3JtcHFzb1VqWDZtZDJNUE9PU1dTT0RoTlZFMzR5RHFoYTZ2bHBpVVE5L3ladzhJQnpYVExlaCtKMTVzYmhmcEZkbjI1OFgxZXgxYlZhc1R0NVo3Skl2RFZFcThRWC81VFNyaEoyU3NWSzJEV3YwVG5nSXlrL2Nsbzc1aG5aOTZOUWRkZnNlNTJ2azJqWUpQWlJtOVdPS2ZOY05xeVRjSFc2dTRLamprRkdtcVJDUnZJN3gwTFE5QnVHcE1QOXExNzFxcmxYV09Zb0RzSnMyc3ByNzhadDlhSjNxWXVFeE1sdTVMbDRpYmkwcnFURFQxV2ZJa0dITlFwVmlUb2xadFZFWFJIVmRrTE9OY2w0TUUyN0s0TjAybWhrYW8yYytlMzBLcTZKV2lzZ0pkZ09ORmg5aHRRTVM2YVd6bmo2SzJiV1lRcG0xWFArYzg4OWQvWGExNzUyRHRYV2lGT05SaDJpRjZHdmUyM2NscTlwQVM0MXE1bFZXbWxxWmRHTFVZenNabEZWZmNjTUhhTmt0S1l5V0ZkL3NsMU1XTFhkcTIvVUJSN1dhYUZxbmkxRjdVWVJzSzVCM3loWldpRTJPWkdLYmlwWlA5RTUyMzdPMEt3SndBNUJtMXBDTEJiUDMxN0VuSisrd3lCcWlVaWhNZkF6TUt0cW1QWXd2QzdjdUsxZjA4MmZUTmpYQldOUnFtT1hDUitsRVB0M1RkeTYvRVYxdmp1aTc2b0t1eXgrQjNrWm9ZMHIvS1JxcnZTcGxxb251N0R5VWpmNnFxMjY1RjJIN2VvaWI5aytGRC9RanZBVlBDZ0QxQVJlbDhqcnRFbk5keWdvNlVkTWNvOXJZTTdLdGRkZWV3c3pxbUtrYXBUcUVETE1kWWZkTVY5WGRaaUwyMFcxY21IdFRKRXRMZXRXR2FRelZaWXdXeDNoZHd5emprRTZUV0d3d1BPc1M0Z3VtVlJMM1ZrNmpUSUtLSFROTThoMkorR0tqK3JnSDhKQ0VsMmJ2a05ON0kzNjNHSk5ZRXJ4VGcwR2pFRWY0aVQ2Q2hwTVovd3dPT1dIQnBCNHNDL0dWRTFTNlpxS3hzekdYRFVPbmt4amk4MGt0SFNrTzh4VVI0RFZHUjBsR212bWVDbkRQY3JMVk9hdDViMVZlOVRRODdyV3F0MTFKek5XYlNaSU5HRWdZcGQ4QmhLNmpGQWpVZWxZZDBuQUdzTDFzNGhhb2xGc1dCSDBLbjcxcTE5OXdQSHVJQ0Exc2JlRnpQZkJ2cTdZdUwxZmQ3clRuZTVuczJZYk45ZkY3aUloYWhoK1YwT2pOVmRSZlkrdGFJV3RNTWhJK21kZXByWlFyZnNhZXE3bzRKRkoxU1gwdW1LeldvV1lhOEE1L2Rzb24vMmowdW11U1QxTllSa2xpWDZkQXk1ajhGdTcySk8vT09HRUUrYnpBVFcvNnFxcjVzU2VESkRtVTJkQ0hXWUd3VEUvWmVOSWVFMk8yRVhDQklBSXJHc0pXVE9zU0QySk1oOStsZG9wUFVmWitZcklIVUh1MTRFYTB6SHZ3c0hWa1UvRXNJMjZQVWJIT0ZVNytuZEYwdWF4cmIzSlRpUzFLWE0yUDZobVVvSUZsNWlnL2k4UnRmeVAzQVdPTitkZzZNK2IzdlNtdVNBSjRzYnhIaFFuM2RZTWN2YkdrZko2eWxPZWN0eXBwNTU2SlJva3RjY29FMXNmSk85T0tLM216SFlLcWthUWlpNFFzSzZpY1YwZFM1NnJWa0dPUUpaTDVseUYwblQxSjM0MjQ2MkpZNEZTK25valRaRFBZSVNpN2N3dnRBU013VHVqNFppTDhwYTN2T1VXOVJkcWk0NHhidVBYWlJ0SDJ1djg4OCsvKzkzdWRyY2JnUXp3NEJLTzRzUExlZUcxakZmMWI4V2I0NVVyTVkxQ3dLTkNyUzVYc1pUUnJyYi9VcTZpbHZwV0I3cUNNanVtVHhoSTFWYWFiMGFrbkgrUllmVVJEbXBkQ0xmbU9hckdNRlNMYndGR0N1WTQ4OHd6NTNIWWIzdmIyK2J3YkFVTkhzWkkxSFplUU5sUDJEZ1NYODk3M3ZOT0orN05vbmFtbFlNb3UrNTRKaDE1dDVmVEtFVGJtVlZiaGRlUG5QaVJscW9tVk5md29lWkxSbTJPRWwzY3RTcEtIeXpiNXpnYXVtdXphUXVkcGF4MkpYNjNOTDlrQ3R2eVlDclRRd3JtWUdBUW5ldVpGNTl3ODdwMXpuY0hLanlNTHk3dVBodEg4bXRheUl0NGtKUkVxcmJWRGp3TXh5anJUS1pLNTIrY2ZCNldwYnhwcGxScG5GSlpqRkp0U2plQ3RZL01ucEZmVTUxazY4K3I5cWh0aUNyY1BpTnZOVnljeDdQK29tYW5jODdGa3Fib0lPZ3BsR29lUk9DZ25VSDRURVNLc2RSVTdFbmcrQmUxbFBVd1I2S09UcjlqOUFKci8rcFh2L3BLSGo1UkRoYzlrWnhDcU5QVVN2c1hKbUUvbmZlYUlPdytwL1E5bUc0cTJ5M3NXcW84VEcyUkRGS2Q4bHJBWlRNRkUzdjZGNXFnb3dsS0k3T3EvcitHM3JPL0ZQa0xHSVByeGZHR01aSVJNaG8xcXIyNG5SbmtzbzJqNVRYWnAzZmZ1M2Z2all3WUk1dWFTU3FsbUE4OXMrMmFXT25nd3lSZFNGWWJQYzJjYk91ekxscFZFMy9icllEc2ZJN1JuSk91SlZGV1hqcXV1RFpXeTV6UlZqUkU1MnRVK0U4MjF1YjRSS01RWkR3cjVpWlNnMEc3bkhWRlNVZVlCamx5L1k3UmE1STRwNy83M2UrZUo4REtKTUpTT3VSdkIxSFJES3NScmt6QTBVd3VjVm5yektRbDh5azdkYXlMa2xWdE1zSkNkZGx1LzA0enF1c1BsVDVETWttTlZtVTFYaGV5clVOazJJOVdPVERHZ3g3MG9OV0xYdlNpMVhYWFhUZWJUN1VvNlFneW40NWV2MlBCM0RvYmFmUzR4ejF1ZmlBU3ZRTVVjUVJUazlUUWNOWXlaMy9nYkR6Z1o3UUF6TEtPR1dwa3FhSjhhOFJwbEl6czBNZHFvZzRpbjlFcTdzT0t2ZXcxVnFIazFVK29MVHByUmp6TjJRb2s1SjMxeHVuR0Q2UXJDRkJ6bVNMN1NHM0g4VDRDWHFkdkhNMnZhWUV2QUhidzFLYytkYlp6MmRJSHFUVWw2YnduQWNoSWx2TFdZVGZwOUc0bFo5S1pTWFUyeWNqMDZ2SXRYZjZraG5BdFRPcE1JM0ZxTlFTYldxUkwvS1hteVRhZHFWVmdETnB4c2kvQ0Npakk5ZGRmZjZ2UTdDaXgxOVY4SHlHdnN6WjJ3bXRhMUJjVElzVEd0Uk5lNWtDcWZWeFJ3UktQRllyWkhaMTNzdFkxY1pkRFBFZDl0YnFjeHRKb3VacnB6emFrTmFtWHg4NFozbll6cjAzVERObDJabGJ0TTFVN2dpU0RDQU5oN1Z4cjF1ZnBUMy82Nm5XdmU5MGNxdTBZWXBUWU93STFocTluYmV5VUZ6MklKdFY5T1RDRVY3emlGZlBEUTlWWEg2U0dJVHNHeVFLc2hIWUl3K2hNcktXNmllcXNtOG11TmZBMU1UaktxS3NwOUM5TXVKa2tUVEJuZGpLdk1JOWFrK0YrTmVmaFJLdjBNMlFNcnVuWnozNzI2aDN2ZU1jY3FsMHltNDVnRTZwN1hieXgwMTdUVGQxeGN0ejNZdU8rOHBXdm5COG1OUU0rOEJydXJTMU9Pek1NNGtpQ1QrYkluc0hkckk4Umxpb2pZMm9NdDNYRlhBWVBoSnJYMWtoRzg5THg3clREQ0NSWW1ja2tJWnY0cUR2ZitjN3pmVHozdWM5ZEVTU3BVSkN0UktPTzhOZkxEbm5UdHlPSVNVNmNHT1JxbU9TS0s2NlluV28wU1VMaEs0TklXT1pHS21JMUo4ZU9FbnNWRzVXK1JXcUFDcGlzKzJkSU9VMHFPeWFLajZxUThhV21CL1Z6TFY2cTJlL2NPSlkxR0RBTVVCRG1zMU9Ea1hrTEllZWpYTVpSeENCWElHZzNkdkpydXNHVHB3ZDFIUS9pclc5OTYrcWhEMzNvQVFmU01zMVJHRGo3dHViLzFTUWpHRXJuT0hjNHFsRmZybzZaWkNpMGhTaUJycnRMTWtFMzB6dk5xdFFvcVIzeU8ydThNYU5ZTjh5NUp6N3hpWFBYd1J0dXVLRjFyTGVUeXppQ1gxZmZicFdCdHdlVG9FbDRJUFJBZXN4akhqUG5Tbmp3aVFqT1dkWVNUNDF5U1d6WjlyUnFqVm9Ea21aVDdTd3lNci95R0dpTXpIYlhFRzNXV2xUNGVOVXVWU3RrYWJKTWxYWGhNTVluZmRJbnpYL1RkZkROYjM3emdScU1yY0xMajhMWEZVZGRJdkJRbUZ1MFl1SHVzWlhCL1ZCOFk3SXJJU2t3amZYVVMrT0FNWEc2K1I0ZCtyYjZGclVXSkJrb1lTQnNSb2xHalEvU3YwaC9JUk9DTWxnMlVhdU9lUUk0QVhvQ0JPVjN6M3ptTStldTVyVktyM3Z0QU9hNGRNZWJWV3NjOTh0NWNJUWZlZkF3QW5INzdJcFNoOFozMmZnY0VXZUVxL2JPcXY1RWx3aXMrQ29qVWpyZVhmNWkxSnUySnV4a0FxZTZkbFY5R2RreWh3R3pQT1FoRDVuRDVHOS8rOXR2MGJrYzJMbkp2UjM0dW1USE91VGJDUUdUSitFQjB3NkdlZ01JQldsWnc3OFYzRmlaSktOZTl1SEtpVWxkeFdJSFg3ZmNWYWU3Rm5xbGhNL2dRUjBDVXpWS01uMDNnODkzSWxMY1Avcys0aEdQbUVQamhHcHJscnRXN2UydzF3VWJ1NjliWnR5RlV3T0JjSzYxa3RROFFzNG9NYnZlTVlwOXVOSmtTdWZiV1I0bUhXVWNTMW16ejFkdGdqZWFuTlFOdGM5R0NhTkpyV29XN28wWkdQZ1pkQjNjdTNmdjZyM3ZmZStCeVVrSkNkbmhESExXTGtmMFRISzJvVWpDd0dnQkpDbjJkenJDZk80cUU3dldtQkJmb253N2NLTEp2YXpZeTFhY28rSDBTMjMvNnh3KzJ4MVZjMG9maXlJenZudkNFNTZ3ZXVNYjMzaWd4dHNlVWxuT09rcjQ3WURYemJkcm01NmpCUVhNY0hjZU9NMEFIdjd3aDg4SlJSbkNkKzM0a2JubC95QStpTlJPOHpsaVd2UEw5dnZadURrTGs3b2hsRFVmMC9ralZZUElJUHpHY2NXOFArQUJENWloSUs5Ly9lc1BkRFd2Z01FUmFQQjJydjArbEM4YXZOMXZsd08yNXBmY25SRzlyQnJSR3V6d2swNDZhU1ppQ1JMQ1QxelR5QjlKQWhhckpGNHBSeFhuYkwzMEdWSmJWS0JoSFRuV0RhbE1IOFFtQ3pBOG12SDAwMDlmUGYvNXp6OFFxdDFxMTQ5dERJczVXbDZYRTlYY3BmenRNY2x4azNTOENBbjV6bmUrY3pZOWFINnNVNXhvNE03RXlyOGhTc3cwdFlTL1M3Tk5oc2xPa0pwR3RWdjlxSE5rZGRZVFIyVU9BNytLR295WHYvemxjMkxQK1Jmci9JZ2RHcVhDcERyM21JOVVIUXFUQzdBZGtIbXdSblJPcWRucU5IKzZMZWZwMVc0cW1aeXIrQ2cxaTU4elk5N1ZjQ1NqY1F5WUVxYUFRUmxBK1pyWHZPYkFISXgxU05xYXk5aGhyMTJUNmxDOUtPR2RpT2hLSEZmUXFiYlRyK1pNNWtzNkI5N09IUWtPVEEzUU5YRk8vOExQRllHY2RSc2NuKzl3dWpHanlKODg2VWxQbW1zdzBCZzYyd2tlWERkQmFRY3l4NjVKZFRoTXJvbWdMa0w2dnZTbEw1MmRhNGd3RzBIb1pGZVRLeUVyUktwa2tpVkViVGNBcHBheGVoNk82WVFtcmdubXBRYmpHYzk0eHV4NHYrOTk3N3RGTktxcjlUNUdYcnNtMWVGK1RVUjJ2MG1UWEVQeEQ0UjVwenZkcVUwbWRnd0NjVnNEbm1EQVdzcGFlOVRXWEVZeWtkL2plQU0zQjJiL25PYzhaNTZEWVhPMVpJeFJPZXN4OEhyRDZyWWVZbk1zYTVOcE8rZU5iM3pqVFlSdmNkNjdSblNWU1NCbTBiY1pXY3IzZFF3aVkxaW9aRVRxd1E5KzhPb0ZMM2pCSEZCSTA2Z0x6eDdDb1pSSHc0dkJtWS9jMVJxM0Q2T2NmTTAxMTF6NnFFYzk2a0NpcmZvS1JxNnkxNVpWZmhWTzNwVzFKb1A0UGNmaWZEQWRYVnRlOHBLWHpLamtDZ0hwL0ljZGx0aGJXL2wzektGd2o4VFhaTTZjTmpuQyswaThFZUhLL0laaFhiUHhXUVpibmZQTVphVC9ZZlFMMzRKUUxZbkdKei81eVhPMmYvLysvYmRLNk4wR0k4V085TmRWcTZPMUZjOU9mZTNidCsrNHB6M3RhZWZkNVM1M3VabnNkT0tsZE9DRm1kZlMxU3huclUwUVlESk11Qk5QUEhIKzdmbm5uejhuOWdCV2loMWpPOHhUa282VzE0M2dxSGJOcVNQNDlkem5QdmZ1a3hhNVlHS1NtMnFMSEdlUjJNV3dHeldXQXlzeG8zQzhnWUxRN2gvSGU1MS9jWXhxRC95TTgzWkR0MGZSNjc3M3ZlK0premwwd2NRWU45bXNUaE1yUVltMTlKWDZDK0RtL0k4YWpFc3V1V1IydkVkbHExdnhMM1l3dyt6ZkROc2V2MHR4UitscjBnREhULzdIdVJOejdCZTBDSVBrYkc5YjVWRDJ5OTlubjMzMjNIa0ZqVkdyOXJhQ29EMEdOTWgxbTZiVWNic1V0b01ZWmRJZTUwem0xWFdZV09aRE1LTmdEUHdORW50QXpXKzg4Y1lETlJoTERaeVBzZXozakIzZFpZeWRiM29kTjJtT015ZkcySVBKaFJsRll1OWQ3M3JYTFlpNmZ0NEJ0ZDJmU1BhYnV2RFRkNTN2WSt5MVo4K2VrMjY0NFlaekpvSy9PcXYwMWpISE1aVDVQbXMzajdIN21sOGYrY2hIN2oweHg0VVRvMXkvNUh6dmNBWmh6c2I1MDNicUxrWHN2dG9YWnNURUtLZE5qSExKcGpPNjB4bGszN1E5WnhkNnZ2czZXSVk1QlN6Ulp1ZVYvVHVBUVdCNm1QOE1vRHE3VDNqM2RhZ1o1cDZidHZtbG01bmpveUZYOGNKTndPQXB1MDl3OTNWN2FKZ0hiakxOUmRPMlI5UHNkdkFmTHB1MkM2ZnQwZE4yLzEwTnNmczZraG5uZU9vZnB1MWhtOW5taXplM2wyMHkwWjVOKzMvZnBwU3ZyK3MzLzNkTjdQL2l6V1BnTTV5ekdYcEZvOTF4ZDhVUHordi9BN25BWGNLUHQ1QUtBQUFBQUVsRlRrU3VRbUNDO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iNyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSIxOTQiIHk9IjM1IiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjQxIiB2YWx1ZT0iT3RoZXIgZGF0YWJhc2UgLT4gRW1iZWRkZWQgU3RvcmFnZSIgc3R5bGU9ImlyLnJlZj1jNzQxMTI4YS01OWIwLTQwMDEtOWUzMC04MGQ5ZTRmYjdjNWY7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO2V4aXRYPTA7ZXhpdFk9MC43NTtleGl0RHg9MDtleGl0RHk9MDtlbnRyeVg9MTtlbnRyeVk9MC43NTtlbnRyeUR4PTA7ZW50cnlEeT0wO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSI3IiBzb3VyY2U9IjM1IiB0YXJnZXQ9IjM0IiBlZGdlPSIxIj48bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ij48QXJyYXkgYXM9InBvaW50cyI+PG14UG9pbnQgeD0iMzQ2IiB5PSIxMjIiLz48L0FycmF5PjwvbXhHZW9tZXRyeT48L214Q2VsbD48bXhDZWxsIGlkPSIzNSIgdmFsdWU9Ik90aGVyIGRhdGFiYXNlIiBzdHlsZT0iaXIucmVmPTgyM2VlZDhlLTc5YjQtNDMyNC05ZWI1LWJkZmMxMmVkZjJhYjtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1vdGhlcjtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQSE4wZVd4bFBpWWplR0U3SUNBZ0lDNXBZMjl1TFdacGJHd2dleVlqZUdFN0lDQWdJQ0FnSUNCbWFXeHNPaUFqTVRGQk9FTkdPeVlqZUdFN0lDQWdJSDBtSTNoaE96d3ZjM1I1YkdVK0ppTjRZVHM4WnlCamJHbHdMWEJoZEdnOUluVnliQ2dqWTJ4cGNEQXBJajRtSTNoaE96eHdZWFJvSUdROUlrMHdMalV3TURFMU5pQXdMalF4TlRrMU5rTXdMalk0TnpreU1TQXdMalF4TlRrMU5pQXdMamcwTURFMU5pQXdMak0wTURjM05pQXdMamcwTURFMU5pQXdMakkwTnprMU5rTXdMamcwTURFMU5pQXdMakUxTlRFek5pQXdMalk0TnpreU1TQXdMakEzT1RrMU5qRWdNQzQxTURBeE5UWWdNQzR3TnprNU5UWXhRekF1TXpFeU16a3hJREF1TURjNU9UVTJNU0F3TGpFMk1ERTFOaUF3TGpFMU5URXpOaUF3TGpFMk1ERTFOaUF3TGpJME56azFOa013TGpFMk1ERTFOaUF3TGpNME1EYzNOaUF3TGpNeE1qTTVNU0F3TGpReE5UazFOaUF3TGpVd01ERTFOaUF3TGpReE5UazFObHBOTUM0M05qa3dPVFlnTUM0ME1qTXdPVFpETUM0M09UUTNOemdnTUM0ME1UQTJNek1nTUM0NE1UZzJOelFnTUM0ek9UUTROVGNnTUM0NE5EQXhOVFlnTUM0ek56WXhPREpXTUM0M05URTVOVFpETUM0NE5EQXhOVFlnTUM0NE5EUTNOellnTUM0Mk9EYzVNakVnTUM0NU1UazVOVFlnTUM0MU1EQXhOVFlnTUM0NU1UazVOVFpETUM0ek1USXpPVEVnTUM0NU1UazVOVFlnTUM0eE5qQXhOVFlnTUM0NE5EUTNOellnTUM0eE5qQXhOVFlnTUM0M05URTVOVFpXTUM0ek56WXhPREpETUM0eE9ERTJNemtnTUM0ek9UUTROVGNnTUM0eU1EVTFNelFnTUM0ME1UQTJNek1nTUM0eU16RXlNVFlnTUM0ME1qTXdPVFpETUM0ek1ETXpPREVnTUM0ME5UZzNNVElnTUM0ek9UZzBPVFlnTUM0ME56ZzVOVFlnTUM0MU1EQXhOVFlnTUM0ME56ZzVOVFpETUM0Mk1ERTRNVFlnTUM0ME56ZzVOVFlnTUM0Mk9UWTVNekVnTUM0ME5UZzNNVElnTUM0M05qa3dPVFlnTUM0ME1qTXdPVFphSWlCamJHRnpjejBpYVdOdmJpMW1hV3hzSWk4K0ppTjRZVHM4TDJjK0ppTjRZVHM4WkdWbWN6NG1JM2hoT3p4amJHbHdVR0YwYUNCcFpEMGlZMnhwY0RBaVBpWWplR0U3UEhKbFkzUWdkMmxrZEdnOUlqRWlJR2hsYVdkb2REMGlNU0lnWm1sc2JEMGlkMmhwZEdVaUx6NG1JM2hoT3p3dlkyeHBjRkJoZEdnK0ppTjRZVHM4TDJSbFpuTStKaU40WVRzOEwzTjJaejQ9O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iNyIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSI0MDkiIHk9IjMzIiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjM3IiB2YWx1ZT0iU2Vuc29yIC0+IElvVCBBcHBsaWNhdGlvbiIgc3R5bGU9ImlyLnJlZj0zNjI4NGJhNi1kZTI2LTQ0ZGItOWM3NC1hZmIzOWE3MmIwY2E7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO2V4aXRYPTA7ZXhpdFk9MC41O2V4aXREeD0wO2V4aXREeT0wO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSI3IiBzb3VyY2U9IjM2IiB0YXJnZXQ9IjQiIGVkZ2U9IjEiPjxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIzNiIgdmFsdWU9IlNlbnNvciIgc3R5bGU9ImlyLnJlZj05MjQ2ZDg2MC1kYjMyLTQxOWMtOGZlNi1lOGZhMmVlZTE0YTA7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtU0VOU09SO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJeElpQjJhV1YzUW05NFBTSXdJREFnTVNBeElpQm1hV3hzUFNKdWIyNWxJaUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lQanh6ZEhsc1pUNGdJQ0FnTG1samIyNHRabWxzYkNCN0lDQWdJQ0FnSUNCbWFXeHNPaUFqTVRGQk9FTkdPeUFnSUNCOVBDOXpkSGxzWlQ0OFp5QmpiR2x3TFhCaGRHZzlJblZ5YkNnalkyeHBjREJmTWpJMk4xOHlNall4TmlraVBqeHdZWFJvSUdROUlrMHdMakkyTVRReE9DQXdMalkzTlRBeU9VTXdMakkzTnpNNElEQXVOamt5TmpFeElEQXVNamsyTmprZ01DNDNNRGMzT1RFZ01DNHpNVGN5TVRrZ01DNDNNVGt6TlRaRE1DNHpNekF6TnprZ01DNDNNalkzTnlBd0xqTTBOalV3TkNBd0xqY3lNVEF5T1NBd0xqTTFNekl6TlNBd0xqY3dOalV6TkVNd0xqTTFPVGsyTnlBd0xqWTVNakF6T1NBd0xqTTFORGMxTlNBd0xqWTNOREkzT0NBd0xqTTBNVFU1TlNBd0xqWTJOamcyTkVNd0xqTXlOVGt3TXlBd0xqWTFPREF5TkNBd0xqTXhNVEUxTkNBd0xqWTBOalF6SURBdU1qazVNalk1SURBdU5qTXpNek01UXpBdU1qTTFNakU0SURBdU5UWXlOemtnTUM0eU16VXlNVGdnTUM0ME5EZzBNRGdnTUM0eU9Ua3lOamtnTUM0ek56YzROa013TGpNeE1UY3hOaUF3TGpNMk5ERTFJREF1TXpJMU5qazVJREF1TXpVek1ESXpJREF1TXpReE1EZ3hJREF1TXpRME5EVXpRekF1TXpVME1qY3lJREF1TXpNM01UQTBJREF1TXpVNU5UVTJJREF1TXpFNU16WTVJREF1TXpVeU9EZzBJREF1TXpBME9EUXhRekF1TXpRMk1qRXlJREF1TWprd016RXlJREF1TXpNd01URXhJREF1TWpnME5Ea3lJREF1TXpFMk9USWdNQzR5T1RFNE5ERkRNQzR5T1RZME9UY2dNQzR6TURNeU1Ua2dNQzR5TnpjNE9TQXdMak14T0RBeU5pQXdMakkyTVRReE9DQXdMak16TmpFMk9VTXdMakUzTmpRMk1pQXdMalF5T1RjME15QXdMakUzTmpRMk1pQXdMalU0TVRRMU5pQXdMakkyTVRReE9DQXdMalkzTlRBeU9WcE5NQzR6TkRFME9EWWdNQzQyTVRRMk1qZERNQzR6TlRNNE1UUWdNQzQyTWpneU1EWWdNQzR6TmpnNU1EVWdNQzQyTXprek5DQXdMak00TkRrMk5pQXdMalkwTnpBNU1rTXdMak01T0RVd05TQXdMalkxTXpZeU5pQXdMalF4TkRJNUlEQXVOalEyT0RNMUlEQXVOREl3TWpJeUlEQXVOak14T1RJelF6QXVOREkyTVRVMUlEQXVOakUzTURFZ01DNDBNVGs1T0RrZ01DNDFPVGsyTWpRZ01DNDBNRFkwTlNBd0xqVTVNekE1UXpBdU16azJNelV4SURBdU5UZzRNakUxSURBdU16ZzJPRE15SURBdU5UZ3hNVGt5SURBdU16YzVNek0zSURBdU5UY3lPVE0yUXpBdU16UTFOVFE1SURBdU5UTTFOekl4SURBdU16UTFOVFE1SURBdU5EYzFNemd5SURBdU16YzVNek0zSURBdU5ETTRNVFkzUXpBdU16ZzJOemcwSURBdU5ESTVPVFkwSURBdU16azFPVEF4SURBdU5ESXpNamN4SURBdU5EQTJNVEE0SURBdU5ERTRNelV4UXpBdU5ERTVOalVnTUM0ME1URTRNalVnTUM0ME1qVTRNalFnTUM0ek9UUTBORElnTUM0ME1UazRPVGtnTUM0ek56azFNalpETUM0ME1UTTVOek1nTUM0ek5qUTJNVEVnTUM0ek9UZ3hPVElnTUM0ek5UYzRNU0F3TGpNNE5EWTFJREF1TXpZME16TTJRekF1TXpZNE5TQXdMak0zTWpFeUlEQXVNelV6T0RBeElEQXVNemd5T1RFeUlEQXVNelF4TkRnMklEQXVNemsyTkRjMlF6QXVNamcyTnpreklEQXVORFUyTnpFM0lEQXVNamcyTnpreklEQXVOVFUwTXpnMklEQXVNelF4TkRnMklEQXVOakUwTmpJM1drMHdMakU1TmpreU5TQXdMamMxTWpjeE1rTXdMakl4TURVeU1TQXdMamMyTnpZNE9DQXdMakl5TmpBek1TQXdMamM0TVRnd05pQXdMakkwTWpFNU9TQXdMamM1TkRBNU4wTXdMakkxTkRNMk5DQXdMamd3TXpNME5TQXdMakkzTVRBek15QXdMamM1T1RrM09TQXdMakkzT1RReU9TQXdMamM0TmpVM09VTXdMakk0TnpneU5pQXdMamMzTXpFNElEQXVNamcwTnpjZ01DNDNOVFE0TWlBd0xqSTNNall3TlNBd0xqYzBOVFUzTWtNd0xqSTFPVEEwTXlBd0xqY3pOVEkyTXlBd0xqSTBOakF5T1NBd0xqY3lNelF4TnlBd0xqSXpORGMzTmlBd0xqY3hNVEF5TWtNd0xqRXpNVEV6TlNBd0xqVTVOamcyTnlBd0xqRXpNVEV6TlNBd0xqUXhNVGM0TmlBd0xqSXpORGMzTmlBd0xqSTVOell6TVVNd0xqSTBOVFEySURBdU1qZzFPRFl6SURBdU1qVTRORGdnTUM0eU56UXhNelVnTUM0eU56STFNRElnTUM0eU5qTTBNakZETUM0eU9EUTJORGNnTUM0eU5UUXhOREVnTUM0eU9EYzJOaklnTUM0eU16VTNOek1nTUM0eU56a3lNemNnTUM0eU1qSXpPVFpETUM0eU56QTRNVEVnTUM0eU1Ea3dNVGdnTUM0eU5UUXhNelVnTUM0eU1EVTJPVGNnTUM0eU5ERTVPU0F3TGpJeE5EazNOME13TGpJeU5UUTNOeUF3TGpJeU56VTVOU0F3TGpJeE1EQXhNeUF3TGpJME1UVXlOQ0F3TGpFNU5qa3lOU0F3TGpJMU5UazBRekF1TURjeU16YzVNaUF3TGpNNU16RXlJREF1TURjeU16YzVNaUF3TGpZeE5UVXpNaUF3TGpFNU5qa3lOU0F3TGpjMU1qY3hNbG9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OGNHRjBhQ0JrUFNKTk1DNDNNemd3T1RRZ01DNDJOelV3TWpsRE1DNDNNakl4TXpJZ01DNDJPVEkyTVRFZ01DNDNNREk0TWpJZ01DNDNNRGMzT1RFZ01DNDJPREl5T1RNZ01DNDNNVGt6TlRaRE1DNDJOamt4TXpNZ01DNDNNalkzTnlBd0xqWTFNekF3TnlBd0xqY3lNVEF5T1NBd0xqWTBOakkzTmlBd0xqY3dOalV6TkVNd0xqWXpPVFUwTlNBd0xqWTVNakF6T1NBd0xqWTBORGMxTnlBd0xqWTNOREkzT0NBd0xqWTFOemt4TnlBd0xqWTJOamcyTkVNd0xqWTNNell3T1NBd0xqWTFPREF5TkNBd0xqWTRPRE0xT0NBd0xqWTBOalF6SURBdU56QXdNalF6SURBdU5qTXpNek01UXpBdU56WTBNamswSURBdU5UWXlOemtnTUM0M05qUXlPVFFnTUM0ME5EZzBNRGdnTUM0M01EQXlORE1nTUM0ek56YzROa013TGpZNE56YzVOaUF3TGpNMk5ERTFJREF1Tmpjek9ERXpJREF1TXpVek1ESXpJREF1TmpVNE5ETWdNQzR6TkRRME5UTkRNQzQyTkRVeU5DQXdMak16TnpFd05DQXdMall6T1RrMU5pQXdMak14T1RNMk9TQXdMalkwTmpZeU9DQXdMak13TkRnME1VTXdMalkxTXpJNU9TQXdMakk1TURNeE1pQXdMalkyT1RRd01TQXdMakk0TkRRNU1pQXdMalk0TWpVNU1TQXdMakk1TVRnME1VTXdMamN3TXpBeE5TQXdMak13TXpJeE9TQXdMamN5TVRZeU1pQXdMak14T0RBeU5pQXdMamN6T0RBNU5DQXdMak16TmpFMk9VTXdMamd5TXpBMUlEQXVOREk1TnpReklEQXVPREl6TURVZ01DNDFPREUwTlRZZ01DNDNNemd3T1RRZ01DNDJOelV3TWpsYVRUQXVOalU0TURJMklEQXVOakUwTmpJM1F6QXVOalExTmprNElEQXVOakk0TWpBMklEQXVOak13TmpBM0lEQXVOak01TXpRZ01DNDJNVFExTkRZZ01DNDJORGN3T1RKRE1DNDJNREV3TURjZ01DNDJOVE0yTWpZZ01DNDFPRFV5TWpJZ01DNDJORFk0TXpVZ01DNDFOemt5T0RrZ01DNDJNekU1TWpORE1DNDFOek16TlRjZ01DNDJNVGN3TVNBd0xqVTNPVFV5TXlBd0xqVTVPVFl5TkNBd0xqVTVNekEyTVNBd0xqVTVNekE1UXpBdU5qQXpNVFl4SURBdU5UZzRNakUxSURBdU5qRXlOamdnTUM0MU9ERXhPVElnTUM0Mk1qQXhOelVnTUM0MU56STVNelpETUM0Mk5UTTVOak1nTUM0MU16VTNNakVnTUM0Mk5UTTVOak1nTUM0ME56VXpPRElnTUM0Mk1qQXhOelVnTUM0ME16Z3hOamRETUM0Mk1USTNNamdnTUM0ME1qazVOalFnTUM0Mk1ETTJNVEVnTUM0ME1qTXlOekVnTUM0MU9UTTBNRFFnTUM0ME1UZ3pOVEZETUM0MU56azROaklnTUM0ME1URTRNalVnTUM0MU56TTJPRGNnTUM0ek9UUTBORElnTUM0MU56azJNVE1nTUM0ek56azFNalpETUM0MU9EVTFNemdnTUM0ek5qUTJNVEVnTUM0Mk1ERXpNaUF3TGpNMU56Z3hJREF1TmpFME9EWXlJREF1TXpZME16TTJRekF1TmpNeE1ERXlJREF1TXpjeU1USWdNQzQyTkRVM01URWdNQzR6T0RJNU1USWdNQzQyTlRnd01qWWdNQzR6T1RZME56WkRNQzQzTVRJM01UZ2dNQzQwTlRZM01UY2dNQzQzTVRJM01UZ2dNQzQxTlRRek9EWWdNQzQyTlRnd01qWWdNQzQyTVRRMk1qZGFUVEF1T0RBeU5UZzNJREF1TnpVeU56RXlRekF1TnpnNE9Ua2dNQzQzTmpjMk9EZ2dNQzQzTnpNME9ERWdNQzQzT0RFNE1EWWdNQzQzTlRjek1UTWdNQzQzT1RRd09UZERNQzQzTkRVeE5EY2dNQzQ0TURNek5EVWdNQzQzTWpnME56a2dNQzQzT1RrNU56a2dNQzQzTWpBd09ESWdNQzQzT0RZMU56bERNQzQzTVRFMk9EWWdNQzQzTnpNeE9DQXdMamN4TkRjME1pQXdMamMxTkRneUlEQXVOekkyT1RBM0lEQXVOelExTlRjeVF6QXVOelF3TkRZNUlEQXVOek0xTWpZeklEQXVOelV6TkRneUlEQXVOekl6TkRFM0lEQXVOelkwTnpNMklEQXVOekV4TURJeVF6QXVPRFk0TXpjM0lEQXVOVGsyT0RZM0lEQXVPRFk0TXpjM0lEQXVOREV4TnpnMklEQXVOelkwTnpNMklEQXVNamszTmpNeFF6QXVOelUwTURVeUlEQXVNamcxT0RZeklEQXVOelF4TURNeUlEQXVNamMwTVRNMUlEQXVOekkzTURFZ01DNHlOak0wTWpGRE1DNDNNVFE0TmpVZ01DNHlOVFF4TkRFZ01DNDNNVEU0TkRrZ01DNHlNelUzTnpNZ01DNDNNakF5TnpVZ01DNHlNakl6T1RaRE1DNDNNamczTURFZ01DNHlNRGt3TVRnZ01DNDNORFV6TnpjZ01DNHlNRFUyT1RjZ01DNDNOVGMxTWpJZ01DNHlNVFE1TnpkRE1DNDNOelF3TXpVZ01DNHlNamMxT1RVZ01DNDNPRGswT1RnZ01DNHlOREUxTWpRZ01DNDRNREkxT0RjZ01DNHlOVFU1TkVNd0xqa3lOekV6TWlBd0xqTTVNekV5SURBdU9USTNNVE15SURBdU5qRTFOVE15SURBdU9EQXlOVGczSURBdU56VXlOekV5V2lJZ1kyeGhjM005SW1samIyNHRabWxzYkNJdlBqeGxiR3hwY0hObElHTjRQU0l3TGpRNU9UWTRPQ0lnWTNrOUlqQXVOVEE1TkRVeklpQnllRDBpTUM0d056Y3pNalEySWlCeWVUMGlNQzR3Tnpjek1qUTJJaUJqYkdGemN6MGlhV052YmkxbWFXeHNJaTgrUEM5blBqeGtaV1p6UGp4amJHbHdVR0YwYUNCcFpEMGlZMnhwY0RCZk1qSTJOMTh5TWpZeE5pSStQSEpsWTNRZ2QybGtkR2c5SWpBdU9EZ2lJR2hsYVdkb2REMGlNQzQ0T0NJZ1ptbHNiRDBpZDJocGRHVWlJSFJ5WVc1elptOXliVDBpZEhKaGJuTnNZWFJsS0RBdU1EWXdNRFU0TmlBd0xqQTJNREExT0RZcElpOCtQQzlqYkdsd1VHRjBhRDQ4TDJSbFpuTStQQzl6ZG1jKzt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjciIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iNDExIiB5PSIyMTEiIHdpZHRoPSI4NiIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iNTgiIHZhbHVlPSJFeHRlcm5hbCBWaWRlbyBpbnRlcmZhY2UiIHN0eWxlPSJpci5yZWY9MzU2ODAyZWItZTVkNy00ODllLWIzMjUtOGNhMWIwYWNjODk4O3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWVtcHR5LWNvbXBvbmVudDt2ZXJ0aWNhbExhYmVsUG9zaXRpb249bWlkZGxlO3ZlcnRpY2FsQWxpZ249bWlkZGxlO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjciIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iMjMiIHk9IjUwIiB3aWR0aD0iMTIyIiBoZWlnaHQ9IjQzIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSI1OSIgdmFsdWU9IlVTQiBwb3J0IiBzdHlsZT0iaXIucmVmPThlZTQ4NWI4LTYyNTQtNGEyZC1hMDVlLTMzOWEyN2FhYmFmZjtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1DRC1VU0ItUE9SVDtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJaUIyYVdWM1FtOTRQU0l3SURBZ01TQXhJaUJtYVd4c1BTSnViMjVsSWlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpUGp4emRIbHNaVDRnSUNBZ0xtbGpiMjR0Wm1sc2JDQjdJQ0FnSUNBZ0lDQm1hV3hzT2lBak1URkJPRU5HT3lBZ0lDQjlQQzl6ZEhsc1pUNDhaeUJqYkdsd0xYQmhkR2c5SW5WeWJDZ2pZMnhwY0RCZk1qSTJOMTh5TWpnek5pa2lQanh3WVhSb0lHUTlJazB3TGpFM05ETXhOaUF3TGpJeE1qZzJOa013TGpFM05ETXhOaUF3TGpFNU1UY3hNU0F3TGpFNU1UUTJOeUF3TGpFM05EVTJNU0F3TGpJeE1qWXlNaUF3TGpFM05EVTJNVWd3TGpjNE56SXhNVU13TGpnd09ETTJOaUF3TGpFM05EVTJNU0F3TGpneU5UVXhOaUF3TGpFNU1UY3hNU0F3TGpneU5UVXhOaUF3TGpJeE1qZzJObFl3TGpjNE56UTFOVU13TGpneU5UVXhOaUF3TGpnd09EWXhJREF1T0RBNE16WTJJREF1T0RJMU56WWdNQzQzT0RjeU1URWdNQzQ0TWpVM05rZ3dMakl4TWpZeU1rTXdMakU1TVRRMk55QXdMamd5TlRjMklEQXVNVGMwTXpFMklEQXVPREE0TmpFZ01DNHhOelF6TVRZZ01DNDNPRGMwTlRWV01DNHlNVEk0TmpaYUlpQmpiR0Z6Y3owaWFXTnZiaTFtYVd4c0lpOCtQSEJoZEdnZ1pEMGlUVEF1TVRnek1UQTFJREF1TWpJd05qSkRNQzR4T0RNeE1EVWdNQzR5TURBd016WWdNQzR4T1RrM09USWdNQzR4T0RNek5TQXdMakl5TURNM05pQXdMakU0TXpNMVNEQXVOemM1TkRNMVF6QXVPREF3TURFNUlEQXVNVGd6TXpVZ01DNDRNVFkzTURVZ01DNHlNREF3TXpZZ01DNDRNVFkzTURVZ01DNHlNakEyTWxZd0xqYzNPVFkzT1VNd0xqZ3hOamN3TlNBd0xqZ3dNREkyTXlBd0xqZ3dNREF4T1NBd0xqZ3hOamsxSURBdU56YzVORE0xSURBdU9ERTJPVFZJTUM0eU1qQXpOelpETUM0eE9UazNPVElnTUM0NE1UWTVOU0F3TGpFNE16RXdOU0F3TGpnd01ESTJNeUF3TGpFNE16RXdOU0F3TGpjM09UWTNPVll3TGpJeU1EWXlXaUlnWm1sc2JEMGlkMmhwZEdVaUlHWnBiR3d0YjNCaFkybDBlVDBpTUM0NElpOCtQSEJoZEdnZ1pEMGlUVEF1TlRreE1ETTRJREF1TWpVNE5qSTBRekF1TlRreE9UQTVJREF1TWpVNU1EWWdNQzQxT1RJek5EUWdNQzR5TlRrM09UUWdNQzQxT1RJek5EUWdNQzR5TmpBNE1qaERNQzQxT1RJek5EUWdNQzR5TmpFNE5qSWdNQzQxT1RFNU1Ea2dNQzR5TmpJMU9UWWdNQzQxT1RFd016Z2dNQzR5TmpNd016Sk1NQzQxTmpRNU1pQXdMakkzT0Rjd01rTXdMalUyTkRRNE5TQXdMakkzT0RrM05DQXdMalUyTkRBMUlEQXVNamM1TVRFZ01DNDFOak0yTVRVZ01DNHlOemt4TVVNd0xqVTJNekV5TlNBd0xqSTNPVEV4SURBdU5UWXlOamtnTUM0eU56a3dNREVnTUM0MU5qSXpNRGtnTUM0eU56ZzNPRFJETUM0MU5qRTBNemdnTUM0eU56Z3lOQ0F3TGpVMk1UQXdNeUF3TGpJM056UTNPQ0F3TGpVMk1UQXdNeUF3TGpJM05qUTVPVll3TGpJMk5qQTFNVWd3TGpRNU1EazNOVU13TGpRNU1qazRPQ0F3TGpJMk9USXdOeUF3TGpRNU5USTBOaUF3TGpJM016WTVOaUF3TGpRNU56YzBPU0F3TGpJM09UVXhPRU13TGpRNU9EWXlJREF1TWpneE5UTXlJREF1TkRrNU1qZzJJREF1TWpnek1ESTRJREF1TkRrNU56UTVJREF1TWpnME1EQTNRekF1TlRBd01qRXhJREF1TWpnME9UZzNJREF1TlRBd09EWTBJREF1TWpnMk16SWdNQzQxTURFM01EZ2dNQzR5T0Rnd01EZERNQzQxTURJMU5URWdNQzR5T0RrMk9UTWdNQzQxTURNeU9EVWdNQzR5T1RBNU56SWdNQzQxTURNNU1URWdNQzR5T1RFNE5ETkRNQzQxTURRMU16Y2dNQzR5T1RJM01UTWdNQzQxTURVeU56SWdNQzR5T1RNMk16Z2dNQzQxTURZeE1UVWdNQzR5T1RRMk1UaERNQzQxTURZNU5UZ2dNQzR5T1RVMU9UY2dNQzQxTURjNE1UVWdNQzR5T1RZek1EUWdNQzQxTURnMk9EWWdNQzR5T1RZM05FTXdMalV3T1RVMU5pQXdMakk1TnpFM05TQXdMalV4TURRMU5DQXdMakk1TnpNNU15QXdMalV4TVRNM09TQXdMakk1TnpNNU0wZ3dMalV4T1RJeE5WWXdMakk0T1RVMU4wTXdMalV4T1RJeE5TQXdMakk0T0RjNU5pQXdMalV4T1RRMU9TQXdMakk0T0RFM0lEQXVOVEU1T1RRNUlEQXVNamczTmpoRE1DNDFNakEwTXprZ01DNHlPRGN4T1NBd0xqVXlNVEEyTlNBd0xqSTROamswTmlBd0xqVXlNVGd5TmlBd0xqSTROamswTmtnd0xqVTBOemswTkVNd0xqVTBPRGN3TmlBd0xqSTROamswTmlBd0xqVTBPVE16TVNBd0xqSTROekU1SURBdU5UUTVPREl4SURBdU1qZzNOamhETUM0MU5UQXpNVEVnTUM0eU9EZ3hOeUF3TGpVMU1EVTFOaUF3TGpJNE9EYzVOaUF3TGpVMU1EVTFOaUF3TGpJNE9UVTFOMVl3TGpNeE5UWTNOVU13TGpVMU1EVTFOaUF3TGpNeE5qUXpOeUF3TGpVMU1ETXhNU0F3TGpNeE56QTJNeUF3TGpVME9UZ3lNU0F3TGpNeE56VTFNa013TGpVME9UTXpNU0F3TGpNeE9EQTBNaUF3TGpVME9EY3dOaUF3TGpNeE9ESTROeUF3TGpVME56azBOQ0F3TGpNeE9ESTROMGd3TGpVeU1UZ3lOa013TGpVeU1UQTJOU0F3TGpNeE9ESTROeUF3TGpVeU1EUXpPU0F3TGpNeE9EQTBNaUF3TGpVeE9UazBPU0F3TGpNeE56VTFNa013TGpVeE9UUTFPU0F3TGpNeE56QTJNeUF3TGpVeE9USXhOU0F3TGpNeE5qUXpOeUF3TGpVeE9USXhOU0F3TGpNeE5UWTNOVll3TGpNd056ZzBTREF1TlRFeE16YzVRekF1TlRBNU5qTTRJREF1TXpBM09EUWdNQzQxTURjNU56Z2dNQzR6TURjMU5qZ2dNQzQxTURZME1ERWdNQzR6TURjd01qUkRNQzQxTURRNE1qTWdNQzR6TURZME56a2dNQzQxTURNME16VWdNQzR6TURVNE5DQXdMalV3TWpJek9DQXdMak13TlRFd05rTXdMalV3TVRBME1TQXdMak13TkRNM01TQXdMalE1T1RneE55QXdMak13TXpJMk9TQXdMalE1T0RVMk5TQXdMak13TVRoRE1DNDBPVGN6TVRRZ01DNHpNREF6TXpFZ01DNDBPVFl6TURjZ01DNHlPVGt3TnprZ01DNDBPVFUxTkRVZ01DNHlPVGd3TkRaRE1DNDBPVFEzT0RRZ01DNHlPVGN3TVRJZ01DNDBPVE00TnpJZ01DNHlPVFUwTmpFZ01DNDBPVEk0TVRFZ01DNHlPVE16T1RORE1DNDBPVEUzTlNBd0xqSTVNVE15TmlBd0xqUTVNRGszTlNBd0xqSTRPVGMyTVNBd0xqUTVNRFE0TlNBd0xqSTRPRGRETUM0ME9EazVPVFVnTUM0eU9EYzJNemtnTUM0ME9Ea3lNelFnTUM0eU9EVTVPVE1nTUM0ME9EZ3lJREF1TWpnek56WXpRekF1TkRnMk9UUTRJREF1TWpnd09EYzVJREF1TkRnMU9UUXlJREF1TWpjNE5qWXhJREF1TkRnMU1UZ2dNQzR5TnpjeE1URkRNQzQwT0RRME1UZ2dNQzR5TnpVMU5pQXdMalE0TXpRek9TQXdMakkzTXpjNU1pQXdMalE0TWpJME1pQXdMakkzTVRnd05rTXdMalE0TVRBME5TQXdMakkyT1RneE9TQXdMalEzT1Rnek5DQXdMakkyT0RNMk5DQXdMalEzT0RZeElEQXVNalkzTkRNNVF6QXVORGMzTXpnMUlEQXVNalkyTlRFMElEQXVORGMyTVRJZ01DNHlOall3TlRFZ01DNDBOelE0TVRVZ01DNHlOall3TlRGSU1DNDBORFUwTXpKRE1DNDBORFF5TXpVZ01DNHlOekEyTWpJZ01DNDBOREUzTlRrZ01DNHlOelF6TnpZZ01DNDBNemd3TURVZ01DNHlOemN6TVRWRE1DNDBNelF5TlRFZ01DNHlPREF5TlRNZ01DNDBNams1TnprZ01DNHlPREUzTWpJZ01DNDBNalV4T1RFZ01DNHlPREUzTWpKRE1DNDBNVGswTWpNZ01DNHlPREUzTWpJZ01DNDBNVFEwT1RrZ01DNHlOemsyT0RJZ01DNDBNVEEwTVRnZ01DNHlOelUyTURGRE1DNDBNRFl6TXpjZ01DNHlOekUxTWlBd0xqUXdOREk1TnlBd0xqSTJOalU1TmlBd0xqUXdOREk1TnlBd0xqSTJNRGd5T0VNd0xqUXdOREk1TnlBd0xqSTFOVEEySURBdU5EQTJNek0zSURBdU1qVXdNVE0ySURBdU5ERXdOREU0SURBdU1qUTJNRFUxUXpBdU5ERTBORGs1SURBdU1qUXhPVGMwSURBdU5ERTVOREl6SURBdU1qTTVPVE0wSURBdU5ESTFNVGt4SURBdU1qTTVPVE0wUXpBdU5ESTVPVGM1SURBdU1qTTVPVE0wSURBdU5ETTBNalV4SURBdU1qUXhOREF6SURBdU5ETTRNREExSURBdU1qUTBNelF4UXpBdU5EUXhOelU1SURBdU1qUTNNamM1SURBdU5EUTBNak0xSURBdU1qVXhNRE0wSURBdU5EUTFORE15SURBdU1qVTFOakEwU0RBdU5EVXpPVEpETUM0ME5UVXlNallnTUM0eU5UVTJNRFFnTUM0ME5UWTBPVEVnTUM0eU5UVXhORElnTUM0ME5UYzNNVFlnTUM0eU5UUXlNVGRETUM0ME5UZzVOQ0F3TGpJMU16STVNaUF3TGpRMk1ERTFNU0F3TGpJMU1UZ3pOaUF3TGpRMk1UTTBPQ0F3TGpJME9UZzFRekF1TkRZeU5UUTFJREF1TWpRM09EWTBJREF1TkRZek5USTBJREF1TWpRMk1EazJJREF1TkRZME1qZzJJREF1TWpRME5UUTFRekF1TkRZMU1EUTRJREF1TWpReU9UazFJREF1TkRZMk1EVTBJREF1TWpRd056YzNJREF1TkRZM016QTJJREF1TWpNM09Ea3pRekF1TkRZNE16UWdNQzR5TXpVMk5qTWdNQzQwTmpreE1ERWdNQzR5TXpRd01UY2dNQzQwTmprMU9URWdNQzR5TXpJNU5UWkRNQzQwTnpBd09ERWdNQzR5TXpFNE9UVWdNQzQwTnpBNE5UWWdNQzR5TXpBek15QXdMalEzTVRreE55QXdMakl5T0RJMk0wTXdMalEzTWprM09DQXdMakl5TmpFNU5TQXdMalEzTXpnNUlEQXVNakkwTmpRMElEQXVORGMwTmpVeElEQXVNakl6TmpGRE1DNDBOelUwTVRNZ01DNHlNakkxTnpZZ01DNDBOelkwTWlBd0xqSXlNVE15TlNBd0xqUTNOelkzTVNBd0xqSXhPVGcxTmtNd0xqUTNPRGt5TXlBd0xqSXhPRE00TnlBd0xqUTRNREUwTnlBd0xqSXhOekk0TlNBd0xqUTRNVE0wTkNBd0xqSXhOalUxUXpBdU5EZ3lOVFF4SURBdU1qRTFPREUySURBdU5EZ3pPVEk1SURBdU1qRTFNVGMySURBdU5EZzFOVEEySURBdU1qRTBOak15UXpBdU5EZzNNRGcwSURBdU1qRTBNRGc0SURBdU5EZzROelEwSURBdU1qRXpPREUySURBdU5Ea3dORGcxSURBdU1qRXpPREUyU0RBdU5EazVNakU0UXpBdU5UQXdNell4SURBdU1qRXdOekUxSURBdU5UQXlNalkxSURBdU1qQTRNVGs0SURBdU5UQTBPVE14SURBdU1qQTJNalkzUXpBdU5UQTNOVGs0SURBdU1qQTBNek0xSURBdU5URXdOakUzSURBdU1qQXpNelk1SURBdU5URXpPVGt4SURBdU1qQXpNelk1UXpBdU5URTRNelEwSURBdU1qQXpNelk1SURBdU5USXlNRFEwSURBdU1qQTBPRGt6SURBdU5USTFNRGt4SURBdU1qQTNPVFJETUM0MU1qZ3hNemdnTUM0eU1UQTVPRGNnTUM0MU1qazJOaklnTUM0eU1UUTJPRGNnTUM0MU1qazJOaklnTUM0eU1Ua3dORU13TGpVeU9UWTJNaUF3TGpJeU16TTVNeUF3TGpVeU9ERXpPQ0F3TGpJeU56QTVNeUF3TGpVeU5UQTVNU0F3TGpJek1ERTBRekF1TlRJeU1EUTBJREF1TWpNek1UZzNJREF1TlRFNE16UTBJREF1TWpNME56RWdNQzQxTVRNNU9URWdNQzR5TXpRM01VTXdMalV4TURZeE55QXdMakl6TkRjeElEQXVOVEEzTlRrNElEQXVNak16TnpRMUlEQXVOVEEwT1RNeElEQXVNak14T0RFelF6QXVOVEF5TWpZMUlEQXVNakk1T0RneElEQXVOVEF3TXpZeElEQXVNakkzTXpZMUlEQXVORGs1TWpFNElEQXVNakkwTWpZelNEQXVORGt3TkRnMVF6QXVORGc1TlRZZ01DNHlNalF5TmpNZ01DNDBPRGcyTmpJZ01DNHlNalEwT0RFZ01DNDBPRGMzT1RJZ01DNHlNalE1TVRaRE1DNDBPRFk1TWpFZ01DNHlNalV6TlRFZ01DNDBPRFl3TmpRZ01DNHlNall3TlRrZ01DNDBPRFV5TWpFZ01DNHlNamN3TXpoRE1DNDBPRFF6TnpjZ01DNHlNamd3TVRnZ01DNDBPRE0yTkRNZ01DNHlNamc1TkRNZ01DNDBPRE13TVRjZ01DNHlNams0TVRORE1DNDBPREl6T1RFZ01DNHlNekEyT0RRZ01DNDBPREUyTlRjZ01DNHlNekU1TmpNZ01DNDBPREE0TVRNZ01DNHlNek0yTkRsRE1DNDBOems1TnlBd0xqSXpOVE16TmlBd0xqUTNPVE14TnlBd0xqSXpOalkyT1NBd0xqUTNPRGcxTlNBd0xqSXpOelkwT1VNd0xqUTNPRE01TWlBd0xqSXpPRFl5T0NBd0xqUTNOemN5TmlBd0xqSTBNREV5TkNBd0xqUTNOamcxTlNBd0xqSTBNakV6T0VNd0xqUTNORE0xTWlBd0xqSTBOemsySURBdU5EY3lNRGswSURBdU1qVXlORFE1SURBdU5EY3dNRGd4SURBdU1qVTFOakEwU0RBdU5UWXhNREF6VmpBdU1qUTFNVFUzUXpBdU5UWXhNREF6SURBdU1qUTBNVGM0SURBdU5UWXhORE00SURBdU1qUXpOREUySURBdU5UWXlNekE1SURBdU1qUXlPRGN5UXpBdU5UWXpNVGM1SURBdU1qUXlNekk0SURBdU5UWTBNRFVnTUM0eU5ESXpOVFVnTUM0MU5qUTVNaUF3TGpJME1qazFORXd3TGpVNU1UQXpPQ0F3TGpJMU9EWXlORm9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OGNHRjBhQ0JrUFNKTk1DNDJPVGsyT1RRZ01DNDBNVGN5TXpaSU1DNHpNREF3TVRKRE1DNHlPREl6TmpFZ01DNDBNVGN5T0RrZ01DNHlOalUwTkRnZ01DNDBNalF6TWpRZ01DNHlOVEk1TmpjZ01DNDBNelk0TURWRE1DNHlOREEwT0RZZ01DNDBORGt5T0RZZ01DNHlNek0wTlRFZ01DNDBOall4T1RrZ01DNHlNek16T1RnZ01DNDBPRE00TlZZd0xqWXhOekEzTjBNd0xqSXpNelExTVNBd0xqWXpORGN5T0NBd0xqSTBNRFE0TmlBd0xqWTFNVFkwTVNBd0xqSTFNamsyTnlBd0xqWTJOREV5TWtNd0xqSTJOVFEwT0NBd0xqWTNOall3TXlBd0xqSTRNak0yTVNBd0xqWTRNell6T0NBd0xqTXdNREF4TWlBd0xqWTRNelk1TVVnd0xqWTVPVFk1TkVNd0xqY3hOek0wTlNBd0xqWTRNell6T0NBd0xqY3pOREkxT0NBd0xqWTNOall3TXlBd0xqYzBOamN6T1NBd0xqWTJOREV5TWtNd0xqYzFPVEl5SURBdU5qVXhOalF4SURBdU56WTJNalUxSURBdU5qTTBOekk0SURBdU56WTJNekE0SURBdU5qRTNNRGMzVmpBdU5EZ3pPRFZETUM0M05qWXlOVFVnTUM0ME5qWXhPVGtnTUM0M05Ua3lNaUF3TGpRME9USTROaUF3TGpjME5qY3pPU0F3TGpRek5qZ3dOVU13TGpjek5ESTFPQ0F3TGpReU5ETXlOQ0F3TGpjeE56TTBOU0F3TGpReE56STRPU0F3TGpZNU9UWTVOQ0F3TGpReE56SXpObFl3TGpReE56SXpObHBOTUM0eU9ETXpOVGtnTUM0ME9ETTROVU13TGpJNE16TXpOaUF3TGpRNE1UWTFOeUF3TGpJNE16YzFNaUF3TGpRM09UUTRNU0F3TGpJNE5EVTRNU0F3TGpRM056UTFNVU13TGpJNE5UUXhJREF1TkRjMU5ESWdNQzR5T0RZMk16WWdNQzQwTnpNMU56WWdNQzR5T0RneE9EY2dNQzQwTnpJd01qVkRNQzR5T0RrM016Z2dNQzQwTnpBME56UWdNQzR5T1RFMU9ESWdNQzQwTmpreU5EZ2dNQzR5T1RNMk1UTWdNQzQwTmpnME1UbERNQzR5T1RVMk5ETWdNQzQwTmpjMU9TQXdMakk1TnpneE9TQXdMalEyTnpFM05DQXdMak13TURBeE1pQXdMalEyTnpFNU4wZ3dMalk1T1RZNU5FTXdMamN3TVRnNE55QXdMalEyTnpFM05DQXdMamN3TkRBMk15QXdMalEyTnpVNUlEQXVOekEyTURrMElEQXVORFk0TkRFNVF6QXVOekE0TVRJMElEQXVORFk1TWpRNElEQXVOekE1T1RZNUlEQXVORGN3TkRjMElEQXVOekV4TlRJZ01DNDBOekl3TWpWRE1DNDNNVE13TnpFZ01DNDBOek0xTnpZZ01DNDNNVFF5T1RZZ01DNDBOelUwTWlBd0xqY3hOVEV5TlNBd0xqUTNOelExTVVNd0xqY3hOVGsxTkNBd0xqUTNPVFE0TVNBd0xqY3hOak0zSURBdU5EZ3hOalUzSURBdU56RTJNelE0SURBdU5EZ3pPRFZXTUM0MU5UQTBOalJJTUM0eU9ETXpOVGxXTUM0ME9ETTROVm9pSUdOc1lYTnpQU0pwWTI5dUxXWnBiR3dpTHo0OEwyYytQR1JsWm5NK1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01GOHlNalkzWHpJeU9ETTJJajQ4Y21WamRDQjNhV1IwYUQwaU1DNDRPQ0lnYUdWcFoyaDBQU0l3TGpnNElpQm1hV3hzUFNKM2FHbDBaU0lnZEhKaGJuTm1iM0p0UFNKMGNtRnVjMnhoZEdVb01DNHdOakF3TlRnMklEQXVNRFl3TURVNE5pa2lMejQ4TDJOc2FYQlFZWFJvUGp3dlpHVm1jejQ4TDNOMlp6ND07dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VXaWR0aD0xOyIgcGFyZW50PSI3IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjIxIiB5PSIxMDYiIHdpZHRoPSI5MCIgaGVpZ2h0PSI5MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iMjEiIHZhbHVlPSJXaS1GaSBwb3J0IC0+IFJvdXRlciIgc3R5bGU9ImlyLnJlZj1iOTdlZTY5Zi01NjViLTQ4YWMtYmUyNS1jZjNmYjYzMWQ3NDg7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSIzIiBzb3VyY2U9IjE4IiB0YXJnZXQ9IjE5IiBlZGdlPSIxIj48bXhHZW9tZXRyeSByZWxhdGl2ZT0iMSIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iMTYiIHZhbHVlPSJCbHVldG9vdGggcG9ydCAtPiBCbHVldG9vdGggcG9ydCIgc3R5bGU9ImlyLnJlZj05ZGM2MzVhYi00ZTQ4LTQ1ODYtYWEwNS0xNmYxMWRkNzQ5M2U7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSIzIiBzb3VyY2U9IjgiIHRhcmdldD0iOSIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+PEFycmF5IGFzPSJwb2ludHMiPjxteFBvaW50IHg9IjYxNSIgeT0iMjUyIi8+PC9BcnJheT48L214R2VvbWV0cnk+PC9teENlbGw+PG14Q2VsbCBpZD0iMTciIHZhbHVlPSJCbHVldG9vdGggcG9ydCAtPiBCbHVldG9vdGggcG9ydCIgc3R5bGU9ImlyLnJlZj0wYzA4NWIxNC03MWQwLTQyMGYtOTExMC0wOGZjM2M1MGI4ODc7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSIzIiBzb3VyY2U9IjkiIHRhcmdldD0iOCIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSI+PEFycmF5IGFzPSJwb2ludHMiPjxteFBvaW50IHg9IjYyNCIgeT0iMzIyIi8+PC9BcnJheT48L214R2VvbWV0cnk+PC9teENlbGw+PG14Q2VsbCBpZD0idGVtcGxhdGUtMTAwNDIxLWI2MWQ2OTExLTMzOGQtNDZhOC05ZjM5LThkY2QyNGFiZmU5MS0yIiB2YWx1ZT0iUHVibGljIENsb3VkIiBzdHlsZT0iaXIucmVmPWI2MWQ2OTExLTMzOGQtNDZhOC05ZjM5LThkY2QyNGFiZmU5MTtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO3JlY3Vyc2l2ZVJlc2l6ZT0wO2h0bWw9MTt2ZXJ0aWNhbEFsaWduPXRvcDthbGlnbj1sZWZ0O2Rhc2hlZD0xO3N0cm9rZVdpZHRoPTE7YXJjU2l6ZT0zO2Fic29sdXRlQXJjU2l6ZT0xO3NwYWNpbmdUb3A9MTtzcGFjaW5nTGVmdD0zMjtzdHJva2VDb2xvcj0jNzU3NUVCO2ZpbGxDb2xvcj0jRjBGMEZGO2ZpbGxPcGFjaXR5PTMwO2ZvbnRDb2xvcj0jNTY1MUUwO2Nvbm5lY3RhYmxlPTA7Y29udGFpbmVyPTE7c291cmNlPWlyaXVzcmlzaztpci50eXBlPVRSVVNUWk9ORTsiIHBhcmVudD0iMSIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSItNDIwIiB5PSItMzUyIiB3aWR0aD0iODc0IiBoZWlnaHQ9IjUyMCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG9iamVjdCBsYWJlbD0iQVdTIEFjY291bnQgRW52aXJvbm1lbnQiIGlyLnNvdXJjZVN0eWxlPSJyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzazt2ZXJ0aWNhbEFsaWduPXRvcDtzdHJva2VXaWR0aD0xO2NvbnRhaW5lcj0wO3JlY3Vyc2l2ZVJlc2l6ZT0xO2FsaWduPWNlbnRlcjthcmNTaXplPTkwO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHMWhjMnNnYVdROUltMWhjMnN3SWlCdFlYTnJMWFI1Y0dVOUltRnNjR2hoSWlCdFlYTnJWVzVwZEhNOUluVnpaWEpUY0dGalpVOXVWWE5sSWlCNFBTSXdJaUI1UFNJd0lpQjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJajRtSTNoaE96eGphWEpqYkdVZ1kzZzlJakF1TlNJZ1kzazlJakF1TlNJZ2NqMGlNQzQxSWlCbWFXeHNQU0ppYkdGamF5SXZQaVlqZUdFN1BDOXRZWE5yUGlZamVHRTdQR2NnYldGemF6MGlkWEpzS0NOdFlYTnJNQ2tpUGlZamVHRTdQSEJoZEdnZ1pEMGlUVEVnTUVnd1ZqRklNVll3V2lJZ1ptbHNiRDBpZFhKc0tDTndZV2x1ZERCZmJHbHVaV0Z5S1NJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU5EYzJOekkwSURBdU5qZ3dNekF6U0RBdU1UVTVPVEV5VmpBdU5qTXdPRGM0UXpBdU1UVTVPRE16SURBdU5UY3lOakExSURBdU1UYzVNekl5SURBdU5URTFPVGt6SURBdU1qRTFNalUySURBdU5EY3dNVEU1UXpBdU1qVXhNVGc1SURBdU5ESTBNalExSURBdU16QXhORGcwSURBdU16a3hOelkzSURBdU16VTRNRGM0SURBdU16YzNPRGt4VERBdU16WXpPVE01SURBdU16YzJORFkxVERBdU16WTVNekkxSURBdU16YzVNekUyUXpBdU16ZzNNemM0SURBdU16ZzRPVGd4SURBdU5EQTNOVE0zSURBdU16azBNRE00SURBdU5ESTRNREUwSURBdU16azBNRE00UXpBdU5EUTRORGt4SURBdU16azBNRE00SURBdU5EWTROalV4SURBdU16ZzRPVGd4SURBdU5EZzJOekEwSURBdU16YzVNekUyVERBdU5Ea3lNRGc1SURBdU16YzJORFkxVERBdU5EazNPVFVnTUM0ek56YzRPVEZETUM0MU5EZzRNVGdnTUM0ek9UQTFNRGdnTUM0MU9UUTNNamtnTUM0ME1UZ3hJREF1TmpJNU56UTBJREF1TkRVM01EazRUREF1TmpBMk15QXdMalEzT0RNeU5VTXdMalUzTmpZd09DQXdMalEwTlRVMU5TQXdMalV6T0RFeE5pQXdMalF5TWpBeE9TQXdMalE1TlRReE5pQXdMalF4TURVeU5FTXdMalEzTkRJd09DQXdMalF5TURnZ01DNDBOVEE1TkRjZ01DNDBNall4TXprZ01DNDBNamN6T0RFZ01DNDBNall4TXpsRE1DNDBNRE00TVRRZ01DNDBNall4TXprZ01DNHpPREExTlRRZ01DNDBNakE0SURBdU16VTVNelExSURBdU5ERXdOVEkwUXpBdU16RXhNREl4SURBdU5ESXpOelF6SURBdU1qWTRNemMwSURBdU5EVXlORFl6SURBdU1qTTNPVFV6SURBdU5Ea3lNamN5UXpBdU1qQTNOVE16SURBdU5UTXlNRGdnTUM0eE9URXdNak1nTUM0MU9EQTNOellnTUM0eE9UQTVOaUF3TGpZek1EZzNPRll3TGpZME9EWXlTREF1TkRjMk1EbE1NQzQwTnpZM01qUWdNQzQyT0RBek1ETmFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU5ESTNOak0xSURBdU5ESTFNREUxUXpBdU5EQXpOek00SURBdU5ESTFNRGcySURBdU16Z3dNakEzSURBdU5ERTVNVFE1SURBdU16VTVNakEwSURBdU5EQTNOelE0UXpBdU16TXhNemswSURBdU16a3lOVGMzSURBdU16QTVOREk1SURBdU16WTROVGMwSURBdU1qazJOemMzSURBdU16TTVOVE5ETUM0eU9EUXhNalFnTUM0ek1UQTBPRFlnTUM0eU9ERTFNRFVnTUM0eU56Z3dOVFVnTUM0eU9Ea3pNek1nTUM0eU5EY3pOVFpETUM0eU9UY3hOaklnTUM0eU1UWTJOVGdnTUM0ek1UUTVPVEVnTUM0eE9EazBORElnTUM0ek5EQXdNRFlnTUM0eE56QXdNRFJETUM0ek5qVXdNakVnTUM0eE5UQTFOallnTUM0ek9UVTNPVGdnTUM0eE5EQXdNVFVnTUM0ME1qYzBOemNnTUM0eE5EQXdNVFZETUM0ME5Ua3hOVFlnTUM0eE5EQXdNVFVnTUM0ME9EazVNek1nTUM0eE5UQTFOallnTUM0MU1UUTVORGdnTUM0eE56QXdNRFJETUM0MU16azVOak1nTUM0eE9EazBORElnTUM0MU5UYzNPVE1nTUM0eU1UWTJOVGdnTUM0MU5qVTJNakVnTUM0eU5EY3pOVFpETUM0MU56TTBORGtnTUM0eU56Z3dOVFVnTUM0MU56QTRNeUF3TGpNeE1EUTROaUF3TGpVMU9ERTNOeUF3TGpNek9UVXpRekF1TlRRMU5USTFJREF1TXpZNE5UYzBJREF1TlRJek5UWWdNQzR6T1RJMU56Y2dNQzQwT1RVM05TQXdMalF3TnpjME9GWXdMalF3TnpjME9FTXdMalEzTkRneE1pQXdMalF4T1RBeU1pQXdMalExTVRReE5TQXdMalF5TkRrMU5DQXdMalF5TnpZek5TQXdMalF5TlRBeE5WcE5NQzQwTWpjMk16VWdNQzR4TnpVMk56SkRNQzQwTURNeU9Ea2dNQzR4TnpVeU1EVWdNQzR6TnprME9USWdNQzR4T0RJNU15QXdMak0yTURBMk1TQXdMakU1TnpZd05rTXdMak0wTURZeklEQXVNakV5TWpneklEQXVNekkyTmpreUlEQXVNak16TURZeElEQXVNekl3TkRneElEQXVNalUyTmpBM1F6QXVNekUwTWpjeElEQXVNamd3TVRVMElEQXVNekUyTVRRNElEQXVNekExTVRBMElEQXVNekkxT0RFeklEQXVNekkzTkRVMVF6QXVNek0xTkRjM0lEQXVNelE1T0RBM0lEQXVNelV5TXpZNUlEQXVNelk0TWpZMUlEQXVNemN6TnpjNElEQXVNemM1T0RZM1F6QXVNemt3TVRRMUlEQXVNemc0TmpRMUlEQXVOREE0TkRJNUlEQXVNemt6TWpNNElEQXVOREkzTURBeUlEQXVNemt6TWpNNFF6QXVORFExTlRjMElEQXVNemt6TWpNNElEQXVORFl6T0RVNElEQXVNemc0TmpRMUlEQXVORGd3TWpJMklEQXVNemM1T0RZM1F6QXVOVEF4TlRNZ01DNHpOamd6TVRJZ01DNDFNVGd6TmlBd0xqTTBPVGsyTmlBd0xqVXlPREEwTVNBd0xqTXlOemMwTmtNd0xqVXpOemN5TVNBd0xqTXdOVFV5TmlBd0xqVXpPVFk1TlNBd0xqSTRNRGN3TnlBd0xqVXpNelkxSURBdU1qVTNNak0yUXpBdU5USTNOakExSURBdU1qTXpOelkwSURBdU5URXpPRGc0SURBdU1qRXlPVGczSURBdU5EazBOamM0SURBdU1UazRNakE1UXpBdU5EYzFORFk1SURBdU1UZ3pORE1nTUM0ME5URTROekVnTUM0eE56VTBPVGNnTUM0ME1qYzJNelVnTUM0eE56VTJOekpXTUM0eE56VTJOekphSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVOamN6TkRJMklEQXVPRFl3TURRNFREQXVOVEEwT0RneklEQXVOell5TnpneVZqQXVOVFk0TURreFREQXVOamN6TkRJMklEQXVORGN3T0RJMVREQXVPRFF4T1RZNUlEQXVOVFk0TURreFZqQXVOell5TnpneVREQXVOamN6TkRJMklEQXVPRFl3TURRNFdrMHdMalV6TmpVMk5DQXdMamMwTkRRd05rd3dMalkzTXpReU5pQXdMamd5TXpZeE0wd3dMamd4TURJNE9DQXdMamMwTkRRd05sWXdMalU0TlRrNU1rd3dMalkzTXpReU5pQXdMalV3TmpjNE5Vd3dMalV6TmpVMk5DQXdMalU0TlRrNU1sWXdMamMwTkRRd05sb2lJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0Mk56TTFOak1nTUM0Mk9ETTJOemRNTUM0MU1USTVNemtnTUM0MU9URXdNRFJNTUM0MU1qZzNPQ0F3TGpVMk16VTVPVXd3TGpZM016VTJNeUF3TGpZME56QTRNMHd3TGpneE9ETTBOaUF3TGpVMk16VTVPVXd3TGpnek5ERTROeUF3TGpVNU1UQXdORXd3TGpZM016VTJNeUF3TGpZNE16WTNOMW9pSUdacGJHdzlJbmRvYVhSbElpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDJPRGt6T1RZZ01DNDJOalUxTWpkSU1DNDJOVGMzTVRWV01DNDROREU0TkRKSU1DNDJPRGt6T1RaV01DNDJOalUxTWpkYUlpQm1hV3hzUFNKM2FHbDBaU0l2UGlZamVHRTdQQzluUGlZamVHRTdQR1JsWm5NK0ppTjRZVHM4YkdsdVpXRnlSM0poWkdsbGJuUWdhV1E5SW5CaGFXNTBNRjlzYVc1bFlYSWlJSGd4UFNJdE1DNHlNRGN4TURjaUlIa3hQU0l4TGpJd056RTFJaUI0TWowaU1TNHlNRGN4TVNJZ2VUSTlJaTB3TGpJd056QTJOeUlnWjNKaFpHbGxiblJWYm1sMGN6MGlkWE5sY2xOd1lXTmxUMjVWYzJVaVBpWWplR0U3UEhOMGIzQWdjM1J2Y0MxamIyeHZjajBpSTBNNE5URXhRaUl2UGlZamVHRTdQSE4wYjNBZ2IyWm1jMlYwUFNJeElpQnpkRzl3TFdOdmJHOXlQU0lqUmtZNU9UQXdJaTgrSmlONFlUczhMMnhwYm1WaGNrZHlZV1JwWlc1MFBpWWplR0U3UEM5a1pXWnpQaVlqZUdFN1BDOXpkbWMrO3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207IiBpZD0idGVtcGxhdGUtMTAwNDIxLWZhYzg5ZjQxLTVmNGItNDliOC1iMmIxLTJjZGJmNjE2NjM5ZC0xMSI+PG14Q2VsbCBzdHlsZT0iaXIucmVmPWZhYzg5ZjQxLTVmNGItNDliOC1iMmIxLTJjZGJmNjE2NjM5ZDtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTM7c291cmNlPWN1c3RvbTtpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1hbWF6b24td2ViLXNlcnZpY2VzLWVudmlyb25tZW50O3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7Y29udGFpbmVyPTE7cmVjdXJzaXZlUmVzaXplPTA7YWxpZ249bGVmdDthcmNTaXplPTM7cGVyaW1ldGVyPXJlY3RhbmdsZVBlcmltZXRlcjt0ZXh0RGlyZWN0aW9uPWx0cjtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7IiBwYXJlbnQ9InRlbXBsYXRlLTEwMDQyMS1iNjFkNjkxMS0zMzhkLTQ2YTgtOWYzOS04ZGNkMjRhYmZlOTEtMiIgdmVydGV4PSIxIiBpc1RodW1iPSIwIj48bXhHZW9tZXRyeSB4PSIyOCIgeT0iMzkiIHdpZHRoPSI4MTUiIGhlaWdodD0iNDQ3IiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L29iamVjdD48bXhDZWxsIGlkPSIyMCIgdmFsdWU9IkFXUyBXQUYgKFdlYiBBcHBsaWNhdGlvbiBGaXJld2FsbCkiIHN0eWxlPSJpci5yZWY9ZGEyMWU1MWItZmYyZS00NzcyLTgwZjUtNjAwZDdmZWVhZmZhO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0UzRkNGQztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPUNELVdBRjtpbWFnZT1kYXRhOmltYWdlL3N2Zyt4bWwsUEhOMlp5QjRiV3h1Y3owaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNQzl6ZG1jaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJSFpwWlhkQ2IzZzlJakFnTUNBeElERWlJR1pwYkd3OUltNXZibVVpUGlZamVHRTdQRzFoYzJzZ2FXUTlJbTFoYzJzd0lpQnRZWE5yTFhSNWNHVTlJbUZzY0doaElpQnRZWE5yVlc1cGRITTlJblZ6WlhKVGNHRmpaVTl1VlhObElpQjRQU0l3SWlCNVBTSXdJaUIzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWo0bUkzaGhPenhqYVhKamJHVWdZM2c5SWpBdU5TSWdZM2s5SWpBdU5TSWdjajBpTUM0MUlpQm1hV3hzUFNKaWJHRmpheUl2UGlZamVHRTdQQzl0WVhOclBpWWplR0U3UEdjZ2JXRnphejBpZFhKc0tDTnRZWE5yTUNraVBpWWplR0U3UEdjZ1kyeHBjQzF3WVhSb1BTSjFjbXdvSTJOc2FYQXdLU0krSmlONFlUczhjR0YwYUNCa1BTSk5NU0F3U0RCV01VZ3hWakJhSWlCbWFXeHNQU0oxY213b0kzQmhhVzUwTUY5c2FXNWxZWElwSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0Mk5qazVOemtnTUM0Mk5UQTJPVGxNTUM0Mk5URXhNak1nTUM0Mk5qazFOVFpNTUM0NE1UQTFOVElnTUM0NE1qZzVPRGxNTUM0NE1qazBNRGdnTUM0NE1UQXhNekpNTUM0Mk5qazVOemtnTUM0Mk5UQTJPVGxhSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVNVGc1TlRFeElEQXVNVGN3TVRBNVREQXVNVGN3TmpVMElEQXVNVGc0T1RZMVREQXVNelEzTXpNNElEQXVNelkxTmpRM1REQXVNelkyTVRrMUlEQXVNelEyTnpreFREQXVNVGc1TlRFeElEQXVNVGN3TVRBNVdpSWdabWxzYkQwaWQyaHBkR1VpTHo0bUkzaGhPenh3WVhSb0lHUTlJazB3TGpNd05EQXpNaUF3TGpZM056STRPRXd3TGpJeE1EWTVNeUF3TGpjM01EWXpUREF1TWpJNU5UVWdNQzQzT0RrME9EZE1NQzR6TWpJNE9EZ2dNQzQyT1RZeE5EVk1NQzR6TURRd016SWdNQzQyTnpjeU9EaGFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU56Y3dOekEzSURBdU1qRXdOakUzVERBdU5qYzNNelk0SURBdU16QXpPVFUxVERBdU5qazJNakkwSURBdU16SXlPREV4VERBdU56ZzVOVFl6SURBdU1qSTVORGN6VERBdU56Y3dOekEzSURBdU1qRXdOakUzV2lJZ1ptbHNiRDBpZDJocGRHVWlMejRtSTNoaE96eHdZWFJvSUdROUlrMHdMamd6TXpNeE55QXdMalE0Tmpjek5WWXdMalV4TXpRd01rZ3dMamd3TmpZMU1VTXdMamd3TkRJeU1pQXdMalUzTXpRM0lEQXVOemcwTURNNElEQXVOak14TkRjZ01DNDNORGcyTlRFZ01DNDJPREF3TmpoTU1DNDNNamN3TlRFZ01DNDJOalF6TXpWRE1DNDNOVGt3TmpNZ01DNDJNakF6TURZZ01DNDNOemN6TkRFZ01DNDFOamMzT1RNZ01DNDNOemsxT0RRZ01DNDFNVE0wTURKSU1DNDNOVEk1TVRkV01DNDBPRFkzTXpWSU1DNDNOemsxT0RSRE1DNDNOemN5TmpNZ01DNDBNekkwT0RJZ01DNDNOVGc1T0RrZ01DNHpPREF4TVRrZ01DNDNNamN3TlRFZ01DNHpNell5TURKTU1DNDNORGcyTlRFZ01DNHpNakF3TmpoRE1DNDNPRE01TkRNZ01DNHpOamcyT1RnZ01DNDRNRFF3TXpRZ01DNDBNalkyT1RVZ01DNDRNRFl6T0RRZ01DNDBPRFkzTXpWSU1DNDRNek16TVRkYUlpQm1hV3hzUFNKM2FHbDBaU0l2UGlZamVHRTdQSEJoZEdnZ1pEMGlUVEF1Tmpnd01EWTRJREF1TWpVeE16a3lUREF1TmpZME16TTFJREF1TWpjeU9Ua3lRekF1TmpJd016QTJJREF1TWpRd09UZ2dNQzQxTmpjM09UTWdNQzR5TWpJM01ESWdNQzQxTVRNME1ESWdNQzR5TWpBME5UbFdNQzR5TkRjeE1qWklNQzQwT0RZM016VldNQzR5TWpBME5UbERNQzQwTXpJME9ESWdNQzR5TWpJM09DQXdMak00TURFeE9TQXdMakkwTVRBMU5DQXdMak16TmpJd01pQXdMakkzTWprNU1rd3dMak15TURBMk9DQXdMakkxTVRNNU1rTXdMak0yT0RZNU9DQXdMakl4TmpFZ01DNDBNalkyT1RVZ01DNHhPVFl3TURrZ01DNDBPRFkzTXpVZ01DNHhPVE0yTlRsV01DNHhOalk1T1RKSU1DNDFNVE0wTURKV01DNHhPVE0yTlRsRE1DNDFOek0wTkRJZ01DNHhPVFl3TURrZ01DNDJNekUwTXprZ01DNHlNVFl4SURBdU5qZ3dNRFk0SURBdU1qVXhNemt5VmpBdU1qVXhNemt5V2lJZ1ptbHNiRDBpZDJocGRHVWlMejRtSTNoaE96eHdZWFJvSUdROUlrMHdMalk0TURBMk9DQXdMamMwT0RZMU1VTXdMall6TVRRek9TQXdMamM0TXprME15QXdMalUzTXpRME1pQXdMamd3TkRBek5DQXdMalV4TXpRd01pQXdMamd3TmpNNE5GWXdMamd6TXpBMU1VZ3dMalE0Tmpjek5WWXdMamd3TmpNNE5FTXdMalF5TmpZNU5TQXdMamd3TkRBek5DQXdMak0yT0RZNU9DQXdMamM0TXprME15QXdMak15TURBMk9DQXdMamMwT0RZMU1Vd3dMak16TlRnd01pQXdMamN5TnpBMU1VTXdMak0zT1Rnek1TQXdMamMxT1RBMk15QXdMalF6TWpNME5DQXdMamMzTnpNME1TQXdMalE0Tmpjek5TQXdMamMzT1RVNE5GWXdMamMxTWpreE9FZ3dMalV4TXpRd01sWXdMamMzT1RVNE5FTXdMalUyTnpZMU5TQXdMamMzTnpJMk15QXdMall5TURBeE9DQXdMamMxT0RrNE9TQXdMalkyTXprek5TQXdMamN5TnpBMU1Vd3dMalk0TURBMk9DQXdMamMwT0RZMU1Wb2lJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0eU1qQTBOVGtnTUM0MU1UTTBNREpETUM0eU1qSTNPQ0F3TGpVMk56WTFOU0F3TGpJME1UQTFOQ0F3TGpZeU1EQXhPQ0F3TGpJM01qazVNaUF3TGpZMk16a3pOVXd3TGpJMU1UTTVNaUF3TGpZNE1EQTJPRU13TGpJeE5qRWdNQzQyTXpFME16a2dNQzR4T1RZd01Ea2dNQzQxTnpNME5ESWdNQzR4T1RNMk5Ua2dNQzQxTVRNME1ESklNQzR4TmpZNU9USldNQzQwT0RZM016VklNQzR4T1RNMk5UbERNQzR4T1RZd01Ea2dNQzQwTWpZMk9UVWdNQzR5TVRZeElEQXVNelk0TmprNElEQXVNalV4TXpreUlEQXVNekl3TURZNFREQXVNamN5T1RreUlEQXVNek0xT0RBeVF6QXVNalF3T1RnZ01DNHpOems0TXpFZ01DNHlNakkzTURJZ01DNDBNekl6TkRRZ01DNHlNakEwTlRrZ01DNDBPRFkzTXpWSU1DNHlORGN4TWpaV01DNDFNVE0wTURKSU1DNHlNakEwTlRsYUlpQm1hV3hzUFNKM2FHbDBaU0l2UGlZamVHRTdQSEJoZEdnZ1pEMGlUVEF1TmpJd05EYzVJREF1TkRFMU9EUXhRekF1TmpFNE5UVWdNQzQwTVRRNE1UUWdNQzQyTVRZek9UZ2dNQzQwTVRReU56Y2dNQzQyTVRReU1USWdNQzQwTVRReU56ZERNQzQyTVRJd01qWWdNQzQwTVRReU56Y2dNQzQyTURrNE56UWdNQzQwTVRRNE1UUWdNQzQyTURjNU5EVWdNQzQwTVRVNE5ERkRNQzQyTURVNU56Z2dNQzQwTVRZNE5ETWdNQzQyTURReU9TQXdMalF4T0RNeE9DQXdMall3TXpBek5DQXdMalF5TURFek0wTXdMall3TVRjM055QXdMalF5TVRrME9DQXdMall3TURrNU1TQXdMalF5TkRBME55QXdMall3TURjME5TQXdMalF5TmpJME1VTXdMalU1T1RreU5pQXdMalF6TkRNM01TQXdMalU1T0RVME5TQXdMalEwTWpRek5TQXdMalU1TmpZeE1pQXdMalExTURNM05VTXdMalU1TXpRNE5TQXdMalF4T0RBNU9DQXdMalU0TWpBd05TQXdMak00TnpFNU5DQXdMalUyTXpNd01TQXdMak0yTURjd05FTXdMalUwTkRVNU55QXdMak16TkRJeE5TQXdMalV4T1RNeE5TQXdMak14TXpBMU5TQXdMalE0T1RrME5TQXdMakk1T1RNd09VTXdMalEzTVRreU9DQXdMakk0TlRVMU55QXdMalExTURneklEQXVNamMyTkRBMElEQXVOREk0TkRjNUlEQXVNamN5TmpReVF6QXVOREkxTlRrNElEQXVNamN5TVRZeUlEQXVOREl5TmpRZ01DNHlOekkyTkRFZ01DNDBNakF3TlRrZ01DNHlOelF3TURaRE1DNDBNVGMwTnpjZ01DNHlOelV6TnlBd0xqUXhOVFF4TkNBd0xqSTNOelUwTkNBd0xqUXhOREU0T0NBd0xqSTRNREU1TkVNd0xqUXhNamsyTVNBd0xqSTRNamcwTkNBd0xqUXhNall6T1NBd0xqSTROVGd5TXlBd0xqUXhNekkyT1NBd0xqSTRPRFkzTkVNd0xqUXhNemtnTUM0eU9URTFNalVnTUM0ME1UVTBORGtnTUM0eU9UUXdPU0F3TGpReE56WTNPU0F3TGpJNU5UazNOVU13TGpRek1UVTVOeUF3TGpNd09UVTVJREF1TkRReE9EQTJJREF1TXpJMk5UTTFJREF1TkRRM016TTJJREF1TXpRMU1qQXpRekF1TkRVeU9EWTNJREF1TXpZek9EY3hJREF1TkRVek5UTTFJREF1TXpnek5qUXpJREF1TkRRNU1qYzVJREF1TkRBeU5qUXhRekF1TkRNek9ERXlJREF1TXpneU1qUXlJREF1TkRBNU1qYzVJREF1TXpVM09EUXlJREF1TXpnd01qRXlJREF1TXpVM09EUXlRekF1TXpjNE1EWXlJREF1TXpVM09EUTFJREF1TXpjMU9UUTFJREF1TXpVNE16WTRJREF1TXpjME1EUXlJREF1TXpVNU16WTNRekF1TXpjeU1UTTRJREF1TXpZd016WTFJREF1TXpjd05UQTBJREF1TXpZeE9EQTVJREF1TXpZNU1qYzVJREF1TXpZek5UYzFRekF1TXpZNE1EUXhJREF1TXpZMU16WTFJREF1TXpZM01qWWdNQzR6TmpjME16RWdNQzR6Tmpjd01EUWdNQzR6TmprMU9UTkRNQzR6TmpZM05EZ2dNQzR6TnpFM05UUWdNQzR6Tmpjd01qWWdNQzR6TnpNNU5EVWdNQzR6TmpjNE1USWdNQzR6TnpVNU56VkRNQzR6TnpVMU5EVWdNQzR6T1RVNE5ESWdNQzR6T1RBNE56a2dNQzQwTlRVeE56VWdNQzR6Tmprd01USWdNQzQwT0RrMU56UkRNQzR6TmpjMU5EVWdNQzQwT1RFM01EZ2dNQzR6TmpZek5EVWdNQzQwT1RNNE5ERWdNQzR6TmpVd01USWdNQzQwT1RZeE1EaERNQzR6TlRBME5Ea2dNQzQxTWpJMk9EUWdNQzR6TkRZeE9USWdNQzQxTlRNMk9UVWdNQzR6TlRNd05UUWdNQzQxT0RNeU1USkRNQzR6TlRrNU1UY2dNQzQyTVRJM01qa2dNQzR6TnpjME1UZ2dNQzQyTXpnMk9ERWdNQzQwTURJeU1USWdNQzQyTlRZeE1EZERNQzQwTWpneU5EWWdNQzQyTnpNM016VWdNQzQwTlRZME9Ea2dNQzQyT0RjNE5UWWdNQzQwT0RZeU1USWdNQzQyT1RneE1EZERNQzQwT0RjMk5qVWdNQzQyT1RnMk16UWdNQzQwT0RreE9Ua2dNQzQyT1RnNU1EVWdNQzQwT1RBM05EVWdNQzQyT1RnNU1EZElNQzQwT1RNMU5EVkRNQzQxTVRFeU56a2dNQzQyT1Rjek1EY2dNQzQyTXpFNU5EVWdNQzQyT0RFM01EY2dNQzQyTlRZMk1USWdNQzQxT0RVNU56UkRNQzQyT1RBM05EVWdNQzQwTlRVNU56VWdNQzQyTWpNME1USWdNQzQwTVRjME5ERWdNQzQyTWpBME56a2dNQzQwTVRVNE5ERmFUVEF1TkRjeE1UUTFJREF1TmpZek9UY3pRekF1TkRVeU5EWTFJREF1TmpVMk1EUXlJREF1TkRNME5qQXpJREF1TmpRMk16QTNJREF1TkRFM09ERXlJREF1TmpNME9UQTNRekF1TXprNE16STRJREF1TmpJeE1qYzNJREF1TXpnME5UWTRJREF1TmpBd09USTNJREF1TXpjNU1UYzRJREF1TlRjM056WTNRekF1TXpjek56ZzRJREF1TlRVME5qQTRJREF1TXpjM01UUTRJREF1TlRNd01qY3pJREF1TXpnNE5qRXlJREF1TlRBNU5EUXhUREF1TXpreE9ERXlJREF1TlRBek9UYzBRekF1TkRFME16UTFJREF1TkRZNE56YzBJREF1TkRBM09ERXlJREF1TkRJd056YzFJREF1TkRBd056UTFJREF1TXpreE56QTRRekF1TkRFNE1Ua3lJREF1TkRBMU1EazBJREF1TkRNeU5qTTNJREF1TkRJeE9Ua3hJREF1TkRRek1UUTFJREF1TkRReE16QTRRekF1TkRRME1qazBJREF1TkRRek5qWTFJREF1TkRRMk1URXpJREF1TkRRMU5qTXhJREF1TkRRNE16Y3pJREF1TkRRMk9UWkRNQzQwTlRBMk16UWdNQzQwTkRneU9Ea2dNQzQwTlRNeU16WWdNQzQwTkRnNU1qSWdNQzQwTlRVNE5UUWdNQzQwTkRnM09FTXdMalExT0RRM015QXdMalEwT0RZek55QXdMalEyTURrNU1TQXdMalEwTnpjeU5pQXdMalEyTXpBNU5DQXdMalEwTmpFMlF6QXVORFkxTVRrM0lEQXVORFEwTlRrMElEQXVORFkyTnpreUlEQXVORFF5TkRReUlEQXVORFkzTmpjNUlEQXVORE01T1RjMVF6QXVORGMxT0RRMUlEQXVOREU1T0RBeUlEQXVORGM1TmpnMUlEQXVNems0TVRNNUlEQXVORGM0T1RVZ01DNHpOell6T0RsRE1DNDBOemd5TVRVZ01DNHpOVFEyTXpnZ01DNDBOekk1TWpFZ01DNHpNek15T0RRZ01DNDBOak0wTVRJZ01DNHpNVE0zTURsRE1DNDBPREF6TkRZZ01DNHpNak0xTWlBd0xqUTVNemc0TWlBd0xqTXpPREkyTlNBd0xqVXdNakl4TWlBd0xqTTFOVGszTlVNd0xqVXlNVEUwTlNBd0xqTTVOVEUzTlNBd0xqVXhOamczT1NBd0xqUTBPVE13T0NBd0xqUTVNVEkzT1NBd0xqUTVOakV3T0VNd0xqUTJORGs0SURBdU5UUTNPVE0zSURBdU5EVTNPRFE0SURBdU5qQTNNemsxSURBdU5EY3hNVFExSURBdU5qWXpPVGN6V2swd0xqWXpNVEUwTlNBd0xqVTNPVFUzTkVNd0xqWXhNelkzT1NBd0xqWTBOelUzTkNBd0xqVXpNRE0wTlNBd0xqWTJOamMzTXlBd0xqVXdNRFEzT1NBd0xqWTNNVFEwUXpBdU5Ea3pNamM1SURBdU5qUTFOVGMwSURBdU5EYzVNREV5SURBdU5UY3pNekEzSURBdU5URTBOakV5SURBdU5UQTRNalF4UXpBdU5UTTVOVEE0SURBdU5EWTBPRFk1SURBdU5UUTJOVE0zSURBdU5ERXpOVEE0SURBdU5UTTBNakV5SURBdU16WTFNRFF5UXpBdU5UVTRNelExSURBdU16a3pNekE0SURBdU5UYzROakV5SURBdU5ETTNPVGMxSURBdU5UWTNPREV5SURBdU5UQTBPVEE0UXpBdU5UWTNNemt6SURBdU5UQTNOVGMwSURBdU5UWTNOemswSURBdU5URXdNekExSURBdU5UWTRPVFlnTUM0MU1USTNNemxETUM0MU56QXhNamNnTUM0MU1UVXhOek1nTUM0MU56SXdNRFVnTUM0MU1UY3hPVFVnTUM0MU56UXpORFlnTUM0MU1UZzFNemxETUM0MU56WTJPRGNnTUM0MU1UazRPRE1nTUM0MU56a3pPQ0F3TGpVeU1EUTROU0F3TGpVNE1qQTNJREF1TlRJd01qWTFRekF1TlRnME56WWdNQzQxTWpBd05EVWdNQzQxT0Rjek1pQXdMalV4T1RBeE5DQXdMalU0T1RReE1pQXdMalV4TnpNd09FTXdMall3TmpjNE55QXdMalV3TURRME1TQXdMall4T0RRNE15QXdMalEzT0RVNE55QXdMall5TWpnM09TQXdMalExTkRjM05VTXdMall6TlRZM09TQXdMalEzTXpNd09DQXdMalkwT1RBeE1pQXdMalV4TURjM05DQXdMall6TVRJM09TQXdMalUzT1RVM05FZ3dMall6TVRFME5Wb2lJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4TDJjK0ppTjRZVHM4TDJjK0ppTjRZVHM4WkdWbWN6NG1JM2hoT3p4c2FXNWxZWEpIY21Ga2FXVnVkQ0JwWkQwaWNHRnBiblF3WDJ4cGJtVmhjaUlnZURFOUlpMHdMakl3TnpBMk55SWdlVEU5SWpFdU1qQTNNRGNpSUhneVBTSXhMakl3TnpJaUlIa3lQU0l0TUM0eU1EY3lJaUJuY21Ga2FXVnVkRlZ1YVhSelBTSjFjMlZ5VTNCaFkyVlBibFZ6WlNJK0ppTjRZVHM4YzNSdmNDQnpkRzl3TFdOdmJHOXlQU0lqUWtRd09ERTJJaTgrSmlONFlUczhjM1J2Y0NCdlptWnpaWFE5SWpFaUlITjBiM0F0WTI5c2IzSTlJaU5HUmpVeU5USWlMejRtSTNoaE96d3ZiR2x1WldGeVIzSmhaR2xsYm5RK0ppTjRZVHM4WTJ4cGNGQmhkR2dnYVdROUltTnNhWEF3SWo0bUkzaGhPenh5WldOMElIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4TDJOc2FYQlFZWFJvUGlZamVHRTdQQzlrWldaelBpWWplR0U3UEM5emRtYys7dmVydGljYWxMYWJlbFBvc2l0aW9uPWJvdHRvbTt2ZXJ0aWNhbEFsaWduPXRvcDtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VXaWR0aD0xOyIgcGFyZW50PSJ0ZW1wbGF0ZS0xMDA0MjEtZmFjODlmNDEtNWY0Yi00OWI4LWIyYjEtMmNkYmY2MTY2MzlkLTExIiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjU4NCIgeT0iMzIzIiB3aWR0aD0iMTYxIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48b2JqZWN0IGxhYmVsPSJBV1MgVlBDIChWaXJ0dWFsIFByaXZhdGUgQ2xvdWQpIiBpci5zb3VyY2VTdHlsZT0icm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dJaUJ0WVhOckxYUjVjR1U5SW1Gc2NHaGhJaUJ0WVhOclZXNXBkSE05SW5WelpYSlRjR0ZqWlU5dVZYTmxJaUI0UFNJd0lpQjVQU0l3SWlCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJeElqNG1JM2hoT3p4amFYSmpiR1VnWTNnOUlqQXVOU0lnWTNrOUlqQXVOU0lnY2owaU1DNDFJaUJtYVd4c1BTSmliR0ZqYXlJdlBpWWplR0U3UEM5dFlYTnJQaVlqZUdFN1BHY2diV0Z6YXowaWRYSnNLQ050WVhOck1Da2lQaVlqZUdFN1BHY2dZMnhwY0Mxd1lYUm9QU0oxY213b0kyTnNhWEF3S1NJK0ppTjRZVHM4Y21WamRDQjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJaUJtYVd4c1BTSWpSVE5HUTBaRElpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1TQXdTREJXTVVneFZqQmFJaUJtYVd4c1BTSjFjbXdvSTNCaGFXNTBNRjlzYVc1bFlYSXBJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzQwT0RVNU5DQXdMall5TUROSU1DNHlPVGt5TnpORE1DNHlNall5TURZZ01DNDJNakF6SURBdU1UY3dNelFnTUM0MU56RTFJREF1TVRZMk5qQTJJREF1TlRBME5ETXpRekF1TVRZMk5qQTJJREF1TlRBeE5qTXpJREF1TVRZMk5qQTJJREF1TkRrNE5ETXpJREF1TVRZMk5qQTJJREF1TkRrMU1qTXpRekF1TVRZMU5EY3hJREF1TkRZM05EQTRJREF1TVRjek9EQTNJREF1TkRRd01ESXhJREF1TVRrd01qVXhJREF1TkRFM05UUTJRekF1TWpBMk5qazFJREF1TXprMU1EY3hJREF1TWpNd01qYzJJREF1TXpjNE9ETTVJREF1TWpVM01UUWdNQzR6TnpFMVF6QXVNalUzTVRRZ01DNHpOamM1SURBdU1qVTNNVFFnTUM0ek5qUTBNek1nTUM0eU5UY3hOQ0F3TGpNMk1EZ3pNME13TGpJMU56Z3hNaUF3TGpNeU5Ea3pOeUF3TGpJMk9UQTVOQ0F3TGpJNU1EQTBOQ0F3TGpJNE9UVTJNeUF3TGpJMk1EVTBPVU13TGpNeE1EQXpNeUF3TGpJek1UQTFOQ0F3TGpNek9EYzNOQ0F3TGpJd09ESTNOeUF3TGpNM01qRTJOaUF3TGpFNU5UQTRPVU13TGpRd05UVTFPQ0F3TGpFNE1Ua2dNQzQwTkRJeE1EWWdNQzR4TnpnNE9TQXdMalEzTnpJd05pQXdMakU0TmpRek4wTXdMalV4TWpNd05pQXdMakU1TXprNE5DQXdMalUwTkRNNE55QXdMakl4TVRjMU1TQXdMalUyT1RRd05pQXdMakl6TnpWRE1DNDFPRFk0TlRVZ01DNHlOVFEzTnlBd0xqWXdNVEF6T0NBd0xqSTNOVEExTVNBd0xqWXhNVEkzTXlBd0xqSTVOek0yTjBNd0xqWXlOVGt3TWlBd0xqSTROVFl4TkNBd0xqWTBOREV3T0NBd0xqSTNPVEl4TmlBd0xqWTJNamczTXlBd0xqSTNPVEl6TTBNd0xqY3dNVFUwSURBdU1qYzVNak16SURBdU56UXlPRGN6SURBdU16QTJPRE16SURBdU56UTVOamN6SURBdU16WTRNME13TGpjNE1qVXpJREF1TXpjME9DQXdMamd4TWpFM015QXdMak01TWpNMUlEQXVPRE16TmpjeklEQXVOREU0TURNelREQXVPREV5TnpRZ01DNDBNelEwTXpORE1DNDNPVEkzTnpVZ01DNDBNVEUxT1RJZ01DNDNOalV5T1RjZ01DNHpPVFkyTkRjZ01DNDNNelV5TnpNZ01DNHpPVEl6UXpBdU56TXlNamN6SURBdU16a3hPREU1SURBdU56STVOVEkySURBdU16a3dNekkzSURBdU56STNORGtnTUM0ek9EZ3dOekpETUM0M01qVTBOVE1nTUM0ek9EVTRNVGNnTUM0M01qUXlORGNnTUM0ek9ESTVNelFnTUM0M01qUXdOek1nTUM0ek56azVRekF1TnpJeE1EQTJJREF1TXpJNE9ETXpJREF1TmpreE1UUWdNQzR6TURVNUlEQXVOall5T0RjeklEQXVNekExT1VNd0xqWTFNems1TnlBd0xqTXdOVGs0TWlBd0xqWTBOVEkySURBdU16QTRNVElnTUM0Mk16Y3pORGtnTUM0ek1USXhORFZETUM0Mk1qazBNemNnTUM0ek1UWXhOeUF3TGpZeU1qVTJOaUF3TGpNeU1UazNOQ0F3TGpZeE56STNNeUF3TGpNeU9URkRNQzQyTVRVNE5ERWdNQzR6TXpFd01Ea2dNQzQyTVRNNU1qSWdNQzR6TXpJME9Ua2dNQzQyTVRFM01UY2dNQzR6TXpNME1UTkRNQzQyTURrMU1UTWdNQzR6TXpRek1qZ2dNQzQyTURjeE1ETWdNQzR6TXpRMk16UWdNQzQyTURRM05DQXdMak16TkRORE1DNDJNREl6TmpZZ01DNHpNek01TXpjZ01DNDJNREF4TXpVZ01DNHpNekk1TkRFZ01DNDFPVGd5T0RFZ01DNHpNekUwTVRaRE1DNDFPVFkwTWpjZ01DNHpNams0T1NBd0xqVTVOVEF4T1NBd0xqTXlOemc1TWlBd0xqVTVOREl3TmlBd0xqTXlOVFl6TTBNd0xqVTROVEEzT1NBd0xqSTVPVGN4TkNBd0xqVTNNREkzTXlBd0xqSTNOakUyTWlBd0xqVTFNRGczTXlBd0xqSTFOamRETUM0MU1qazFOelFnTUM0eU16UTNPRGNnTUM0MU1ESXlPRFlnTUM0eU1UazJORElnTUM0ME56STBNaklnTUM0eU1UTXhOak5ETUM0ME5ESTFOVGtnTUM0eU1EWTJPRE1nTUM0ME1URTBORGNnTUM0eU1Ea3hOVFlnTUM0ek9ESTVPRElnTUM0eU1qQXlOekZETUM0ek5UUTFNVGNnTUM0eU16RXpPRGNnTUM0ek1qazVOak1nTUM0eU5UQTJOVElnTUM0ek1USXpPVE1nTUM0eU56VTJOVFJETUM0eU9UUTRNalFnTUM0ek1EQTJOVFlnTUM0eU9EVXdNVGtnTUM0ek16QXlPRFlnTUM0eU9EUXlNRFlnTUM0ek5qQTRNek5ETUM0eU9EUXlNalVnTUM0ek5qY3lNRE1nTUM0eU9EUTFPREVnTUM0ek56TTFOamdnTUM0eU9EVXlOek1nTUM0ek56azVRekF1TWpnMU5UazBJREF1TXpnek1EZ3lJREF1TWpnME56WXhJREF1TXpnMk1qY3pJREF1TWpneU9USTFJREF1TXpnNE9Ea3lRekF1TWpneE1Ea2dNQzR6T1RFMU1URWdNQzR5Tnpnek56UWdNQzR6T1RNek9ETWdNQzR5TnpVeU56TWdNQzR6T1RReE5qZERNQzR5TkRVd01EWWdNQzQwTURFMk16TWdNQzR4T1RNNU5DQXdMalF5TkRnek15QXdMakU1TXprMElEQXVORGsxTWpNelF6QXVNVGt6T0RBMklEQXVORGszTmpNeElEQXVNVGt6T0RBMklEQXVOVEF3TURNMUlEQXVNVGt6T1RRZ01DNDFNREkwTXpORE1DNHhPVFk0TnpNZ01DNDFOVFUzTmpjZ01DNHlOREUxTkNBd0xqVTVNell6TXlBd0xqTXdNRFl3TmlBd0xqVTVNell6TTBnd0xqUTROekkzTTB3d0xqUTROVGswSURBdU5qSXdNMW9pSUdacGJHdzlJbmRvYVhSbElpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDJOekkwTlRFZ01DNDRNVFk0TURWRE1DNDFNVFF6TVRnZ01DNDRNVFk0TURVZ01DNDFNVEkwTlRFZ01DNDJNemt3TnpFZ01DNDFNVEkwTlRFZ01DNDJNemN6TXpoV01DNDBOelV3TnpGRE1DNDFNVEkwTkRJZ01DNDBOekl6TkRjZ01DNDFNVE15TmpnZ01DNDBOamsyT0RVZ01DNDFNVFE0TVRnZ01DNDBOamMwTkRWRE1DNDFNVFl6TmpjZ01DNDBOalV5TURRZ01DNDFNVGcxTmpZZ01DNDBOak0wT1RJZ01DNDFNakV4TVRnZ01DNDBOakkxTXpoTU1DNDJOamMzT0RVZ01DNDBNRGd5TnpGRE1DNDJOekE0TURRZ01DNDBNRGN5TURRZ01DNDJOelF3T1RnZ01DNDBNRGN5TURRZ01DNDJOemN4TVRnZ01DNDBNRGd5TnpGTU1DNDRNak0zT0RVZ01DNDBOakkxTXpoRE1DNDRNall6TXpjZ01DNDBOak0wT1RJZ01DNDRNamcxTXpVZ01DNDBOalV5TURRZ01DNDRNekF3T0RVZ01DNDBOamMwTkRWRE1DNDRNekUyTXpRZ01DNDBOamsyT0RVZ01DNDRNekkwTmlBd0xqUTNNak0wTnlBd0xqZ3pNalExTVNBd0xqUTNOVEEzTVZZd0xqWTBOek16T0VNd0xqZ3pNalExTVNBd0xqWTBPVEEzTVNBd0xqZ3pNRFU0TlNBd0xqZ3hOamd3TlNBd0xqWTNNalExTVNBd0xqZ3hOamd3TlZwTk1DNDFNemt4TVRnZ01DNDBPRFEwTURWV01DNDJNemN6TXpoRE1DNDFNemt4TVRnZ01DNDJORE0yTURVZ01DNDFOREE1T0RVZ01DNDNPVEF4TXpnZ01DNDJOekkwTlRFZ01DNDNPVEF4TXpoRE1DNDRNRE01TVRnZ01DNDNPVEF4TXpnZ01DNDRNRFUzT0RVZ01DNDJOVE15TURVZ01DNDRNRFUzT0RVZ01DNDJORGN6TXpoV01DNDBPRFEwTURWTU1DNDJOekkwTlRFZ01DNDBNelE1TXpoTU1DNDFNemt4TVRnZ01DNDBPRFEwTURWYUlpQm1hV3hzUFNKM2FHbDBaU0l2UGlZamVHRTdQSEJoZEdnZ1pEMGlUVEF1TmpjeU5ETTVJREF1TnpZMk9USTBRekF1TlRnM05qTTVJREF1TnpZMk9USTBJREF1TlRZMk9ETTVJREF1TmpVNU16STBJREF1TlRZMU56Y3pJREF1TmpVME56a3hRekF1TlRZMU5qUXhJREF1TmpVek9UazJJREF1TlRZMU5qUXhJREF1TmpVek1UZzFJREF1TlRZMU56Y3pJREF1TmpVeU16a3hWakF1TlRFME1qVTRRekF1TlRZMU56Y2dNQzQxTVRFMU9EY2dNQzQxTmpZMU5qa2dNQzQxTURnNU56Z2dNQzQxTmpnd05qY2dNQzQxTURZM05qZERNQzQxTmprMU5qVWdNQzQxTURRMU5UWWdNQzQxTnpFMk9USWdNQzQxTURJNE5EWWdNQzQxTnpReE56TWdNQzQxTURFNE5UaE1NQzQyTmpjMU1EWWdNQzQwTmpVd05UaERNQzQyTnpBMk56UWdNQzQwTmpNM09UWWdNQzQyTnpReU1EVWdNQzQwTmpNM09UWWdNQzQyTnpjek56TWdNQzQwTmpVd05UaE1NQzQzTnpBM01EWWdNQzQxTURFNE5UaERNQzQzTnpNeE9EY2dNQzQxTURJNE5EWWdNQzQzTnpVek1UUWdNQzQxTURRMU5UWWdNQzQzTnpZNE1USWdNQzQxTURZM05qZERNQzQzTnpnek1Ea2dNQzQxTURnNU56Z2dNQzQzTnpreE1Ea2dNQzQxTVRFMU9EY2dNQzQzTnpreE1EWWdNQzQxTVRReU5UaFdNQzQyTlRJek9URkRNQzQzTnpreE56SWdNQzQyTlRNeE9TQXdMamMzT1RFM01pQXdMalkxTXprNU1pQXdMamMzT1RFd05pQXdMalkxTkRjNU1VTXdMamMzT0RBek9TQXdMalkxT1RNeU5DQXdMamMxTnpJek9TQXdMamMyTmpreU5DQXdMalkzTWpRek9TQXdMamMyTmpreU5GcE5NQzQxT1RJME16a2dNQzQyTlRFd05UaERNQzQxT1RRMU56TWdNQzQyTmpFeE9URWdNQzQyTVRNMk16a2dNQzQzTkRBeU5UZ2dNQzQyTnpJME16a2dNQzQzTkRBeU5UaERNQzQzTXpFeU16a2dNQzQzTkRBeU5UZ2dNQzQzTlRBek1EWWdNQzQyTmpFek1qUWdNQzQzTlRJME16a2dNQzQyTlRFd05UaFdNQzQxTWpNek1qUk1NQzQyTnpJME16a2dNQzQwT1RFNE5UaE1NQzQxT1RJME16a2dNQzQxTWpNek1qUldNQzQyTlRFd05UaGFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEM5blBpWWplR0U3UEM5blBpWWplR0U3UEdSbFpuTStKaU40WVRzOGJHbHVaV0Z5UjNKaFpHbGxiblFnYVdROUluQmhhVzUwTUY5c2FXNWxZWElpSUhneFBTSXRNQzR5TURjd05qY2lJSGt4UFNJeExqSXdOekEzSWlCNE1qMGlNUzR5TURjd055SWdlVEk5SWkwd0xqSXdOekEyTnlJZ1ozSmhaR2xsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQaVlqZUdFN1BITjBiM0FnYzNSdmNDMWpiMnh2Y2owaUl6UkVNamRCT0NJdlBpWWplR0U3UEhOMGIzQWdiMlptYzJWMFBTSXhJaUJ6ZEc5d0xXTnZiRzl5UFNJalFURTJOa1pHSWk4K0ppTjRZVHM4TDJ4cGJtVmhja2R5WVdScFpXNTBQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOWpiR2x3VUdGMGFENG1JM2hoT3p3dlpHVm1jejRtSTNoaE96d3ZjM1puUGc9PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO3N0cm9rZVdpZHRoPTE7IiBpZD0iMjMiPjxteENlbGwgc3R5bGU9ImlyLnJlZj05NDc1MTYwNC1mY2Y3LTQ2M2EtYjYwMy1iNmZhZDRjNWQwZjA7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249bGVmdDtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1jdXN0b207aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9dnBjO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7Y29udGFpbmVyPTE7cGVyaW1ldGVyPXJlY3RhbmdsZVBlcmltZXRlcjtyZWN1cnNpdmVSZXNpemU9MDt0ZXh0RGlyZWN0aW9uPWx0cjtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7IiBwYXJlbnQ9InRlbXBsYXRlLTEwMDQyMS1mYWM4OWY0MS01ZjRiLTQ5YjgtYjJiMS0yY2RiZjYxNjYzOWQtMTEiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iMzYiIHk9IjYxIiB3aWR0aD0iNzQ4IiBoZWlnaHQ9IjI0NCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PC9vYmplY3Q+PG14Q2VsbCBpZD0iMjYiIHZhbHVlPSJBV1MgRUMyIChFbGFzdGljIENvbXB1dGUgQ2xvdWQpIC0+IEFXUyBSRFMgKFJlbGF0aW9uYWwgRGF0YWJhc2UgU2VydmljZSkiIHN0eWxlPSJpci5yZWY9ODg4NTM3NTAtMGYwNC00NmZkLTkzMTAtYzljNDk4ZDgwMGY3O2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iMjMiIHNvdXJjZT0iMjQiIHRhcmdldD0iMjUiIGVkZ2U9IjEiPjxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiPjxBcnJheSBhcz0icG9pbnRzIj48bXhQb2ludCB4PSIzNDYiIHk9IjM0Ii8+PC9BcnJheT48L214R2VvbWV0cnk+PC9teENlbGw+PG14Q2VsbCBpZD0iMjQiIHZhbHVlPSJBV1MgRUMyIChFbGFzdGljIENvbXB1dGUgQ2xvdWQpIiBzdHlsZT0iaXIucmVmPTg3ZGMwNjZhLTNiNGQtNDM5Yy1hMDAyLWRkNDI0YWJmODdmZjtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1lYzI7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSXhJaUJvWldsbmFIUTlJakVpSUhacFpYZENiM2c5SWpBZ01DQXhJREVpSUdacGJHdzlJbTV2Ym1VaVBpWWplR0U3UEcxaGMyc2dhV1E5SW0xaGMyc3dJaUJ0WVhOckxYUjVjR1U5SW1Gc2NHaGhJaUJ0WVhOclZXNXBkSE05SW5WelpYSlRjR0ZqWlU5dVZYTmxJaUI0UFNJd0lpQjVQU0l3SWlCM2FXUjBhRDBpTVNJZ2FHVnBaMmgwUFNJeElqNG1JM2hoT3p4amFYSmpiR1VnWTNnOUlqQXVOU0lnWTNrOUlqQXVOU0lnY2owaU1DNDFJaUJtYVd4c1BTSmliR0ZqYXlJdlBpWWplR0U3UEM5dFlYTnJQaVlqZUdFN1BHY2diV0Z6YXowaWRYSnNLQ050WVhOck1Da2lQaVlqZUdFN1BHY2dZMnhwY0Mxd1lYUm9QU0oxY213b0kyTnNhWEF3S1NJK0ppTjRZVHM4Y0dGMGFDQmtQU0pOTVNBd1NEQldNVWd4VmpCYUlpQm1hV3hzUFNKMWNtd29JM0JoYVc1ME1GOXNhVzVsWVhJcElpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDRNRFkyTWpnZ01DNDFNems1TlRsSU1DNDNNems1TmpGV01DNDFNVE15T1ROSU1DNDRNRFkyTWpoV01DNHhPVE15T1ROSU1DNDBPRFkyTWpoV01DNHlOVGs1TlRsSU1DNDBOVGs1TmpGV01DNHhPVE15T1RORE1DNDBOVGs1TmpFZ01DNHhPRFl5TWlBd0xqUTJNamMzSURBdU1UYzVORE0zSURBdU5EWTNOemN4SURBdU1UYzBORE0yUXpBdU5EY3lOemN5SURBdU1UWTVORE0xSURBdU5EYzVOVFUxSURBdU1UWTJOakkySURBdU5EZzJOakk0SURBdU1UWTJOakkyU0RBdU9EQTJOakk0UXpBdU9ERXpOeUF3TGpFMk5qWXlOaUF3TGpneU1EUTRNeUF3TGpFMk9UUXpOU0F3TGpneU5UUTROQ0F3TGpFM05EUXpOa013TGpnek1EUTROU0F3TGpFM09UUXpOeUF3TGpnek16STVOQ0F3TGpFNE5qSXlJREF1T0RNek1qazBJREF1TVRrek1qa3pWakF1TlRFek1qa3pRekF1T0RNek1qazBJREF1TlRJd016WTFJREF1T0RNd05EZzFJREF1TlRJM01UUTRJREF1T0RJMU5EZzBJREF1TlRNeU1UUTVRekF1T0RJd05EZ3pJREF1TlRNM01UVWdNQzQ0TVRNM0lEQXVOVE01T1RVNUlEQXVPREEyTmpJNElEQXVOVE01T1RVNVdpSWdabWxzYkQwaWQyaHBkR1VpTHo0bUkzaGhPenh3WVhSb0lHUTlJazB3TGpVeE16RTNJREF1T0RNek1qazBTREF1TVRrek1UY3hRekF1TVRnMk1EazRJREF1T0RNek1qazBJREF1TVRjNU16RTFJREF1T0RNd05EZzFJREF1TVRjME16RTBJREF1T0RJMU5EZzBRekF1TVRZNU16RXpJREF1T0RJd05EZ3pJREF1TVRZMk5UQTBJREF1T0RFek55QXdMakUyTmpVd05DQXdMamd3TmpZeU4xWXdMalE0TmpZeU9FTXdMakUyTmpVd05DQXdMalEzT1RVMU5TQXdMakUyT1RNeE15QXdMalEzTWpjM01pQXdMakUzTkRNeE5DQXdMalEyTnpjM01VTXdMakUzT1RNeE5TQXdMalEyTWpjM0lEQXVNVGcyTURrNElEQXVORFU1T1RZeElEQXVNVGt6TVRjeElEQXVORFU1T1RZeFNEQXVNalU1T0RNM1ZqQXVORGcyTmpJNFNEQXVNVGt6TVRjeFZqQXVPREEyTmpJM1NEQXVOVEV6TVRkV01DNDNNems1TmpGSU1DNDFNems0TXpaV01DNDRNRFkyTWpkRE1DNDFNems0TXpZZ01DNDRNVE0zSURBdU5UTTNNREkzSURBdU9ESXdORGd6SURBdU5UTXlNREkySURBdU9ESTFORGcwUXpBdU5USTNNREkxSURBdU9ETXdORGcxSURBdU5USXdNalF5SURBdU9ETXpNamswSURBdU5URXpNVGNnTUM0NE16TXlPVFJhSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVOekV6TWpnNUlEQXVNemM1T1RVMVZqQXVNelV6TWpnNFNEQXVOamN6TWpnNVF6QXVOamN5TnpRZ01DNHpORFl6T1RnZ01DNDJOamszTlRRZ01DNHpNems1TXlBd0xqWTJORGcyTnlBd0xqTXpOVEEwTTBNd0xqWTFPVGs0SURBdU16TXdNVFUySURBdU5qVXpOVEV5SURBdU16STNNVGNnTUM0Mk5EWTJNaklnTUM0ek1qWTJNakZXTUM0eU9EWTJNakZJTUM0Mk1UazVOVFZXTUM0ek1qWTJNakZJTUM0MU56azVOVFZXTUM0eU9EWTJNakZJTUM0MU5UTXlPRGhXTUM0ek1qWTJNakZJTUM0MU1UTXlPRGhXTUM0eU9EWTJNakZJTUM0ME9EWTJNakpXTUM0ek1qWTJNakZJTUM0ME5EWTJNakZXTUM0eU9EWTJNakZJTUM0ME1UazVOVFZXTUM0ek1qWTJNakZJTUM0ek56azVOVFZXTUM0eU9EWTJNakZJTUM0ek5UTXlPRGhXTUM0ek1qWTJNakZETUM0ek5EWXpPVGdnTUM0ek1qY3hOeUF3TGpNek9Ua3pJREF1TXpNd01UVTJJREF1TXpNMU1EUXpJREF1TXpNMU1EUXpRekF1TXpNd01UVTJJREF1TXpNNU9UTWdNQzR6TWpjeE55QXdMak0wTmpNNU9DQXdMak15TmpZeU1TQXdMak0xTXpJNE9FZ3dMakk0TmpZeU1WWXdMak0zT1RrMU5VZ3dMak15TmpZeU1WWXdMalF4T1RrMU5VZ3dMakk0TmpZeU1WWXdMalEwTmpZeU1VZ3dMak15TmpZeU1WWXdMalE0TmpZeU1rZ3dMakk0TmpZeU1WWXdMalV4TXpJNE9FZ3dMak15TmpZeU1WWXdMalUxTXpJNE9FZ3dMakk0TmpZeU1WWXdMalUzT1RrMU5VZ3dMak15TmpZeU1WWXdMall4T1RrMU5VZ3dMakk0TmpZeU1WWXdMalkwTmpZeU1rZ3dMak15TmpZeU1VTXdMak15TnpFM0lEQXVOalV6TlRFeElEQXVNek13TVRVMklEQXVOalU1T1RnZ01DNHpNelV3TkRNZ01DNDJOalE0TmpkRE1DNHpNems1TXlBd0xqWTJPVGMxTkNBd0xqTTBOak01T0NBd0xqWTNNamMwSURBdU16VXpNamc0SURBdU5qY3pNamc1VmpBdU56RXpNamc1U0RBdU16YzVPVFUxVmpBdU5qY3pNamc1U0RBdU5ERTVPVFUxVmpBdU56RXpNamc1U0RBdU5EUTJOakl4VmpBdU5qY3pNamc1U0RBdU5EZzJOakl5VmpBdU56RXpNamc1U0RBdU5URXpNamc0VmpBdU5qY3pNamc1U0RBdU5UVXpNamc0VmpBdU56RXpNamc1U0RBdU5UYzVPVFUxVmpBdU5qY3pNamc1U0RBdU5qRTVPVFUxVmpBdU56RXpNamc1U0RBdU5qUTJOakl5VmpBdU5qY3pNamc1UXpBdU5qVXpOVEV5SURBdU5qY3lOelFnTUM0Mk5UazVPQ0F3TGpZMk9UYzFOQ0F3TGpZMk5EZzJOeUF3TGpZMk5EZzJOME13TGpZMk9UYzFOQ0F3TGpZMU9UazRJREF1TmpjeU56UWdNQzQyTlRNMU1URWdNQzQyTnpNeU9Ea2dNQzQyTkRZMk1qSklNQzQzTVRNeU9EbFdNQzQyTVRrNU5UVklNQzQyTnpNeU9EbFdNQzQxTnprNU5UVklNQzQzTVRNeU9EbFdNQzQxTlRNeU9EaElNQzQyTnpNeU9EbFdNQzQxTVRNeU9EaElNQzQzTVRNeU9EbFdNQzQwT0RZMk1qSklNQzQyTnpNeU9EbFdNQzQwTkRZMk1qRklNQzQzTVRNeU9EbFdNQzQwTVRrNU5UVklNQzQyTnpNeU9EbFdNQzR6TnprNU5UVklNQzQzTVRNeU9EbGFUVEF1TmpRMk5qSXlJREF1TmpRME1qSXlRekF1TmpRMk5qSXlJREF1TmpRME9EVTRJREF1TmpRMk16WTVJREF1TmpRMU5EWTVJREF1TmpRMU9URTVJREF1TmpRMU9URTVRekF1TmpRMU5EWTVJREF1TmpRMk16WTVJREF1TmpRME9EVTVJREF1TmpRMk5qSXlJREF1TmpRME1qSXlJREF1TmpRMk5qSXlTREF1TXpVMU5qZzRRekF1TXpVMU1EVXhJREF1TmpRMk5qSXlJREF1TXpVME5EUXhJREF1TmpRMk16WTVJREF1TXpVek9Ua3hJREF1TmpRMU9URTVRekF1TXpVek5UUXhJREF1TmpRMU5EWTVJREF1TXpVek1qZzRJREF1TmpRME9EVTRJREF1TXpVek1qZzRJREF1TmpRME1qSXlWakF1TXpVMU5qZzRRekF1TXpVek1qZzRJREF1TXpVMU1EVXhJREF1TXpVek5UUXhJREF1TXpVME5EUXhJREF1TXpVek9Ua3hJREF1TXpVek9Ua3hRekF1TXpVME5EUXhJREF1TXpVek5UUXhJREF1TXpVMU1EVXhJREF1TXpVek1qZzRJREF1TXpVMU5qZzRJREF1TXpVek1qZzRTREF1TmpRME1qSXlRekF1TmpRME9EVTVJREF1TXpVek1qZzRJREF1TmpRMU5EWTVJREF1TXpVek5UUXhJREF1TmpRMU9URTVJREF1TXpVek9Ua3hRekF1TmpRMk16WTVJREF1TXpVME5EUXhJREF1TmpRMk5qSXlJREF1TXpVMU1EVXhJREF1TmpRMk5qSXlJREF1TXpVMU5qZzRWakF1TmpRME1qSXlXaUlnWm1sc2JEMGlkMmhwZEdVaUx6NG1JM2hoT3p3dlp6NG1JM2hoT3p3dlp6NG1JM2hoT3p4a1pXWnpQaVlqZUdFN1BHeHBibVZoY2tkeVlXUnBaVzUwSUdsa1BTSndZV2x1ZERCZmJHbHVaV0Z5SWlCNE1UMGlMVEF1TWpBM01pSWdlVEU5SWpFdU1qQTNNaUlnZURJOUlqRXVNakEzTURjaUlIa3lQU0l0TUM0eU1EY3dOamNpSUdkeVlXUnBaVzUwVlc1cGRITTlJblZ6WlhKVGNHRmpaVTl1VlhObElqNG1JM2hoT3p4emRHOXdJSE4wYjNBdFkyOXNiM0k5SWlORE9EVXhNVUlpTHo0bUkzaGhPenh6ZEc5d0lHOW1abk5sZEQwaU1TSWdjM1J2Y0MxamIyeHZjajBpSTBaR09Ua3dNQ0l2UGlZamVHRTdQQzlzYVc1bFlYSkhjbUZrYVdWdWRENG1JM2hoT3p4amJHbHdVR0YwYUNCcFpEMGlZMnhwY0RBaVBpWWplR0U3UEhKbFkzUWdkMmxrZEdnOUlqRWlJR2hsYVdkb2REMGlNU0lnWm1sc2JEMGlkMmhwZEdVaUx6NG1JM2hoT3p3dlkyeHBjRkJoZEdnK0ppTjRZVHM4TDJSbFpuTStKaU40WVRzOEwzTjJaejQ9O3ZlcnRpY2FsTGFiZWxQb3NpdGlvbj1ib3R0b207dmVydGljYWxBbGlnbj10b3A7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlV2lkdGg9MTsiIHBhcmVudD0iMjMiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iNTUyIiB5PSI0OCIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIzMCIgdmFsdWU9IkFXUyBSRFMgKFJlbGF0aW9uYWwgRGF0YWJhc2UgU2VydmljZSkgLT4gQVdTIEEySSAoQXVnbWVudGVkIEFJKSIgc3R5bGU9ImlyLnJlZj04OTAxM2UyZC04YzRkLTQ5NDYtOTcxYy02MmU4ZDk1MWMyNzA7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSIyMyIgc291cmNlPSIyNSIgdGFyZ2V0PSIyOCIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjI1IiB2YWx1ZT0iQVdTIFJEUyAoUmVsYXRpb25hbCBEYXRhYmFzZSBTZXJ2aWNlKSIgc3R5bGU9ImlyLnJlZj1lMGJkOWZiNS1mMWYzLTRkMzktODJlZi1kMDEzMDVlZGQzZDQ7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9cmRzO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHMWhjMnNnYVdROUltMWhjMnN3SWlCdFlYTnJMWFI1Y0dVOUltRnNjR2hoSWlCdFlYTnJWVzVwZEhNOUluVnpaWEpUY0dGalpVOXVWWE5sSWlCNFBTSXdJaUI1UFNJd0lpQjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJajRtSTNoaE96eGphWEpqYkdVZ1kzZzlJakF1TlNJZ1kzazlJakF1TlNJZ2NqMGlNQzQxSWlCbWFXeHNQU0ppYkdGamF5SXZQaVlqZUdFN1BDOXRZWE5yUGlZamVHRTdQR2NnYldGemF6MGlkWEpzS0NOdFlYTnJNQ2tpUGlZamVHRTdQR2NnWTJ4cGNDMXdZWFJvUFNKMWNtd29JMk5zYVhBd0tTSStKaU40WVRzOGNHRjBhQ0JrUFNKTk1TQXdTREJXTVVneFZqQmFJaUJtYVd4c1BTSjFjbXdvSTNCaGFXNTBNRjlzYVc1bFlYSXBJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzQyTkRZd01ETWdNQzR6TnpZME56bERNQzQyTkRZd01ETWdNQzR6TXpjNE1UTWdNQzQxTnpBeE16Y2dNQzR6TVRrNU5EWWdNQzQwT1Rrek16Y2dNQzR6TVRrNU5EWkRNQzQwTWpnMU16Y2dNQzR6TVRrNU5EWWdNQzR6TlRJMk55QXdMak16TnpneE15QXdMak0xTWpZM0lEQXVNemMyTkRjNVF6QXVNelV5TmpFeUlEQXVNemM0TkRFeklEQXVNelV5T0RNM0lEQXVNemd3TXpRMElEQXVNelV6TXpNM0lEQXVNemd5TWpFelZqQXVOakl5T0RjNVF6QXVNelV5TmpjZ01DNDJOakk0TnprZ01DNDBNamcyTnlBd0xqWTNPVGswTlNBd0xqVXdNREF3TXlBd0xqWTNPVGswTlVNd0xqVTNNVE16TnlBd0xqWTNPVGswTlNBd0xqWTBOalkzSURBdU5qWXlNelExSURBdU5qUTJOamNnTUM0Mk1qTTJOemxXTUM0ek56WTBOemxJTUM0Mk5EWXdNRE5hVFRBdU5EazVOakF6SURBdU16UTJOelEyUXpBdU5UYzNNek0zSURBdU16UTJOelEySURBdU5qRTVOakF6SURBdU16WTNPVFEySURBdU5qRTVOakF6SURBdU16YzJOakV6UXpBdU5qRTVOakF6SURBdU16ZzFNamM1SURBdU5UYzNOakF6SURBdU5EQTJORGM1SURBdU5EazVOakF6SURBdU5EQTJORGM1UXpBdU5ESXhOakF6SURBdU5EQTJORGM1SURBdU16YzVOakF6SURBdU16ZzFOREV6SURBdU16YzVOakF6SURBdU16YzJOakV6UXpBdU16YzVOakF6SURBdU16WTNPREV6SURBdU5ESXhPRGNnTUM0ek5EWTNORFlnTUM0ME9UazJNRE1nTUM0ek5EWTNORFphVFRBdU5qRTVOakF6SURBdU5qSXpPREV5UXpBdU5qRTVOakF6SURBdU5qTXlNelExSURBdU5UYzNORGNnTUM0Mk5UTTBNVElnTUM0ME9UazJNRE1nTUM0Mk5UTTBNVEpETUM0ME1qRTNNemNnTUM0Mk5UTTBNVElnTUM0ek56azJNRE1nTUM0Mk16SXpORFVnTUM0ek56azJNRE1nTUM0Mk1qTTRNVEpXTUM0MU9ERTJOemxETUM0ME1EYzNNemNnTUM0MU9UY3dNVElnTUM0ME5UUTVNemNnTUM0Mk1EUXpORFVnTUM0ME9UazJNRE1nTUM0Mk1EUXpORFZETUM0MU5EUXlOeUF3TGpZd05ETTBOU0F3TGpVNU1UQTNJREF1TlRrM01UUTFJREF1TmpFNU5qQXpJREF1TlRneU1EYzVWakF1TmpJek9ERXlXazB3TGpZeE9UWXdNeUF3TGpVME56azBOa013TGpZeE9UWXdNeUF3TGpVMU5qUTNPU0F3TGpVM056WXdNeUF3TGpVM056Z3hNaUF3TGpRNU9UWXdNeUF3TGpVM056Z3hNa013TGpReU1UWXdNeUF3TGpVM056Z3hNaUF3TGpNM09UWXdNeUF3TGpVMU5qUTNPU0F3TGpNM09UWXdNeUF3TGpVME56azBOa2d3TGpNNE1EQXdNMVl3TGpRNU56QXhNa013TGpRd09ERXpOeUF3TGpVeE1qSXhNaUF3TGpRMU5UTXpOeUF3TGpVeE9UVTBOaUF3TGpVd01EQXdNeUF3TGpVeE9UVTBOa013TGpVME5EWTNJREF1TlRFNU5UUTJJREF1TlRreE5EY2dNQzQxTVRJek5EWWdNQzQyTWpBd01ETWdNQzQwT1RjeU56bE1NQzQyTVRrMk1ETWdNQzQxTkRjNU5EWmFUVEF1TmpFNU5qQXpJREF1TkRZek1ERXpRekF1TmpFNU5qQXpJREF1TkRjeE5qYzVJREF1TlRjM05qQXpJREF1TkRrek1ERXlJREF1TkRrNU5qQXpJREF1TkRrek1ERXlRekF1TkRJeE5qQXpJREF1TkRrek1ERXlJREF1TXpjNU5qQXpJREF1TkRjeE5qYzVJREF1TXpjNU5qQXpJREF1TkRZek1ERXpTREF1TXpnd01EQXpWakF1TkRFeE1ERXpRekF1TkRBNE5EQXpJREF1TkRJMk1EYzVJREF1TkRVMU1EY2dNQzQwTXpNd01UTWdNQzQxTURBd01ETWdNQzQwTXpNd01UTkRNQzQxTkRRNU16Y2dNQzQwTXpNd01UTWdNQzQxT1RJeE16Y2dNQzQwTWpVNE1UTWdNQzQyTWpBd01ETWdNQzQwTVRBME56bE1NQzQyTVRrMk1ETWdNQzQwTmpNd01UTmFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU1qRXlNRGt6SURBdU9EQTJPRWd3TGpJNU9UazFPVll3TGpnek16UTJOa2d3TGpFM09UazFPVU13TGpFM05qUXlNeUF3TGpnek16UTJOaUF3TGpFM016QXpNaUF3TGpnek1qQTJNU0F3TGpFM01EVXpNU0F3TGpneU9UVTJNVU13TGpFMk9EQXpNU0F3TGpneU56QTJNU0F3TGpFMk5qWXlOaUF3TGpneU16WTJPU0F3TGpFMk5qWXlOaUF3TGpneU1ERXpNMVl3TGpjd01ERXpNMGd3TGpFNU16STVNMVl3TGpjNE56Y3pNMHd3TGpJNU16STVNeUF3TGpZNE56ZzJOa3d3TGpNeE1UazFPU0F3TGpjd05qWTJOa3d3TGpJeE1qQTVNeUF3TGpnd05qaGFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEhCaGRHZ2daRDBpVFRBdU9ETXpNek14SURBdU56QXdNVE14VmpBdU9ESXdNVE14UXpBdU9ETXpNek14SURBdU9ESXpOalkzSURBdU9ETXhPVEkySURBdU9ESTNNRFU1SURBdU9ESTVOREkySURBdU9ESTVOVFU1UXpBdU9ESTJPVEkxSURBdU9ETXlNRFlnTUM0NE1qTTFNelFnTUM0NE16TTBOalFnTUM0NE1UazVPVGdnTUM0NE16TTBOalJJTUM0Mk9UazVPVGhXTUM0NE1EWTNPVGhJTUM0M09EYzROalJNTUM0Mk9Ea3pNekVnTUM0M01EYzVPVGhNTUM0M01EZ3hNekVnTUM0Mk9Ea3pNekZNTUM0NE1EWTJOalFnTUM0M09EYzNNekZXTUM0M01EQXhNekZJTUM0NE16TXpNekZhSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BIQmhkR2dnWkQwaVRUQXVPRE16TXpNeElEQXVNVGd3TWpBMFZqQXVNekF3TWpBMFNEQXVPREEyTmpZMFZqQXVNakV5TWpBMFREQXVOekE0TVRNeElEQXVNekV3TnpNNFREQXVOamc1TXpNeElEQXVNamt4T1RNNFREQXVOemczTnpNeElEQXVNVGt6TlRNM1NEQXVOams1T1RrNFZqQXVNVFkyT0RkSU1DNDRNVGs1T1RoRE1DNDRNak0xTXpRZ01DNHhOalk0TnlBd0xqZ3lOamt5TlNBd0xqRTJPREkzTlNBd0xqZ3lPVFF5TmlBd0xqRTNNRGMzTlVNd0xqZ3pNVGt5TmlBd0xqRTNNekkzTmlBd0xqZ3pNek16TVNBd0xqRTNOalkyTnlBd0xqZ3pNek16TVNBd0xqRTRNREl3TkZvaUlHWnBiR3c5SW5kb2FYUmxJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzR6TVRFNU5Ua2dNQzR5T1RNek1EUk1NQzR5T1RNeU9UTWdNQzR6TVRFNU56Rk1NQzR4T1RNeU9UTWdNQzR5TVRJeE1EUldNQzR5T1RrNE16ZElNQzR4TmpZMk1qWldNQzR4TnprNE16ZERNQzR4TmpZMk1qWWdNQzR4TnpZek1ERWdNQzR4Tmpnd016RWdNQzR4TnpJNU1TQXdMakUzTURVek1TQXdMakUzTURRd09VTXdMakUzTXpBek1pQXdMakUyTnprd09TQXdMakUzTmpReU15QXdMakUyTmpVd05DQXdMakUzT1RrMU9TQXdMakUyTmpVd05FZ3dMakk1T1RrMU9WWXdMakU1TXpFM01VZ3dMakl4TWpBNU0wd3dMak14TVRrMU9TQXdMakk1TXpNd05Gb2lJR1pwYkd3OUluZG9hWFJsSWk4K0ppTjRZVHM4Y0dGMGFDQmtQU0pOTUM0eU9UVTBPVEVnTUM0Mk1UazFNRE5ETUM0eU1UUXdNalVnTUM0MU9UQXhOeUF3TGpFMk56TTFPQ0F3TGpVME5UTTJPU0F3TGpFMk56TTFPQ0F3TGpRNU5qY3dNa013TGpFMk56TTFPQ0F3TGpRME9EQXpOU0F3TGpJeE5EQXlOU0F3TGpRd016TTJPQ0F3TGpJNU5UUTVNU0F3TGpNM016a3dNVXd3TGpNd05EVTFOeUF3TGpNNU9EazJPRU13TGpJek5UTTFPQ0F3TGpReU16a3dNaUF3TGpFNU5EQXlOU0F3TGpRMk1EUXpOU0F3TGpFNU5EQXlOU0F3TGpRNU5qY3dNa013TGpFNU5EQXlOU0F3TGpVek1qazJPU0F3TGpJek5UTTFPQ0F3TGpVMk9UVXdNeUF3TGpNd05EVTFOeUF3TGpVNU5EUXpOMHd3TGpJNU5UUTVNU0F3TGpZeE9UVXdNMW9pSUdacGJHdzlJbmRvYVhSbElpOCtKaU40WVRzOGNHRjBhQ0JrUFNKTk1DNDJPVGN4TXpJZ01DNDJNakkwTkV3d0xqWTRPRFU1T1NBd0xqVTVOekV3TjBNd0xqYzJNalU1T1NBd0xqVTNNakUzTXlBd0xqZ3dOamN6TWlBd0xqVXpORFUzTXlBd0xqZ3dOamN6TWlBd0xqUTVOamN3TmtNd0xqZ3dOamN6TWlBd0xqUTFPRGd6T1NBd0xqYzJNalU1T1NBd0xqUXlNVEl6T1NBd0xqWTRPRFU1T1NBd0xqTTVOakUzTWt3d0xqWTVOekV6TWlBd0xqTTNNRGszTWtNd0xqYzRNelkyTlNBd0xqUXdNREF6T1NBd0xqZ3pNek01T1NBd0xqUTBOakUzTWlBd0xqZ3pNek01T1NBd0xqUTVOamN3TmtNd0xqZ3pNek01T1NBd0xqVTBOekkwSURBdU56Z3pOalkxSURBdU5Ua3pNVEEzSURBdU5qazNNVE15SURBdU5qSXlORFJhSWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOW5QaVlqZUdFN1BDOW5QaVlqZUdFN1BHUmxabk0rSmlONFlUczhiR2x1WldGeVIzSmhaR2xsYm5RZ2FXUTlJbkJoYVc1ME1GOXNhVzVsWVhJaUlIZ3hQU0l0TUM0eU1EY3dOamNpSUhreFBTSXhMakl3TnpBM0lpQjRNajBpTVM0eU1EY3lJaUI1TWowaUxUQXVNakEzTWlJZ1ozSmhaR2xsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQaVlqZUdFN1BITjBiM0FnYzNSdmNDMWpiMnh2Y2owaUl6SkZNamRCUkNJdlBpWWplR0U3UEhOMGIzQWdiMlptYzJWMFBTSXhJaUJ6ZEc5d0xXTnZiRzl5UFNJak5USTNSa1pHSWk4K0ppTjRZVHM4TDJ4cGJtVmhja2R5WVdScFpXNTBQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOWpiR2x3VUdGMGFENG1JM2hoT3p3dlpHVm1jejRtSTNoaE96d3ZjM1puUGc9PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjIzIiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjU4IiB5PSI1MyIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIzMSIgdmFsdWU9IkFXUyBBMkkgKEF1Z21lbnRlZCBBSSkgLT4gQVdTIEVDMiAoRWxhc3RpYyBDb21wdXRlIENsb3VkKSIgc3R5bGU9ImlyLnJlZj0wMjVhYjFmMi1mNjE1LTQzOGUtYTQwYS0zZjg4YzYzNDNkN2E7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZUNvbG9yPSNCRkJGQkY7c3Ryb2tlV2lkdGg9MjtlbmRBcnJvdz1vcGVuO2VuZEZpbGw9MDtlbmRTaXplPTQ7c291cmNlUGVyaW1ldGVyU3BhY2luZz05OyIgcGFyZW50PSIyMyIgc291cmNlPSIyOCIgdGFyZ2V0PSIyNCIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjI4IiB2YWx1ZT0iQVdTIEEySSAoQXVnbWVudGVkIEFJKSIgc3R5bGU9ImlyLnJlZj1jNjIwNmZiYy0yYWRhLTRkMGYtODZiNi02NmFhZjA4ZTk3YjI7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9Q0QtQTJJO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHMWhjMnNnYVdROUltMWhjMnN3WHpFMU16WmZNalF6TlRjaUlITjBlV3hsUFNKdFlYTnJMWFI1Y0dVNllXeHdhR0VpSUcxaGMydFZibWwwY3owaWRYTmxjbE53WVdObFQyNVZjMlVpSUhnOUlqQWlJSGs5SWpBaUlIZHBaSFJvUFNJeElpQm9aV2xuYUhROUlqRWlQaVlqZUdFN1BHTnBjbU5zWlNCamVEMGlNQzQxSWlCamVUMGlNQzQxSWlCeVBTSXdMalVpSUdacGJHdzlJbUpzWVdOcklpOCtKaU40WVRzOEwyMWhjMnMrSmlONFlUczhaeUJ0WVhOclBTSjFjbXdvSTIxaGMyc3dYekUxTXpaZk1qUXpOVGNwSWo0bUkzaGhPenh3WVhSb0lHWnBiR3d0Y25Wc1pUMGlaWFpsYm05a1pDSWdZMnhwY0MxeWRXeGxQU0psZG1WdWIyUmtJaUJrUFNKTk1DQXdTREZXTUM0NU9UazVPVGxJTUZZd1dpSWdabWxzYkQwaWRYSnNLQ053WVdsdWREQmZiR2x1WldGeVh6RTFNelpmTWpRek5UY3BJaTgrSmlONFlUczhjR0YwYUNCbWFXeHNMWEoxYkdVOUltVjJaVzV2WkdRaUlHTnNhWEF0Y25Wc1pUMGlaWFpsYm05a1pDSWdaRDBpVFRBdU5qWXdNekV5SURBdU9ESTFNRFkyUXpBdU5qVTJORFl5SURBdU56YzJOVEkySURBdU5qTXdORGt6SURBdU56TXlNRFUySURBdU5Ua3dOVGN6SURBdU56QTJPRGsyUXpBdU5UWTRORGt6SURBdU5qa3lPVGsySURBdU5UUXpNVGN6SURBdU5qZzFOak0zSURBdU5URTNNek16SURBdU5qZzFOakkzUXpBdU5EUXlNakV6SURBdU5qZzFOakkzSURBdU16Z3dNemcwSURBdU56UTNNVEUySURBdU16YzBNelkwSURBdU9ESTFNRFkyU0RBdU5qWXdNekV5V2swd0xqVXhOell3TXlBd0xqWTJNRFl5TjBNd0xqVTJNRFU0TXlBd0xqWTJNRFl5TnlBd0xqVTVOVFV6TXlBd0xqWXlOVFkyTnlBd0xqVTVOVFV5TXlBd0xqVTRNalk1TjBNd0xqVTVOVFV5TXlBd0xqVXpPVGN4TnlBd0xqVTJNRFUzTXlBd0xqVXdORGMxTnlBd0xqVXhOell3TXlBd0xqVXdORGMxTjBNd0xqUTNORFl5TXlBd0xqVXdORGMxTnlBd0xqUXpPVFkyTXlBd0xqVXpPVGN4TnlBd0xqUXpPVFkyTXlBd0xqVTRNalk1TjBNd0xqUXpPVFkyTXlBd0xqWXlOVFkzTnlBd0xqUTNORFl5TXlBd0xqWTJNRFl6TnlBd0xqVXhOell3TXlBd0xqWTJNRFl5TjFwTk1DNDJPRFU0TURJZ01DNDRNemMxTmpaRE1DNDJPRFU0TURJZ01DNDRORFEwTmpZZ01DNDJPREF5TVRJZ01DNDROVEF3TmpZZ01DNDJOek16TURJZ01DNDROVEF3TmpaSU1DNHpOakV6T0RSRE1DNHpOVFEwTnpRZ01DNDROVEF3TmpZZ01DNHpORGc0T0RRZ01DNDRORFEwTmpZZ01DNHpORGc0T0RRZ01DNDRNemMxTmpaRE1DNHpORGc0T0RRZ01DNDNOVGs0TURZZ01DNHpPVFk1TmpNZ01DNDJPVE0zTlRZZ01DNDBOak0wTmpNZ01DNDJOekF3TnpkRE1DNDBNelF5TWpNZ01DNDJOVEU1TURjZ01DNDBNVFEyTmpNZ01DNDJNVGsxTnpjZ01DNDBNVFEyTmpNZ01DNDFPREkyT1RkRE1DNDBNVFEyTmpNZ01DNDFNalU1TXpjZ01DNDBOakE0TXpNZ01DNDBOemszTlRjZ01DNDFNVGMyTURNZ01DNDBOemszTlRkRE1DNDFOelF6TlRNZ01DNDBOemszTlRjZ01DNDJNakExTXpNZ01DNDFNalU1TWpjZ01DNDJNakExTWpNZ01DNDFPREkyT1RkRE1DNDJNakExTWpNZ01DNDJNVGsyTURjZ01DNDJNREE1TXpNZ01DNDJOVEU1TXpjZ01DNDFOekUyT0RNZ01DNDJOekF4TVRkRE1DNDFPREk0T0RNZ01DNDJOelF4TURjZ01DNDFPVE0yT1RNZ01DNDJOemt6TURjZ01DNDJNRE01TURNZ01DNDJPRFUzTkRkRE1DNDJOVFEwTVRJZ01DNDNNVGMxT0RZZ01DNDJPRFU0TURJZ01DNDNOelUzTlRZZ01DNDJPRFU0TURJZ01DNDRNemMxTmpaV01DNDRNemMxTmpaYVRUQXVNalUyTWpnMElEQXVOVEUwTkRFM1REQXVNalk1TVRVMElEQXVOVE0xT0RVM1REQXVNelF5TXpjMElEQXVORGt4T1RJM1REQXVNemczT0RBeklEQXVOVEU1TXprM1REQXVOREF3TnpNeklEQXVORGs0TURBM1REQXVNelV3T0RFMElEQXVORFkzT0RBM1REQXVNelV3T0RJMElEQXVOREV6T0RrM1REQXVORE15TURJeklEQXVNelkzTXpJM1F6QXVORE0xT1RJeklEQXVNelkxTVRBM0lEQXVORE00TXpFeklEQXVNell3T1RZM0lEQXVORE00TXpFeklEQXVNelUyTkRrM1ZqQXVNak0zTXpVNFNEQXVOREV6TXpFelZqQXVNelE1TWpVM1REQXVNek00TlRFMElEQXVNemt5TVRRM1REQXVNall6TXpFMElEQXVNelV3TVRrM1ZqQXVNalUyTVRrNFREQXVNek00TXpFMElEQXVNakV4TkRZNFZqQXVNams1T0RVM1NEQXVNell6TXpFMFZqQXVNVGsyTlRVNFREQXVOREUzTmpVeklEQXVNVFkwTVRRNFREQXVOVEF3T0RFeklEQXVNakEwTVRRNFZqQXVORFE1T0RVM1NEQXVOVEkxT0RFelZqQXVNVGsyTWpjNFF6QXVOVEkxT0RFeklEQXVNVGt4TkRjNElEQXVOVEl6TURZeklEQXVNVGczTURnNElEQXVOVEU0TnpNeklEQXVNVGcxTURFNFREQXVOREl5TkRNeklEQXVNVE00TnpBNFF6QXVOREU0TmpNeklEQXVNVE0yT0RrNElEQXVOREUwTWpJeklEQXVNVE0zTURrNElEQXVOREV3TmpBeklEQXVNVE01TWpJNFREQXVNalEwTkRFMElEQXVNak00TXpVNFF6QXVNalF3TmpNMElEQXVNalF3TmpFNElEQXVNak00TXpFMElEQXVNalEwTmprNElEQXVNak00TXpFMElEQXVNalE1TURrNFZqQXVNelF6TnprM1REQXVNVFU0TmpjMElEQXVNemMxTmpRM1F6QXVNVFV6T1RNMElEQXVNemMzTlRRM0lEQXVNVFV3T0RNMElEQXVNemd5TVRBM0lEQXVNVFV3T0RFMElEQXVNemczTWpBM1REQXVNVFV3TURJMElEQXVOVGMyT1RJM1F6QXVNVFV3TURFMElEQXVOVGd4TWpRM0lEQXVNVFV5TWpJMElEQXVOVGcxTWpjM0lEQXVNVFUxT0RnMElEQXVOVGczTlRjM1REQXVNak00TXpFMElEQXVOak01TVRjM1ZqQXVOekl5TkRZMlF6QXVNak00TXpFMElEQXVOekkyTXprMklEQXVNalF3TVRjMElEQXVOek13TVRBMklEQXVNalF6TXpJMElEQXVOek15TkRVMlREQXVNekE1TURnMElEQXVOemd4TnprMlREQXVNekkwTURnMElEQXVOell4TnprMlREQXVNall6TXpFMElEQXVOekUyTWpFMlZqQXVOak15TWpVM1F6QXVNall6TXpFMElEQXVOak13T1RZM0lEQXVNall6TVRJMElEQXVOakk1TnpBM0lEQXVNall5TnpNMElEQXVOakk0TlRBM1REQXVNek0wT1RNMElEQXVOVGcxTVRrM1REQXVNekl5TURZMElEQXVOVFl6TnpVM1REQXVNalF4T0RJMElEQXVOakV4T0RrM1REQXVNVGMxTURVMElEQXVOVGN3TURjM1REQXVNVGMxTXpNMElEQXVOVEF3TURZM1REQXVNalV5TnpFMElEQXVORFV6TmpRM1REQXVNak01T0RNMElEQXVORE15TWpBM1REQXVNVGMxTkRZMElEQXVORGN3T0RJM1REQXVNVGMxTnpjMElEQXVNemsxTnpJM1REQXVNalEwTkRJMElEQXVNelk0TWpjM1REQXVNekkxT0RJMElEQXVOREV6TmprM1REQXVNekkxT0RFMElEQXVORGN5TnpFM1REQXVNalUyTWpnMElEQXVOVEUwTkRFM1drMHdMalkwTmpjeE1pQXdMalV5T0Rnd04wTXdMalkxTVRBd01pQXdMalV4TkRZeE55QXdMalkxTXpFM01pQXdMalV3TURFeE55QXdMalkxTXpFM01pQXdMalE0TlRjeU4wTXdMalkxTXpFM01pQXdMalF4T1RneE55QXdMall3T1RBMU15QXdMak0yTVRNM055QXdMalUwTlRnNE15QXdMak0wTXpZeE4wd3dMalV6T1RFeU15QXdMak0yTnpZNU4wTXdMalU1TVRVME15QXdMak00TWpRek55QXdMall5T0RFM015QXdMalF6TURrM055QXdMall5T0RFM015QXdMalE0TlRjeU4wTXdMall5T0RFM015QXdMalE1TnpZMk55QXdMall5TmpNMk15QXdMalV3T1RjeU55QXdMall5TWpjNE15QXdMalV5TVRVM04wd3dMalkwTmpjeE1pQXdMalV5T0Rnd04xcE5NQzQ0TlRBd01ESWdNQzQxTkRVME1qZE1NQzQ0TURJNE1ESWdNQzQyTmpnNU1UZERNQzQ0TURFMU9ESWdNQzQyTnpJeE5EY2dNQzQzT1Rrd09ESWdNQzQyTnpRM01EY2dNQzQzT1RVNE9ESWdNQzQyTnpZd01UZERNQzQzT1RJMk9USWdNQzQyTnpjek1qY2dNQzQzT0RreE1qSWdNQzQyTnpjeU5qY2dNQzQzT0RVNU9ESWdNQzQyTnpVNE5UZE1NQzQzTkRVME56SWdNQzQyTlRjMU9UZERNQzQzTkRNM01ESWdNQzQyTmpBME16Y2dNQzQzTkRJd01qSWdNQzQyTmpNeE5qY2dNQzQzTkRBek9ESWdNQzQyTmpVNE1qZERNQzQzTWpreU9ESWdNQzQyT0RNNU1UWWdNQzQzTVRrMk9USWdNQzQyT1RrMU5UWWdNQzQyT1RjNE5qSWdNQzQzTVRZd05EWk1NQzQyT0RJNE1ESWdNQzQyT1RZd056WkRNQzQzTURBNE5qSWdNQzQyT0RJME5EWWdNQzQzTURnMU1ESWdNQzQyTmprNU9EY2dNQzQzTVRrd09ESWdNQzQyTlRJM05UZERNQzQzTWpJMU1USWdNQzQyTkRjeE9EY2dNQzQzTWpZeE5ESWdNQzQyTkRFeU5UY2dNQzQzTXpBek9ESWdNQzQyTXpRNE5UZERNQzQzTXpNM09ESWdNQzQyTWprM05UY2dNQzQzTkRBek5qSWdNQzQyTWpjNE5qY2dNQzQzTkRVNU5USWdNQzQyTXpBek56ZE1NQzQzT0RReE56SWdNQzQyTkRjMk1UZE1NQzQ0TWpFNU1USWdNQzQxTkRnNE56ZE1NQzQzT0RFM05USWdNQzQxTXpZeE1UZERNQzQzTnpVNU1USWdNQzQxTXpReU5UY2dNQzQzTnpJeU56SWdNQzQxTWpnME5UY2dNQzQzTnpNeE5qSWdNQzQxTWpJek9UZERNQzQzTnpjMk1USWdNQzQwT1RJd05UY2dNQzQzTnpZM05USWdNQzQwTmpFeE9UY2dNQzQzTnpBMk16SWdNQzQwTXpBMk1UZERNQzQzTmprME16SWdNQzQwTWpRMk1qY2dNQzQzTnpJM05ESWdNQzQwTVRnMk16Y2dNQzQzTnpnME5qSWdNQzQwTVRZME56ZE1NQzQ0TVRjM01ESWdNQzQwTURFMk1UZE1NQzQzTnpRME5USWdNQzR6TURVeE1UZE1NQzQzTXpjeU1ESWdNQzR6TWpRME9UZERNQzQzTXpFM05USWdNQzR6TWpjek1EY2dNQzQzTWpVeE1qSWdNQzR6TWpVM09UY2dNQzQzTWpFME5qSWdNQzR6TWpBNU1UZERNQzQzTURJM016SWdNQzR5T1RZeE1EZ2dNQzQyT0RBeU5USWdNQzR5TnpRNE9EZ2dNQzQyTlRRMk1qSWdNQzR5TlRjNE56aERNQzQyTkRrMU16SWdNQzR5TlRRME9EZ2dNQzQyTkRjMk16SWdNQzR5TkRjNU1UZ2dNQzQyTlRBeE5USWdNQzR5TkRJek1qaE1NQzQyTmpjME1ESWdNQzR5TURNNU5EaE1NQzQxTmpjMU1qTWdNQzR4TmpVNU1EaE1NQzQxTlRNd01UTWdNQzR4T1RrNU1EaE1NQzQxTXpBd01UTWdNQzR4T1RBd09UaE1NQzQxTkRreU5UTWdNQzR4TkRVd05EaERNQzQxTlRFNE9UTWdNQzR4TXpnNE56Z2dNQzQxTlRnNU5UTWdNQzR4TXpVNE9EZ2dNQzQxTmpVeU1ETWdNQzR4TXpneU5qaE1NQzQyT0RnMk9ESWdNQzR4T0RVeU9UaERNQzQyT1RFNE9USWdNQzR4T0RZMU16Z2dNQzQyT1RRME5qSWdNQzR4T0Rrd01UZ2dNQzQyT1RVM09ESWdNQzR4T1RJeU1EaERNQzQyT1Rjd09USWdNQzR4T1RVek9EZ2dNQzQyT1Rjd05ESWdNQzR4T1RnNU5qZ2dNQzQyT1RVMk16SWdNQzR5TURJeE1EaE1NQzQyTnpjeU1qSWdNQzR5TkRNd09UaERNQzQyT1RnM01qSWdNQzR5TlRnMU16Z2dNQzQzTVRnd05qSWdNQzR5TnpZM09EZ2dNQzQzTXpRNE56SWdNQzR5T1RjMU1UaE1NQzQzTnpRMk5USWdNQzR5TnpZNE1UaERNQzQzTnpjM01qSWdNQzR5TnpVeU16Z2dNQzQzT0RFeU9ESWdNQzR5TnpRNU56Z2dNQzQzT0RRMU16SWdNQzR5TnpZeE1EaERNQzQzT0RjM09ESWdNQzR5TnpjeU1qZ2dNQzQzT1RBME1qSWdNQzR5TnprMk5UZ2dNQzQzT1RFNE1qSWdNQzR5T0RJM09UaE1NQzQ0TkRVNU16SWdNQzQwTURNME9UZERNQzQ0TkRjek5ESWdNQzQwTURZMk16Y2dNQzQ0TkRjek9USWdNQzQwTVRBeU1qY2dNQzQ0TkRZd056SWdNQzQwTVRNME1EZERNQzQ0TkRRM05ESWdNQzQwTVRZMU9EY2dNQzQ0TkRJeE9ESWdNQzQwTVRrd09EY2dNQzQ0TXpnNU5qSWdNQzQwTWpBeU9UZE1NQzQzT1Rjd05USWdNQzQwTXpZeE5qZERNQzQ0TURFek9USWdNQzQwTmpJMU56Y2dNQzQ0TURJeE16SWdNQzQwT0RreE5UY2dNQzQzT1RreU5USWdNQzQxTVRVME5EZE1NQzQ0TkRJeE1ESWdNQzQxTWprd05UZERNQzQ0TkRVek9USWdNQzQxTXpBeE1EY2dNQzQ0TkRnd056SWdNQzQxTXpJME5EY2dNQzQ0TkRrMU56SWdNQzQxTXpVMU5EZERNQzQ0TlRFd056SWdNQzQxTXpnMk5EY2dNQzQ0TlRFeU1USWdNQzQxTkRJeU16Y2dNQzQ0TlRBd01ESWdNQzQxTkRVME1qZFdNQzQxTkRVME1qZGFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEM5blBpWWplR0U3UEdSbFpuTStKaU40WVRzOGJHbHVaV0Z5UjNKaFpHbGxiblFnYVdROUluQmhhVzUwTUY5c2FXNWxZWEpmTVRVek5sOHlORE0xTnlJZ2VERTlJakFpSUhreFBTSXdMams1T1RrNU9TSWdlREk5SWpBdU9UazVPVGs1SWlCNU1qMGlMVFF1TnpZNE16ZGxMVEEzSWlCbmNtRmthV1Z1ZEZWdWFYUnpQU0oxYzJWeVUzQmhZMlZQYmxWelpTSStKaU40WVRzOGMzUnZjQ0J6ZEc5d0xXTnZiRzl5UFNJak1EVTFSalJGSWk4K0ppTjRZVHM4YzNSdmNDQnZabVp6WlhROUlqRWlJSE4wYjNBdFkyOXNiM0k5SWlNMU5rTXdRVGNpTHo0bUkzaGhPend2YkdsdVpXRnlSM0poWkdsbGJuUStKaU40WVRzOEwyUmxabk0rSmlONFlUczhMM04yWno0PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjIzIiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjMwMCIgeT0iMTAxIiB3aWR0aD0iOTAiIGhlaWdodD0iOTAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjI5IiB2YWx1ZT0iQVdTIFdBRiAoV2ViIEFwcGxpY2F0aW9uIEZpcmV3YWxsKSAtPiBBV1MgRUMyIChFbGFzdGljIENvbXB1dGUgQ2xvdWQpIiBzdHlsZT0iaXIucmVmPWU0ZjZiZDE1LTFmYTctNDg2Zi1hMzRjLWNjMGQ0ZGNiNzY0ZjtlZGdlU3R5bGU9bm9uZTtjdXJ2ZWQ9MTtodG1sPTE7aXIuc3luY2hyb25pemVkPTE7c3Ryb2tlQ29sb3I9I0JGQkZCRjtzdHJva2VXaWR0aD0yO2VuZEFycm93PW9wZW47ZW5kRmlsbD0wO2VuZFNpemU9NDtzb3VyY2VQZXJpbWV0ZXJTcGFjaW5nPTk7IiBwYXJlbnQ9InRlbXBsYXRlLTEwMDQyMS1mYWM4OWY0MS01ZjRiLTQ5YjgtYjJiMS0yY2RiZjYxNjYzOWQtMTEiIHNvdXJjZT0iMjAiIHRhcmdldD0iMjQiIGVkZ2U9IjEiPjxteEdlb21ldHJ5IHJlbGF0aXZlPSIxIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIyNyIgdmFsdWU9IkFXUyBDbG91ZFRyYWlsIiBzdHlsZT0iaXIucmVmPTE0MjcxZTExLTU0YWQtNGY2OC1hYzdhLTA4MTY3ZTEwZTQ3Yjtyb3VuZGVkPTE7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTthbGlnbj1jZW50ZXI7aW1hZ2VBbGlnbj1jZW50ZXI7aW1hZ2VXaWR0aD04MjtpbWFnZUhlaWdodD04MjthcmNTaXplPTkwO2Fic29sdXRlQXJjU2l6ZT0xO3N0cm9rZUNvbG9yPSMyMEM5RTM7ZmlsbENvbG9yPSNFM0ZDRkM7Zm9udENvbG9yPSMwMDg0QUQ7Zm9udFNpemU9MTI7c291cmNlPWlyaXVzcmlzaztpci50eXBlPUNPTVBPTkVOVDtpci5jb21wb25lbnREZWZpbml0aW9uLnJlZj1jbG91ZHRyYWlsO2ltYWdlPWRhdGE6aW1hZ2Uvc3ZnK3htbCxQSE4yWnlCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOXpkbWNpSUhkcFpIUm9QU0l4SWlCb1pXbG5hSFE5SWpFaUlIWnBaWGRDYjNnOUlqQWdNQ0F4SURFaUlHWnBiR3c5SW01dmJtVWlQaVlqZUdFN1BHMWhjMnNnYVdROUltMWhjMnN3SWlCdFlYTnJMWFI1Y0dVOUltRnNjR2hoSWlCdFlYTnJWVzVwZEhNOUluVnpaWEpUY0dGalpVOXVWWE5sSWlCNFBTSXdJaUI1UFNJd0lpQjNhV1IwYUQwaU1TSWdhR1ZwWjJoMFBTSXhJajRtSTNoaE96eGphWEpqYkdVZ1kzZzlJakF1TlNJZ1kzazlJakF1TlNJZ2NqMGlNQzQxSWlCbWFXeHNQU0ppYkdGamF5SXZQaVlqZUdFN1BDOXRZWE5yUGlZamVHRTdQR2NnYldGemF6MGlkWEpzS0NOdFlYTnJNQ2tpUGlZamVHRTdQR2NnWTJ4cGNDMXdZWFJvUFNKMWNtd29JMk5zYVhBd0tTSStKaU40WVRzOGNHRjBhQ0JrUFNKTk1TQXdTREJXTVVneFZqQmFJaUJtYVd4c1BTSjFjbXdvSTNCaGFXNTBNRjlzYVc1bFlYSXBJaTgrSmlONFlUczhjR0YwYUNCa1BTSk5NQzQzTXprNE16VWdNQzQwTmpZMk16bERNQzQzTXprM01UWWdNQzQwTlRBME1UUWdNQzQzTXpRMk5qVWdNQzQwTXpRMk1Ea2dNQzQzTWpVek5UUWdNQzQwTWpFek1qRkRNQzQzTVRZd05ETWdNQzQwTURnd016TWdNQzQzTURJNU1USWdNQzR6T1RjNE9TQXdMalk0Tnpjd01pQXdMak01TWpJek9VTXdMalkzTmpJd01pQXdMak00T0RReU5pQXdMalkyTXprMU1TQXdMak00TnpRMU15QXdMalkxTVRrNU15QXdMak00T1RRd00wTXdMalkwTURBek5pQXdMak01TVRNMU5DQXdMall5T0RjeU9DQXdMak01TmpFMk9TQXdMall4T1RBek5pQXdMalF3TXpRek9VTXdMall4TURNME1TQXdMak00TkRRNE5DQXdMalU1T0RNek1TQXdMak0yTnpJek5pQXdMalU0TXpVMk9TQXdMak0xTWpVd05rTXdMalUyTURrMk9TQXdMak15T1RJM05pQXdMalV6TVRneE55QXdMak14TXpRNU9DQXdMalV3TURBeElEQXVNekEzTWpjNVF6QXVORFk0TWpBeUlEQXVNekF4TURZeElEQXVORE0xTWpVMUlEQXVNekEwTmprNElEQXVOREExTlRjZ01DNHpNVGMzTURaRE1DNHpOemM1TVRjZ01DNHpNekExT1RnZ01DNHpOVFEwTXpVZ01DNHpOVEE1T1NBd0xqTXpOemM1TkNBd0xqTTNOalUyTkVNd0xqTXlNVEUxTkNBd0xqUXdNakV6TnlBd0xqTXhNakF5TWlBd0xqUXpNVGcyTnlBd0xqTXhNVFF6TnlBd0xqUTJNak0zTWxZd0xqUTJPVFUzTWtNd0xqSTVOVEl5TmlBd0xqUTNORFEyTWlBd0xqSTRNRE0ySURBdU5EZ3pNREU1SURBdU1qWTNPVGc1SURBdU5EazBOVGhETUM0eU5UVTJNVGtnTUM0MU1EWXhOREVnTUM0eU5EWXdOemNnTUM0MU1qQXpPVFVnTUM0eU5EQXhNRFFnTUM0MU16WXlNemxJTUM0eU5qa3hOME13TGpJM05USTROaUF3TGpVeU5EazRNU0F3TGpJNE16YzJPU0F3TGpVeE5URTRNaUF3TGpJNU5EQXpOU0F3TGpVd056VXhPRU13TGpNd05ETXdNU0F3TGpRNU9UZzFNeUF3TGpNeE5qRXdOU0F3TGpRNU5EVXdOQ0F3TGpNeU9EWXpOeUF3TGpRNU1UZ3pPVU13TGpNek1UVTNJREF1TkRreE1EZ3pJREF1TXpNME1UVTVJREF1TkRnNU16VWdNQzR6TXpVNU56Y2dNQzQwT0RZNU1qZERNQzR6TXpjM09UUWdNQzQwT0RRMU1ETWdNQzR6TXpnM016TWdNQzQwT0RFMU16TWdNQzR6TXpnMk16Y2dNQzQwTnpnMU1EVk1NQzR6TXpjMU55QXdMalEyTVRVM01rTXdMak16T0RNNU5DQXdMalF6TmpRM09TQXdMak0wTmpBM05TQXdMalF4TWpBNU1TQXdMak0xT1RjM09DQXdMak01TVRBMU5FTXdMak0zTXpRNE1TQXdMak0zTURBeE55QXdMak01TWpZNE5DQXdMak0xTXpFek5TQXdMalF4TlRNd015QXdMak0wTWpJek9VTXdMalEwTURFNU9DQXdMak16TVRNME1TQXdMalEyTnpneU9TQXdMak15T0RNeElEQXVORGswTkRrMElEQXVNek16TlRVelF6QXVOVEl4TVRZZ01DNHpNemczT1RVZ01DNDFORFUxT0RZZ01DNHpOVEl3TmpFZ01DNDFOalExTURNZ01DNHpOekUxTnpKRE1DNDFPREV4TkRrZ01DNHpPRGcwTWpnZ01DNDFPVE0zTXpVZ01DNDBNRGc0TlRZZ01DNDJNREV6TURNZ01DNDBNekV6TURWRE1DNDJNREl4TWpZZ01DNDBNek0xT0RJZ01DNDJNRE0xTlRRZ01DNDBNelUxT1RJZ01DNDJNRFUwTXpNZ01DNDBNemN4TVRsRE1DNDJNRGN6TVRJZ01DNDBNemcyTkRZZ01DNDJNRGsxTnpJZ01DNDBNemsyTXpJZ01DNDJNVEU1TmprZ01DNDBNems1TnpKRE1DNDJNVFF6TXpJZ01DNDBOREF6TURZZ01DNDJNVFkzTkRJZ01DNDBOQ0F3TGpZeE9EazBOeUF3TGpRek9UQTROa013TGpZeU1URTFNU0F3TGpRek9ERTNNU0F3TGpZeU16QTNJREF1TkRNMk5qZ3hJREF1TmpJME5UQXpJREF1TkRNME56Y3lRekF1TmpNd05UZzBJREF1TkRJMk5UVTFJREF1TmpNNU1UQTBJREF1TkRJd05EWTVJREF1TmpRNE9EUTVJREF1TkRFM016aERNQzQyTlRnMU9UUWdNQzQwTVRReU9USWdNQzQyTmprd05qVWdNQzQwTVRRek5Ua2dNQzQyTnpnM05qa2dNQzQwTVRjMU56SkRNQzQzTURBM05qa2dNQzQwTWpRNU1EVWdNQzQzTVRNek1ESWdNQzQwTkRZek56SWdNQzQzTVRNek1ESWdNQzQwTnpVME16bERNQzQzTVRJM05qSWdNQzQwTnpnNU1ERWdNQzQzTVRNMk1EWWdNQzQwT0RJME16WWdNQzQzTVRVMk5USWdNQzQwT0RVeU9ERkRNQzQzTVRjMk9UZ2dNQzQwT0RneE1qVWdNQzQzTWpBM09ERWdNQzQwT1RBd05TQXdMamN5TkRJek5pQXdMalE1TURZek9VTXdMamMwT0RjMk9TQXdMalE1TkRrd05TQXdMamd3TmpFd01pQXdMalV4TVRrM01pQXdMamd3TmpFd01pQXdMalUzT1RrM01rTXdMamd3TmpFd01pQXdMalkyTVRFM01TQXdMamN5TmpFd01pQXdMalkyT1Rjd05TQXdMamN5TXpjd01pQXdMalkyT1RrM01VZ3dMalEwTnpBek5sWXdMalk1TmpZek9FZ3dMamN5TlRRek5rTXdMamMyTWpjMk9TQXdMalk1TXpNd05TQXdMamd6TXpFMk9DQXdMalkyTkRZek9DQXdMamd6TXpFMk9DQXdMalUzT1RrM01rTXdMamd6TXpFMk9DQXdMalV4TWpNM01pQXdMamM0TmpjMk9TQXdMalEzTnpVM01pQXdMamN6T1Rnek5TQXdMalEyTmpZek9WcE5NQzR4T1RNeE55QXdMalk1TmpZek9FZ3dMakUyTmpVd05GWXdMalkyT1RrM01VZ3dMakU1TXpFM1ZqQXVOamsyTmpNNFdrMHdMak14TXpFM0lEQXVOamsyTmpNNFNEQXVNakU1T0RNM1ZqQXVOalk1T1RjeFNEQXVNekV6TVRkV01DNDJPVFkyTXpoYVRUQXVOREU1T0RNMklEQXVOamsyTmpNNFNEQXVNek01T0RNM1ZqQXVOalk1T1RjeFNEQXVOREU1T0RNMlZqQXVOamsyTmpNNFdrMHdMakk1T1Rnek55QXdMalkwTXpNd05VZ3dMakUzT1Rnek4xWXdMall4TmpZek9FZ3dMakk1T1Rnek4xWXdMalkwTXpNd05WcE5NQzQxTlRNeE5qa2dNQzQyTkRNek1EVklNQzR6T1RNeE4xWXdMall4TmpZek9FZ3dMalUxTXpFMk9WWXdMalkwTXpNd05WcE5NQzQwTVRrNE16WWdNQzQxT0RrNU56SklNQzR6TXprNE16ZFdNQzQxTmpNek1EVklNQzQwTVRrNE16WldNQzQxT0RrNU56SmFUVEF1TXpFek1UY2dNQzQxT0RrNU56SklNQzR5TURZMU1EUldNQzQxTmpNek1EVklNQzR6TVRNeE4xWXdMalU0T1RrM01scE5NQzR6TmpZMU1ETWdNQzQyTkRNek1EVklNQzR6TWpZMU1ETldNQzQyTVRZMk16aElNQzR6TmpZMU1ETldNQzQyTkRNek1EVmFJaUJtYVd4c1BTSjNhR2wwWlNJdlBpWWplR0U3UEM5blBpWWplR0U3UEM5blBpWWplR0U3UEdSbFpuTStKaU40WVRzOGJHbHVaV0Z5UjNKaFpHbGxiblFnYVdROUluQmhhVzUwTUY5c2FXNWxZWElpSUhneFBTSXRNQzR5TURjd05qY2lJSGt4UFNJeExqSXdOekEzSWlCNE1qMGlNUzR5TURjd055SWdlVEk5SWkwd0xqSXdOekEyTnlJZ1ozSmhaR2xsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQaVlqZUdFN1BITjBiM0FnYzNSdmNDMWpiMnh2Y2owaUkwSXdNRGcwUkNJdlBpWWplR0U3UEhOMGIzQWdiMlptYzJWMFBTSXhJaUJ6ZEc5d0xXTnZiRzl5UFNJalJrWTBSamhDSWk4K0ppTjRZVHM4TDJ4cGJtVmhja2R5WVdScFpXNTBQaVlqZUdFN1BHTnNhWEJRWVhSb0lHbGtQU0pqYkdsd01DSStKaU40WVRzOGNtVmpkQ0IzYVdSMGFEMGlNU0lnYUdWcFoyaDBQU0l4SWlCbWFXeHNQU0ozYUdsMFpTSXZQaVlqZUdFN1BDOWpiR2x3VUdGMGFENG1JM2hoT3p3dlpHVm1jejRtSTNoaE96d3ZjM1puUGc9PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9InRlbXBsYXRlLTEwMDQyMS1mYWM4OWY0MS01ZjRiLTQ5YjgtYjJiMS0yY2RiZjYxNjYzOWQtMTEiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iMjUiIHk9IjMxNCIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIxMCIgdmFsdWU9IlRydXN0ZWQgUGFydG5lciIgc3R5bGU9ImlyLnJlZj01MzEzMTVhNy00MWEyLTQwZWQtYWI4Ny0yMmMzYTRjM2M3ZmY7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtyZWN1cnNpdmVSZXNpemU9MDtodG1sPTE7dmVydGljYWxBbGlnbj10b3A7YWxpZ249bGVmdDtkYXNoZWQ9MTtzdHJva2VXaWR0aD0xO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7c3Ryb2tlQ29sb3I9Izc1NzVFQjtmaWxsQ29sb3I9I0YwRjBGRjtmaWxsT3BhY2l0eT0zMDtmb250Q29sb3I9IzU2NTFFMDtjb25uZWN0YWJsZT0wO2NvbnRhaW5lcj0xO3NvdXJjZT1pcml1c3Jpc2s7aXIudHlwZT1UUlVTVFpPTkU7IiBwYXJlbnQ9IjEiIHZlcnRleD0iMSIgaXNUaHVtYj0iMCI+PG14R2VvbWV0cnkgeD0iLTg1NSIgeT0iMTg2IiB3aWR0aD0iMzE2IiBoZWlnaHQ9IjQ5NiIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG9iamVjdCBsYWJlbD0iT3V0IE9mIFNjb3BlIiBpci5zb3VyY2VTdHlsZT0icm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249Y2VudGVyO2ltYWdlQWxpZ249Y2VudGVyO2ltYWdlV2lkdGg9ODI7aW1hZ2VIZWlnaHQ9ODI7YXJjU2l6ZT05MDthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZvbnRTaXplPTEyO3NvdXJjZT1pcml1c3Jpc2s7aW1hZ2U9ZGF0YTppbWFnZS9zdmcreG1sLFBITjJaeUI0Yld4dWN6MGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM5emRtY2lJSGRwWkhSb1BTSTJOQ0lnYUdWcFoyaDBQU0kyTkNJZ2RtbGxkMEp2ZUQwaU1DQXdJRFkwSURZMElpQm1hV3hzUFNKdWIyNWxJajRtSTNoaE96eHpkSGxzWlQ0bUkzaGhPeUFnSUNBdWFXTnZiaTFtYVd4c0lIc21JM2hoT3lBZ0lDQWdJQ0FnWm1sc2JEb2dJekV4UVRoRFJqc21JM2hoT3lBZ0lDQjlKaU40WVRzOEwzTjBlV3hsUGlZamVHRTdQSEJoZEdnZ1pEMGlUVE14TGprNU9UZ2dPUzQxT1RZNU1rTXpPQzR3TXpRZ09TNDFPVFk1TWlBME15NDFNVEVnTVRFdU9UZ3lOaUEwTnk0MU16a3hJREUxTGpnMk1qRkRORGN1TmpVMElERTFMamswTVRjZ05EY3VOell6TVNBeE5pNHdNekkxSURRM0xqZzJOVElnTVRZdU1UTTBOa00wTnk0NU5qY3pJREUyTGpJek5qY2dORGd1TURVNE1TQXhOaTR6TkRVNElEUTRMakV6TnpZZ01UWXVORFl3TlVNMU1pNHdNVGN6SURJd0xqUTRPRGtnTlRRdU5EQXlPU0F5TlM0NU5qVTVJRFUwTGpRd01qa2dNekpETlRRdU5EQXlPU0EwTkM0ek56TWdORFF1TXpjeU55QTFOQzQwTURNeUlETXhMams1T1RnZ05UUXVOREF6TWtNeE9TNDJNalk1SURVMExqUXdNeklnT1M0MU9UWTJPQ0EwTkM0ek56TWdPUzQxT1RZMk9DQXpNa001TGpVNU5qWTRJREU1TGpZeU56RWdNVGt1TmpJMk9TQTVMalU1TmpreUlETXhMams1T1RnZ09TNDFPVFk1TWxwTk5EWXVNRFl6SURJeExqSTNNalpNTWpFdU1qY3lOQ0EwTmk0d05qTXlRekkwTGpJME56a2dORGd1TXpNMk5DQXlOeTQ1TmpZeUlEUTVMalk0TmpjZ016RXVPVGs1T0NBME9TNDJPRFkzUXpReExqYzJOemtnTkRrdU5qZzJOeUEwT1M0Mk9EWTFJRFF4TGpjMk9ERWdORGt1TmpnMk5TQXpNa00wT1M0Mk9EWTFJREk0TGpFeU56Z2dORGd1TkRReU1TQXlOQzQxTkRZeElEUTJMak16TVRNZ01qRXVOak16TWt3ME5pNHdOak1nTWpFdU1qY3lObHBOTXpFdU9UazVPQ0F4TkM0ek1UTTBRekl5TGpJek1UY2dNVFF1TXpFek5DQXhOQzR6TVRNeElESXlMakl6TWlBeE5DNHpNVE14SURNeVF6RTBMak14TXpFZ016WXVNRE16TnlBeE5TNDJOak0wSURNNUxqYzFNaUF4Tnk0NU16WTJJRFF5TGpjeU56Vk1OREl1TnpJM01pQXhOeTQ1TXpZNVF6TTVMamMxTVRjZ01UVXVOall6TnlBek5pNHdNek0wSURFMExqTXhNelFnTXpFdU9UazVPQ0F4TkM0ek1UTTBXaUlnWTJ4aGMzTTlJbWxqYjI0dFptbHNiQ0l2UGlZamVHRTdQQzl6ZG1jKzt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO3N0cm9rZVdpZHRoPTE7IiBpZD0iNTciPjxteENlbGwgc3R5bGU9ImlyLnJlZj1jZjI2MDcwZi1hZDhhLTQ5MWItYTViYy05ZDY0MDY0OTk2Y2Y7cm91bmRlZD0xO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7YWxpZ249bGVmdDtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9MzthYnNvbHV0ZUFyY1NpemU9MTtzdHJva2VDb2xvcj0jMjBDOUUzO2ZpbGxDb2xvcj0jRTNGQ0ZDO2ZvbnRDb2xvcj0jMDA4NEFEO2ZvbnRTaXplPTEzO3NvdXJjZT1jdXN0b207aXIudHlwZT1DT01QT05FTlQ7aXIuY29tcG9uZW50RGVmaW5pdGlvbi5yZWY9b3V0LW9mLXNjb3BlO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7Y29udGFpbmVyPTE7cGVyaW1ldGVyPXJlY3RhbmdsZVBlcmltZXRlcjtyZWN1cnNpdmVSZXNpemU9MDt0ZXh0RGlyZWN0aW9uPWx0cjtzcGFjaW5nVG9wPTE7c3BhY2luZ0xlZnQ9MzI7IiBwYXJlbnQ9IjEwIiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9IjI3IiB5PSIxOTAiIHdpZHRoPSIyNTIiIGhlaWdodD0iMjQ0IiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L29iamVjdD48bXhDZWxsIGlkPSIzMiIgdmFsdWU9ImlPUyBBcHAgU3RvcmUiIHN0eWxlPSJpci5yZWY9MGY3MDZlZWYtMWI3My00NzMxLThlMDctNTMwYTdmOWY1NzMwO3JvdW5kZWQ9MTt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO2FsaWduPWNlbnRlcjtpbWFnZUFsaWduPWNlbnRlcjtpbWFnZVdpZHRoPTgyO2ltYWdlSGVpZ2h0PTgyO2FyY1NpemU9OTA7YWJzb2x1dGVBcmNTaXplPTE7c3Ryb2tlQ29sb3I9IzIwQzlFMztmaWxsQ29sb3I9I0ZGMzMzMztmb250Q29sb3I9IzAwODRBRDtmb250U2l6ZT0xMjtzb3VyY2U9aXJpdXNyaXNrO2lyLnR5cGU9Q09NUE9ORU5UO2lyLmNvbXBvbmVudERlZmluaXRpb24ucmVmPWlvcy1hcHAtc3RvcmU7aW1hZ2U9ZGF0YTppbWFnZS9wbmcsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQU1nQUFBRElDQVlBQUFDdFdLNmVBQUFyY2tsRVFWUjQydTE5Q1hnVTE1V3Vac1kyR0xRdlNPcXFrdlV5ZmhrU3M3MFhKM0Ztdk1YT2ZKN0pNbmFTZVIvZlBETFA4NTZUNTh4a0Vvd2RHMk5oSkNNV3NSaUJNV1kxTW1CQWlFV0FFRUpzd29BUmZtRGpoRGpZSmpaZ2JCT01iYUhlcXF1cXBmUE9yVzVKclZLdDNiZGIzZXA3disvL3FxdnFydWVjLzU1emErdU1ESmJpbGdDZ0VIRW40bUZFWlJpMWlMb3cyc0k0ZzdpZ3dhbnd1UU1SK1JlRTY2aEFURUxjZ2NobGttWXBhZE85YlRCODNDa1lNL1pVOE1HeHA3dW1qbjh6V0RmdVRhVjkzSnZCRHR3Q2JzTlFJclphQkhYT0JYVmdtUGNhNHRpNDA4SGw0MDkzUFRIbWRQQUhZMDlMb3pQYTRBYW1JWllTbXNyUFFLN3JaUEJCVjN0d0tkZXVuSFdkVkNDSm9iaE9kcDNCN2R6U041UUhpdG9nazJtUUphcUpHQlV4TGpTeUJZZ3ovUXl3UFl4NEduazdiY0lvN2FVbmxXcStYYm0zSEwwZjB6QkxqaFAzdWp5aHRGMnBSdU5zUnlpOVJCaDZFSEdjYmVnSksvZ1RnVnVaNWxreUpzVko0TG1UeWhPcWx4aTZoTERDTWU2RS9LanJOQlF5aTJBcGc0UVlwZTNCU2E0VFNndENRVURLb1QwdTlZcWxKNVN0cnRlREQ3S0ZmanA2aXhQSy9hajhPalFFVDBxU0lwRjRYYm5tT2hGY3loMlg3MkNXTTVRVHpvU2x4OUZidkk0aDFPdXE0cE1iSjVLdkRmUXFiYXBYWVdsb0VZTTdIbndZRlhzK0pZaVJHampEaURJVTFoY241TW1vek12TW9PT0djMlR5WWV1VTFDSkdidWt4Sk1aeDVRb0NHQklCOU03SDVVZllmWlVrVDBSSnFMQU9ackNEaEdQRVc3UFFLK2xTNlhINWRsUk9Pd0lZa2dJdDdNWmprb1JUcnFQQnBhZ1FoUmxsMGtGRVZMS3dhOUM4Um5BU0t1QUtNOFFreDlIZytkS2p5Z1BNWWhPMXptaVRScnVPS3NjUXdKQlNhT1RhZ0djV0hFOXlIRk9tb3FBVlptd3BDdy8zV3ZCaFpzblV2UVlVb25CYlhLK2hrQmxTSDBlQ2RlemRGR3JrVU81RW9WNW1oalcwd0wybW5DMXVrOFl3QzQrRkhLOWhTUFVhaGxUTW9JWXFXTWdWZFVoMUJFT3FJOFFkeHd0eUF1cVU0OUEvT1FFeWtDRytzaC9RSGd1NUhJVlVSekNraWtwcHN1YTMzcjVza0RjYXczRGFoaHlGOGNvNnYyVVRNdEtXVXlMYWtJRTd3a0l1TzVkd0o3cmFaQVVCREdrSkQ5K20zTXVZb0hmanIwMmV6QXlFZ1V5UXBZZWxuekpHOVBjY0MxVGhISTRRMU9HSTdXSE5NVHV3VTlkaEcyMloxYU9GazNxZGpPT3d3YmpzanUyd2pmb1BtL1RUcm56YUxPclFrNTkrR1lWTW1Jd1piWENENjVCY1oyaHdER21OMGphcE9tMjVRYTVhdUE0cGphb3dEa1VJNWxDU3drbi9Ec2V4M2NNMjJ6MmNZTGtjcHR4dXVKN1NRL0x5dEhzaFMzMEs5N0I4TEduSndKQlVLRDJrYkUyYnA0TFZleHlINUhQcTRBOUdDT0tnaGFBT0d1UTdhSkpmcjh4QkczVWVjbmhjMjlaQkcrUFJLK3NVUm0zRlVtYzBmYkRieDRNT3loNGM0RkdPRFhtU3FHSFZRZlFjQjNVRXg4QmdnZEtEeXRhaEcyNlJCZmxCcVlrcG1pRW1raHpBTmNsUVROeEJlWVByQUE2U2dTRkdsQjRZWWxlM3VBTnlMUTNCY0NtaVFNNW1IbzRaZS9RazJUOUU3cE9RZ2JqMjQ2QVlFZ0l1eGRybm9qK3ZvQ2RKN1R2dXBhM1NwR1JUWUNJTWpaVEZpUUdLVzJVWTFScmFsclRTNjFOcHVON0l1a3VUUkxheEVDU0svaXY4Z1JSOWRvdmJyOXpQdGNxS2l4aEcyRGk0SGlOcDFRaWxWU09nVmdQQnRZYnIwTllaYVh5UmRiY08zT2MwYlhGNnZ5UGFpV3lQYTQzb2IvZzNGMUUvajhodmtTR3pXWVk4M0g0RkY1VmZiMVBncnc4cVVCZytUczV6ZWtiUzJyOWVsNDVjQ3ZyVnJjQnRhdDF5cU80OVdQZmUvbVBSams5WFJ2czFZMmsxTU9CV1RYOGlaZEk2Y0F3RHhxSnRYMGVQaGdUUmswc2ZQTVd0S2ZZVWNGRXpsTGhhcFN0Y2hBQUhDRTVubjdQNGJYWE9xRDY5ZHJWMWNBWjFjemI2M0hQOHh0MW91QmdmTC8yd0N5NzZ1cUVua1YrZmlBRHJQdXFDcjZKQjM5U0VNLzQrODNGbzZ4N1dGQ0xnaTJyZEFGMTkxY09WY04xZlB5ekREYnNIMXUweXFadXpNVGJPUkI2Y3d6Sm00RXhrNFRMcE0yN1Bwczc3Sk9SeWJxdDhnSE1vYUx0Q05oQ1FiV09uRFo2RU9QdENSbDl6UGdnZE1waW1UZ1ZneVFkQmRiWXZickdXQzZrN0M3MUQxYnZXZGJ1eDdsVVhnM0FUa3FSNG43Myt1MndRZ0xOQkxMczY1R3pXYmFmZGZ2djc1THJVdUZQZXFsUzY5cWtkamdrdWkyTTAyb2dWUEtLVWhEZElqZzA0Z3dlN3dYYXF2OXdGaFVpU2toYmora25kaEJ3ckxnVDdlUXl6UlBMdHU5b05lYzE5ZFNlRHJEaUh1bk5GbytkV09ibGYzK1ZhY04yeFQxYTRKRk5JUEVISU1mV2RJRVNUbHFIaDM3eGJVb25tMGlIZjhGMFN6SHczdXJwci94U0U3RDNKUjQ0NHd5TWs2M3Frbkt3N1duRGRRV2F0bElka0sxOHhlb0FKaDJRUW83TmhDSFFCL095MEF0bE5BK3ZPeFdQZlBhYW9ZVk0waVhpeis0NHFVTkE4RlBUaEFIdVRjVDFDL3FTbUJkY2R1Z1ltNmV6cm5aTTBrRTIyUnZWSUJnWXVtUmkvWkZDSFdmOUR5R3FTWU01N1ViSWpuRDcyZDhOZk5VcFFzcmQvM3pOMlNQQ0h6dTZZNnQ2TVlWeG0yRVBwajFlMnFTZlpRa2VTZ1N6dDZNbU9yaVNUU1V1M3o4bTFIa0hQVWNrUkJTY01NaVMydllGd0lYS1JJS2Uvak0ySVNlbjU3d2NoYTNkb1hLUmVZdFNQbmxGc3J6dU0wbnVlYnJnRnlWRVNUMW0wSkZyMnNqMGJhRW1TOVlqUUxOK09IVklHMjJBVGplSTlFdnpOZmhtdUJtSzA0bkNvTmZhZ0RBVklqRUtzOXhhczMrcUtsWjFFNnZoMm13ejVTR1EremZTRDhIQjcvZnpnWDlMZEs1M2ltaU02MWh3QmJhZWJkZkkwRzVUVDJ6Y3FxM2U4MmFRZHZUN1o2VjlFdmlJMDVHL2krc090eEU0UWtyWiszQVhaTzlGN1lMaTE5bUlYbFRwOUdQMTk3eGl1WjNhRkNhSWRuNUZ1OWthaG43MDI5TGJYd0NhYzJJVlJXUjNnbUJzSDk2cFZzL3lvTGNNY2dpakdXZmxyclRKOEtWR3haWFZSL1E5SFpMaGpuNFNMZmpxazgrSUMvenZFZzVCMVNKcnFTZGdUR0p5L1huQTFRU0Yyb0NOZENlSkNENUszTy9hRmRHUnEvNklMOXYyWlhuMlhmTjFxdUZheUp6MTFwR0tQZEg1UTNrVEVodXU0UFdvSDBoWWpNQnlxZlQ4SXlabzJYOExGUDRadGZKcnJ5ZFVzVlNiWWV5aDNjaGhpcEJWNkJCNXhiQlI2a0R0d0hTSjFKUjg1U0plK2ordVBnbDJhZnV1TUl3MGc4cnNTOVorSjVKNUhrM1EyN1FoaWdHejBJcHMvU2o2R0hMemFCWVZJanRMZFRFY0VydDFTUzBMNHdUY0ZKak9CaDhBajhqR0VtYkJmQnFVN2VjaEJ1bkxmRVFYeUcwTjlaTHJxSlVsOC82SzZ2Tmxid3UyV1BCeVpsUmhVOElqaFd5VllkajU1dkVqTGxTNFl0aTNBOUtQRkx1bHlYQmZzMkVBMUUvUkFGR01vazd0ZGdrL0Z3U2NIdWV4TStsUzBrK2xGRDY3ZDhpUHg4UjZOa0lzRTZlQjJxVXhrMENCN213UlB2SzBNYXFoRm1sNXdMZ2laMjNwblRJYUJPQitYYjJ1NWRrbVZUTGpHY09HTVBhSkJndmJQQjQ4aDc3cTdvV2lIQkNVN21UN01RZms1TFJLM2NUdkQzbU5uQkhvYWpOemZxWE5NRHp0MTlzM0s3dFJwMjZoZG8zWjJHdFJqMUNlejhwbzhBZ216Y09iK3A2TUt5SU93SENFUE52N3lsQUlqdDRiNllrdEdabnJjWlNMdm5RN3J0Wkw5VGdOWjc0cENYL1pzOUJ6ZEsxZTdBcE4xQjhqUUR6eGkyQllKdGd6Q1pkL2oxN3BnWkVPb0Qwd1gxcUIyUmF1OERvWmorSEJGcmJqUm9FR254NjN5TlRvWWJLUG1kNk9EZWhwTnlwbU5xZEg0V0Q0dTF2L2JYZ2s4Q1Z5TWtLYnVPeVJEM2phTHNUYWF5THZSZW15bXNtMjBrSnVWM25ZNnNLRkdLclp6aG83M2FFVHYwYWdqUkFaRFpPTk1YblZXU1JoQlZwMFBxbTB5MlR1RGEwZXNYb1RjTlcrVXpuTTc0dHpaSGNrc3lJRGpNc1hvUlVweFROY0M4ZmNpUHVUaHJlU3lMcmJKSjFvMk8xSkUvNGIxeTIyeFhibmFMazFVSys5RklBekpBZlRLQkJ6bU44dHJWbDgwZlhXYVQvOTNia01BL3VkeEdZTGQ4VjJZUC9XV0RObGJBaFRHYmxmT2dSanRJVkd3MmEvdC9qdWl2ekc0STlEVUo0U2hBQ2xoNVYzYkE1Q3hNUUJ2ZlJrL2huemc2WWFiNndOUXNqMlZaSmhjL2VLM0I1WkcrY1N1dTVEYkhsQTRJbndHeDBEQlF3SE83UGZzbDlVWGwyZ25jaW41WDQ3aHdydysxQmFUZWRTNEZ0V05RMzRiTHM2WjhHSWpDYzVRTjZJWGVmazgvWGRHV2o3cGdtRWJRMjB3V2NlR3FCYnJybTNpS1k0ODhNWVFFN0kyQitDQkF6SW9GRytOWEpjQTdtbVZvUURYT1R5VGNlellHdGpxN0VzbE82UXhUSEN4ZzRRK043MGFnRzJYNk40NFhQekhvT285bUl5cFFYUnRjaGM2OFI1emtWWEFFRDE0UkM1Nmp4OGVscWsrZXRJaGRjTlhNS3dxMmhKcWc4bWFHaDYxZi9WcWErQXlFMWhzS01YdzU0YjFBZmhEQjkycldMODRJVVB1cHY1RVpQS21nbU0yeVNIZXo2RnlvOExXS01zbFd4c1VrSTFHL0o5djBMMFA4dTcxYmloQXIxUkN2RWU0blpHdmlsQllueG95aVZxM0NkSTV5dFQ2dlhYWGxzRHFJU0hzUVFJeFhHS3daYWpVNnpJOWRnU0NBUCs0WDFhSlI5cHhJWEp3SGZKTDlDamYzQ05CL3FZKzBqQkVDNm5DMm9NMEJDNXc1TTdzbG5DaHlOOE5Pc2ZOMEdEaldJT04zMDd5T2UxZmc0TyttL1VuWWo4VEYrWnJLSDhPYU4vSFhmQVhhMFZ3aGR2TFJYSjhhM2ZvcTNYMUh3WWhDOXQwbWVtcHdZWWVuT3BYVzlacHVTMDJkTnhnTG12TGNXMXhZRWNOQWZOSFQwbzJpK1V4RFRETndTUHkwSEMvalRPNlFuVmhEbkFiZWNZTFBaT0Fpc3hEYjNITFZnbis3Ty96VUQ4NktFUE9xMHdITVVJa1Q2OGJlNDh0NHNOY2ZVU0IrakNNOXJkWW5LL1h3RWtac3phMldPelhhODZabGQ5aWt0Y3NqOEU0UitMQ3ZPVXkzY3U2TDd5andMQjFJcFNTOVFlMk1XSmRBTFpydnQ5Nyt2TXVsWnl1ZXB0amNxSURQVDBhMVZsdllZVDFGcnF5VTNlOVNWdDJ4MlV3RG42emFQeXZ1ZHhtYWNNQVlURFlBdkVlMlJzQzhHOUg1WmovdGlBeW5YZDNReG5XWGZCcVh4di85N2ordSs5UGtUY0trYUE4MDBmMDJDeFdHeS9RNndOWG1KQ2lBNW5kYzlCNGYwLzU0Y1JmSEpjaGMzM0lNNUEyY3JHTmR3emErREJNcGxHYm1ENmloOVN1VDQ1TjBtaHVNMkVRUXpUSXdyQ242aTI2VHlXKzhWazM1RzhJRWNPRkdGNG53dFJUNW4rc3MrSWNlcEYxVEI4eFFDbHEwUGtMTjI1VDRGRW1uT2hRaUxGL0FScnk1NVJma0xvVEYvdkVLNUUyaWpERUdvWUV1ZVF4WDk5NFpJQ3ZiSkZVWWpIZFJBZGhvODVmSm5DYnhNMGNjYzBNam5Fekd1NjY5NE5Ba3g2N0x3VWg4eFVSWE9UK0JpSVB3Nng3a1RBQkcxZVBUMTd0Z2hGMTZIVTJoc295SFRtRGE1TTRWOCtEZEREaE9JTnF1QmpPM05Va1VTVUg4VVQ4SmhFS04vUVpPQ0hMcW5QMlE3aWZIRUR2czQ0UkpFcjAvNkREaEVheG5DTlBoMjRNWjdENnJVTHN2NjlXTEViOERnejhUYU1OVytYMElBNnNMeHBFempRWTl1U2g0Ylo5UXUreXJ2cW5ubS9qT21KdFgxK0pKOGhmTDhJblh2czBQUHRsRjVSc0VLSGtWUjBETUpQYkpwdnkzR1FpNTAxRzhyZVdhV2hmdEtsYmtiSWQ5SjVUK3IxRU5YNWI0SUgrR1NJckVTbUNkbjJEQnpJeloyRm85YitQeUZUWEhlYzZ1cUVJdzZtU1Y4UHRJRWFob2QrMkxlQzRybWR3UVorNWx0UVJMN2tIaHF6ZXgyNlRSdmNTWk95MndLODRvaEFHMnlqRkdiMEVRNkNMYnJvTDgwZGVrOEpHSFdxSGJQUFhpZkNUVmltcVVPMnI5YmpBWDhmMDVSUmpHZ0kvNkNOSVEyQXBFNG9ENEl3K2JJMGZReUc2ejF1OTlpa3V6RjlHVW1qYXl5R1hkMDlHZHdsNTNYdEJ1R2tOMDVsamdtd05QTkZMa0hFTmdSYWlkQVo3SURQeWJRMEIrTXhQejN1SXlMWDdtM0JOVXpld1BYSnMyUitpSTRoYjdvYTdkd2VnY0IzVG14T00yeHBZSGtFUThUSVRpbjNjc0VxRUhSZm9lbzhWN3lpcTk5QnJMd2REcm0wZkJHUHdURjF3RS9iWnRaN3B6alpCR3NUUUMxUW92OHh4NUVFdElqd0dTeEJqL2R2R2dQcEZRNXJ2ZXZ3WFhNZ1dvYWZnZGRyTXdoQnBmd3dmeEphdy9uL0dOVXh1RHdHWkhpMHhybDY4MWtPUUNZd2c5bENLWVVyV2FoRStwUGpmNktTbXljZGx5RjVqYkx6WjJHWnJqRitNL3hJWDdQbEk3bEd2TUQzYUlzZ1c5YXBoTGlISVJKVWdKRVpsTUVVbUd1b3YydWhlMW4zdmVqZU13UENuNUJYOU52bDFJUSt5OVlQWVE3cHBKMlYxREV5WDFnZ1Q1QTVDa0FwR0VITVFJeDJGNGM4dHVQM1VTL2MxMmtrSFpNaXhNRm9TR2kzK1hld3hYYWNFTUw0K0FBVXZoOGJFZEd0SmtFbUVJS3NaUWF3eFlxVUlTMzVIOTJuZDVvdEJHTDRDNjMvRmdpRG9RVWdZUmlPOStwNENtU3V0MjJRRVVRbFNRUWhTTjQ0OEIvK0t5R0NBZkRUUU83WUdvSVBpMDdwKzlCNTM3d2pQNWladGszTWt6L2ViSkNydFNyaVVJWFhscm1aNk5RUGhCS1pLUXBDdDR6WWJFS1JPczlVZXE3T1I1eFdkMzY4NFBGOW4wTFpWMzE2eGFOTkdHUUh4Vjh0RTJIdVI3bVhkbDg3S01IeTV2NzhjRFdSYmpJdnJyMjRJVUd2NzFGWDBYQzhaRU5PdTNPekNTbWRPMnFtejBVY2p1Nml6WVFNRENiS0FFS1JOSlloV1VRd3E4bkFCL2VObVNaMTVhYVVydm03NHl2b0FGQkh2WWFNUExrUXU5dU5QMStsMGdueXI2NWR0TW1TdnROZCtPb0p3Z2tSWGZRUWhUNCt1RFdlSS9GMm5PYWFYendoMU9uWG8vYWJSeGxxTDhuWE95NWFnQWQvNGtoL09mazczSXd6L2pzWkpESDVBK3laOXpNYjh0Vy9UV3dPUjEzTUxNWFFzWGhNbWliWVBlbnF6b3g4N09yUFNVNTFETzdUU3YxRjlKblZFRXVUOHVFMEI1NE5LQStUZ0RQdllVYnBmUjN6bkN6Uk1qUDlMWDNiV2wzd2t5SGR3SGVTbnhCSHkydTY4TnhYSVdjSDByQWZDQ1V3SENFRXVNSUlNQkRGaUFiZHVpZTVsM2U5dUQ2akc3clEveEpzTlgrYUg4OWZwOVllRWpiZTlLa0xCS3FadkE0SzBFWUpjRzBlZTF5Y3pHb01LZmkweFJoK3NPMGQzWVg3b2NoZjh4UXQrY0VYWnA1dVJJTk5lbDZtK3ZkaDhJUWdqc0Y2bTkvNGduQ0RYTXdoQm9JOGdURkE4SW4rRkgrN2VKbEw5MjRMUHhXNFlTejQwdlNyVVJqUjljNjN4UTlFcVAzeEEwWXVRVU9zbnpSTGtMdmZiNkpjLzRicUl2cnlmQmtFdWhBaENYc3hCNFhQa2VTQjFxd2RSODFzME9PNDMzSGZlaHQ5eEcvcjdabTBPUkJiT3FFMGYwdlVlaTg4b01QSWxJZ014b2svMitzVkhqQ1hycFpBWG9mcDVvVDkzUWRGS1A1U3UxdXFvYjhzYnl0ZHUzKzNxM3E1K3Jmb2gyc3lycndmQ0NSMkNtQTNPV2hDOEkyRTVxOTlKZWExU2VKdDFFdVBOUmdQOHQxWUp1bWwrSGJHakc4cHhWaXBlWlQxdTNvSWdMalRpUWpUbVUxZnBYbG1iZGx5R2tjdk1KakhSbHQ0RzZzZ1pvV0t4aitqS2k3cGx4b2NJY2xrbHlIanlGQ21aUFJCRzI1N2ZSdUIxd0JtVTE4dG4xSVpSUFhwMTZ2M1dHd2R2VUo4TERUZ0hDZkxITHlpL1JudEFVcjJTT29sWXlNNVNsbXRDZmZ4cGswVDFFNmVYT3J2VitvdFhXc3VTdDJFRFJ1WHQ2dEdxRHF2NmVCTTU2dTFyNnlPYzZQRWdIV1NIdHhpZzFUSE9wRkhlcEZPOERRT3gwdzh6b3ZFV1JPbEI1b3MrbUhtU2J2aHlHbWY2M0dVaDh0bWRoSGdMSlpMZkk1ZjZZUi9sbDdiV25nM0M4QmQ4dG5Sa05oRnhGc1pxWjVJMG15UzRLQ1ppemdaQitJRUVPYU5lNXUwbHlDcC8zMWI3TzZ4Z2JsVUkvVHEvU3BNdkluKy9lclZsOU1xdWpxaERXOWFxalZXYXZxL1czOWRUUUJFdXpGMHJSYXF2MFpJWi9wNkdBT1MvMUw4dm5ON1dTTzZSL1E0ZkUzQy9BT3NjdTE2aytqY0xuVkkzakY0blF1RnlBK05lRldGRUJ2cmhWdW5vd2tESFZqYWdlMTd2bktZZm5OMzhHajFFSGgrL1h1eTl6SHVCN0pnT3lNYWdrd0d4OUhQRUMzNVkvMGU2WDBmYy9yNmllbzk0alRjSDYxN3lsa0sxendjdkJTSHJSWlRseXRUUXVSTzlPN0dQU0lLMERTREl5akMweDZ3cVhta3ozeXFEK2xkR1VTNUdDSWc4TklpNzZnTjB2NDZJbnFoc0ZjN0dMOFhQTUlweHBzL0J2bjlFK2ROREQrMEtRTzZMVWZScEpVVmREVEpCd3dRSlBZczFucndVdE5LZmxuQmhhRVdNNGVqSDlPSjVZcTQxYjhnd1lvbUcvTFNCZFdmald1VFhoK2d1Mk4vL29odEtsdnNRL3JTMUM4S0pIb0kwOWlQSWlqQWlmNi9RT2FmRkNvUGZSbm1ONmx4aFVjNXVHMGJ0YVpDTm9kWC9hcEdvenNEdmY5a0ZlV2k0M0FxTkRGZFFVSjZtUGdFeHZOWVBiLzZaN21YZnA0L0pNSEtKRHdRclBSanBKVnBkeFZxV0xrRnExUmVtVklMb0tYT0lvM1I1Q085L1NYZGgvdk5XQ1hKZUNCbHZ2TWRBMmlCay9OR09BSWdVWDNqOHpOY05ZK3BFS0ZybVQwdmJDQk9rTWtRUTh1WWFjYWZwQkJUQ3NFVStlUDRVM2N1NkJ5NEdrUnkraEk2RmtHVGtZajgwdkV2M3N1LzZkeFM0NmZrSXcwa2oreUNjNkNGSVpUb1NwQkJuM1RGMWZyanFvL3QxeFB2cVJjZ2ozaVBCNHlsWVNwUWFnT3NVWHd2MllPUjV6MllSQ2wvMHA1MTloQW55TUNISXBIUWt5QTBML2REMEo3b2ZZVmo2bGd5WnRZTTNwbXowSWhYSDZLNm4yajhKd3JDRlB1RFNreUIzRW9MY1BwNTgwWTljamh6aUVCQmxpTnpGUHZqbWVqL1ZtRDNZM1kxMWl6QUtaL0t5NWFHMmFNTE8yRXB3cGk5R2ZFN3haaWQ1b3ZtZnRrdVF2NFQrbU95T2JUQkFPSUdwa0JBa04xa0kwaU13MTdLUW9vbXgwVVFCaGo2WmkveVFoWEgxdVMrNnFCclJidzRFNEM5cmZKQ0ZIb1FZVStFTG9XM2U0cjU5MGo2WjVVa2Y3Q0liNnl0WTBqZUdZa1RwTW4zakl2dDVtUGVmZHdhb1BxcFB3dERDSlRpMlJhR3g1T0lZeURqNzlYTnhDT1I0enVKUXY3VmpJZWR5YTBQYjdMQ2NpcGFHZE8xNk1ia0lNNzdPMzlIMzhlcTE0aFdlWEswWUJBamg3U2hjMkdZVEllTENtUWhwN0JvUnZyVXVBSCs3SVFCL0Y0bFhEYlpHaURoL0ovNytKazRHTTQ3UlhaaC9lTDBieHF6Mnd6MVkvOTBiTlcxcituY1g3dCs3MFQ1SWZYZEcxUEhmMTRwd3kwdEVWajdWNklqY0l1VkpETzNHK1Q1NC9STzZsMzFyVHNyd0RaUmRqeHp2anVqalBSdEQ0N29yb3I5M21ZeUZiTzhPaitsYjZ3TXdGc2RVdGl5a2UwSkNNZ2tNbGozMkFEblI5M2ZRNDllS2JZUFZFZTdGMEl4MDYwby9URDRvdytHTFhYREozYTJHQ1dUQjJVa1I1UFZaQW9XdTdhaXpOYW5YSzNmand0YTZEejQ1bE5jdTNCRjFmaWwydzZYT0xqaUVjbnI2aUF5amtaZzVPQnNYbzNmaVh3ek5mbmtZUXQ2UGkyc3Z4WG1BeUt5enB4K1NmaDk3WkVDMkhybi9PSDFoMmZUS1NRN1ZRM1JNZEUxMDNuYXBDNTVxazFWYklKNlgyTVpnMmVYNGw4VzZQZy95c3JoY0ZXNmlnVFBGelF0ODhDKzdKTGhNK1hHSmRFbFNzQnZtdGN0UVNrSzYycEJjUzlHcjNEalBCeHZmQ2Fia21ENzFkTU9rM1FISVhSU3lFWE03OHNYRk5zZXY4VS90SThnYS8yVHpobjAyT3VUVDJUY3VSMmFIRVVpT2FVY2s2ak42T3FZTEdPYU5JKytLUE84REY1S2xDTmNNWDEzaGh5L0UxSng0Z21nVFR4NldjTDNvUTF2eFdkaVprVjA2T2RiZlhpZXM5VDNZOXkrM2Ezdy80SmZpeVFId0cvelcyM2VHWEJ6NHozQ1dDRExIUVhYbXZXK2pDTmtvMjFJa3lMRDVYbmoyTlRsbHgwTkk4dkFlQ1VtUGE5V283UzI2Y3VQV1NHUDYvcU53cFRTNjkrUUxPZ1ZlTU5sL1FXZmZyQzVFRWNiSVgxL2xoMDg4akIyMDA4Y1lxbzRtRDJBdThrSXhrcVNrMWdmdmZwNjZMcHA4VFg4c2VYSjVpWVZkNnRtb0RWczB5bnR2SFF6djkxL3BlTkRUbXpHT0VCQ1o4MzB3OWJERXJEbE82VzN5RnVOQ0RMWFFxRWJPODhMRXh0U1dkZVZSR2JJWHhOODJJM0EyUTV2NEpiNm1oQkNFaEZlb3ZOY3ZCNWtseHpIOXBqVUFJM0VpS2tadm5ZWGJJeGVWbEIzTC8vdWtTdzNKaGNRUlpLa09RWENoVHR4WW5PRkNoWlVqU2E1NldYZ1Z6M1FPdzZwUmkwTHl6c0haOTI5ZThxdVhXVk14a2N2QXQ1SjdQTFh4dDA4Q1lVbkVBcjBuY2JYZUNRbG9XSTJKYjhNWTJTMHhnc1F6RWVsK3YxNkUvSENvTmFMR0M2LzhMalVYN09RZXlqaGNoNVFtaUNEbHRSMjVHWHFKWCt6clFFQS9MTkhaMTJLeDVyZFJXUVNIZ3lTendlYytScEI0cC9rbkpNaWVqNHQxOUNRbGkwSVQxRWVkcVNmM0RyRmI5WUM5QkxGcmIwc3NiSGF4N3JFekdVWUpNMjBkUUpBNG9IQ2hGMzUvbGQzOGlIZHErVk1RY2hmMGtTT3p4Z2ZUVXZEaXlCK3ZkYWsya3dqYjVHdjlDd3dKd2kzMlBXcS9JcFA5V3VOeVJGRWo1bnBoMlNtWldYQ2NFNW1FaWttSVZkdm52UXNYZU5WRmJ5cWxGYWRsdUJsdFJ0RGFXNjIxdmRrNkgybWZpNzBQR0JMRXRkQTl1cmZoT0NJZjNmN2ZyZld6TytnSm1IbEx5SjMxUlNHNUV3UExRUy95WUwyWVV1TzQ5eFUvRWp2K2RvbFFpcFpCWm9aWlFoWmQ2UzJ3eUVIbGl3eCtHeUI3cmcrV3ZNRzhTRHpUNng5MTZScFdGczdHemUrbnhtWGYycE15Wk5kNDQwdU1SYjFlcGozREt2R0wvQnZVQW5GR0ticitmSnpORG43STdvZkVLNjEvVzRIY212NXlGeEFGODMwd2JybGYvVU9mWkw0SzEzWUJDVDQvWkN1SnNFbHVrYS9ha2lBb3dBY1QwUm1WSkF0Q3M5azZWS1NIM1Zpbm5xYnNreUN2SmtRS3JleHowWU0vZjBLbStqMHRXc2tyaGNpZE04Y0xKUXNTWTRzcVFXcTlFeXdKa2xFRk4vRFArNjRoSUJIZ1VBQWpxcjN3OSt0RjJJdHUvek52dC9vL2ZISXc5QTRDZzMyUWgvdUl3UlA0TVhvZC81SWZpaGZveTUwWVh2WWMrcGQ5U1cxTyswM2VweUd2UDVOUERiWCtTWUVITm9nd2NwWVh1SVdKc1VFVkMwMHU3dzRJczU3M0xVMVl4OExJeHpnemN6YVpNYnh3eDJvUkpqWUU0T2M3QS9ETHBnRDhPOEdlTUpvaW9IZk1ESHRNNm5GYTFtbVpQUlpqMkJQRE9NUG5mOVVjVUwzR2svc2xlR2l6cU1yUzBNZ1dFWUo0NFQvMjBIWGQxOURJZjdFN0FQOW5wOEdZSS9hSmJoL0J2Qk1iUkxoempWOGxMYkdCUExMbVNMRDlDWXU4VDlnbUNQZTgvdzUrb2NxcXhJSmNzOGVZYzlROEgrVGg3SlpETUJ2RE1Kc2dudWptbWYxQmptWE5HcGczZTNhb2JyTE5KWmpUaHh6TitkNzhGdjNKbWQxWDNxeWZQWFhuNkpRbEdKQjNqbjVlM1hiQ1l5M0FFSXF6a0xlQWhqRVM1ZlBHeC9RdUp4THY5Y3RkQWZqTDZkNWUyV25IMm50c1Rsait1QjJGb2FCci9pRFlYQWdLTjgvUFp6aEovRUwvdVVIcXJDTUk0Um15bER5WU55OUVycUthRUVhRjkwdm1lOVc4WmMrSDh5L3MyNlk3aUpFK3RFbkVrSXhlcUVVZXVSL3pJdXBnWG9pRVNTK0hCYjZXREtkSldPQ3JJRE42VWdNSFY0Z3o1YzNQZVZYUE0yNlpYM1hWLzdCT2hCOWdIUHU5T2hHK3VjSVBaWmh2Qk9iSnhObXl1Q1pFRnM1UlcxNUllbG5FZ0pIb2FldC9UL2V5YjkxYkNneXI4b0tRQ2pKWTZKM2ttQ0RFNVpnYmlWZHpqSVlST1d1amFLNFhibHZxaHcxdksvQ0hxMTN3aGI5N3dGOFlrTVhmcGV0ZDBQU3VvcTVwdm9JeldoWVNwV1NlWHJ0ZW5iYU4ydmZhN0xmWG9wMW81ZVExYWR0K1hVSjRraG16MUtjdTdHa2w4dVR3UFMvN3NXNnZpUzY5RG1UcVJDNk95bnJLcXpRdlI5a09zK1o3MjNnU25wakNGK041TzJYMDY4aDR4Z1BON3ptYitRS1lmV203REZrelBWQXcyeHRGMzdUOThzVXdiaDhGV1VYYnovNzdXZWhGS2c3UVhiQ2YvcVFMYnByaEJXNmVUbjhXT0pXcEx5NzJ4TTMzMVdWRW01QmRqOFJIWWJFakg0MzdiZ3luQWxGRUJ1UWZiRC9GT1BtSDYvMlFYYTJud1BTQ2dNWmFncUZuTVhxU1R5bCtYWVpjd3YzcEpqL2t6Y0kya25Uc3FQdjdveVlJY1QzOFBPOFZuaGhRc2dBSFZZckt6RVBEUHZkWlY0dzNwTHJoTjAwUzVQU1FKQmt4MzJhZStiRzNsWXR5bUZnZkFJbmlIZmFybm01Vlg4VnprMUt1WnpKaVRjSThYS3dubWRIa1lEanc4eDBCS2dva055VWYyeE5RallPZmw5N2cwSkJ2Zk5ZRHh5L1NmWXEwK3JBRTJjOGw1WmdueFV3UThuWVZYK1B0NEdzc0dxdUpnUGE0V1JtenNqcjVSODMyd0Yvand2SVRpbmVBeWMydGJ5enpRY2tjRzMzWDlyUEc1SGlOQTluVVdNalZUcmthZyswOGl6d1IrWW93SExwN2xWLzkraUd0Uk40ZUhiL1VEMFd6VGZSY1kyRWpSdU90c1RGMjNmWjg1OGxUSXhrMEVqL1BWOWxQeVlPRU1oellzT2tlV1BJNjNhZUE5NzBmaEt3cUQzQnpCMytNZ3c2VXdZM1R2YkQ1ZDNRdit6YWNWZUNtNlc0UTVpWEhPREdrZmppRFZpcXZRaTh5MXl0cUJUbGdmNjdtdU40eEhZWDB5MnVRVDBBVVZudmdPOHY5NEE3UXZCd0pjT2NLSCtUTnREWWMwN0hYeEhCc2JuU0dyTHMxYThzbVJxRVgrVnF0VDMwdWpsWWk2NXFITm9pNGR2U291cVRXOTdrT3o0ZmtmWm1hOStoZGk5UjRhL3NaL0NCZ09IcVBwbk4wWjdZbHh5VVlPY016a05CcGpzeEtEenpUU3ZleTc0bExRY2lwOUlKcnppQ1ByOFk3T1lOMktwL3ZMVkc5eUNBTnFnQm4rUCt4TWJyTHVrYnBpcnNML2l1NXhEbWJFVUlMMVlnUjczNUdiOEZPbmpiK3plNEE1RHdYaWdnR2FXeFhvcjR4YU9sRjVxQVhDUXN1a1hDaEFkLzBqSWVxc2tqNmo1MEJ5SzVNL0hoU0FtaE1PZWhGZnJ5Tzd1dTVIM2QyUXhaNjdKTHFRUnJYN0RoNGo5N0YrdHpPVzdFUkpaRURRbEpDTGhyeHorcEZkUWFpbFM1MWRFSFc5QkQ1aExtTUVIcmdFQ09mOWNCUmltOTlrbFZOUlV0QUpZbVErREYxa1BWMFJqd1ROOHRUemM5V21aZ1FsT0tDc2FES0N4OThRVy9CU01LMDc2N0VoWGxsNHNhUnFpakUwUFpyejN2QlRmSGZjOGszMFZ5NFdDZTZUZWg0NXZnZXlZaDNJdkViTjl0N0lSRURFbVlUY25qZzJ5LzRxTDRhMnZnSEJVWk9aOFp2RjVub1JWWlIvc0RHRDlmNjFZa3ZjZVB3dEdja0tnbXpmQS8yTm14bkZwaWw4enR5TzB1L0xrS1E3R2U5OEorTjlLN3Jra3VYRTJwOWZjcVpwZW1EMVRobUdZekx5ZGl0enMxeVVPZHNCMzJZWlUvdVdwbVVvQmU1QlVPVVN4MzBacWs1NU05eG5yVXhOaXU1bU5sV0h4UzAyZHN6RXBtd0UwMzlCQmtIQ0FpeVRuaitLTDNMalV1d3JwdW5lVlR5eGJ2L1F3Vmx4SXRVZUdCcXN3UzBLTExoVFJsMTYwblFHSFMrMWg3M1VHdXVXTTVYZThYZVRsUkh3TzR4N2JsWkVmdTRGUkRacUpnRlIrZ1E1TU12dXNDRnN5RTNVOU9XR2FvTnRucDVqTVpkYmRKV3RVTmxtOG5VU2RscWszSUd4L05tZU9GTlNxL25ibmhUNlNOSXRRMFpWZHZRajc2OHI4UjlZVzRZYWxYN0tneUZUZ2s1R1AvK3ZJSE9wY1pIdDRrcTRZUTQ5M2tvZ3Nnc0J3MzZvVG8vbGZVZ0NiR0lMdUxlOTFrVUhraU02WEg0V2I3enVoMmJHWWJWQUNMenpleC9qQ2lsc05JTDM2aU5mWkYrOG1JUUNwRnNycGsyK3FFOVhxM1R2MWpHYkpSL3BrbmJrZmxuMnVoanRjVllxaDJNSWJ4UFBDOGh5WTZ6c2QrdC9jYzF1QTU4MWtHL2pHekY1RGRYN1R1V01kaUplODU3ZjUvaVBQMlZhQXA3ZVYzUGVhRUFsZkoyREI5Y0p2ZFA3bnJSRDNsWWorQ29qd3lSdWhJUUJUakozRFl2dHRkelA3N2VEYU1xUFZENlhIVDlzQW5GVmVVZW5aRU1DWTF1ZWFqem5vaEJlRFFEMHY2MmozeWNhZjUraFIvRUtKUkNQTStDTm5UbnozZ2N0NnMvRm8vTmZXOE03WGx0OXNmc3ZEZUdjWnFmejhYUTZOZU5nYWh1M0pJUEF2N3JSbEd0UXpDVWw5a1liQjZyZGsvTlNKYWtobHJQZWM0Z0lGNFkvcFFINWtmeDN4Yk5mMVJneEZRTXJhcmkxN2QwQTRleXZPbEpEMng4MDNtb3RlRzBERGYrMWgzZlBzNTB0MlFrVytJck8yL0Z6bm5pT2ZETXA5MHcrNEQ5UzQzMWJ5bFFNc01McFpYTXFHbkRoVExOZThZTkt4eThtN01jOCtaWGhNckdzVytYTWJRcXpFakdKRHpubWNpVG1UcE80RkN3V1VpU0g3L3NoMk1mQmxWM1BUQ2s2b2IzUCt1Q1gyOFhvUkNWVVRJamZ2MUpkNUNKSng5RDE1KzlLc0xwajdwMFF5N3k0WVpUSHdYaFh6RlB6clF3T2VMWEo2V3N5bjFuUmpJbm9RclhJM0ZXVEQ3T1hNVDR2N2ZjQjVVdEFWalZMc01heE55REVreGM1MWZ6Wk1kZkdReFZvWEFyRDBuaXdvbm9JWnk0cXZkTHFpNklUbWEyQnVCSHEvMVFQQ1BrYmJoNDkrZTVKRnAzbUs1SHFuQTlRb3pUQ2xYUm5VZFBCYVVvOUFKVVRENFNJZmRwQkc3enBwRmpiaWg1MXFCc1ZSUjlTQ1ZVRFU1Wm5CUlZtWk9KaStpZ1J4ZDUwOXptK3FDS0pGeDNtSzVIS25FOWtnQ2pFQXgrTXd3ZWhEQnBFcWlQNUYxM0dJWmFNM0E5b2gzSURKc0RuaEdGa0daRVFGdFB0TzNPTUNtck9TY1lsWS9ZQ2lidENySElZVWFVZVdiWUt5dk1pRUlQMGVoeGhubC9CZjIya24vZFllaEpacmluUmhxdU1LTy9JUXNHeC9nRVE0anlYRElnV2hrbVV1NUNmUFV6TVNPVkU3SysxbzV5aFFRYnF0MjJCQWQ5RUFhUkpNbEMxc1MyR2NmWFp4UHFTWjcxYkVXQVFCWnJFZHRJQ0JIUUh1Tk44dk02ZFFwUnRpSG85RkV3S0t2WGhsR2J2TTIrOFRiSHpsdVVOK3ViMVZpZDFtT2xHOEZBN3J5SnJPM0lTWGpXdlNCanlLUXF1QUVIZGtDd2FYQ0NoYUQxQkM4WTFNSGJWQlp2VVRkdnc4RHNHTHRnbzM3QkFaRjRCNFp1TmpId052b25PTkNERlhudDZFd3d0QXR2WGNaUVMwVlZuMlVLMHozdFBIa0hnRHcwR0FHOVk5cnpna05vNitTanFKTjNrTS9PZVQ2S1BFNzNuY2dyWHZsNEM5bEZJOWVJTW8zVVAvcVdQUGRJdkNVNEE1d1RvakQ0VkFCUGdkaXh0RWR6Z2htTWZ0ckFNVExSWmd6bFZGN1ZVWTREdlNKVWhBY2R1YTNRRVVxRmdiQXFUTXBhMVRsZEozK0Z5VG05YmZnM1g2SC8yN1MvUnUxcnhzUlg2QmhaUkI2K3drSk9abTFVT095WG1XejE1Rnhoa25lNlNSc1YrdTNpV004TjJwdUJDU2ZKMHgzbFpNQzZTa3NTOElOY25xRWZqcVhjalVBYTRSWU92SjBwbjhGOG92RTJEZm13eW5UaFBzMXpRSGdHaGNIQW9FSFpNKzROUTNaQjd1UVNNRC9Oc3pXdXdwNldBSVdxYmJpSFNCdEpVUDgwVDIwR1N4RjMzRkVncXZDaWhqc01UeHdSNy9vOUNScERjcmRSOXN3UXVVTk9PNVU5N1o3YVg4QmFHQ2xDbThjZEplelVUNk1OdDQwMjdOWVRheHVlR003RnFvc0I1eFgrNmM1SmpBbG1udVJwejBUaGFiY0hBUXhwaFN2b09lNW5ETER6N05iVG5iZVdUZTA4dzR3bVhkQjVvUHhKYndtemZFZVhnV0c0OEZUbmNtRXFDcEJocUVMaG4vSlVzaXRWc1laY1V6SGtZc1kwMUhDbDdDa1dVdEVOdVpoUkRSR3drQ3ArSWRkVEtHQ0dWQVVMcWVKK0tSamRNZ3I2UERPMmxNTXA0YW5ydHpNTFRwUTMrYTJuUW5qU0xTS0FJYW5SVWZaYno2UE1hd3dHVWNoVHdVKzZtNWdSSmkzcVhFK2syVk80U1htbDY3ZnVCMUVaRjVoQkpnM09sazFOMFUveERPbXc2OG5PYWlTTGdnQ0dRWUduN0luT3lTeWNTdVpMd2xNNmI4WDFTUzBxUzJRR216QjBrTW1KWGJwTkpZK0N5aEllUjZJOGdVUjVBcFhJRUE5MDhJOTdLc3NmUzVOWFlZY2tVVkI1UklsRW1jeWdxZUVLQ2FWSVdNc3NiQWdSQlQxS0JWRXVNL0NvY1o0Ukl3MFc4L3dVOXlQQ0ZIZWI4RGdxbmNFS0N2KzR1d2tubDRsczhaMW1pWHZLenhPdmdnWndqcnBoVFVtQThjYTNqVlBFVzdEN0dDeUZ5UEo0NXgzQ0ZNOVNOTHBycXVHbEp5NmpkNTByL01Zemhsa0VTL3FKZkVkNGl2dkJzaW51RGJpOWtnYWt1RkQydUh0MTJlUHMwWE9Xb2xtelBPRWVYVGI1K3FQOFkrNnR3bVB1RG1GS0orRFdBSjFoR0ozVCt4MDJWSEpzaXNGNWJUN2RlanZOKzlGVGRyTDdDaUUvNHVIeXh6ckttWVpab2h1S1BkWXhvV3hLNTJRTVJaclE4RHdEamJUVFlOL3N1QjJTMldsRE4xK0hNTGx6Yzlsa3o2T0U3RXlETENVMGpaM21IajNobWM0ZlRKamVPWGw4UmVmeUNkUGRiZU9udTYvZ0ZoSURUOC8yTXJiYk1yN0NzeFIvLzJyOGpNNEhKbFF4RDhGU2tpWUF5RVhjanBpRXFFVFVoZEdJYUF2alFoZ2RBLzloSEs2Rno1MlB5TDgxWE1kcVJBVmlJbUlDSXBOSlBEN3Avd09OZ0YrMVBsdUErd0FBQUFCSlJVNUVya0pnZ2c9PTt2ZXJ0aWNhbExhYmVsUG9zaXRpb249Ym90dG9tO3ZlcnRpY2FsQWxpZ249dG9wO2lyLnN5bmNocm9uaXplZD0xO3N0cm9rZVdpZHRoPTE7IiBwYXJlbnQ9IjU3IiB2ZXJ0ZXg9IjEiIGlzVGh1bWI9IjAiPjxteEdlb21ldHJ5IHg9Ijc2IiB5PSI3MyIgd2lkdGg9IjkwIiBoZWlnaHQ9IjkwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSIxMyIgdmFsdWU9ImlPUyBBcHAgU3RvcmUgLT4gSW9UIE1vYmlsZSBBcHBsaWNhdGlvbiIgc3R5bGU9ImlyLnJlZj02Y2ExNzM1ZC0yYjkxLTRmMmEtYWVmOC1lMjJmYzk2YTQ0MWE7ZWRnZVN0eWxlPW5vbmU7Y3VydmVkPTE7aHRtbD0xO2lyLnN5bmNocm9uaXplZD0xO2VudHJ5WD0wO2VudHJ5WT0wLjU7ZW50cnlEeD0wO2VudHJ5RHk9MDtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iMSIgc291cmNlPSIzMiIgdGFyZ2V0PSIxMiIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjIyIiB2YWx1ZT0iUm91dGVyIC0+IEFXUyBXQUYgKFdlYiBBcHBsaWNhdGlvbiBGaXJld2FsbCkiIHN0eWxlPSJpci5yZWY9ZTEzODc0Y2YtYTZhYS00ZjVlLWJmNGUtODM3MGVhNTZlNWUwO2VkZ2VTdHlsZT1ub25lO2N1cnZlZD0xO2h0bWw9MTtpci5zeW5jaHJvbml6ZWQ9MTtzdHJva2VDb2xvcj0jQkZCRkJGO3N0cm9rZVdpZHRoPTI7ZW5kQXJyb3c9b3BlbjtlbmRGaWxsPTA7ZW5kU2l6ZT00O3NvdXJjZVBlcmltZXRlclNwYWNpbmc9OTsiIHBhcmVudD0iMSIgc291cmNlPSIxOSIgdGFyZ2V0PSIyMCIgZWRnZT0iMSI+PG14R2VvbWV0cnkgcmVsYXRpdmU9IjEiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxvYmplY3QgbGFiZWw9IkNvbW1vbiBWdWxucyIgaWQ9IjQyIj48bXhDZWxsIHN0eWxlPSIiIHBhcmVudD0iMCIgdmlzaWJsZT0iMCIvPjwvb2JqZWN0PjxteENlbGwgaWQ9IjQzIiB2YWx1ZT0iV2VhayBvciBIYXJkIENvZGVkIFBhc3N3b3JkcyIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSIyOTUiIHk9IjYyNyIgd2lkdGg9IjEyMCIgaGVpZ2h0PSI2MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iNDQiIHZhbHVlPSJJbnNlY3VyZSBOZXR3b3JrcyIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSI0NCIgeT0iNDAwIiB3aWR0aD0iMTIwIiBoZWlnaHQ9IjYwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSI0NSIgdmFsdWU9Ikluc2VjdXJlIEVjb3N5c3RlbSBJbnRlcmZhY2VzIiBzdHlsZT0icm91bmRlZD0wO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7c3Ryb2tlQ29sb3I9I2I4NTQ1MDtzdHJva2VXaWR0aD0xO2ZvbnRDb2xvcj0jMDAwMDAwO2ZpbGxDb2xvcj0jZjhjZWNjO2ZvbnRTdHlsZT0xIiBwYXJlbnQ9IjQyIiB2ZXJ0ZXg9IjEiPjxteEdlb21ldHJ5IHg9Ijg2IiB5PSI1NDciIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjQ2IiB2YWx1ZT0iSW5zZWN1cmUgVXBkYXRlIE1lY2hhbmlzbXMiIHN0eWxlPSJyb3VuZGVkPTA7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtzdHJva2VDb2xvcj0jYjg1NDUwO3N0cm9rZVdpZHRoPTE7Zm9udENvbG9yPSMwMDAwMDA7ZmlsbENvbG9yPSNmOGNlY2M7Zm9udFN0eWxlPTEiIHBhcmVudD0iNDIiIHZlcnRleD0iMSI+PG14R2VvbWV0cnkgeD0iNDMzIiB5PSI2MjkiIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjQ3IiB2YWx1ZT0iT3V0ZGF0ZWQgQ29tcG9uZW50cyIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSI1NzUiIHk9IjYyNyIgd2lkdGg9IjEyMCIgaGVpZ2h0PSI2MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iNDgiIHZhbHVlPSJMYWNrIG9mIFByb3BlciBQcml2YWN5IENvbnRyb2xzIiBzdHlsZT0icm91bmRlZD0wO3doaXRlU3BhY2U9d3JhcDtodG1sPTE7c3Ryb2tlQ29sb3I9I2I4NTQ1MDtzdHJva2VXaWR0aD0xO2ZvbnRDb2xvcj0jMDAwMDAwO2ZpbGxDb2xvcj0jZjhjZWNjO2ZvbnRTdHlsZT0xIiBwYXJlbnQ9IjQyIiB2ZXJ0ZXg9IjEiPjxteEdlb21ldHJ5IHg9Ijc3NSIgeT0iMjcyIiB3aWR0aD0iMTIwIiBoZWlnaHQ9IjYwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSI0OSIgdmFsdWU9Ikluc2VjdXJlIERhdGEgVHJhbnNmZXIgb3IgU3RvcmFnZSIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSIyMzciIHk9IjE3OCIgd2lkdGg9IjEyMCIgaGVpZ2h0PSI2MCIgYXM9Imdlb21ldHJ5Ii8+PC9teENlbGw+PG14Q2VsbCBpZD0iNTAiIHZhbHVlPSJJbXByb3BlciBEZXZpY2UgTWFuYWdlbWVudCIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSItMzI1IiB5PSI2MjIiIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjUxIiB2YWx1ZT0iSW5zZWN1cmUgRGVmYXVsdCBTZXR0aW5ncyIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSItMTgyIiB5PSI2MjAiIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjUyIiB2YWx1ZT0iTGFjayBvZiBQaHlzaWNhbCBIYXJkZW5pbmciIHN0eWxlPSJyb3VuZGVkPTA7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtzdHJva2VDb2xvcj0jYjg1NDUwO3N0cm9rZVdpZHRoPTE7Zm9udENvbG9yPSMwMDAwMDA7ZmlsbENvbG9yPSNmOGNlY2M7Zm9udFN0eWxlPTEiIHBhcmVudD0iNDIiIHZlcnRleD0iMSI+PG14R2VvbWV0cnkgeD0iMTQ0IiB5PSI2MzUiIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjUzIiB2YWx1ZT0iTGFjayBvZiBQcm9wZXIgUHJpdmFjeSBDb250cm9scyIgc3R5bGU9InJvdW5kZWQ9MDt3aGl0ZVNwYWNlPXdyYXA7aHRtbD0xO3N0cm9rZUNvbG9yPSNiODU0NTA7c3Ryb2tlV2lkdGg9MTtmb250Q29sb3I9IzAwMDAwMDtmaWxsQ29sb3I9I2Y4Y2VjYztmb250U3R5bGU9MSIgcGFyZW50PSI0MiIgdmVydGV4PSIxIj48bXhHZW9tZXRyeSB4PSI0NjIiIHk9Ii0yNDQiIHdpZHRoPSIxMjAiIGhlaWdodD0iNjAiIGFzPSJnZW9tZXRyeSIvPjwvbXhDZWxsPjxteENlbGwgaWQ9IjU0IiB2YWx1ZT0iSW5zZWN1cmUgVXBkYXRlIE1lY2hhbmlzbXMiIHN0eWxlPSJyb3VuZGVkPTA7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtzdHJva2VDb2xvcj0jYjg1NDUwO3N0cm9rZVdpZHRoPTE7Zm9udENvbG9yPSMwMDAwMDA7ZmlsbENvbG9yPSNmOGNlY2M7Zm9udFN0eWxlPTEiIHBhcmVudD0iNDIiIHZlcnRleD0iMSI+PG14R2VvbWV0cnkgeD0iLTQ2MSIgeT0iNjE4IiB3aWR0aD0iMTIwIiBoZWlnaHQ9IjYwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48bXhDZWxsIGlkPSI1NSIgdmFsdWU9Ik91dGRhdGVkIENvbXBvbmVudHMiIHN0eWxlPSJyb3VuZGVkPTA7d2hpdGVTcGFjZT13cmFwO2h0bWw9MTtzdHJva2VDb2xvcj0jYjg1NDUwO3N0cm9rZVdpZHRoPTE7Zm9udENvbG9yPSMwMDAwMDA7ZmlsbENvbG9yPSNmOGNlY2M7Zm9udFN0eWxlPTEiIHBhcmVudD0iNDIiIHZlcnRleD0iMSI+PG14R2VvbWV0cnkgeD0iLTU2MiIgeT0iNTM4IiB3aWR0aD0iMTIwIiBoZWlnaHQ9IjYwIiBhcz0iZ2VvbWV0cnkiLz48L214Q2VsbD48L3Jvb3Q+PC9teEdyYXBoTW9kZWw+</schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
    <trustZone ref="trusted-partner" uuid="531315a7-41a2-40ed-ab87-22c3a4c3c7ff" name="Trusted Partner" desc="Vetted and trusted partner" trustRating="80"/>
  </trustZones>
  <questions/>
  <assets>
    <asset type="" name="Protected Health Information" desc="Relates to the past, present, or future physical or mental health or &#13;&#10;condition of an individual; the provision of health care to an individual; &#13;&#10;or the past, present, or future payment for the provision of health care to &#13;&#10;an individual." identifier="">
      <classification name="Personally Identifiable Information" desc="&#10;                Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity.&#10;                " confidentiality="80" integrity="80" availability="20"/>
    </asset>
  </assets>
  <settings>
    <setting name="features.remove.not.applying.countermeasures.from.model" value="true" canOverride="true" type="BOOLEAN" groupName="GENERAL"/>
    <setting name="general.issue.tracker.default.profile" value="" canOverride="false" type="TEXT" groupName="ISSUE_TRACKER"/>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="AWS A2I (Augmented AI) -&gt; AWS EC2 (Elastic Compute Cloud)" ref="025ab1f2-f615-438e-a40a-3f88c6343d7a" source="ac3afbbd-0bc5-41d2-8e58-3531973737bb" target="8f81cb4f-d85b-4cee-96fb-8a273d8636bd">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bluetooth port -&gt; Bluetooth port" ref="0c085b14-71d0-420f-9110-08fc3c50b887" source="75352eeb-eed3-4da3-bc40-f7bc879b1bfe" target="cf25d1a3-167a-4a8a-89f3-09152b0291cc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Embedded Storage -&gt; Other database" ref="0dbb682a-0680-4987-b74a-6eb206c742ec" source="6195b120-d6d5-407c-9dbd-136f9f4833fb" target="375e500c-8224-4ff1-b3a9-8dcb9da062dc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Sensor -&gt; IoT Application" ref="36284ba6-de26-44db-9c74-afb39a72b0ca" source="e6a9e3e2-8bd8-4ffd-8a55-beedcaa1f75e" target="036adfeb-40aa-49e3-9879-19a9303f9ead">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="iOS App Store -&gt; IoT Mobile Application" ref="6ca1735d-2b91-4f2a-aef8-e22fc96a441a" source="7bd64aec-f5c0-4c05-96bb-d723e1bcbcea" target="d0fdc25d-5d11-4e1f-af10-16a726654f57">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="IoT Application -&gt; Embedded Storage" ref="76d9fdc8-b739-4901-81bc-51c80fb44106" source="036adfeb-40aa-49e3-9879-19a9303f9ead" target="6195b120-d6d5-407c-9dbd-136f9f4833fb">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Embedded Storage -&gt; IoT Application" ref="835a3685-14fe-40e9-9924-6b6bdb73460b" source="6195b120-d6d5-407c-9dbd-136f9f4833fb" target="036adfeb-40aa-49e3-9879-19a9303f9ead">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS EC2 (Elastic Compute Cloud) -&gt; AWS RDS (Relational Database Service)" ref="88853750-0f04-46fd-9310-c9c498d800f7" source="8f81cb4f-d85b-4cee-96fb-8a273d8636bd" target="f4661e7d-e24f-45d6-9704-3ba6e1a8aec4">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS RDS (Relational Database Service) -&gt; AWS A2I (Augmented AI)" ref="89013e2d-8c4d-4946-971c-62e8d951c270" source="f4661e7d-e24f-45d6-9704-3ba6e1a8aec4" target="ac3afbbd-0bc5-41d2-8e58-3531973737bb">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bluetooth port -&gt; IoT Mobile Application" ref="90b643e7-0e74-40c2-b2a3-e78c884c0c50" source="75352eeb-eed3-4da3-bc40-f7bc879b1bfe" target="d0fdc25d-5d11-4e1f-af10-16a726654f57">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Bluetooth port -&gt; Bluetooth port" ref="9dc635ab-4e48-4586-aa05-16f11dd7493e" source="cf25d1a3-167a-4a8a-89f3-09152b0291cc" target="75352eeb-eed3-4da3-bc40-f7bc879b1bfe">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Wi-Fi port -&gt; Router" ref="b97ee69f-565b-48ac-be25-cf3fb631d748" source="c49d2e8c-310a-4618-9e97-40382c616251" target="a8e21836-69ca-4ed3-96b7-4b152a3a3a36">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="IoT Operating System -&gt; Wi-Fi port" ref="c376b4c9-7023-47e4-964e-fcce48148f5b" source="098d813e-0ed5-4bb8-8f6a-58d4a2a3a4e8" target="c49d2e8c-310a-4618-9e97-40382c616251">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Other database -&gt; Embedded Storage" ref="c741128a-59b0-4001-9e30-80d9e4fb7c5f" source="375e500c-8224-4ff1-b3a9-8dcb9da062dc" target="6195b120-d6d5-407c-9dbd-136f9f4833fb">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="IoT Mobile Application -&gt; Bluetooth port" ref="d30df4bf-786f-4674-982e-5b4f02c93b0d" source="d0fdc25d-5d11-4e1f-af10-16a726654f57" target="75352eeb-eed3-4da3-bc40-f7bc879b1bfe">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Router -&gt; AWS WAF (Web Application Firewall)" ref="e13874cf-a6aa-4f5e-bf4e-8370ea56e5e0" source="a8e21836-69ca-4ed3-96b7-4b152a3a3a36" target="d74ae0ed-f971-47f6-8964-41c7ccc4cc09">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="AWS WAF (Web Application Firewall) -&gt; AWS EC2 (Elastic Compute Cloud)" ref="e4f6bd15-1fa7-486f-a34c-cc0d4dcb764f" source="d74ae0ed-f971-47f6-8964-41c7ccc4cc09" target="8f81cb4f-d85b-4cee-96fb-8a273d8636bd">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="project-epic-id" value=""/>
  </customFields>
  <components>
    <component uuid="ce2ff4c5-0ddd-4703-a5eb-f7e1406838cf" diagramComponentId="c6206fbc-2ada-4d0f-86b6-66aaf08e97b2" ref="ac3afbbd-0bc5-41d2-8e58-3531973737bb" name="AWS A2I (Augmented AI)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="c7533c7a-9081-435d-9260-c5602f5e07b7" componentDefinitionRef="CD-A2I" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.309">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-A2I1" name="Control access to AWS Augmented AI (A2I)" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS Augmented AI (A2I)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When using Amazon Augmented AI (Amazon A2I) to create a human review workflow for your ML/AI application, you create and configure resources in Amazon SageMaker such as a human workforce and worker task templates. To configure and start a human loop, you either integrate Amazon A2I with other AWS services such as Amazon Textract or Amazon Rekognition, or use the Amazon Augmented AI Runtime API. To create a human review workflow and start a human loop, you must attach certain policies to your AWS Identity and Access Management (IAM) role or user.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; - When you start a human loop using image input data on or after January 12th, 2020, you must add a CORS header policy to the Amazon S3 bucket that contains your input data.&lt;/p&gt; 
&lt;p&gt;- When you create a flow definition, you need to provide a role that grants Amazon A2I permission to access Amazon S3 both for reading objects that are rendered in a human task UI and for writing the results of the human review.&lt;br&gt; This role must also have a trust policy attached to give SageMaker permission to assume the role. This allows Amazon A2I to perform actions in accordance with permissions that you attach to the role.&lt;/p&gt; 
&lt;p&gt;- To create and start human loops, you either use an API operation from a built-in task type (such as DetectModerationLabel or AnalyzeDocument) or the Amazon A2I Runtime API operation StartHumanLoop in a custom ML application. You need to attach the AmazonAugmentedAIFullAccess managed policy to the IAM user that invokes these API operations to grant permission to these services to use Amazon A2I operations. &lt;br&gt; This policy does not grant permission to invoke the API operations of the AWS service associated with built-in task types. For example, AmazonAugmentedAIFullAccess does not grant permission to call the Amazon Rekognition DetectModerationLabel API operation or Amazon Textract AnalyzeDocument API operation. You can use the more general policy, AmazonAugmentedAIIntegratedAPIAccess, to grant these permissions.&lt;/p&gt; 
&lt;p&gt;- To preview your custom worker task UI template, you need an IAM role with permissions to read Amazon S3 objects that get rendered on your user interface.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Permissions and Security in Amazon Augmented AI" url="https://docs.aws.amazon.com/sagemaker/latest/dg/a2i-permissions-security.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.265">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-A2I1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-A2I1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a13a6e0f-809b-49e0-b3e1-31ac7cc25b2a" diagramComponentId="fac89f41-5f4b-49b8-b2b1-2cdbf616639d" ref="7593ee1f-6a32-4907-a5f7-b7ef2c02801c" name="AWS Account Environment" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="amazon-web-services-environment" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Logging-3.3" name="Audit logs are accesible" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The audit logs are not encrypted and they can be accessed by attackers and obtain sensitive data
                        in clear text.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.836">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.5" name="Brute force attempts on the Amazon management console cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>The failure connection attempts (brute force) must be audited and monitored and the
                        correspondent personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.12" name="Changes in the network configuration cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The changes in the network configurations (NACLs, route and gateway tables) are not detected
                        because the monitorization and alerts of the network configuration are not configured to detect
                        these changes.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.4" name="Changes in the security configurations can be not detected" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Monitoring and alerting for security configurations are not configured and changes cannot be
                        detected.&amp;nbsp;
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.10" name="Changes in the security groups cannot be detected" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in the security groups must be audited and monitored and the correspondent
                        personnel must approve these changes. If the situation is not the correct, attackers can access
                        to security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.656">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="cloudwatch-misconfig" name="Cloudwatch is misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.2" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.248">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.8" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Access to sensitive systems without using MFA to log into the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Monitoring-4.3" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using the Multi-factor Authentication (MFA) and they are not
                        detected. The connection without the MFA must be audited and monitored, the correct security
                        group must be informed and they must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.657">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.249">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.4" name="Non-auditable actions in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The actions in the resources are not audited and not recorded in the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.836">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.1" name="Non-auditable API calls in all regions" state="0" impact="100" issueId="" issueLink="">
          <desc>The API call to the resources is not audited and the actions are not recorded into the logs.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.835">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.8" name="Non-centrality audit logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The audit logs are not stored in a central system. Therefore, the audit logs cannot be
                        exploited correctly by the security personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.837">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-1.21" name="The access keys are generated when the setup of the users is started" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The system doesn't require additional steps to create access keys, the access keys are
                        generating when the process to create an user is starting. The problem is that these keys can be
                        in use somewhere in the organization and maybe these keys are not necessary for the user.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.767">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.8" name="The access to the routing tables are not restricted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.249">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.1" name="The Authentication Method for Administrator Accounts is not configured" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator
                        accounts are not configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EXPIRATION-DATE" name="The password expiration is not established" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="LOST-ACCESS-ROOT-01" name="The Root Account is mis-configured" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator account is not configured. The security question to recover or reset the
                        password and the authentication method are not configured.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.9" name="The security policies are exposed in the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not configured and the security configurations are exposed for the
                        attackers.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.6" name="The User Account is not configured" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Key security settings such as the resetting of the password and other password controls are not configured.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.7" name="Unaudited connections with the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The connections with the applications and with the databases cannot be audited and not
                        detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.836">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Logging-3.9" name="Unaudited resources changes" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in the applications and in the databases and these changes are not detected and
                        not audited.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.837">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-IAM-2.7" name="Allocate privileges via groups or roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Granting least privilege ensures that users only have the permissions required to complete
                their jobs rather than additional privileges that are not required. Following this model ensures
                that, should an account be compromised, the blast radius of damage is limited.
                &lt;br /&gt;
                &lt;br /&gt;
                &lt;b&gt;Remediation:&lt;/b&gt;
                &lt;div&gt;
                &lt;ul&gt;
                &lt;li&gt;Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC
                with pre-defined policies added into groups or roles&amp;quot;.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/div&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="AWS Lambda Permissions Model" url="https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html"/>
            <reference name="AWS Use API Gateway Lambda Authorizers" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-use-lambda-authorizer.html"/>
            <reference name="Configure Lambda Authorizer Using the API Gateway Console" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/configure-api-gateway-lambda-authorization-with-console.html"/>
            <reference name="Security best practices in Amazon API Gateway" url="https://docs.aws.amazon.com/apigateway/latest/developerguide/security-best-practices.html"/>
            <reference name="Using Identity-Based Policies (IAM Policies) for AWS Lambda" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-identity-based.html"/>
            <reference name="Using Resource-Based Policies for AWS Lambda (Lambda Function Policies)" url="https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Follow the audit check in &amp;quot;Use RBAC with pre-defined policies added into
                            groups or roles&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Ensure the privileges granted to these groups or roles only give the user the
                            ability to perform their and no more.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.12" name="Apply an AWS Managed Config Rule for EIPs attached to EC2 instances within VPC" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  AWS Config provides you with a detailed inventory of your AWS resources and their current configuration, and continuously records configuration changes to these resources. You can evaluate these configurations and changes for compliance with ideal configurations as defined by AWS Config Rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create locally a json file (similar with the below sample) with the configuration of the Config Rule, and save it as /tmp/ConfigRule.json:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Description": "Checks whether all EIP addresses allocated to a VPC are attached to 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    EC2 instances or in-use ENIs.", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "ConfigRuleName": "eip-attached", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Source": { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Owner": "AWS", 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "SourceIdentifier": "EIP_ATTACHED" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    }, 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "Scope": { 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "ComplianceResourceTypes": [ 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    "AWS::EC2::EIP" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    ] 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    } 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a Config Rule using the configuration saved earlier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws configservice put-config-rule --config-rule file:///tmp/ConfigRule.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe config rules" url="https://docs.aws.amazon.com/cli/latest/reference/configservice/describe-config-rules.html"/>
            <reference name="Put config rule" url="https://docs.aws.amazon.com/cli/latest/reference/configservice/put-config-rule.html"/>
            <reference name="What is Config" url="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html"/>
          </references>
          <standards>
            <standard ref="5.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for a Config Rule that checks whether all EIP addresses allocated to a VPC are attached to EC2 instances or in-use ENIs:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws configservice describe-config-rules --query "ConfigRules[?Source.SourceIdentifier== 'EIP_ATTACHED']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.135">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.3-2.4" name="Apply an IAM Role for Amazon EC2 Tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  An IAM role is similar to a user, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Also, a role does not have any credentials (password or access keys) associated with it. Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. Applications must sign their API requests with AWS credentials. Therefore, if you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  IAM Roles for EC2 allow application running within an EC2 instance assume the role applied to the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If doesn't exist, create an instance profile for Web tier instances:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   aws iam create-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If doesn't exist, create an IAM role for the instance profile:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create a trust relationship policy document and save it locally as /tmp/TrustPolicy.json:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      { 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Version": "2012-10-17", 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Statement": [ 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Effect": "Allow", 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Principal": { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        "Service": "ec2.amazonaws.com" 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       }, 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Action": "sts:AssumeRole" 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      ] 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      } 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create the IAM role using the above trust policy:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-role --role-name &amp;lt;web_tier_iam_role&amp;gt; --assume-role-policydocument file:///tmp/TrustPolicy.json 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Add the IAM role created to the Instance profile:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam add-role-to-instance-profile --role-name &amp;lt;web_tier_iam_role&amp;gt; --instanceprofile-name &amp;lt;web_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add role to instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/add-role-to-instance-profile.html"/>
            <reference name="Create instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-instance-profile.html"/>
            <reference name="Create role" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-role.html"/>
            <reference name="Describe instances" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
          </references>
          <standards>
            <standard ref="2.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the Web tier EC2 instances, check if and which IAM instance profile they have attached, and note the name of the instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-instances --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Reservations[*].Instances[*].{IamInstanceProfile:IamInstanceProfile, InstanceId:InstanceId}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.1-2.2" name="Apply IAM Policy for EC2 IAM Roles for tier" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  By default, IAM users, groups, and roles have no access to AWS resources. IAM policies are the means by which privileges are granted to users, groups, or roles defined with AWS Identity Access Management. An IAM policy is a document that formally states one or more permissions using the following structure:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Actions: what actions are allowed (each AWS service has its own set of actions)&lt;/li&gt; 
  &lt;li&gt;Resources: which resources will be affected by the action&lt;/li&gt; 
  &lt;li&gt;Effect: what effect will be when the subject (user/group/roles) requests access Policies are documents that are created using JSON. A policy consists of one or more statements, each of which describes one set of permissions.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;b&gt;Remediation&lt;/b&gt;: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    *Note: references to Web tier are also applicable to App tier 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
  &lt;div&gt;
    Using the Amazon unified command line interface: 
  &lt;/div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an instance profile for Web tier instances:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an IAM role for the instance profile:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Create a trust relationship policy document and save it locally as /tmp/TrustPolicy.json:&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      { 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Version": "2012-10-17", 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      "Statement": [ 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Effect": "Allow", 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Principal": { 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;blockquote&gt; 
     &lt;div&gt; 
      &lt;div&gt;
        "Service": "ec2.amazonaws.com" 
      &lt;/div&gt; 
     &lt;/div&gt; 
    &lt;/blockquote&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       }, 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       "Action": "sts:AssumeRole" 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;blockquote&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       } 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/blockquote&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      ] 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     } 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Create the IAM role using the above trust policy:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt; 
    &lt;div&gt; 
     &lt;div&gt;
       aws iam create-role --role-name &amp;lt;web_tier_iam_role&amp;gt; --assume-role-policydocument file:///tmp/TrustPolicy.json 
     &lt;/div&gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Add the IAM role created to the Instance profile:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam add-role-to-instance-profile --role-name &amp;lt;web_tier_iam_role&amp;gt; --instanceprofile-name &amp;lt;web_tier_instance_profile&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If doesn't exist, create an IAM managed policy for Web tier instances, and note the policy ARN:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam create-policy --policy-name &amp;lt;iam_policy_name&amp;gt; --policy-document file://policy 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Attach the IAM policy created to the Web tier IAM role:&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt; 
    &lt;div&gt;
      aws iam attach-role-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --rolename &amp;lt;web_tier_iam_role&amp;gt; 
    &lt;/div&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add role to instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/add-role-to-instance-profile.html"/>
            <reference name="Attach role policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-role-policy.html"/>
            <reference name="Create instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-instance-profile.html"/>
            <reference name="Create policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-policy.html"/>
            <reference name="Create role" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-role.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
            <reference name="Get policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy.html"/>
            <reference name="Get policy version" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy-version.html"/>
            <reference name="List attached role policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-attached-role-policies.html"/>
          </references>
          <standards>
            <standard ref="2.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check managed policies attached to the IAM role, and note the policies ARN:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-attached-role-policies --role-name &amp;lt;web_tier_iam_role&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the version of the IAM policies attached to the IAM role:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --query "Policy.DefaultVersionId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the document policy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy-version --policy-arn &amp;lt;iam_policy_arn&amp;gt; --version-id &amp;lt;iam_policy_version&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.3" name="Apply IAM roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Applications that run on an Amazon EC2/S3 instance need credentials in order to access other AWS services. To provide credentials to the application in a secure way, use IAM roles. A role is an entity that has its own set of permissions, but that isn't a user or group. Roles also don't have their own permanent set of credentials the way IAM users do. In the case of Amazon EC2/S3, IAM dynamically provides temporary credentials to the EC2/S3 instance, and these credentials are automatically rotated for you. 
&lt;br /&gt; 
&lt;br /&gt;When you launch an EC2/S3 instance, you can specify a role for the instance as a launch parameter. Applications that run on the EC2/S3 instance can use the role's credentials when they access AWS resources. The role's permissions determine what the application is allowed to do. It is recommended that all EC2/S3 instances are launched with a role, even if the role has no permissions (as they can be added later if desired). 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt; 
  &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Launch Instance&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Complete the wizard until step 3 at which point ensure an IAM role is selected for the &amp;quot;IAM role&amp;quot; option (note the role must already exist).&lt;/li&gt; 
  &lt;li&gt;Complete the wizard to launch the instance.&lt;/li&gt; 
 &lt;/ol&gt;NB: You cannot add a role to an instance that has been launched without one. In these cases create an AMI from an existing instance and launch a new instance, assigning an IAM role as detailed above. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.18" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt;
                            &lt;li&gt;Select EC2/S3 from the services menu.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Instances&amp;quot; from the left hand menu.&lt;/li&gt;
                            &lt;li&gt;For each instance in the list:&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;select the instance&lt;/li&gt;
                            &lt;li&gt;in the preview pane confirm the instance has an &amp;quot;IAM Role&amp;quot;
                            assigned (if a hyphen &amp;quot;-&amp;quot; is shown then your instance has no role
                            assigned).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.8" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Instead of defining permissions for individual IAM users, it's usually more convenient to create groups that relate to job functions (administrators, developers, accounting, etc.), define the relevant permissions for each group, and then assign IAM users to those groups. All the users in an IAM group inherit the permissions assigned to the group. That way, you can make changes for everyone in a group in just one place. As people move around in your company, you can simply change what IAM group their IAM user belongs to. This method is know as Role Based Access Control (RBAC). 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;Remove privilege granted directly to a user: 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Click on Users.&lt;/li&gt; 
  &lt;li&gt;For each user complete the following:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select the user.&lt;/li&gt; 
   &lt;li&gt;Click on the Permissions tab.&lt;/li&gt; 
   &lt;li&gt;Expand &amp;quot;Managed Policies&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Click &amp;quot;Detach Policy&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Expand &amp;quot;Inline Policies&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Click &amp;quot;Remove Policy&amp;quot;.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ol&gt;Create a Group and add a user: 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Select Groups and click Create New Group.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Group Name box, type the name of the group and click Next Step.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the list of policies, select the check box for each policy that you want to apply to all members of the group. Click Next Step.&lt;/li&gt; 
  &lt;li&gt;Click Create Group.&lt;/li&gt; 
  &lt;li&gt;Click the new Group and select the &amp;quot;Users&amp;quot; tab.&lt;/li&gt; 
  &lt;li&gt;Click &amp;quot;Add Users to Group&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select the users and click &amp;quot;Add Users&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.15" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.15" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain a list of IAM users by: aws iam list-users --query 'Users[*].UserName'
                            --output text&lt;/li&gt;
                            &lt;li&gt;Run the following to determine if they have policies directly attached:&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws iam list-attached-user-policies --user-name user
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws iam list-user-policies --user-name user
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.10" name="Apply setting MFA for sensitive API calls" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>To the extent that it is practical consider enforcing MFA access for sensitive API calls. For example, you can require that a user has authenticated with an MFA device in order to be allowed to terminate an Amazon EC2 instance. This ensures that such high level changes to your AWS environment are protected with an extra layer of security thus helping to prevent accidental or malicious damage. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;The following is an example of how to create a policy that enforces MFA to terminate EC2 instances: 
 &lt;br&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Select "Policies".&lt;/li&gt; 
  &lt;li&gt;Select "Create Policy".&lt;/li&gt; 
  &lt;li&gt;Select "Create your own policy".&lt;/li&gt; 
  &lt;li&gt;Provide a policy name and description.&lt;/li&gt; 
  &lt;li&gt;In the policy document add the following:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;i&gt; {&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Version": "2012-10-17",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Statement": [{&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Effect": "Allow",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Action": [&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "ec2:StopInstances",&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "ec2:TerminateInstances"&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; ],&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Resource": ["*"],&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; "Condition": {"Bool": {"aws:MultiFactorAuthPresent": "true"}}&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt; }]&lt;/i&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;i&gt;}&lt;/i&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click "Create policy".&lt;/li&gt; 
  &lt;li&gt;The policy may now be added to a group by following the outlines in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ul&gt; &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configuring MFA-Protected API Access" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_mfa_configure-api-require.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>The following checks that MFA is forced on a policy:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt;
                            &lt;li&gt;Go to IAM Service on the AWS Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Policies&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;In the filter select &amp;quot;Customer Managed Policies&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select the policy to check.&lt;/li&gt;
                            &lt;li&gt;In the policy document check for the presence of the line: &amp;quot;Condition&amp;quot;:
                            {&amp;quot;Bool&amp;quot;: {&amp;quot;aws:MultiFactorAuthPresent&amp;quot;: &amp;quot;true&amp;quot;}}&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.5" name="Avoid API keys for root account" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>You use an access key (an access key ID and secret access key) to make programmatic requests to AWS. However, do not use your AWS account (root) access key. The access key for your AWS account gives full access to all your resources for all AWS services, including your billing information. You cannot restrict the permissions associated with your AWS account access key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console as Root.&lt;/li&gt; 
  &lt;li&gt;Click on Account Name at the top left and select Security Credentials.&lt;/li&gt; 
  &lt;li&gt;On the pop up screen Click on Continue to Security Credentials.&lt;/li&gt; 
  &lt;li&gt;Click on Access Keys.&lt;/li&gt; 
  &lt;li&gt;Under the Status column if there are any Keys which are "Active".&lt;/li&gt; 
  &lt;li&gt;Click on "Make Inactive" and click "Delete".&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;Run the following command: aws iam get-credential-report --query 'Content'
                            --output text | base64 -D | egrep &amp;quot;root|access&amp;quot; | awk -F, '{print
                            $1,$9,$14}'&lt;/li&gt;
                            &lt;li&gt;For the &amp;lt;root_account&amp;gt; user ensure access_key_1_active and
                            access_key_2_active are false.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.3" name="Avoid publishing CloudTrail logs publicly" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Since cloudtrail logs capture all API calls for the AWS account they should be stored in an S3 bucket that is not accessible to the public. Applying the correct bucket policy helps ensure the confidentiality of the data. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with s3 update privileges).&lt;/li&gt; 
  &lt;li&gt;Select s3 from the services list.&lt;/li&gt; 
  &lt;li&gt;Right-click on the bucket you have used for "cloudtrail" and click "Properties".&lt;/li&gt; 
  &lt;li&gt;In the Properties pane, click the Permissions tab.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select the row that grants permission to "Everyone" or "Any Authenticated User".&lt;/li&gt; 
  &lt;li&gt;Uncheck all the permissions granted to Everyone or Any Authenticated User.&lt;/li&gt; 
  &lt;li&gt;Click Save to save the ACL.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;If the Edit bucket policy button is present, click it.&lt;/li&gt; 
  &lt;li&gt;Remove any Statement having an Effect set to Allow and a Principal set to *.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.3" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain the bucket name of the cloudtrail:&amp;nbsp;aws cloudtrail describe-trails
                            --query 'trailList[*].S3BucketName'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;AllUsers&amp;quot; is not granted access to the bucket:&amp;nbsp;aws
                            s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;Authenticated Users&amp;quot; is not granted access to the
                            bucket: aws s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated Users`]'&lt;/li&gt;
                            &lt;li&gt;Validate the bucket policy does not grant access to all:&amp;nbsp;aws s3api
                            get-bucket-policy --bucket &amp;lt;bucket_name&amp;gt;&lt;/li&gt;
                            &lt;li&gt;Check that the above command does not provide a principal of *, with EFFECT set to
                            ALLOW.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.1" name="Avoid the use of the root account unless absolutely necessary" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>The root account is the one which was used to open the AWS account with Amazon. Therefore it has full unrestricted access to all resources within the account including billing information. Reducing the use of this account and instead using personalized accounts with restricted permissions ensures the principles of least privilege and can help prevent accidental disclosure of credentials or unintended changes. 
&lt;br&gt; 
&lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt;Follow the remediation in "Create Individual Accounts". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.7" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.7" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws iam create-credential-report
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            aws iam get-credential-report --query 'Content' --output text | base64 -D | cut -d,
                            -f1,5,11,16 | grep -B1 '&amp;lt;root_account&amp;gt;'&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;From the above determine the &amp;quot;password_last_used&amp;quot; time In
                            addition to the above set up a metric filter as described elsewhere in this library to
                            determine ad-hoc use of root.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.5-2.6" name="Configure AutoScaling Group Launch Configuration for Tier to use a customer created IAM Role" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;An IAM role is similar to a user, in that it is an AWS identity with permission policies that determine what the identity can and cannot do in AWS. However, instead of being uniquely associated with one person, a role is intended to be assumable by anyone who needs it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Also, a role does not have any credentials (password or access keys) associated with it. Instead, if a user is assigned to a role, access keys are created dynamically and provided to the user.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use roles to delegate access to users, applications, or services that don't normally have access to your AWS resources. Applications must sign their API requests with AWS credentials. Therefore, if you are an application developer, you need a strategy for managing credentials for your applications that run on EC2 instances.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  IAM Roles for EC2 allow application running within an EC2 instance assume the role applied to the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  *Note: references to Web tier are also applicable to App tier. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration for the Web tier using the Web tier IAM instance profile :&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Get instance profile" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-instance-profile.html"/>
          </references>
          <standards>
            <standard ref="2.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if your Web tier autoscaling group is using a launch configuration with an IAM instance profile configured:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query "LaunchConfigurations[*].IamInstanceProfile" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check and note the IAM role name used by the Web tier instance profile:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-instance-profile --instance-profile-name &amp;lt;web_tier_instance_profile&amp;gt; --query "InstanceProfile.Roles[*].RoleName" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM1" name="Configure contact email and telephone details on AWS accounts" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure contact email and telephone details for AWS accounts are current and map to more than one individual in your organization.&lt;/p&gt;&lt;p&gt;An AWS account supports a number of contact details, and AWS will use these to contact the account owner if activity judged to be in breach of Acceptable Use Policy or indicative of likely security compromise is observed by the AWS Abuse team. Contact details should not be for a single individual, as circumstances may arise where that individual is unavailable. Email contact details should point to a mail alias which forwards email to multiple individuals within the organization; where feasible, phone contact details should point to a PABX hunt group or other call-forwarding system.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;If an AWS account is observed to be behaving in a prohibited or suspicious manner, AWS will attempt to contact the account owner by email and phone using the contact details listed. If this is unsuccessful and the account behavior needs urgent mitigation, proactive measures may be taken, including throttling of traffic between the account exhibiting suspicious behavior and the AWS API endpoints and the Internet. This will result in impaired service to and from the account in question, so it is in both the customers' and AWS' best interests that prompt contact can be established. This is best achieved by setting AWS account contact details to point to resources which have multiple individuals as recipients, such as email aliases and PABX hunt groups.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;This activity can only be performed via the AWS Console, with a user who has permission to read and write Billing information (aws-portal:*Billing ).&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&lt;/li&gt;&lt;li&gt;On the navigation bar, choose your account name, and then choose My Account.&lt;/li&gt;&lt;li&gt;On the Account Settings page, next to Account Settings, choose Edit.&lt;/li&gt;&lt;li&gt;Next to the field that you need to update, choose Edit.&lt;/li&gt;&lt;li&gt;After you have entered your changes, choose Save changes.&lt;/li&gt;&lt;li&gt;After you have made your changes, choose Done.&lt;/li&gt;&lt;li&gt;To edit your contact information, under Contact Information, choose Edit.&lt;/li&gt;&lt;li&gt;For the fields that you want to change, type your updated information, and then choose Update.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.1" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This activity can only be performed via the AWS Console, with a user who has permission to read and write Billing information (aws-portal:*Billing )&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&lt;/li&gt;&lt;li&gt;On the navigation bar, choose your account name, and then choose My Account.&lt;/li&gt;&lt;li&gt;On the Account Settings page, review and verify the current details.&lt;/li&gt;&lt;li&gt;Under Contact Information, review and verify the current details.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.480">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.11" name="Configure password expiration" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Change access keys regularly, and make sure that all IAM users in your account do as well. That way, if an access key is compromised without your knowledge, you limit how long the credentials can be used to access your resources. Credential reports can be used to determine how long access keys have been active for. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt; 
  &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt; 
  &lt;li&gt;Click on Users.&lt;/li&gt; 
  &lt;li&gt;Select the user you wish to rotate the key for.&lt;/li&gt; 
  &lt;li&gt;Under access keys click &amp;quot;Create Access Key&amp;quot; (do not touch the existing key yet).&lt;/li&gt; 
  &lt;li&gt;Click &amp;quot;Download credentials&amp;quot; or &amp;quot;Show credentials&amp;quot; so that you have a record of them.&lt;/li&gt; 
  &lt;li&gt;Update any applications with the new credentials and test (we recommend to leave a few days or a week for testing).&lt;/li&gt; 
  &lt;li&gt;Once complete complete 1-4 above and for the key which needs rotating click &amp;quot;Make Inactive | Delete&amp;quot; and click &amp;quot;Deactive&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Once you are confident you will no longer need the key (wait several more days) repeat 1-4 and select &amp;quot;Delete&amp;quot; for the inactive key.&lt;/li&gt; 
 &lt;/ol&gt; 
  &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.14" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;Check the access keys created time: aws iam get-credential-report --query
                            'Content' --output text | base64 -D | awk -F, '{print $1,$9,$10,$14,$15}'&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;For each access_key_1_active and access_key_9_active that is set to True ensure
                            the created date is within the last 90 days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Gov-1.1" name="Configure the security challenge questions within the AWS Account" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When an AWS account is initially created it is configured with a top level account known as the &amp;quot;root&amp;quot; account that has full administration access to all resources. In the event that the password or MFA device associated with this account is lost AWS support may recover it by asking you to answer the security questions. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt; 
  &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Scroll down to &amp;quot;Configure Security Challenge Questions&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Click on Edit.&lt;/li&gt; 
  &lt;li&gt;For each question:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Select an appropriate question.&lt;/li&gt; 
   &lt;li&gt;Enter an appropriate answer.&lt;/li&gt; 
   &lt;li&gt;Follow the above process for all 3 questions.&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;Click Update when complete.&lt;/li&gt; 
  &lt;li&gt;We recommend to store the questions and answers in a secure location such as a safe where they can be used in case recovery is required.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.3" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt;
                            &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Scroll down to &amp;quot;Configure Security Challenge Questions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Confirm whether questions and answers have been saved.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.7" name="Create a Cloudwatch Alarm and its action for the &quot;VPC Flow Logs&quot; metric filter" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;div&gt;
   A Cloudwatch alarm watches a single metric over a time period you specify, and performs one or more actions based on the value of the metric relative to a given threshold over a number of time periods. The action is a notification sent to an Amazon SNS topic.&amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   The Cloudwatch Alarm will trigger a notification being sent to the administrators every time the "REJECT packets" specified threshold is reached. The alarm should be created for the "VPC Flow Logs" metric, and the action should have a SNS topic configured.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a Cloudwatch alarm for the VPC Flow Logs metric, and configure an Alarm Action:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws cloudwatch put-metric-alarm --alarm-name &amp;lt;vpc_flow_log_alarm_name&amp;gt; --alarm-actions &amp;lt;sns_topic_arn&amp;gt; --metric-name &amp;lt;vpc_flow_log_metric_name&amp;gt; --namespace LogMetrics --statistic &amp;lt;desired_statistic&amp;gt; --period &amp;lt;desired_period&amp;gt; --evaluation-periods &amp;lt;desired_evaluation_periods&amp;gt; --threshold &amp;lt;desired_threshold&amp;gt; --comparison-operator &amp;lt;desired_operator&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe alarms" url="https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/describe-alarms.html"/>
            <reference name="Put metric alarm" url="https://docs.aws.amazon.com/cli/latest/reference/cloudwatch/put-metric-alarm.html"/>
          </references>
          <standards>
            <standard ref="4.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all the Cloudwatch alarms configured for the VPC Flow Logs metric, and check if an Alarm Action is configured:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch describe-alarms --query "MetricAlarms[?MetricName =='&amp;lt;vpc_flow_log_metric_name&amp;gt;'].{MetricName:MetricName,AlarmActions:AlarmActions,AlarmName:AlarmName}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.293">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.6" name="Create a log metric filter for the Cloudwatch group assigned to the &quot;VPC Flow Logs&quot;" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Description:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  This recommendation builds upon the Foundation benchmark recommendation: "Ensure VPC Flow Logging is Enabled in all Applicable Regions"&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  VPC flow logs is a feature that enables you to capture information about the IP traffic going to and from network interfaces in your VPC. Flow log data is stored using Amazon CloudWatch Logs. VPC flow logs can capture accepted traffic, rejected traffic, or all traffic.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Metric filters can be used to express how the service would extract metric observations from ingested events and transform them to data points in a CloudWatch metric. Metric filters are assigned to log groups, and all of the filters assigned to a log group are applied to their log streams.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A metric filter should be created for counting how many IP packets are rejected in the VPC flow logs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a metric filter for the Cloudwatch Log group assigned to the "VPC Flow Logs":&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs put-metric-filter --log-group-name &amp;lt;vpc_flow_log_group_name&amp;gt; --filter-name &amp;lt;vpc_flow_log_filter_name&amp;gt; --filter-pattern "{ $.errorCode =\"AccessDenied\" }" --metric-transformations metricName= &amp;lt;vpc_flow_log_metric_name&amp;gt;,metricNamespace=LogMetrics,metricValue=1 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe metric filter" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-metric-filters.html"/>
            <reference name="Filter log events" url="https://docs.aws.amazon.com/cli/latest/reference/logs/filter-log-events.html"/>
            <reference name="Put metric filter" url="https://docs.aws.amazon.com/cli/latest/reference/logs/put-metric-filter.html"/>
          </references>
          <standards>
            <standard ref="4.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface to check if the log metric filter: 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   aws logs describe-metric-filters --region &amp;lt;application_region&amp;gt; --log-group-name &amp;lt;vpc_flow_log_group_name&amp;gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.7" name="Create an IAM group for administration purposes" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;: 
&lt;div&gt; 
 &lt;br&gt; 
  An IAM group is a collection of IAM users. You can use groups to specify permissions for a collection of users, which can make those permissions easier to manage for those users. For example, you could have a group called Admins and give that group the types of permissions that administrators typically need. Any user in that group automatically has the permissions that are assigned to the group. If a new user joins your organization and should have administrator privileges, you can assign the appropriate permissions by adding the user to that group. Similarly, if a person changes jobs in your organization, instead of editing that user's permissions, you can remove him or her from the old groups and add him or her to the appropriate new groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new IAM group for administration purposes:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam create-group --group-name &amp;lt;iam_admin_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Attach the Admin policy to the administration IAM group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam attach-group-policy --policy-arn &amp;lt;admin_policy_arn&amp;gt; --group-name &amp;lt;iam_admin_group_name&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Impact&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The name of the IAM admin group name should be known prior to auditing this recommendation. For a sample admin policy arn see recommendation 2.1. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Attach group policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-group-policy.html"/>
            <reference name="Create groups" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-group.html"/>
            <reference name="List groups" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-groups.html"/>
          </references>
          <standards>
            <standard ref="2.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the IAM groups created for administration purposes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-groups --query "Groups[?GroupName == '&amp;lt;iam_admin_group_name&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-2.8" name="Create an IAM policy that allows admin privileges for all services used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  A policy is a document that formally states one or more permissions.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Managed policies are standalone policies that you can attach to multiple users, groups, and roles in your AWS account. Managed policies apply only to identities (users, groups, and roles) - not resources. You must ensure that you have an IAM managed policy created with admin permissions for all the AWS services used by the application. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create an IAM managed admin policy for all AWS services used:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws iam create-policy --policy-name &amp;lt;admin_policy_name&amp;gt; --policy-document file://policy 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;b&gt;Impact&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  The admin policy should be defined prior to auditing and remediating this recommendation. For a sample admin policy see recommendation 2.1. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/create-policy.html"/>
            <reference name="Get policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/get-policy.html"/>
            <reference name="List policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-policies.html"/>
          </references>
          <standards>
            <standard ref="2.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="2.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the IAM admin policies and note the policy ARN and DefaultVersionId:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam list-policies --query "Policies[?PolicyName == '&amp;lt;admin_policy_name&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If the policy exists, check the policy document:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws iam get-policy-version --policy-arn &amp;lt;admin_policy_arn&amp;gt; --version-id &amp;lt;admin_policy_version&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.486">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-1.20" name="Create an IAM role for managing incidents with AWS" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>WS provides a support center that can be used for incident notification and response, as well as technical support and customer services. Create an IAM Role to allow authorized users to manage incidents with AWS Support. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;b&gt;Remediation:&lt;/b&gt; 
&lt;br /&gt;Using the Amazon unified command line interface, create an IAM role for managing incidents with AWS: 
&lt;br /&gt; 
&lt;br /&gt;Create a trust relationship policy document that allows &amp;lt;iam_user&amp;gt; to manage AWS incidents, and save it locally as /tmp/TrustPolicy.json: 
&lt;br /&gt; 
&lt;br /&gt;{ 
&lt;br /&gt;&amp;quot;Version&amp;quot;: &amp;quot;2012-10-17&amp;quot;, 
&lt;br /&gt;&amp;quot;Statement&amp;quot;: [{ 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;Effect&amp;quot;: &amp;quot;Allow&amp;quot;, 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;Principal&amp;quot;: { 
&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;quot;AWS&amp;quot;: &amp;quot;&amp;lt;iam_user&amp;gt;&amp;quot; 
&lt;br /&gt;&amp;nbsp; }, 
&lt;br /&gt;&amp;nbsp; &amp;quot;Action&amp;quot;: &amp;quot;sts:AssumeRole&amp;quot; 
&lt;br /&gt;&amp;nbsp; }] 
&lt;br /&gt;} 
&lt;br /&gt; 
&lt;br /&gt;Create the IAM role using the above trust policy: 
&lt;br /&gt; 
&lt;br /&gt;aws iam create-role --role-name &amp;lt;aws_support_iam_role&amp;gt; --assume-role-policy-document file:///tmp/TrustPolicy.json 
&lt;br /&gt; 
&lt;br /&gt;Attach 'AWSSupportAccess' managed policy to the created IAM role: 
&lt;br /&gt; 
&lt;br /&gt;aws iam attach-role-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; --role-name &amp;lt;aws_support_iam_role&amp;gt; 
&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: list entities for policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-entities-for-policy.html"/>
            <reference name="Amazon docs: managed policies and inline policies" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_managed-vs-inline.html"/>
            <reference name="Attach role policy" url="https://docs.aws.amazon.com/cli/latest/reference/iam/attach-role-policy.html"/>
            <reference name="List policies" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-policies.html"/>
          </references>
          <standards>
            <standard ref="1.17" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.17" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface: 
            &lt;br /&gt; 
            &lt;div&gt; 
             &lt;ul&gt; 
              &lt;li&gt;List IAM policies, filter for the 'AWSSupportAccess' managed policy, and note the &amp;quot;Arn&amp;quot; element value: &lt;/li&gt; 
             &lt;/ul&gt; 
            &lt;/div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; aws iam list-policies --query &amp;quot;Policies[?PolicyName == 'AWSSupportAccess']&amp;quot; 
            &lt;br /&gt; 
            &lt;div&gt; 
             &lt;ul&gt; 
              &lt;li&gt;Check if the 'AWSSupportAccess' is attached to any IAM user, group or role: &lt;/li&gt; 
             &lt;/ul&gt; 
            &lt;/div&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; aws iam list-entities-for-policy --policy-arn &amp;lt;iam_policy_arn&amp;gt; 
            &lt;span style=" , Arial;"&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.6" name="Create a Password Policy enforcing strong passwords" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enforcing a strong password policy increases resiliency and reduces the chances of the password being compromised either through brute force attempts, keystroke logging tools or stolen credentials amongst others.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to AWS Console (ensure you have permissions to update IAM).&lt;/li&gt;&lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;&lt;li&gt;Click on Account Settings.&lt;/li&gt;&lt;li&gt;Set "Minimum password length" to 14 or greater.&lt;/li&gt;&lt;li&gt;Check "Require at least one uppercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one lowercase letter".&lt;/li&gt;&lt;li&gt;Check "Require at least one number".&lt;/li&gt;&lt;li&gt;Check "Require at least one non-alphanumeric character"&lt;/li&gt;&lt;li&gt;Check "Enable password expiration" and set the period to at least 90 days.&lt;/li&gt;&lt;li&gt;Check "Prevent password reuse" and set the number to at least 10.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.8" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.9" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="8.3.9" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Validate that mechanisms exist to ensure that created passwords are strong enough.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.9" name="Create AWS Config configuration change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is AWS Config
                        changes. AWS config tracks configuration changes within the environment and is a useful change
                        management tool. Therefore alerting on config changes ensures the continued visibility of AWS
                        configuration items.
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a metric filter that checks for AWS Config changes:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws logs put-metric-filter&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --log-group-name &amp;lt;group&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-name &amp;lt;name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric- transformations &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --filter-pattern '{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                        (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                        tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}'&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        aws cloudwatch put-metric-alarm&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --alarm-name &amp;lt;value&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --metric-name &amp;lt;metric_filter_name&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --statistic Sum&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --period 300&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --threshold 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --comparison-operator GreaterThanOrEqualToThreshold&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --evaluation-periods 1&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --alarm-actions &amp;lt;topic_arn&amp;gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource = config.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=StopConfigurationRecorder)||($.eventName=DeleteDeliveryChannel)||($.even
                            tName=PutDeliveryChannel)||($.eventName=PutConfigurationRecorder))}&amp;quot;&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-3" name="Create AWS Organizations change alerts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for AWS Organizations changes made in the master AWS Account.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring AWS Organizations changes can help you prevent any unwanted, accidental or intentional modifications that may lead to unauthorized access or other security breaches. This monitoring technique helps you to ensure that any unexpected changes performed within your AWS Organizations can be investigated and any unwanted changes can be rolled back.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for AWS Organizations changes and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;organizations_changes&amp;gt;` --metric-transformations metricName= `&amp;lt;organizations_changes&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventSource = organizations.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = "AcceptHandshake") || ($.eventName = "AttachPolicy") || ($.eventName = "CreateAccount") || ($.eventName = "CreateOrganizationalUnit") || ($.eventName = "CreatePolicy") || ($.eventName = "DeclineHandshake") || ($.eventName = "DeleteOrganization") || ($.eventName = "DeleteOrganizationalUnit") || ($.eventName = "DeletePolicy") || ($.eventName = "DetachPolicy") || ($.eventName = "DisablePolicyType") || ($.eventName = "EnablePolicyType") || ($.eventName = "InviteAccountToOrganization") || ($.eventName = "LeaveOrganization") || ($.eventName = "MoveAccount") || ($.eventName = "RemoveAccountFromOrganization") || ($.eventName = "UpdatePolicy") || ($.eventName = "UpdateOrganizationalUnit")) }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;organizations_changes&amp;gt;` --metric-name `&amp;lt;organizations_changes&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.15" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.15" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.8" name="Create billing alerts to identify unusual spend" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>By setting billing alarms you can monitor your AWS spend and be alerted if it exceeds certain thresholds thus protecting you from accruing unnecessary charges. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management console at https://console.aws.amazon.com/billing/home#/.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;On the navigation pane, choose Preferences.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select the Receive Billing Alerts check box.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Choose Save preferences.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;If necessary, change the region on the navigation bar to US East (N. Virginia). The billing metric data is stored in this region, even for resources in other regions.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;On the navigation pane, under "Metrics", choose "Billing".&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the list of billing metrics, select the check box next to Currency USD, for the metric named EstimatedCharges. Define the alarm as follows:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;If you want the alarm to trigger as soon as you go over the free tier, set "When my total AWS charges for the month exceed" to $.01. This means that you'll receive a notification as soon as you incur a charge. Otherwise, set it to the amount you want to trigger the alarm, and you will be notified when you go over that amount.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Choose the "New list" link next to the "send a notification to" box.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;When prompted, enter your email address or choose your Amazon SNS notification from the drop down.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Choose "Create Alarm".&amp;nbsp;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;In the "Confirm new email addresses" dialog box, confirm the email address or choose "I will do it later". If you don't confirm the email address now, the alarm remains in the Pending confirmation status until you do so, and does not send an alert. To view the status of your alarm, choose "Alarms" in the navigation panel.&lt;/li&gt; 
 &lt;/ol&gt; &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console and open the Billing and Cost Management
                            console at https://console.aws.amazon.com/billing/home#/.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the navigation pane, choose Preferences.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the &amp;quot;Receive Billing Alerts&amp;quot; check box is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Open the CloudWatch console at https://console.aws.amazon.com/cloudwatch/.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If necessary, change the region on the navigation bar to US East (N. Virginia).
                            The billing metric data is stored in this region, even for resources in other regions.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the navigation pane, under &amp;quot;Alarms&amp;quot;, check for one called
                            &amp;quot;Billing&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on the alert if it exists and select the checkbox in the first column.&lt;/li&gt;
                            &lt;li&gt;In the preview pane check that the &amp;quot;EstimatedCharges&amp;quot; threshold
                            is set to the correct value and that the &amp;quot;Actions&amp;quot; is send an alarm to a
                            valid email address.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.421">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.4" name="Create cloudtrail configuration changes alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is changes to
                        cloudtrail. Since cloudtrail is the actual utility logging API calls it's security is paramount
                        to ensuring that this continues. Therefore alerting on changes to cloudtrail activity can
                        prevent a malicious user switching off the logging in order to carry out untracked activities.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&amp;nbsp;&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                        &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;aws
                        logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                        ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName = DeleteTrail) ||
                        ($.eventName = StartLogging) || ($.eventName = StopLogging) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
                        cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                        &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                        list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.5" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateTrail) || ($.eventName = UpdateTrail) || ($.eventName =
                            DeleteTrail) || ($.eventName = StartLogging) || ($.eventName = StopLogging) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.4-5.5" name="Create Cloudwatch Log Group for tier" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  AWS CloudWatch Log groups define groups of log streams that share the same retention, monitoring, and access control settings. Each log stream has to belong to one log group.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a Cloudwatch log group for the Web tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs create-log-group --log-group-name &amp;lt;web_tier_log_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/create-log-group.html"/>
            <reference name="Describe log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for your Web tier Cloudwatch log group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs describe-log-groups --query "logGroups[?logGroupName =='&amp;lt;web_tier_log_group&amp;gt;']" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.421">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.6" name="Create IAM Policy change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is management IAM policy changes. IAM manages authorization and authentication controls with AWS and therefore it is vital that unauthorized changes are detected. Enabling monitoring of these changes ensures that these policies remain intact and as desired. 
&lt;div&gt; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a metric filter that checks for IAM policy changes: aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{($.eventName=DeleteGroupPolicy)||($.eventName=DeleteRolePolicy)||($.eventName=Delete UserPolicy)||($.eventName=PutGroupPolicy)||($.eventName=PutRolePolicy)||($.eventName=P utUserPolicy)||($.eventName=CreatePolicy)||($.eventName=DeletePolicy)||($.eventName=Cr eatePolicyVersion)||($.eventName=DeletePolicyVersion)||($.eventName=AttachRolePolicy)| |($.eventName=DetachRolePolicy)||($.eventName=AttachUserPolicy)||($.eventName=DetachUs erPolicy)||($.eventName=AttachGroupPolicy)||($.eventName=DetachGroupPolicy)}'&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above:aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt; 
 &lt;/ol&gt; &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.4" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{($.eventSource
                            = kms.amazonaws.com) &amp;amp;&amp;amp;
                            (($.eventName=DisableKey)||($.eventName=ScheduleKeyDeletion))} }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.3" name="Create Individual Accounts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>By creating individual IAM users for people accessing your account, you can give each IAM user a unique set of security credentials. You can also grant different permissions to each IAM user. If necessary, you can change or revoke an IAM user's permissions any time. (If you give out your AWS root credentials, it can be difficult to revoke them, and it is impossible to restrict their permissions.). 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
  &lt;li&gt;Select IAM.&lt;/li&gt; 
  &lt;li&gt;Select Users.&lt;/li&gt; 
  &lt;li&gt;Click "Create New Users".&lt;/li&gt; 
  &lt;li&gt;Complete the required information.&lt;/li&gt; 
  &lt;li&gt;Uncheck "Create access key for users".&lt;/li&gt; 
  &lt;li&gt;Click "Create".&lt;/li&gt; 
  &lt;li&gt;Select the user.&lt;/li&gt; 
  &lt;li&gt;Click "Manage Password".&lt;/li&gt; 
  &lt;li&gt;Select the required options and click "apply".&lt;/li&gt; 
  &lt;li&gt;Select "Show User Security Credentials".&lt;/li&gt; 
  &lt;li&gt;Securely supply the password to your user.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each user has got the corresponding account with the corresponding
                            credentials.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.3" name="Create management console login alerts when MFA is not used" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is login on the
                        console without MFA. Since logging on at the console should be restricted to only those users
                        with an active MFA this alert will highlight those with password only access. This helps to
                        capture weaker login procedures (password only) as they occur.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for console login without MFA: aws logs
                        put-metric-filter --log-group-name &amp;lt;cloudwatch-logs-group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{
                        $.userIdentity.sessionContext.attributes.mfaAuthenticated != &amp;quot;true&amp;quot; }'&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.2" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;
                            aws logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ $.userIdentity.sessionContext.attributes.mfaAuthenticated != &amp;quot;true&amp;quot;
                            }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.5" name="Create management console login failure alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is management
                        console login failures. The management console is the AWS account GUI where administration
                        activity is performed and is therefore a primary target for brute force attempts. To identify
                        these attempts alerts for login failures should be enabled as this can highlight suspicious
                        activity.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for console login failures: aws logs
                        put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = ConsoleLogin)
                        &amp;amp;&amp;amp; ($.errorMessage = &amp;quot;Failed authentication&amp;quot;) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = ConsoleLogin) &amp;amp;&amp;amp; ($.errorMessage = \&amp;quot;Failed
                            authentication\&amp;quot;) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-2" name="Create network gateways change alerts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. Network gateways are required to send/receive traffic to a destination outside of a VPC. It is recommended that a metric filter and alarm be established for changes to network gateways.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring changes to network gateways will help ensure that all ingress/egress traffic traverses the VPC border via a controlled path.&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for network gateways changes and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;network_gw_changes_metric&amp;gt;` --metric-transformations metricName= `&amp;lt;network_gw_changes_metric&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) ||($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;network_gw_changes_alarm&amp;gt;` --metric-name `&amp;lt;network_gw_changes_metric&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.12" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.12" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.2" name="Create root account usage alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is usage of the
                        root account. This account should not be used on a day to day basis due to its full unrestricted
                        privilege therefore usage should be by exception. Monitoring this usage should capture any
                        suspicious activity used on the account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                        &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                        &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws logs
                        describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                        &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                        $.userIdentity.type = \&amp;quot;Root\&amp;quot; &amp;amp;&amp;amp; $.userIdentity.invokedBy NOT
                        EXISTS &amp;amp;&amp;amp; $.eventType != \&amp;quot;AwsServiceEvent\&amp;quot; } &amp;quot;&lt;/li&gt;
                        &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4: aws
                        cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                        &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                        list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            $.userIdentity.type = \&amp;quot;Root\&amp;quot; &amp;amp;&amp;amp; $.userIdentity.invokedBy
                            NOT EXISTS &amp;amp;&amp;amp; $.eventType != \&amp;quot;AwsServiceEvent\&amp;quot; } &amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.419">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.8" name="Create s3 bucket policy change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is S3 bucket policy changes. S3 bucket policies are a resource based policy that provide authorizations on S3 buckets. 
&lt;div&gt; 
 &lt;br /&gt; 
  Making sure that their integrity remains intact is vital in ensuring the data within the S3 bucket remains secure and authorizations intact. Therefore s3 bucket policy changes should be alerted upon 
 &lt;br /&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a metric filter that checks for S3 Bucket policy changes:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;value&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventSource = s3.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = PutBucketAcl) || ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName = PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName = DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName = DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an SNS topic for notifications:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns create-topic --name &amp;lt;topic_name&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an alarm based on the above steps:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;div&gt;
  &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.8" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.8" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;:&amp;nbsp;
                            aws logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventSource = s3.amazonaws.com) &amp;amp;&amp;amp; (($.eventName = PutBucketAcl) ||
                            ($.eventName = PutBucketPolicy) || ($.eventName = PutBucketCors) || ($.eventName =
                            PutBucketLifecycle) || ($.eventName = PutBucketReplication) || ($.eventName =
                            DeleteBucketPolicy) || ($.eventName = DeleteBucketCors) || ($.eventName =
                            DeleteBucketLifecycle) || ($.eventName = DeleteBucketReplication)) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.420">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.10" name="Create security group change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried to identify suspicious API activity. One such activity that should be monitored is security group changes. Security groups are analogous to firewalls and therefore protect inbound and outbound access to &amp;amp; from AWS resources such as ec2 instances and RDS databases (amongst other things. Therefore alerting on changes to security groups helps ensure that the resources protected by them are not exposed.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a metric filter that checks for security group changes: aws logs put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName = AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName = DeleteSecurityGroup)}'&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt; 
  &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.10" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventName = AuthorizeSecurityGroupIngress) || ($.eventName =
                            AuthorizeSecurityGroupEgress) || ($.eventName = RevokeSecurityGroupIngress) || ($.eventName
                            = RevokeSecurityGroupEgress) || ($.eventName = CreateSecurityGroup) || ($.eventName =
                            DeleteSecurityGroup)}&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Monitoring-1" name="Create unauthorized API calls alerts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Real-time monitoring of API calls can be achieved by directing CloudTrail Logs to CloudWatch Logs and establishing corresponding metric filters and alarms. It is recommended that a metric filter and alarm be established for unauthorized API calls.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Monitoring unauthorized API calls will help reveal application errors and may reduce time to detect malicious activity.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;This alert may be triggered by normal read-only console activities that attempt to opportunistically gather optional information, but gracefully fail if they don't have permissions.&lt;/p&gt;&lt;p&gt;If an excessive number of alerts are being generated then an organization may wish to consider adding read access to the limited IAM user permissions simply to quiet the alerts.&lt;/p&gt;&lt;p&gt;In some cases doing this may allow the users to actually view some areas of the system - any additional access given should be reviewed for alignment with the original limited IAM user intent.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Perform the following to setup the metric filter, alarm, SNS topic, and subscription:&lt;/p&gt;&lt;p&gt;1. Create a metric filter based on filter pattern provided which checks for unauthorized API calls and the &amp;lt;cloudtrail_log_group_name&amp;gt; taken from audit step 1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs put-metric-filter --log-group-name &amp;lt;cloudtrail_log_group_name&amp;gt; --filter-name `&amp;lt;unauthorized_api_calls_metric&amp;gt;` --metric-transformations metricName= `&amp;lt;unauthorized_api_calls_metric&amp;gt;` ,metricNamespace='CISBenchmark',metricValue=1 --filter-pattern '{ ($.errorCode = "*UnauthorizedOperation") || ($.errorCode = "AccessDenied*") || ($.sourceIPAddress!="delivery.logs.amazonaws.com") || ($.eventName!="HeadBucket") }'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: You can choose your own metricName and metricNamespace strings. Using the same metricNamespace for all Foundations Benchmark metrics will group them together.&lt;/p&gt;&lt;p&gt;2. Create an SNS topic that the alarm will notify&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns create-topic --name &amp;lt;sns_topic_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the same topic for all monitoring alarms.&lt;/p&gt;&lt;p&gt;3. Create an SNS subscription to the topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns subscribe --topic-arn &amp;lt;sns_topic_arn&amp;gt; --protocol &amp;lt;protocol_for_sns&amp;gt; --notification-endpoint &amp;lt;sns_subscription_endpoints&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: you can execute this command once and then re-use the SNS subscription for all monitoring alarms.&lt;/p&gt;&lt;p&gt;4. Create an alarm that is associated with the CloudWatch Logs Metric Filter created in step 1 and an SNS topic created in step 2&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch put-metric-alarm --alarm-name `&amp;lt;unauthorized_api_calls_alarm&amp;gt;` --metric-name `&amp;lt;unauthorized_api_calls_metric&amp;gt;` --statistic Sum --period 300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1 --namespace 'CISBenchmark' --alarm-actions &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="4.1" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to ensure that there is at least one active multi-region CloudTrail with prescribed metric filters and alarms configured:&lt;/p&gt;&lt;p&gt;1. Identify the log group name configured for use with active multi-region CloudTrail:&lt;/p&gt;&lt;p&gt;List all CloudTrails:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail describe-trails&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify Multi region Cloudtrails: Trails with "IsMultiRegionTrail" set to true&lt;/p&gt;&lt;p&gt;From value associated with CloudWatchLogsLogGroupArn note &amp;lt;cloudtrail_log_group_name&amp;gt;&lt;/p&gt;&lt;p&gt;Example: for CloudWatchLogsLogGroupArn that looks like arn:aws:logs:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:log-group:NewGroup:*, &amp;lt;cloudtrail_log_group_name&amp;gt; would be NewGroup&lt;/p&gt;&lt;p&gt;Ensure Identified Multi region CloudTrail is active&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-trail-status --name &amp;lt;Name of a Multi-region CloudTrail&amp;gt; ensure IsLogging is set to TRUE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure identified Multi-region Cloudtrail captures all Management Events&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudtrail get-event-selectors --trail-name &amp;lt;trailname shown in describe-trails&amp;gt; Ensure there is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Get a list of all associated metric filters for this &amp;lt;cloudtrail_log_group_name&amp;gt;:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws logs describe-metric-filters --log-group-name "&amp;lt;cloudtrail_log_group_name&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the output from the above command contains the following:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"Filter = {(($.errorCode="*UnauthorizedOperation") || ($.errorCode="AccessDenied*")) &amp;amp;&amp;amp; (($.sourceIPAddress!="delivery.logs.amazonaws.com") &amp;amp;&amp;amp; ($.eventName!="HeadBucket"))}"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;4. Note the &amp;lt;unauthorized_api_calls_metric&amp;gt; value associated with the filterPattern found in step 3.&lt;/p&gt;&lt;p&gt;5. Get a list of CloudWatch alarms and filter on the &amp;lt;unauthorized_api_calls_metric&amp;gt; captured in step 4.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName== `&amp;lt;unauthorized_api_calls_metric&amp;gt;`]'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;6. Note the AlarmActions value - this will provide the SNS topic ARN value.&lt;/p&gt;&lt;p&gt;7. Ensure there is at least one active subscriber to the SNS topic&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws sns list-subscriptions-by-topic --topic-arn &amp;lt;sns_topic_arn&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;at least one subscription should have "SubscriptionArn" with valid aws ARN.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Example of valid "SubscriptionArn": "arn:aws:sns:&amp;lt;region&amp;gt;:&amp;lt;aws_account_number&amp;gt;:&amp;lt;SnsTopicName&amp;gt;:&amp;lt;SubscriptionID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.415">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.13" name="Create VPC gateway change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC gateway
                        changes. VPC gateways are used as a means of sending traffic outside of a VPC (ie to the
                        internet) and are vital in ensuring traffic flows to the correct destination. Therefore alerting
                        on changes to VPC gateways ensuring traffic continues to flow as expected via the correct
                        gateway.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for VPC gateway changes: aws logs put-metric-filter
                        --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric-
                        transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateCustomerGateway)
                        || ($.eventName = DeleteCustomerGateway) || ($.eventName = AttachInternetGateway) ||
                        ($.eventName = CreateInternetGateway) || ($.eventName = DeleteInternetGateway) || ($.eventName =
                        DetachInternetGateway) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.14" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.14" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following: &amp;quot;filterPattern&amp;quot;: &amp;quot;{
                            ($.eventName = CreateCustomerGateway) || ($.eventName = DeleteCustomerGateway) ||
                            ($.eventName = AttachInternetGateway) || ($.eventName = CreateInternetGateway) ||
                            ($.eventName = DeleteInternetGateway) || ($.eventName = DetachInternetGateway) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.419">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.11" name="Create VPC NACL change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC NACL
                        changes. Network Access Control Lists (NACLS) control inbound and outbound access to &amp;amp;
                        from AWS subnets and work like packet filters to protect the network. Therefore alerting on
                        changes to NACLS helps ensure that the subnets protected by them are not exposed.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for NACL changes: aws logs put-metric-filter
                        --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt; --metric-
                        transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateNetworkAcl) ||
                        ($.eventName = CreateNetworkAclEntry) || ($.eventName = DeleteNetworkAcl) || ($.eventName =
                        DeleteNetworkAclEntry) || ($.eventName = ReplaceNetworkAclEntry) || ($.eventName =
                        ReplaceNetworkAclAssociation) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.11" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateNetworkAcl) || ($.eventName = CreateNetworkAclEntry) ||
                            ($.eventName = DeleteNetworkAcl) || ($.eventName = DeleteNetworkAclEntry) || ($.eventName =
                            ReplaceNetworkAclEntry) || ($.eventName = ReplaceNetworkAclAssociation) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:
                            aws cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Monitoring-4.12" name="Create VPC route table change alerts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>When cloudtrail is configured and sending alerts to cloudwatch logs these logs can be queried
                        to identify suspicious API activity. One such activity that should be monitored is VPC route
                        table changes. VPC route tables provide a means of routing network traffic between subnets and
                        via gateways and ensures traffic flows via the correct path. Therefore alerting on changes to
                        route tables ensuring traffic continues to flow as expected.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Create a metric filter that checks for VPC route table changes: aws logs
                        put-metric-filter --log-group-name &amp;lt;group&amp;gt; --filter-name &amp;lt;name&amp;gt;
                        --metric- transformations &amp;lt;value&amp;gt; --filter-pattern '{ ($.eventName = CreateRoute)
                        || ($.eventName = CreateRouteTable) || ($.eventName = ReplaceRoute) || ($.eventName =
                        ReplaceRouteTableAssociation) || ($.eventName = DeleteRouteTable) || ($.eventName = DeleteRoute)
                        || ($.eventName = DisassociateRouteTable) }'&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an SNS topic for notifications: aws sns create-topic --name &amp;lt;topic_name&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an SNS subscription to the topic created above: aws sns subscribe --topic-arn
                        &amp;lt;topic_arn&amp;gt; --protocol email --notification-endpoint &amp;lt;email@example.com&amp;gt;&lt;/li&gt;
                        &lt;li&gt;Create an alarm based on the above steps: aws cloudwatch put-metric-alarm --alarm-name
                        &amp;lt;value&amp;gt; --metric-name &amp;lt;metric_filter_name&amp;gt; --statistic Sum --period
                        300 --threshold 1 --comparison-operator GreaterThanOrEqualToThreshold --evaluation-periods 1
                        --namespace &amp;lt;CloudTrailMetrics&amp;gt; --alarm-actions &amp;lt;topic_arn&amp;gt;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.13" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.13" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the log group name: aws cloudtrail describe-trails&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the &amp;lt;group&amp;gt; value associated with CloudWatchLogsLogGroupArn.&lt;/li&gt;
                            &lt;li&gt;Get a list of all associated metric filters for this &amp;lt;group&amp;gt;: aws
                            logs describe-metric-filters --log-group-name &amp;quot;&amp;lt;group&amp;gt;&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the output contains the following:&amp;nbsp;&amp;quot;filterPattern&amp;quot;:
                            &amp;quot;{ ($.eventName = CreateRoute) || ($.eventName = CreateRouteTable) || ($.eventName
                            = ReplaceRoute) || ($.eventName = ReplaceRouteTableAssociation) || ($.eventName =
                            DeleteRouteTable) || ($.eventName = DeleteRoute) || ($.eventName = DisassociateRouteTable) }&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Note the metricName value associated with the filterPattern found in step 4.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Get a list of CloudWatch alarms and filter on the metricName captured in step 4:&amp;nbsp;aws
                            cloudwatch describe-alarms --query 'MetricAlarms[?MetricName==`&amp;lt;metricName&amp;gt;`]'&lt;/li&gt;
                            &lt;li&gt;Note the AlarmActions value - this will provide the SNS topic ARN value.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure there is at least one subscriber to the SNS topic: aws sns
                            list-subscriptions-by-topic --topic-arn &amp;lt;topic_arm&amp;gt;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.6-5.7" name="Define a retention period for Cloudwatch log group in tier" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Retention period should be used to specify how long log events are kept in CloudWatch Logs. Expired log events get deleted automatically. Just like metric filters, retention settings are also assigned to log groups, and the retention assigned to a log group is applied to their log streams.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Put a retention policy for your Web tier Cloudwatch log group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws logs put-retention-policy --log-group-name &amp;lt;web_tier_log_group&amp;gt; --retention-indays &amp;lt;log_retention_period&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;b&gt;Impact&lt;/b&gt;:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  If the retention period is not configured then logs will be retained indefinitely with increasing cost. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe log groups" url="https://docs.aws.amazon.com/cli/latest/reference/logs/describe-log-groups.html"/>
            <reference name="Put retention policy" url="https://docs.aws.amazon.com/cli/latest/reference/logs/put-retention-policy.html"/>
          </references>
          <standards>
            <standard ref="5.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Search for your Web tier Cloudwatch log group, and check for the presence of "retentionInDays" element:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws logs describe-log-groups --query "logGroups[?logGroupName == 
   &lt;/div&gt; 
   &lt;div&gt;
     '&amp;lt;web_tier_log_group&amp;gt;']" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.421">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM2" name="Disable credentials unused after 45 days" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 45 or greater days be deactivated or removed.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Disabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned account to be used.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to manage Unused Password (IAM user console access)&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console:&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click on Security Credentials&lt;/li&gt;&lt;li&gt;Select user whose Console last sign-in is greater than 45 days&lt;/li&gt;&lt;li&gt;Click Security credentials&lt;/li&gt;&lt;li&gt;In section Sign-in credentials, Console password click Manage&lt;/li&gt;&lt;li&gt;Under Console Access select Disable 10.Click Apply&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Perform the following to deactivate Access Keys:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console:&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click on Security Credentials&lt;/li&gt;&lt;li&gt;Select any access keys that are over 45 days old and that have been used and&lt;ol&gt;&lt;li&gt;Click on Make Inactive&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select any access keys that are over 45 days old and that have not been used and&lt;ol&gt;&lt;li&gt;Click the X to Delete&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.12" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.12" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.2.6" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to determine if unused credentials exist:&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click on Users&lt;/li&gt;&lt;li&gt;Click the Settings (gear) icon.&lt;/li&gt;&lt;li&gt;Select Console last sign-in, Access key last used, and Access Key Id&lt;/li&gt;&lt;li&gt;Click on Close&lt;/li&gt;&lt;li&gt;Check and ensure that Console last sign-in is less than 45 days ago.&lt;ol&gt;&lt;li&gt;Note - Never means the user has never logged in.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Check and ensure that Access key age is less than 45 days and that Access key last used does not say None&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;If the user hasn't signed into the Console in the last 45 days or Access keys are over 45 days old refer to the remediation.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Download Credential Report:&lt;/p&gt;&lt;p&gt;1. Run the following commands:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam generate-credential-report&amp;nbsp;&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,5,6,9,10,11,14,15,16&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure unused credentials do not exist:&lt;/p&gt;&lt;p&gt;2. For each user having password_enabled set to TRUE , ensure password_last_used_date is less than 45 days ago.&lt;/p&gt;&lt;p&gt;When password_enabled is set to TRUE and password_last_used is set to No_Information , ensure password_last_changed is less than 45 days ago.&lt;/p&gt;&lt;p&gt;3. For each user having an access_key_1_active or access_key_2_active to TRUE , ensure the corresponding access_key_n_last_used_date is less than 45 days ago.&lt;/p&gt;&lt;p&gt;When a user having an access_key_x_active (where x is 1 or 2) to TRUE and corresponding access_key_x_last_used_date is set to N/A', ensure access_key_x_last_rotated` is less than 45 days ago.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-1.21" name="Do not setup access keys during initial user setup for all IAM users that have a console password" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>AWS console defaults the checkbox for creating access keys to enabled. This results in many access keys being generated unnecessarily. In addition to unnecessary credentials, it also generates unnecessary management work in auditing and rotating these keys. 
&lt;br /&gt; 
&lt;br /&gt; 
&lt;b&gt;Remediation: &lt;/b&gt; 
&lt;br /&gt;Perform the following to delete access keys that do not pass the audit. 
&lt;br /&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;ol&gt; 
 &lt;li&gt;Login to the AWS Management Console.Click Services.&lt;/li&gt; 
 &lt;li&gt;Click IAM&lt;/li&gt; 
 &lt;li&gt;Click on Users.Click on Security Credentials.&lt;/li&gt; 
 &lt;li&gt;As an Administrator.&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click on Delete for keys that were created at the same time as the user profile but have not been used.&lt;br /&gt;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; As an IAM User&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Click on Delete for keys that were created at the same time as the user profile but have not been used.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Via CLI:&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;aws iam delete-access-key&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ol&gt; 
&lt;span style="font-weight: bold;"&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.11" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.11" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform the following to determine if access keys are rotated as prescribed: 
            &lt;br /&gt; 
            &lt;ol&gt; 
             &lt;li&gt;Login to the AWS Management Console&lt;/li&gt; 
             &lt;li&gt;Click Services&lt;/li&gt; 
             &lt;li&gt;Click IAM&lt;/li&gt; 
             &lt;li&gt;Click on a User&lt;/li&gt; 
             &lt;li&gt;Compare the user creation date to the key 1 creation date.&lt;/li&gt; 
             &lt;li&gt;For any that match, the key was created during initial user setup.&lt;/li&gt; 
            &lt;/ol&gt;Keys that were created at the same time as the user profile and do not have a last used date should be deleted. 
            &lt;br /&gt; 
            &lt;br /&gt;Via the CLI: 
            &lt;br /&gt; 
            &lt;ul&gt; 
             &lt;li&gt;Run the following command (OSX/Linux/UNIX) to generate a list of all IAM users along with their access keys utilization:&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               aws iam generate-credential-report 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;br /&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               aws iam get-credential-report --query 'Content' --output text | base64 -d | cut -d, -f1,4,9,11,14,16 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;ul&gt; 
             &lt;li&gt;The output of this command will produce a table similar to the following:&amp;nbsp;&lt;/li&gt; 
            &lt;/ul&gt; 
            &lt;blockquote&gt; 
             &lt;blockquote&gt;
               user,password_enabled,access_key_1_active,access_key_1_last_used_date,access_ 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               key_2_active,access_key_2_last_used_date 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               elise,false,true,2015-04-16T15:14:00+00:00,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               brandon,true,true,N/A,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               rakesh,false,false,N/A,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               helene,false,true,2015-11-18T17:47:00+00:00,false,N/A 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               paras,true,true,2016-08-28T12:04:00+00:00,true,2016-03-04T10:11:00+00:00 
             &lt;/blockquote&gt; 
             &lt;blockquote&gt;
               anitha,true,true,2016-06-08T11:43:00+00:00,true,N/A 
             &lt;/blockquote&gt; 
            &lt;/blockquote&gt; 
            &lt;ul&gt; 
             &lt;li&gt;For any user having access_key_last_used_date set to N/A , ensure that access key is deleted&lt;/li&gt; 
            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.9" name="Enable AWS Config across all regions" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>AWS Config tracks configuration changes to resources as they occur and is therefore a good
                        source of identifying whether unintentional or malicious changes have occurred to resources with
                        the AWS account.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions).&lt;/li&gt;
                        &lt;li&gt;Select Config from the services menu.&lt;/li&gt;
                        &lt;li&gt;Define which resources you want to record in the selected region.&lt;/li&gt;
                        &lt;li&gt;Choose to include global resources (IAM resources).&lt;/li&gt;
                        &lt;li&gt;Specify an S3 bucket.&lt;/li&gt;
                        &lt;li&gt;Create an SNS Topic&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="12.10.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with Config update permissions)&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Config from the services menu&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;If presented with Setup AWS Config follow the procedure highlighted in the
                            remediation section&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;On the Resource inventory page, Click on &amp;quot;edit&amp;quot;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure 1 or both check-boxes under &amp;quot;All Resources&amp;quot; is checked.&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Include global resources related to IAM resources&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;which needs to be enabled in 1 region only.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;li&gt;Ensure the correct S3 bucket has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure the correct SNS topic has been defined.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Repeat steps 2 to 7 for each region (you'll need to change region in the top right
                            corner of the AWS management console to do this).&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.1" name="Enable Cloudtrail in all regions" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Cloudtrail records events of all API calls made within a AWS account. This enables security
                        analysis, resource change tracking, and compliance auditing. Cloudtrail should be enabled in all
                        regions, even if they are not being used, to identify unintended or accidental changes.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation&lt;/b&gt;:
                        &lt;br /&gt;Create a global trail using a previously created S3 bucket:
                        &lt;br /&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail create-trail --name &amp;lt;trail_name&amp;gt; --s3-bucket-name &amp;lt;s3-bucket-name&amp;gt;
                        --is-multi-region-trail
                        &lt;/blockquote&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.5" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.6" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.1.7" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws cloudtrail describe-trails&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;IsMultiRegionTrail&amp;quot; = TRUE&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.288">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.2" name="Enable CloudTrail log file validation" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Enabling log file validation will provide additional integrity checking of CloudTrail as it
                        creates a digest for each log file it writes to S3. These digests can then be used to determine
                        if a log has been modified since being written
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail update-trail --name &amp;lt;trail_name&amp;gt; --enable-log-file-validation
                        &lt;/blockquote&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.3.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail describe-trails&amp;nbsp;
                            &lt;/blockquote&gt;Ensure LogFileValidationEnabled = true (for each trail)
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM6" name="Enable IAM Access Analyzer for all regions" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable IAM Access analyzer for IAM policies about all resources in each region.&lt;/p&gt;&lt;p&gt;IAM Access Analyzer is a technology introduced at AWS reinvent 2019. After the Analyzer is enabled in IAM, scan results are displayed on the console showing the accessible resources. Scans show resources that other accounts and federated users can access, such as KMS keys and IAM roles. So the results allow you to determine if an unintended user is allowed, making it easier for administrators to monitor least privileges access. Access Analyzer analyzes only policies that are applied to resources in the same AWS Region.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;AWS IAM Access Analyzer helps you identify the resources in your organization and accounts, such as Amazon S3 buckets or IAM roles, that are shared with an external entity. This lets you identify unintended access to your resources and data. Access Analyzer identifies resources that are shared with external principals by using logic-based reasoning to analyze the resource-based policies in your AWS environment. IAM Access Analyzer continuously monitors all policies for S3 bucket, IAM roles, KMS(Key Management Service) keys, AWS Lambda functions, and Amazon SQS(Simple Queue Service) queues.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to enable IAM Access analyzer for IAM policies:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the IAM console at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;Choose Access analyzer.&lt;/li&gt;&lt;li&gt;Choose Create analyzer.&lt;/li&gt;&lt;li&gt;On the Create analyzer page, confirm that the Region displayed is the Region where you want to enable Access Analyzer.&lt;/li&gt;&lt;li&gt;Enter a name for the analyzer. Optional as it will generate a name for you automatically.&lt;/li&gt;&lt;li&gt;Add any tags that you want to apply to the analyzer. Optional.&lt;/li&gt;&lt;li&gt;Choose Create Analyzer.&lt;/li&gt;&lt;li&gt;Repeat these step for each active region&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws accessanalyzer create-analyzer --analyzer-name &amp;lt;NAME&amp;gt; --type &amp;lt;ACCOUNT|ORGANIZATION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Repeat this command above for each active region. Note: The IAM Access Analyzer is successfully configured only when the account you use has the necessary permissions.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.20" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.20" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the IAM console at https://console.aws.amazon.com/iam/&lt;/li&gt;&lt;li&gt;Choose Access analyzer&lt;/li&gt;&lt;li&gt;Click 'Analyzers'&lt;/li&gt;&lt;li&gt;Ensure that at least one analyzer is present&lt;/li&gt;&lt;li&gt;Ensure that the STATUS is set to Active&lt;/li&gt;&lt;li&gt;Repeat these step for each active region&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Run the following command:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws accessanalyzer list-analyzers | grep status&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure that at least one Analyzer the status is set to ACTIVE&lt;/p&gt;&lt;p&gt;3. Repeat the steps above for each active region.&lt;/p&gt;&lt;p&gt;If an Access analyzer is not listed for each region or the status is not set to active refer to the remediation procedure below.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.4" name="Enable MFA for IAM console users" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for all console login accounts is to use MFA to increase the level of security of the login process. 
 &lt;div&gt; 
  &lt;div&gt; 
   &lt;br&gt; 
   &lt;b&gt;Remediation:&lt;/b&gt; 
   &lt;br&gt; 
   &lt;ol&gt; 
    &lt;li&gt;Login to the AWS Management Console as an administrator.&lt;/li&gt; 
    &lt;li&gt;Select IAM.&lt;/li&gt; 
    &lt;li&gt;Select Users.&lt;/li&gt; 
    &lt;li&gt;For each user:&lt;/li&gt; 
    &lt;ul&gt; 
     &lt;li&gt;Select the user.&lt;/li&gt; 
     &lt;li&gt;Under "Sign-In Credentials" if "Password" is set to "Yes".&lt;/li&gt; 
     &lt;li&gt;Select "Manage MFA Device".&lt;/li&gt; 
     &lt;li&gt;Choose the type of MFA.&lt;/li&gt; 
     &lt;li&gt;Either scan the code or enter your device secret key.&lt;/li&gt; 
     &lt;li&gt;Enter the Authentication code in "Authentication Code 1" box.&lt;/li&gt; 
     &lt;li&gt;Wait for the code to change and enter the next code in "Authentication Code 2" box.&lt;/li&gt; 
     &lt;li&gt;Click Activate MFA.&lt;/li&gt; 
    &lt;/ul&gt; 
   &lt;/ol&gt;
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.10" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.10" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Generate a credential report with the command: aws iam generate-credential-report&lt;/li&gt;
                            &lt;li&gt;The following command displays a list of all IAM users along with their password
                            and MFA status: aws iam get-credential-report --output text | base64 -D | cut - d, -f1,4,8&lt;/li&gt;
                            &lt;li&gt;For any column having password_enabled set to true ensure mfa_active is also set
                            to true.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.2" name="Enable MFA for root accounts" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Root is highly privileged and therefore using a multi-factor authentication (MFA) device enhances the security of the login process. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the root account is to use a hardware based device as it has a smaller attack surface and cannot be duplicated. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Management Console as root.&lt;/li&gt; 
  &lt;li&gt;Select "Dashboard" and under "Security Status" choose "Activate MFA" on your root account.&lt;/li&gt; 
  &lt;li&gt;Select Activate MFA".&lt;/li&gt; 
  &lt;li&gt;In the wizard, choose "A hardware MFA" device and then select Next Step.&lt;/li&gt; 
  &lt;li&gt;In the Serial Number box, enter the serial number that is found on the back of the MFA device.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the Authentication Code 1 box, enter the six-digit number displayed by the MFA device.&lt;/li&gt; 
  &lt;li&gt;Wait until the device refreshes the code, and then enter the next six-digit number into the Authentication Code 2 box.&lt;/li&gt; 
  &lt;li&gt;Select "Next Step".&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;The MFA device is now associated with the AWS account.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.5" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.5" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="8.4.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Run: aws iam get-account-summary&lt;/li&gt;
                            &lt;li&gt;Ensure the AccountMFAEnabled property is 1.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.484">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.6" name="Enable S3 Bucket logging" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>S3 Bucket Access Logging generates log files that contain access records for each request made
                        to an S3 bucket. By enabling this it is possible to capture events relating to the objects
                        within that bucket thus helping to capture potential security issues or identifying threats. It
                        is recommended to enable S3 bucket logging on any S3 bucket that contains sensitive data and
                        stored the logs in a separate bucket for security analysis.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with S3 update access).&lt;/li&gt;
                        &lt;li&gt;Select S3 from the services menu.&lt;/li&gt;
                        &lt;li&gt;Under All Buckets click on the S3 bucket you wish to enable logging.&lt;/li&gt;
                        &lt;li&gt;Click on Properties in the top right of the console.&lt;/li&gt;
                        &lt;li&gt;Under Bucket:&amp;lt;bucket_name&amp;gt; click on Logging.&lt;/li&gt;
                        &lt;li&gt;Click on the &amp;quot;Enabled&amp;quot; checkbox.&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Target Bucket&amp;quot; to store the logs.&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Target Prefix&amp;quot; for the logs.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.6" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign in to the AWS Management Console (with S3 update access).&lt;/li&gt;
                            &lt;li&gt;Select S3 from the services menu.&lt;/li&gt;
                            &lt;li&gt;Under All Buckets click on the S3 bucket you wish to enable logging.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on Properties in the top right of the console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Under Bucket:&amp;lt;bucket_name&amp;gt; click on Logging.&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;Enabled&amp;quot; is checked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.7" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
                        VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
                        incidents that may be occurring across the network.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign into the management console.&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select a VPC.&lt;/li&gt;
                        &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Create Flow Log&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose a role (note this must be pre-created. Follow the link provided in the text
                        underneath &amp;quot;Role&amp;quot; for help).&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Destination Log Group&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Create flow Log&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select a VPC.&lt;/li&gt;
                            &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                            &lt;li&gt;Ensure a Log Flow exists that has Active in the Status column.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.5" name="Encrypt CloudTrail logs using KMS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>By default, the log files delivered by CloudTrail to your bucket are encrypted by Amazon
                        server-side encryption with Amazon S3-managed encryption keys (SSE-S3). To provide a security
                        layer that is directly manageable, you can instead use server-side encryption with AWS
                        KMS-managed
                        keys (SSE-KMS) for your CloudTrail log files. This provides several advantages:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;You can create and manage the CMK encryption keys yourself.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You can use a single CMK to encrypt and decrypt log files for multiple accounts across
                        all regions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You have control over who can use your key for encrypting and decrypting CloudTrail
                        log files.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;You can assign permissions for the key to the users in your organization according to
                        your requirements.&lt;/li&gt;
                        &lt;li&gt;You have enhanced security. With this feature, in order to read log files, you now
                        need to meet two conditions:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;you must have S3 read permission on the bucket, and&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;you must be granted decrypt permission by the CMK policy.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;Because S3 automatically decrypts the log files for requests from users authorized to
                        use the CMK, SSE-KMS encryption for CloudTrail log files is backward compatible with existing
                        applications that read CloudTrail log data.&amp;nbsp;
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;&amp;nbsp;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with cloudtrail update permissions).&lt;/li&gt;
                        &lt;li&gt;Select CloudTrail from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Trails&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on a Trail.&lt;/li&gt;
                        &lt;li&gt;Under the S3 section click on the edit button.&lt;/li&gt;
                        &lt;li&gt;Click Advanced.&lt;/li&gt;
                        &lt;li&gt;Set &amp;quot;Encrypt Log Files&amp;quot; to &amp;quot;Yes&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Set &amp;quot;Create a new KMS key&amp;quot; to &amp;quot;Yes&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;KMS key&amp;quot; type a name for your key.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt; 
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="3.7" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail describe-trails
                            &lt;/blockquote&gt;Check that KMS is enabled if the &amp;quot;KmsKeyId&amp;quot; property is
                            set.
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-IAM-2.9" name="Enforce employee lifecycle policies" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Regular reviews of accounts on the system should be conducted to ensure that stale accounts
                        cannot be abused either by those former employees using them or compromised by attackers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;&amp;nbsp;
                        &lt;br /&gt;At least every 90 days complete the following:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with IAM update privileges).&lt;/li&gt;
                        &lt;li&gt;Go to IAM Service on the AWS Console.&lt;/li&gt;
                        &lt;li&gt;Click on Users.&lt;/li&gt;
                        &lt;li&gt;For any user that should no longer exist:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;select the user,&lt;/li&gt;
                        &lt;li&gt;click &amp;quot;User Actions&amp;quot;,&lt;/li&gt;
                        &lt;li&gt;click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain a list of IAM users by: aws iam list-users --query 'Users[*].UserName'
                            --output text&lt;/li&gt;
                            &lt;li&gt;Ensure all users are valid users.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.485">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM4" name="Ensure IAM policies that allow full &quot;*:*&quot; administrative privileges are not attached" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;IAM policies are the means by which privileges are granted to users, groups, or roles. It is recommended and considered a standard security advice to grant least privilege -that is, granting only the permissions required to perform a task. Determine what users need to do and then craft policies for them that let the users perform only those tasks, instead of allowing full administrative privileges.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;It's more secure to start with a minimum set of permissions and grant additional permissions as necessary, rather than starting with permissions that are too lenient and then trying to tighten them later.&lt;/p&gt;&lt;p&gt;Providing full administrative privileges instead of restricting to the minimum set of permissions that the user is required to do exposes the resources to potentially unwanted actions.&lt;/p&gt;&lt;p&gt;IAM policies that have a statement with "Effect": "Allow" with "Action": "*" over "Resource": "*" should be removed.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to detach the policy that has full administrative privileges:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and open the IAM console at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the navigation pane, click Policies and then search for the policy name found in the audit step.&lt;/li&gt;&lt;li&gt;Select the policy that needs to be deleted.&lt;/li&gt;&lt;li&gt;In the policy action menu, select first Detach&lt;/li&gt;&lt;li&gt;Select all Users, Groups, Roles that have this policy attached&lt;/li&gt;&lt;li&gt;Click Detach Policy&lt;/li&gt;&lt;li&gt;In the policy action menu, select Detach&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to detach the policy that has full administrative privileges as found in the audit step:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Lists all IAM users, groups, and roles that the specified managed policy is attached to. aws iam list-entities-for-policy --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Users: aws iam detach-user-policy --user-name &amp;lt;iam_user&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Groups: aws iam detach-group-policy --group-name &amp;lt;iam_group&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;li&gt;Detach the policy from all IAM Roles: aws iam detach-role-policy --role-name &amp;lt;iam_role&amp;gt; --policy-arn &amp;lt;policy_arn&amp;gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.16" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.16" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform the following to determine what policies are created: From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Run the following to get a list of IAM policies: aws iam list-policies --only-attached --output text&lt;/li&gt;&lt;li&gt;For each policy returned, run the following command to determine if any policies is allowing full administrative privileges on the account: aws iam get-policy-version --policy-arn &amp;lt;policy_arn&amp;gt; --version-id &amp;lt;version&amp;gt;&lt;/li&gt;&lt;li&gt;In output ensure policy should not have any Statement block with "Effect": "Allow" and Action set to "*" and Resource set to "*"&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-Network-1" name="Ensure no Network ACLs allow ingress from 0.0.0.0/0 to remote server administration ports" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The Network Access Control List (NACL) function provide stateless filtering of ingress and egress network traffic to AWS resources. It is recommended that no NACL allows unrestricted ingress access to remote server administration ports, such as SSH to port 22 and RDP to port 3389.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Public access to remote server administration ports, such as 22 and 3389, increases resource attack surface and unnecessarily raises the risk of resource compromise.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home&lt;/li&gt;&lt;li&gt;In the left pane, click Network ACLs&lt;/li&gt;&lt;li&gt;For each network ACL to remediate, perform the following:&lt;ol&gt;&lt;li&gt;Select the network ACL&lt;/li&gt;&lt;li&gt;Click the Inbound Rules tab&lt;/li&gt;&lt;li&gt;Click Edit inbound rules&lt;/li&gt;&lt;li&gt;Either A) update the Source field to a range other than 0.0.0.0/0, or, B) Click Delete to remove the offending inbound rule&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="5.1" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Perform the following to determine if the account is configured as prescribed:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the AWS Management Console at https://console.aws.amazon.com/vpc/home&lt;/li&gt;&lt;li&gt;In the left pane, click Network ACLs&lt;/li&gt;&lt;li&gt;For each network ACL, perform the following:&lt;ol&gt;&lt;li&gt;Select the network ACL&lt;/li&gt;&lt;li&gt;Click the Inbound Rules tab&lt;/li&gt;&lt;li&gt;Ensure no rule exists that has a port range that includes port 22, 3389, or other remote server administration ports for your environment and has a Source of 0.0.0.0/0 and shows ALLOW&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Note: A Port value of ALL or a port range such as 0-1024 are inclusive of port 22, 3389, and other remote server administration ports&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.134">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM3" name="Ensure there is only one active access key available for any single IAM user" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API (directly or using the AWS SDK)&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Access keys are long-term credentials for an IAM user or the AWS account 'root' user. You can use access keys to sign programmatic requests to the AWS CLI or AWS API. One of the best ways to protect your account is to not allow users to have multiple access keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and navigate to IAM dashboard at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the left navigation panel, choose Users.&lt;/li&gt;&lt;li&gt;Click on the IAM user name that you want to examine.&lt;/li&gt;&lt;li&gt;On the IAM user configuration page, select Security Credentials tab.&lt;/li&gt;&lt;li&gt;In Access Keys section, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.&lt;/li&gt;&lt;li&gt;In the same Access Keys section, identify your non-operational access keys (other than the chosen one) and deactivate it by clicking the Make Inactive link.&lt;/li&gt;&lt;li&gt;If you receive the Change Key Status confirmation box, click Deactivate to switch off the selected key.&lt;/li&gt;&lt;li&gt;Repeat steps no. 3 - 7 for each IAM user in your AWS account.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Using the IAM user and access key information provided in the Audit CLI, choose one access key that is less than 90 days old. This should be the only active key used by this IAM user to access AWS resources programmatically. Test your application(s) to make sure that the chosen access key is working.&lt;/p&gt;&lt;p&gt;2. Run the update-access-key command below using the IAM user name and the non-operational access key IDs to deactivate the unnecessary key(s). Refer to the Audit section to identify the unnecessary access key ID for the selected IAM user&lt;/p&gt;&lt;p&gt;Note - the command does not return any output:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam update-access-key --access-key-id &amp;lt;access-key-id&amp;gt; --status Inactive --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. To confirm that the selected access key pair has been successfully deactivated run the list-access-keys audit command again for that IAM User:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-access-keys --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should expose the metadata for each access key associated with the IAM user. If the non-operational key pair(s) Status is set to Inactive, the key has been successfully deactivated and the IAM user access configuration adheres now to this recommendation.&lt;/p&gt;&lt;p&gt;4. Repeat steps no. 1 - 3 for each IAM user in your AWS account.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.13" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.13" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Sign in to the AWS Management Console and navigate to IAM dashboard at https://console.aws.amazon.com/iam/.&lt;/li&gt;&lt;li&gt;In the left navigation panel, choose Users.&lt;/li&gt;&lt;li&gt;Click on the IAM user name that you want to examine.&lt;/li&gt;&lt;li&gt;On the IAM user configuration page, select Security Credentials tab.&lt;/li&gt;&lt;li&gt;Under Access Keys section, in the Status column, check the current status for each access key associated with the IAM user. If the selected IAM user has more than one access key activated then the users access configuration does not adhere to security best practices and the risk of accidental exposures increases.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Repeat steps no. 3 - 5 for each IAM user in your AWS account.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Run list-users command to list all IAM users within your account:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-users --query "Users[*].UserName"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should return an array that contains all your IAM user names.&lt;/p&gt;&lt;p&gt;2. Run list-access-keys command using the IAM user name list to return the current status of each access key associated with the selected IAM user:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-access-keys --user-name &amp;lt;user-name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should expose the metadata ("Username", "AccessKeyId", "Status", "CreateDate") for each access key on that user account.&lt;/p&gt;&lt;p&gt;3. Check the Status property value for each key returned to determine each keys current state. If the Status property value for more than one IAM access key is set to Active, the user access configuration does not adhere to this recommendation, refer to the remediation below.&lt;/p&gt;&lt;p&gt;Repeat steps no. 2 and 3 for each IAM user in your AWS account.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.8" name="Export EC2 OS logs to cloudwatch logs" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>Cloudwatch logs is an AWS service that allows you to send logs from an EC2 instance to
                        cloudwatch via an agent installed locally on the machine. The logs are then stored centrally
                        within cloudwatch logs and metric alerts can be configured so that security incidents can be
                        reported to the security team. It is recommended to enable cloudwatch log monitoring on all EC2
                        servers.
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;Follow the directions provided in &amp;quot;http://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/EC2NewInstanceCWL.html&amp;quot;
                        to install and enable Cloudwatch Logs on a new EC2 instance.
                        &lt;br /&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select Cloudwatch from the services menu.&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Logs&amp;quot;.&amp;nbsp;&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click on your log group.&lt;/li&gt;
                            &lt;li&gt;Click on your log stream.&lt;/li&gt;
                            &lt;li&gt;Ensure event data is being captured as per the logs on your machine.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.292">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.8-5.9" name="Install an agent for AWS Cloudwatch Logs within AutoScaling Group for tier" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use CloudWatch Logs to monitor, store and access log files from an Amazon EC2 instance (application or system data). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  With CloudWatch Logs, you can monitor your logs, in near real-time, for specific phrases, values or patterns (metrics). For example, you could set an alarm on the number of errors that occur in your system logs or view graphs of web request latency from your application logs. Log data can be stored and accessed for as long as you need using highly durable, lowcost storage so you don't have to worry about filling up hard drives. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A Cloudwatch agent needs to run within the Guest Operating System of each EC2 instance you wish to ship logs from. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Note: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can also use any third party log management tools (like Splunk, Loggly, AlertLogic Log Manager, etc.) as long as the recommendation goal is achieved.&lt;/li&gt; 
  &lt;li&gt;The below Audit and Remediation steps need to be modified for your specific log management tool, as they are provided in the benchmark only for Amazon Cloudwatch&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a sample agent configuration file for Amazon Linux and save it as a text file (for example, awslogs.cfg) either on the AMI's filesystem, in a publicly accessible http/https location, or an Amazon S3 location (for example, s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt;):&lt;/li&gt; 
 &lt;/ul&gt; 
  [general] 
  state_file = /var/awslogs/state/agent-state 
  [/var/log/messages] 
  file = /var/log/messages 
  log_group_name = /var/log/messages 
  log_stream_name = {instance_id} 
  datetime_format = %b %d %H:%M:%S 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new Web tier Autoscaling Launch Configuration with UserData populated for installing Cloudwatch Logs agent:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create and save locally a file containing the UserData, for example /tmp/UserData.txt:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     #!/bin/bashcurl https://s3.amazonaws.com/awscloudwatch/downloads/latest/awslogs-agent-setup.py -Ochmod +x ./awslogs-agentsetup.py./awslogs-agent-setup.py -n -r us-east-1 -c s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt; 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Note: You can install the CloudWatch Logs agent by specifying the us-east-1, uswest-1, us-west-2, eu-west-1, eu-central-1, ap-southeast-1, ap-southeast-2, ap-northeast-1, or sa-east-1 regions.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; -- user-data file:///tmp/UserData.txt 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="EC2 New Instance CWL" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/DeveloperGuide/EC2NewInstanceCWL.html"/>
          </references>
          <standards>
            <standard ref="5.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if the Cloudwatch Logs agent is installed through UserData in the Web tier Autoscaling Launch Configuration:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt;--query "LaunchConfigurations[*].UserData" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Output should be similar with:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    #!/bin/bash 
  &lt;/div&gt; 
  &lt;div&gt;
    curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -Ochmod +x ./awslogs-agent-setup.py ./awslogs-agent-setup.py -n -r us-east-1 -c s3://&amp;lt;s3_bucket_name&amp;gt;/&amp;lt;cloudwatch_agent_config_file&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:56.421">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.4" name="Integrate the CloudTrail logs into CloudWatch logs" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>One way to work with cloudtrail logs is to send them to cloudwatch logs which allows you to
                        define metric filters for alerting and monitoring. This allows you to take immediate action if a
                        certain threshold has been met. Enabling this provides the opportunity to monitor for sensitive
                        account activity.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with cloudtrail update permission).&lt;/li&gt;
                        &lt;li&gt;Select Cloudtrail from the services list.&lt;/li&gt;
                        &lt;li&gt;Under All Buckets select the target bucket you want to check.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Properties&amp;quot; then &amp;quot;Trails&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on each trail where no CloudWatch Logs are defined.&lt;/li&gt;
                        &lt;li&gt;Go to the &amp;quot;CloudWatch Logs&amp;quot; section and click on &amp;quot;Configure&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Define a new or select an existing log group and click &amp;quot;Continue&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Configure the IAM Role which will deliver CloudTrail events to CloudWatch Logs.&lt;/li&gt;
                        &lt;li&gt;Create/Select an IAM Role and Policy Name.&lt;/li&gt;
                        &lt;li&gt;Click Allow.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail get-trail-status --name &amp;lt;trail_name&amp;gt;
                            &lt;/blockquote&gt;Ensure the &amp;quot;LatestcloudwatchLogdDeliveryTime&amp;quot; property
                            is set to a recent time (ie within the latest day or so).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:54.291">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.1" name="Launch EC2 instances into a VPC" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACLs) and routing. However, the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is recommended to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure. &amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select EC2 from the services menu.&lt;/li&gt;&lt;li&gt;Select "Launch Instance".&lt;/li&gt;&lt;li&gt;Complete the wizard until step 3. At this point, ensure a VPC ID is selected for the "Network" option, choose an appropriate "Subnet" and "Auto-assign Public IP" option.&lt;/li&gt;&lt;li&gt;Complete the wizard to launch the instance.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;NB: If you want to migrate an already running instance you will need to convert the image into an AMI and then launch a new instance using the AMI and placing in a VPC, as per the steps above&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select EC2 from the services menu.&lt;/li&gt;&lt;li&gt;Select "Instances" from the left hand menu.&lt;/li&gt;&lt;li&gt;For each instance in the list:&lt;ul&gt;&lt;li&gt;select the instance&lt;/li&gt;&lt;li&gt;in the preview pane confirm the instance has a "VPC ID". If a hyphen "-" is shown then your instance is running in EC2-Classic mode.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.135">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM7" name="Manage IAM users centrally via identity federation or AWS Organizations for multi-account environments" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In multi-account environments, IAM user centralization facilitates greater user control. User access beyond the initial account is then provided via role assumption. Centralization of users can be accomplished through federation with an external identity provider or through the use of AWS Organizations.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Centralizing IAM user management to a single identity store reduces complexity and thus the likelihood of access management errors.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;The remediation procedure will vary based on the individual organization's implementation of identity federation and/or AWS Organizations with the acceptance criteria that no non-service IAM users, and non-root accounts, are present outside the account providing centralized IAM user management.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.21" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For multi-account AWS environments with an external identity provider...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine the master account for identity federation or IAM user management&lt;/li&gt;&lt;li&gt;Login to that account through the AWS Management Console&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Identity providers&lt;/li&gt;&lt;li&gt;Verify the configuration&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Then..., determine all accounts that should not have local users present. For each account...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine all accounts that should not have local users present&lt;/li&gt;&lt;li&gt;Log into the AWS Management Console&lt;/li&gt;&lt;li&gt;Switch role into each identified account&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Users&lt;/li&gt;&lt;li&gt;Confirm that no IAM users representing individuals are present&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For multi-account AWS environments implementing AWS Organizations without an external identity provider...&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Determine all accounts that should not have local users present&lt;/li&gt;&lt;li&gt;Log into the AWS Management Console&lt;/li&gt;&lt;li&gt;Switch role into each identified account&lt;/li&gt;&lt;li&gt;Click Services&lt;/li&gt;&lt;li&gt;Click IAM&lt;/li&gt;&lt;li&gt;Click Users&lt;/li&gt;&lt;li&gt;Confirm that no IAM users representing individuals are present&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.8" name="Reduce routing tables entries for VPC peering" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
  Being highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
  Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Via CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your routing policy (which grants more than desired ""least access""), delete the non compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;non_compliant_destination_CIDR&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configurations with Specific Routes" url="https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.135">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Gov-1.2" name="Register a Security contact for your AWS account" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>AWS will occasionally send security advisories and alerts to the account holder. By default this will go to the email address that the account is registered under. However if a security contact is specified these alerts will be sent here instead. Therefore this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br /&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br /&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt; 
  &lt;li&gt;Click account name on the top right of the management console.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Scroll down to &amp;quot;Alternate Contacts&amp;quot; section.&lt;/li&gt; 
  &lt;li&gt;Click on Edit.&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Security&amp;quot; section complete the requested contact information.&lt;/li&gt; 
  &lt;li&gt;Click update when complete.&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="1.2" supportedStandardRef="CIS AWS Standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Account as root.&lt;/li&gt;
                            &lt;li&gt;Click account name on the top right of the management console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;My Account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Scroll down to &amp;quot;Alternate Contacts&amp;quot; section.&lt;/li&gt;
                            &lt;li&gt;Confirm whether a contact has been set for &amp;quot;Security&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.483">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-IAM5" name="Remove expired SSL/TLS certificates stored in AWS IAM" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To enable HTTPS connections to your website or application in AWS, you need an SSL/TLS server certificate. You can use ACM or IAM to store and deploy server certificates. Use IAM as a certificate manager only when you must support HTTPS connections in a region that is not supported by ACM. IAM securely encrypts your private keys and stores the encrypted version in IAM SSL certificate storage. IAM supports deploying server certificates in all regions, but you must obtain your certificate from an external provider for use with AWS. You cannot upload an ACM certificate to IAM. Additionally, you cannot manage your certificates from the IAM Console.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Removing expired SSL/TLS certificates eliminates the risk that an invalid certificate will be deployed accidentally to a resource such as AWS Elastic Load Balancer (ELB), which can damage the credibility of the application/website behind the ELB. As a best practice, it is recommended to delete expired certificates.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Removing expired certificates via AWS Management Console is not currently supported. To delete SSL/TLS certificates stored in IAM via the AWS API use the Command Line Interface (CLI).&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To delete Expired Certificate run following command by replacing &amp;lt;CERTIFICATE_NAME&amp;gt; with the name of the certificate to delete:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam delete-server-certificate --server-certificate-name &amp;lt;CERTIFICATE_NAME&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;When the preceding command is successful, it does not return any output.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.19" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="1.19" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Console:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Getting the certificates expiration information via AWS Management Console is not currently supported. To request information about the SSL/TLS certificates stored in IAM via the AWS API use the Command Line Interface (CLI).&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Command Line:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Run list-server-certificates command to list all the IAM-stored server certificates:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;aws iam list-server-certificates&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The command output should return an array that contains all the SSL/TLS certificates currently stored in IAM and their metadata (name, ID, expiration date, etc):&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;{ "ServerCertificateMetadataList": [ { "ServerCertificateId": "EHDGFRW7EJFYTE88D", "ServerCertificateName": "MyServerCertificate", "Expiration": "2018-07-10T23:59:59Z", "Path": "/", "Arn": "arn:aws:iam::012345678910:server-certificate/MySSLCertificate", "UploadDate": "2018-06-10T11:56:08Z" } ] }&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Verify the ServerCertificateName and Expiration parameter value (expiration date) for each SSL/TLS certificate returned by the list-server-certificates command and determine if there are any expired server certificates currently stored in AWS IAM. If so, use the AWS API to remove them. If this command returns:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;{ { "ServerCertificateMetadataList": [] }&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This means that there are no expired certificates, It DOES NOT mean that no certificates exist.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:55.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.2" name="Separate VPC into zones by function" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. It is recommended that resources be placed into VPC's according to use case (ie dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such resources accordingly ensures that a resource of a higher security level is not exposed by the security settings of a lower labeled VPC.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify the resources that exist within an incorrect VPC.&lt;/li&gt; 
  &lt;li&gt;Migrate or move them to the correct VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
   &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
                            test/dev/prod).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.135">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.1" name="Use AWS VPC for networking" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="TEMPLATE" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However the use of VPC is not compulsory and resources such as EC2 can be created outside of VPC (usingEC2 Classic). It is the recommendation to make all resources a member of a VPC if possible to benefit from the increased security controls they offer and reduce undue network exposure.&amp;nbsp; 
 &lt;div&gt;
   &amp;nbsp; 
  &lt;br&gt; 
  &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt;Move or migrate the resources to a VPC. 
 &lt;/div&gt; 
  
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource you own that is able to exist in a VPC does so.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:40:57.135">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails are not properly protected, an attacker could gain access to the system,
                                modify the status of the resources or exfiltrate sensitive data without being noticed.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.5" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AWS RESOURCE LOGGING" name="AWS Resource Logging" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-RESOURCES-AWS" issueId="" issueLink="" name="Attackers make undetected and unaudited changes in the resources" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                If audit trails in the resources are not enabled or not protected, attackers could gain
                                access to the system and modify or delete data from the resources and the changes are
                                not detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Logging-3.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="16"/>
                    <countermeasure ref="aws-tier-4.6" mitigation="16"/>
                    <countermeasure ref="aws-tier-4.7" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Logging-3.9">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Logging-3.6" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Logging-3.8" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Logging-3.9" mitigation="16"/>
                <countermeasure ref="aws-tier-4.6" mitigation="16"/>
                <countermeasure ref="aws-tier-4.7" mitigation="16"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOST-ACCESS-ROOT" issueId="" issueLink="" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers could gain unauthorized access to the administrator account due to the lack of
                                the account and its security mechanisms, like modifying credentials and adding/removing
                                user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.5" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-ACCESS-ROOT-01">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Gov-1.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Gov-1.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Gov-1.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Gov-1.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.3" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-IAM-2.5" mitigation="16"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOST-ACCESS-USER" issueId="" issueLink="" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to a lack of configuration of the account, such as an incorrect configuration of the security question to reset the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.2">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM5" mitigation="10"/>
                    <countermeasure ref="AWS-IAM6" mitigation="10"/>
                    <countermeasure ref="AWS-IAM7" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.6">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM2" mitigation="10"/>
                    <countermeasure ref="AWS-IAM3" mitigation="10"/>
                    <countermeasure ref="AWS-IAM4" mitigation="10"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.9">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.9" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AWS-IAM1" mitigation="10"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-IAM1" mitigation="10"/>
                <countermeasure ref="AWS-IAM2" mitigation="10"/>
                <countermeasure ref="AWS-IAM3" mitigation="10"/>
                <countermeasure ref="AWS-IAM4" mitigation="10"/>
                <countermeasure ref="AWS-IAM5" mitigation="10"/>
                <countermeasure ref="AWS-IAM6" mitigation="10"/>
                <countermeasure ref="AWS-IAM7" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.4" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.6" mitigation="10"/>
                <countermeasure ref="Hydras-AWS-IAM-2.9" mitigation="10"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.11" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-1.21">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-1.21" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="12"/>
                    <countermeasure ref="Hydras-AWS-IAM-1.20" mitigation="8"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="8"/>
                    <countermeasure ref="Hydras-AWS-IAM-2.8" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.1-2.2" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.3-2.4" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.5-2.6" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.7" mitigation="8"/>
                    <countermeasure ref="aws-tier-2.8" mitigation="8"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IAM-2.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-IAM-2.10" mitigation="8"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-EC2-6.3" mitigation="12"/>
                <countermeasure ref="Hydras-AWS-IAM-1.20" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-1.21" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.10" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.11" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.7" mitigation="8"/>
                <countermeasure ref="Hydras-AWS-IAM-2.8" mitigation="8"/>
                <countermeasure ref="aws-tier-2.1-2.2" mitigation="8"/>
                <countermeasure ref="aws-tier-2.3-2.4" mitigation="8"/>
                <countermeasure ref="aws-tier-2.5-2.6" mitigation="8"/>
                <countermeasure ref="aws-tier-2.7" mitigation="8"/>
                <countermeasure ref="aws-tier-2.8" mitigation="8"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="CLOUDWATCH METRIC ALERTS" name="Cloudwatch Metric Alerts" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK-AWS" issueId="" issueLink="" name="Sensitive data is compromised through undetected network access" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers gain undetected access to the network systems and the changes of the attackers
                                could not be audited or detected.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.12">
                  <countermeasures>
                    <countermeasure ref="AWS-Monitoring-1" mitigation="16"/>
                    <countermeasure ref="AWS-Monitoring-2" mitigation="16"/>
                    <countermeasure ref="AWS-Monitoring-3" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.11" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.12" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.13" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-Monitoring-1" mitigation="16"/>
                <countermeasure ref="AWS-Monitoring-2" mitigation="16"/>
                <countermeasure ref="AWS-Monitoring-3" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.11" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.12" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.13" mitigation="16"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain undetected access to the security system configurations" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers gain undetected access to the security configurations and changes made by the attackers are undetected and unaudited.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.10">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.10" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.6" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.8" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Monitoring-4.10" mitigation="34"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.6" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.8" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED_ACCESS_SYSTEMS_AWS" issueId="" issueLink="" name="Attackers access to the systems without being detected" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;div&gt;
                                Attackers gain access to the systems and they are not detected and the changes of the
                                attackers could not be detected and audited.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Monitoring-4.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.2" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.3" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.4">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.4" mitigation="11"/>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="11"/>
                    <countermeasure ref="aws-tier-4.8" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Monitoring-4.5">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Monitoring-4.5" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="cloudwatch-misconfig">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.4-5.5" mitigation="11"/>
                    <countermeasure ref="aws-tier-5.6-5.7" mitigation="11"/>
                    <countermeasure ref="aws-tier-5.8-5.9" mitigation="11"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-Monitoring-4.2" mitigation="12"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.3" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.4" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.5" mitigation="11"/>
                <countermeasure ref="Hydras-AWS-Monitoring-4.9" mitigation="11"/>
                <countermeasure ref="aws-tier-4.8" mitigation="11"/>
                <countermeasure ref="aws-tier-5.4-5.5" mitigation="11"/>
                <countermeasure ref="aws-tier-5.6-5.7" mitigation="11"/>
                <countermeasure ref="aws-tier-5.8-5.9" mitigation="11"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="VIRTUAL PRIVATE CLOUD (VPC) NETWORK" name="Virtual Private Cloud (VPC) Network" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="TEMPLATE" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="AWS-Network-1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-EC2-6.1" mitigation="16"/>
                    <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                    <countermeasure ref="aws-tier-5.12" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-Network-1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-EC2-6.1" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.1" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                <countermeasure ref="aws-tier-5.12" mitigation="16"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e6e38fd0-9bf2-4e2c-896f-d21a209922c5" diagramComponentId="14271e11-54ad-4f68-ac7a-08167e10e47b" ref="56f16625-662b-42ea-814c-28d79181452b" name="AWS CloudTrail" desc="" library="Hydras-AWS-Foundation" parentComponentRef="7593ee1f-6a32-4907-a5f7-b7ef2c02801c" componentDefinitionRef="cloudtrail" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.014">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.1" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently, the data cannot be easily recovered or they cannot be recovered at all.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-Logging-3.3" name="Avoid publishing CloudTrail logs publicly" issueId="" issueLink="" platform="" cost="1" risk="16" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Since cloudtrail logs capture all API calls for the AWS account they should be stored in an S3 bucket that is not accessible to the public. Applying the correct bucket policy helps ensure the confidentiality of the data. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Sign in to the AWS Management Console (with s3 update privileges).&lt;/li&gt; 
  &lt;li&gt;Select s3 from the services list.&lt;/li&gt; 
  &lt;li&gt;Right-click on the bucket you have used for "cloudtrail" and click "Properties".&lt;/li&gt; 
  &lt;li&gt;In the Properties pane, click the Permissions tab.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Select the row that grants permission to "Everyone" or "Any Authenticated User".&lt;/li&gt; 
  &lt;li&gt;Uncheck all the permissions granted to Everyone or Any Authenticated User.&lt;/li&gt; 
  &lt;li&gt;Click Save to save the ACL.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;If the Edit bucket policy button is present, click it.&lt;/li&gt; 
  &lt;li&gt;Remove any Statement having an Effect set to Allow and a Principal set to *.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Obtain the bucket name of the cloudtrail:&amp;nbsp;aws cloudtrail describe-trails
                            --query 'trailList[*].S3BucketName'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;AllUsers&amp;quot; is not granted access to the bucket:&amp;nbsp;aws
                            s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/AllUsers`]'&lt;/li&gt;
                            &lt;li&gt;Ensure &amp;quot;Authenticated Users&amp;quot; is not granted access to the
                            bucket: aws s3api get-bucket-acl --bucket &amp;lt;bucket_name&amp;gt; --query
                            'Grants[?Grantee.URI==`http://acs.amazonaws.com/groups/global/Authenticated Users`]'&lt;/li&gt;
                            &lt;li&gt;Validate the bucket policy does not grant access to all:&amp;nbsp;aws s3api
                            get-bucket-policy --bucket &amp;lt;bucket_name&amp;gt;&lt;/li&gt;
                            &lt;li&gt;Check that the above command does not provide a principal of *, with EFFECT set to
                            ALLOW.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL4" name="Configure IAM Access Analyzer to generate IAM policies based on access activity found" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;To generate a policy in the AWS Management Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the IAM Console, and in the navigation pane choose Roles.&lt;/li&gt;&lt;li&gt;Choose a role to analyze.&lt;/li&gt;&lt;li&gt;Under Generate policy based on CloudTrail events, choose Generate policy.&lt;/li&gt;&lt;li&gt;In the Generate policy page, you select the time window for which IAM Access Analyzer will review the CloudTrail logs to create the policy.&lt;/li&gt;&lt;li&gt;If you are using this feature for the first time: for Select trail, you select the trail you want IAM Access Analyzer to review, select Create and use a new service role, then choose Generate policy. If you have existing service roles, you select Use an existing service role, select a role from the available options, and choose Generate policy.&lt;/li&gt;&lt;li&gt;After the policy is ready, you see a notification on the role page. To review the permissions, choose View generated policy.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;(Optional) To customize the policy&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;For some services, on the Generated policy page, you can review a summary of the services and associated actions in the generated policy.&lt;/li&gt;&lt;li&gt;You can also look at all services used and select the permissions that your application requires.&lt;/li&gt;&lt;li&gt;Next, you review the policy and specify resource-level permissions by replacing placeholders with the resource ARN your application uses. Resource placeholders make it easier for you to specify fine-grained permissions that restrict access to specific resources. This helps you follow security best practices and enables you to specify the exact resources to which you want to grant access, thereby restricting access to just a sub-set of the resources.&lt;/li&gt;&lt;li&gt;On the Customize generated policy page, after you are done customizing the policy, choose Next to review the policy.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;To create and attach the policy&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;On the Review and create as a customer managed policy page, update the policy name according to your company's best practices, and review the permission summary. Optionally, you can add a description to define the intent of policy.&lt;/li&gt;&lt;li&gt;Choose Create and attach, to attach the policy to the application role.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Using IAM Access Analyzer" url="https://aws.amazon.com/blogs/security/iam-access-analyzer-makes-it-easier-to-implement-least-privilege-permissions-by-generating-iam-policies-based-on-access-activity/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;To generate and view policies programmatically&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;You can use the following IAM Access Analyzer APIs to request and retrieve policies:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;start-policy-generation: Generates policy for an IAM user or role. Call this API first to start policy generation. Specify the time period for which IAM Access Analyzer should review your CloudTrail logs.&lt;/li&gt;&lt;li&gt;get-generated-policy: Call this API to retrieve and view the generated policy.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For more information, see Generate policies based on access activity in the AWS IAM User Guide.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.11" name="Configure S3 bucket versioning for sensitive data" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. 
&lt;br&gt; 
&lt;br&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. 
&lt;br&gt; 
&lt;br&gt;To add an extra layer of security to data stored within S3 it is possible to enable object versioning. Object versioning enables the recovery of objects from accidental overwrite or accidental deletion. If an object is deleted, instead of being removed, S3 write a delete marker which becomes the current version that means previous versions can always be recovered. It is recommended that versioning be enabled for buckets storing sensitive data. 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration Status=Enabled 
 &lt;/div&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get bucket versioning" url="https://docs.aws.amazon.com/cli/latest/reference/s3api/get-bucket-versioning.html"/>
            <reference name="List buckets" url="https://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html"/>
            <reference name="Put bucket versioning" url="https://docs.aws.amazon.com/cli/latest/reference/s3api/put-bucket-versioning.html"/>
            <reference name="S3 Versioning" url="https://docs.aws.amazon.com/AmazonS3/latest/dev/Versioning.html"/>
          </references>
          <standards>
            <standard ref="3.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws s3api get-bucket-versioning --bucket my-bucket&amp;nbsp;
                            &lt;/blockquote&gt;If you don't see &amp;quot;Status&amp;quot;: &amp;quot;Enabled&amp;quot;
                            then your bucket has no versioning enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.908">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL1" name="Control access to Amazon CloudTrail resources" issueId="" issueLink="" platform="" cost="0" risk="16" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to Amazon CloudTrail resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; With IAM identity-based policies, you can specify allowed or denied actions and resources as well as the conditions under which actions are allowed or denied. CloudTrail supports specific actions and resources. There are no CloudTrail service-specific condition keys that can be used in the Condition element of policy statements.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following shows an example of a permissions policy.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Effect": "Allow", "Action": [ "cloudtrail:StartLogging", "cloudtrail:StopLogging", "cloudtrail:GetTrail", "cloudtrail:GetTrailStatus", "cloudtrail:GetEventSelectors" ], "Resource": [ "arn:aws:cloudtrail:us-east-2:123456789012:trail/My-First-Trail" ] } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Limit access to the AWSCloudTrail_FullAccess policy&lt;/p&gt; 
&lt;p&gt;Users with the AWSCloudTrail_FullAccess policy have the ability to disable or reconfigure the most sensitive and important auditing functions in their AWS accounts. This policy is not intended to be shared or applied broadly to users and roles in your AWS account. Limit application of this policy to as few individuals as possible, those you expect to act as AWS account administrators.&lt;/p&gt; 
&lt;p&gt;For further information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS CloudTrail Identity-Based Policy Examples" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/security_iam_id-based-policy-examples.html"/>
            <reference name="Identity and Access Management for AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/security-iam.html"/>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
          </references>
          <standards>
            <standard ref="3.6" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.6" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.906">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.2" name="Enable CloudTrail log file validation" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Enabling log file validation will provide additional integrity checking of CloudTrail as it
                        creates a digest for each log file it writes to S3. These digests can then be used to determine
                        if a log has been modified since being written
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;br /&gt;&lt;/b&gt;
                        &lt;blockquote&gt;
                        aws cloudtrail update-trail --name &amp;lt;trail_name&amp;gt; --enable-log-file-validation
                        &lt;/blockquote&gt;
                        &lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="10.3.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail describe-trails&amp;nbsp;
                            &lt;/blockquote&gt;Ensure LogFileValidationEnabled = true (for each trail)
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL3" name="Enable Logging Insights Events for CloudTrail" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Logging Insights Events for CloudTrail&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; AWS CloudTrail Insights helps AWS users identify and respond to unusual activity associated with write API calls by continuously analyzing CloudTrail management events.&lt;br&gt; CloudTrail Insights continuously monitors CloudTrail write management events, and uses mathematical models to determine the normal levels of API and service event activity for an account. CloudTrail Insights identifies behavior that is outside normal patterns, generates Insights events, and delivers those events to a /CloudTrail-Insight folder in the chosen destination S3 bucket for your trail. You can also access and view Insights events in the AWS Management Console for CloudTrail. For more information about how to access and view Insights events in the console and by using the AWS CLI, see Viewing CloudTrail Insights Events in this guide.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Logging Insights events with the AWS Management Console&lt;br&gt; Enable CloudTrail Insights events on an existing trail. By default, Insights events are not enabled.&lt;/p&gt; 
&lt;p&gt;In the left navigation pane of the CloudTrail console, open the Trails page, and choose a trail name.&lt;/p&gt; 
&lt;p&gt;In Insights events choose Edit.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Additional charges apply for logging Insights events. For CloudTrail pricing, see AWS CloudTrail Pricing.&lt;/p&gt; 
&lt;p&gt;In Event type, select Insights events. You must be logging Write management events to log Insights events.&lt;/p&gt; 
&lt;p&gt;Choose Update trail to save your changes.&lt;/p&gt; 
&lt;p&gt;It can take up to 36 hours for CloudTrail to deliver the first Insights events, if unusual activity is detected.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Logging Insights Events for Trails" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/logging-insights-events-with-cloudtrail.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To view whether your trail is logging Insights events, run the get-insight-selectors command.&lt;/p&gt;

	&lt;p&gt;aws cloudtrail get-insight-selectors -trail-name TrailName&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.4" name="Integrate the CloudTrail logs into CloudWatch logs" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>One way to work with cloudtrail logs is to send them to cloudwatch logs which allows you to
                        define metric filters for alerting and monitoring. This allows you to take immediate action if a
                        certain threshold has been met. Enabling this provides the opportunity to monitor for sensitive
                        account activity.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign in to the AWS Management Console (with cloudtrail update permission).&lt;/li&gt;
                        &lt;li&gt;Select Cloudtrail from the services list.&lt;/li&gt;
                        &lt;li&gt;Under All Buckets select the target bucket you want to check.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Properties&amp;quot; then &amp;quot;Trails&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on each trail where no CloudWatch Logs are defined.&lt;/li&gt;
                        &lt;li&gt;Go to the &amp;quot;CloudWatch Logs&amp;quot; section and click on &amp;quot;Configure&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Define a new or select an existing log group and click &amp;quot;Continue&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Configure the IAM Role which will deliver CloudTrail events to CloudWatch Logs.&lt;/li&gt;
                        &lt;li&gt;Create/Select an IAM Role and Policy Name.&lt;/li&gt;
                        &lt;li&gt;Click Allow.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;br /&gt;&amp;nbsp;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.4" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="3.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws cloudtrail get-trail-status --name &amp;lt;trail_name&amp;gt;
                            &lt;/blockquote&gt;Ensure the &amp;quot;LatestcloudwatchLogdDeliveryTime&amp;quot; property
                            is set to a recent time (ie within the latest day or so).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.908">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="16" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.908">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-S3-7.2" name="Use S3 MFA to delete sensitive information" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Amazon Simple Storage Service is storage for the Internet. It is designed to make web-scale computing easier for developers. 
&lt;br /&gt; 
&lt;br /&gt;Amazon S3 has a simple web services interface that you can use to store and retrieve any amount of data, at any time, from anywhere on the web. It gives any developer access to the same highly scalable, reliable, fast, inexpensive data storage infrastructure that Amazon uses to run its own global network of websites. 
&lt;br /&gt; 
&lt;br /&gt;To add an extra layer of security to data stored within S3 the account owner (root) can enable MFA Delete which means that buckets and the objects within them can only be deleted with the use of Multi-factor authentication device. It is recommended to enable MFA Delete on any buckets containing sensitive data to protect against accidental deletion 
&lt;br /&gt;Remediation 
&lt;br /&gt;1. aws s3api put-bucket-versioning --bucket my-bucket --versioning-configuration Status=Enabled,MFADelete=Enabled 
&lt;br /&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.1.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.1.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;blockquote&gt;
                            aws s3api get-bucket-versioning --bucket my-bucket&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            If you don't see &amp;quot;MFADelete&amp;quot;: &amp;quot;Enabled&amp;quot; then your bucket
                            has no MFA delete enabled.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.908">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL1" mitigation="34"/>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL1" mitigation="34"/>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Logging-3.3" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.1">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="50"/>
                    <countermeasure ref="aws-tier-3.11" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-S3-7.2" mitigation="50"/>
                <countermeasure ref="aws-tier-3.11" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL3" mitigation="25"/>
                    <countermeasure ref="AWS-CLOUDTRAIL4" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="25"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL3" mitigation="25"/>
                <countermeasure ref="AWS-CLOUDTRAIL4" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Logging-3.2" mitigation="25"/>
                <countermeasure ref="Hydras-AWS-Logging-3.4" mitigation="25"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b6ab1b82-3d58-48c8-95e7-1a4c3bc42fe7" diagramComponentId="87dc066a-3b4d-439c-a002-dd424abf87ff" ref="8f81cb4f-d85b-4cee-96fb-8a273d8636bd" name="AWS EC2 (Elastic Compute Cloud)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="c7533c7a-9081-435d-9260-c5602f5e07b7" componentDefinitionRef="ec2" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IND-RESOURCES" name="AWS Resources are indistinguishable" state="0" impact="100" issueId="" issueLink="">
          <desc>AWS Resources are indistinguishable and countermeasures cannot be applied confidently.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SYSTEM-VUL-DOS" name="System is vulnerable to a denial of service attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attackers can perform a successful denial of service on the system</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-04" name="Unauthorised connection attempts are allowed on Amazon resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Amazon resources is most likely to be receiving an attack. To avoid this, access to the network must be as restricted as possible using Network Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-02" name="Unauthorised connection attempts are allowed on port 22" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-03" name="Unauthorised connection attempts are allowed on port 3389" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
                        To avoid this, access to the network must be as restricted as possible, so that only the
                        necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-6.9" name="Allocate Elastic IPs for NAT Gateways" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  An Elastic IP address is a static, public IP address designed for dynamic cloud computing. 
  You can associate an Elastic IP address with any instance, network interface for your VPC or a NAT Gateway. With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Allocate Elastic IP address for the number of NAT Gateways that you want to deploy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 allocate-address --domain vpc 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Allocate address" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/allocate-address.html"/>
            <reference name="Describe addresses" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-addresses.html"/>
          </references>
          <standards>
            <standard ref="6.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if you have Elastic IP addresses allocated and unused for the number of NAT Gateways that you want to deploy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-addresses --filters Name=domain,Values=vpc --query "Addresses[?AssociationId == null]" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.10-5.11" name="Apply an AWS Managed Config Rule to encrypt volumes" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;AWS Config provides you with a detailed inventory of your AWS resources and their current configuration, and continuously records all configuration changes to these resources. You can evaluate these configurations and changes to comply with the ideal configurations defined by AWS Config Rules.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Create locally a json file (similar to the below example) with the configuration of the Config Rule, and save it as /tmp/ConfigRule.json:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;{&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Description": "Checks whether Web Tier EBS volumes that are in an attached state&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;are encrypted.",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"ConfigRuleName": "encrypted-volumes-web-tier",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Source": {&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Owner": "AWS",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"SourceIdentifier": "ENCRYPTED_VOLUMES"&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;},&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"InputParameters": "{\"kmsId\":\"&amp;lt;web_tier_kms_key&amp;gt;\"}",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Scope": {&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"TagKey": "&amp;lt;web_tier_tag&amp;gt;",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"TagValue": "&amp;lt;web_tier_tag_value&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Create a Config Rule using the configuration saved earlier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws configservice put-config-rule --config-rule file:///tmp/ConfigRule.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is Config" url="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html"/>
          </references>
          <standards>
            <standard ref="5.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Search for a Config Rule that checks if the EBS volumes tagged with Web tier tags are encrypted with the Web tier KMS key:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws configservice describe-config-rules --query "ConfigRules[?Source.SourceIdentifier== 'ENCRYPTED_VOLUMES']|[?Scope.TagKey == '&amp;lt;web_tier_tag&amp;gt;']|[?Scope.TagValue =='&amp;lt;web_tier_tag_value&amp;gt;']|[?InputParameters == '{\"kmsId\":\"&amp;lt;web_tier_kms_key&amp;gt;\"}']"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.2" name="Configure Auto-Scaling Group for multiple Availability Zones" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  These properties can be defined within the Auto-Scaling Group configuration. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon Unified CLI: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List all the subnets and the associated Availability Zones from the application VPC:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-subnets --query "Subnets[?VpcId == '&amp;lt;application_vpc&amp;gt;'].{VPC:VpcId,Subnet:SubnetId, AZ:AvailabilityZone, CIDR:CidrBlock}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update AutoScaling Group to include more than 1 Availability Zones within the same VPC:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling update-auto-scaling-group --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; --availability-zones &amp;lt;application_az&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
            <reference name="Update autoscaling group" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/update-auto-scaling-group.html"/>
          </references>
          <standards>
            <standard ref="3.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all Auto-Scaling Groups and associated Availability Zones, and ensure there is more than 1 Availability Zone assigned to the Auto-Scaling Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].{AZs:AvailabilityZones, ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.3-3.4" name="Configure Auto-Scaling Launch Configuration for Tier to use an approved AMI" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  These properties can be defined within the Auto-Scaling Group configuration.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Additional properties can be defined through the launch configuration such as:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Instance Type&lt;/li&gt; 
  &lt;li&gt;Amazon Machine Image (Pre-configured Operating System Images - allows for O.S Hardening)&lt;/li&gt; 
  &lt;li&gt;IAM Role&lt;/li&gt; 
  &lt;li&gt;Security Groups&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;Your Organization must maintain a list of approved AMIs. Use these when creating AutoScaling Groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
    *Note: references to Web tier are also applicable to App tier. 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration for the Web tier using the approved Web tier AMI from your organization's list:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;new_web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt;&amp;nbsp; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;b&gt;Impact&lt;/b&gt;: 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;div&gt; 
  &lt;div&gt;
    A list of approved AMIs must be maintained by the organization. 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the associated Launch Configuration of the Web Tier Auto-Scaling Group (note the value of "LaunchConfig" element):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names &amp;lt;web_tier_autoscaling_group_name&amp;gt; --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Ensure actively used Launch Configuration found in the previous step is using an approved AMI from your organization's list (replace &amp;lt;web_tier_launch_config&amp;gt; with the Launch Configuration previously found):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, AMI:ImageId,InstanceType:InstanceType}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.32-6.33" name="Configure Auto-Scaling Launch Configuration for Tier to use the Tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon 
  EC2 capacity up or down automatically according to conditions you define. You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs. These properties can be defined within the Auto-Scaling Group configuration. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Additional properties can be defined through the launch configuration such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Instance Type&lt;/li&gt; 
  &lt;li&gt;Amazon Machine Image (Pre-configured Operating System Images - allows for O.S Hardening)&lt;/li&gt; 
  &lt;li&gt;IAM Role&lt;/li&gt; 
  &lt;li&gt;Security Groups&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create new launch configuration for the Web tier using the Web Tier Security Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;new_web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="6.32" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.32" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.33" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.33" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the associated Launch Configuration of the Web Tier Auto-Scaling Group (note the value of "LaunchConfig" element):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names &amp;lt;web_tier_autoscaling_group_name&amp;gt; --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Ensure actively used Launch Configuration found in the previous step is using the Web Tier Security Group (replace &amp;lt;web_tier_launch_config&amp;gt; with the Launch Configuration previously found):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, SecurityGroups:SecurityGroups}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.12" name="Create a route table for the private subnets" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a route table for your private subnets, and note the RouteTableId in the output:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route-table --vpc-id &amp;lt;application_vpc&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Associate the new route table with the private subnets: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnetid &amp;lt;private_subnet1&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnetid &amp;lt;private_subnet2&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Create route table" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route-table.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List route tables attached to the private subnets, and check if they contain the default route (0.0.0.0/0) pointing to the NAT Gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;private_subnet1&amp;gt;,&amp;lt;private_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.11" name="Create a route table for the public subnets" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a route table for your public subnets, and note the RouteTableId in the output:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route-table --vpc-id &amp;lt;application_vpc&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Associate the new route table with the public subnets: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnet-id &amp;lt;public_subnet1&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnet-id &amp;lt;public_subnet2&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Create route table" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route-table.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List route tables attached to the public subnets, and check if they contain the default route (0.0.0.0/0) pointing to the Internet Gateway (IGW):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;public_subnet1&amp;gt;,&amp;lt;public_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.14-6.15" name="Create default route (0.0.0.0/0) from Routing Table associated with tier subnet" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists but it doesn't have a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 replace-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_nat_gw&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) doesn't exist: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_nat_gw&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: EC2 replace route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/replace-route.html"/>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface:: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;web_tier_subnet1&amp;gt;,&amp;lt;web_tier_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.10" name="Create NAT Gateways in at least two AZ" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use a network address translation (NAT) gateway to enable instances in a private subnet to connect to the Internet or other AWS services, but prevent the Internet from initiating a connection with those instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  To create a NAT gateway, you must specify the public subnet in which the NAT gateway will reside. You must also specify an Elastic IP address to associate with the NAT gateway when you create it. This enables instances in your private subnets to communicate with the Internet. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each NAT gateway is created in a specific Availability Zone and implemented with 
  redundancy in that zone. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a NAT Gateway in a public subnet from a different Availability Zone: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-nat-gateway --subnet-id &amp;lt;public_subnet1&amp;gt; --allocation-id &amp;lt;elastic_ip_allocation&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   and/or 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-nat-gateway --subnet-id &amp;lt;public_subnet2&amp;gt; --allocation-id &amp;lt;elastic_ip_allocation&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create NAT Gateway" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-nat-gateway.html"/>
            <reference name="Describe NAT Gateways" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-nat-gateways.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the NAT Gateways from your application VPC, and note the subnets they are deployed in:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-nat-gateways --filter Name=vpc-id,Values=&amp;lt;application_vpc&amp;gt; --query "NatGateways[*].{NatGatewayId:NatGatewayId, SubnetId:SubnetId}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Availability Zones where the above subnets are deployed:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --subnet-ids &amp;lt;public_subnet1&amp;gt; &amp;lt;public_subnet2&amp;gt; --query "Subnets[*].{SubnetId:SubnetId, AvailabilityZone:AvailabilityZone}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.6-6.7-6.8" name="Create subnets for tier" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can create a VPC that spans multiple Availability Zones. After creating a VPC, you can 
  add one or more subnets in each Availability Zone. Each subnet must reside entirely within 
  one Availability Zone and cannot span zones. Availability Zones are distinct locations that 
  are engineered to be isolated from failures in other Availability Zones. By launching 
  instances in separate Availability Zones, you can protect your applications from the failure 
  of a single location. AWS assigns a unique ID to each subnet. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  When you create a subnet, you specify the CIDR block for the subnet. The CIDR block of a 
  subnet shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC). 
  The allowed block size is between a /28 netmask and /16 netmask. If you create more than 
  one subnet in a VPC, the CIDR blocks of the subnets must not overlap. 
  Some AWS regions have more than 2 availability zones and it is recommended to use more 
  than 2 where possible. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App and Data tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create subnets for Web tier, and note the subnet id: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-subnet --vpc-id &amp;lt;application_vpc&amp;gt; --cidr-block &amp;lt;desired_cidr&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Tag the above subnets with the Web tier tags: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-tags --resources &amp;lt;web_tier_subnet1&amp;gt; &amp;lt;web_tier_subnet2&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create subnet" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-subnet.html"/>
            <reference name="Amazon docs: create tags" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-tags.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.24" name="Create the Data tier Security Group and ensure it allows inbound connections from App tier Security Group for explicit ports" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you 
  can assign the instance to up to five security groups. Security groups act at the instance 
  level, not the subnet level. Therefore, each instance in a subnet in your VPC could be 
  assigned to a different set of security groups. If you don't specify a particular group at 
  launch time, the instance is automatically assigned to the default security group for the 
  VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a 
  separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The port for these inbound rules would depend on the Database engine used and the 
  configured port. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The default values are: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; MySQL - TCP 3306&lt;/li&gt; 
  &lt;li&gt;MSSQL - TCP 1433&lt;/li&gt; 
  &lt;li&gt;Oracle SQL - TCP 1521&lt;/li&gt; 
  &lt;li&gt;PostgreSQL - TCP 5432&lt;/li&gt; 
  &lt;li&gt;MariaDB - TCP 3306&lt;/li&gt; 
  &lt;li&gt;Amazon Aurora DB - TCP 3306&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;First remove all the ingress rules for the security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-id &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[0].IpPermissions" &amp;gt; /tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; --ippermissions file:///tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the App tier security group as the source of the connections:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 authorize-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; -- protocol tcp --port &amp;lt;specific_port&amp;gt; --source-group &amp;lt;app_tier_security_group&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.24" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.24" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Retrieve the Data tier security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-instances --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --query "DBInstances[*].VpcSecurityGroups" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that allows connections only from App tier security group on specific ports:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.31" name="Don't use the default VPC" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A default VPC is ready for you to use - you can immediately start launching instances into your default VPC without having to perform any additional configuration steps. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  When we create a default VPC, AWS does the following to set it up: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a default subnet in each Availability Zone.&lt;/li&gt; 
  &lt;li&gt;Create an Internet gateway and connect it to your default VPC.&lt;/li&gt; 
  &lt;li&gt;Create a main route table for your default VPC with a rule that sends all traffic destined for the Internet to the Internet gateway.&lt;/li&gt; 
  &lt;li&gt;Create a default security group and associate it with your default VPC.&lt;/li&gt; 
  &lt;li&gt;Create a default network access control list (ACL) and associate it with your default VPC.&lt;/li&gt; 
  &lt;li&gt;Associate the default DHCP options set for your AWS account with your default VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
  Label this Default VPC "Do Not Use". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new VPC with the desired CIDR and migrate your application: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-vpc --cidr-block &amp;lt;desired_cidr&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Impact&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The Default VPC can be deleted but only AWS Support can restore it. Don't delete it - just 
  set a label to remind others not to use it. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create VPC" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-vpc.html"/>
            <reference name="Default VPC" url="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html"/>
            <reference name="Deleted default VPC" url="https://aws.amazon.com/premiumsupport/knowledge-center/deleted-default-vpc/"/>
            <reference name="Describe VPCs" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpcs.html"/>
          </references>
          <standards>
            <standard ref="6.31" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the attributes of the VPC's in your account and note the value of the "IsDefault" attribute for the VPC where the application is deployed:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-vpcs --query "Vpcs[*].{VpcId:VpcId, IsDefault:IsDefault, Tags:Tags}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" name="Ensure that the EC2 instances are managed by the systems manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS Systems Manager is an AWS service that you can use to view and control your AWS infrastructure. To help you to maintain security and compliance, Systems Manager scans your managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances. Additional configuration is needed in Systems Manager for patch deployment to managed EC2 instances.&lt;/p&gt;&lt;p&gt;If you use EC2 instances managed by Systems Manager to collect inventory for your cardholder data environment (CDE), make sure that the instances are managed by Systems Manager. Using Systems Manager can help to maintain an inventory of system components that are in scope for PCI DSS.&amp;nbsp;&lt;/p&gt;&lt;p&gt;For systems that are in scope for PCI DSS, before you install vendor patches in a production environment, you should test and validate them. After you deploy patches, validate security settings and controls to ensure that deployed patches have not affected the security of the CDE. If you use EC2 instances managed by Systems Manager to patch managed instances in your CDE, ensure that the instances are managed by Systems Manager. Systems Manager deploys system patches, which helps to protect system components and software from known vulnerabilities.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;You can use the Systems Manager quick setup to set up Systems Manager to manage your EC2 instances.&lt;/p&gt;&lt;p&gt;To determine whether your instances can support Systems Manager associations, see Systems Manager prerequisites in the &lt;i&gt;AWS Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To ensure EC2 instances are managed by Systems Manager&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Quick setup&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;On the configuration screen, keep the default options.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Set up Systems Manager&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="6.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.2" name="Maintain a patch policy and patch EC2 systems regularly" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Patching instances ensures that packages within the Operating System (OS) are updated to the
                        latest version and/or have security fixes applied. It is recommended to patch EC2 instances
                        every 90 days (or immediately if security patches become available) to avoid undue exposure
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;For linux instances ensure your OS is updated as per:
                        http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-software.html&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;For Windows instances ensure your OS is updated as per:
                        http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/windows-ami-version-history.html#update-windows-instance&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Ensure you have a documented patching policy.&lt;/li&gt;
                            &lt;li&gt;Ensure your systems have been patched at least every 90 days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.16" name="Remove default route (0.0.0.0/0) from Routing Table associated with Data tier subnet" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists and it has a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidrblock 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Delete route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the subnets associated with the Data tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-subnets --filters Name=tag:&amp;lt;data_tier_tag&amp;gt;,Values=&amp;lt;data_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as gateway:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;data_tier_subnet1&amp;gt;,&amp;lt;data_tier_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.27-6.28-6.29" name="Remove Elastic / Public IP addresses from EC2 instances within Tier" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  All subnets have an attribute that determines whether instances launched into that subnet receive a public IP address. The public IP address is assigned to the default network interface (eth0). By default, instances launched into a default subnet are assigned a public IP address. A public IP address is mapped to the primary private IP address through network address translation (NAT). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  An Elastic IP address is a static, public IP address designed for dynamic cloud computing. You can associate an Elastic IP address with any instance or network interface for your VPC. With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App and Data tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If in the above output the "IpOwnerId" is "amazon" the public Ip is not an Elastic IP and it cannot be manually disassociated from the instance after launch:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Make sure that the Web tier subnet doesn't assign public Ip's at launch (run the command for all Web tier subnets)&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     aws ec2 modify-subnet-attribute --subnet-id &amp;lt;web_tier_subnet1&amp;gt; --no-map-publicip-on-launch 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an AMI from the instance and launch a replacement instance in the same subnet&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;If in the above output the "IpOwnerId" is an AWS account number, this is an Elastic IP and it can be disassociated:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 disassociate-address --public-ip &amp;lt;elastic_ip_address&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe instances" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html"/>
            <reference name="Disassociate address" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/disassociate-address.html"/>
            <reference name="Modify subnet attribute" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-subnet-attribute.html"/>
            <reference name="VPC IP Addressing" url="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-ip-addressing.html"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="6.27" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.27" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.28" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.28" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.29" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.29" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the instance-id's, tags and public IP's of the EC2 instances from the application VPC that have a public IP associated, and check if there are any instances with Web tier tags listed:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-instances --filters "Name=vpc-id,Values=&amp;lt;application_vpc&amp;gt;" --query "Reservations[*].Instances[?PublicIpAddress != null].{InstanceId:InstanceId, PublicIpAddresses:NetworkInterfaces[*].Association, SubnetId:SubnetId, Tags:Tags}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.25" name="Remove inbound rules for CIDR of 0 (Global Allow) for Data tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance to up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Remove the ingress rules for CIDR 0.0.0.0/0:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; --protocol tcp/udp --port &amp;lt;specific_port&amp;gt; --cidr 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.25" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.25" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Retrieve the Data tier security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-instances --db-instance-identifier &amp;lt;your_db_instance&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure it has no inbound rules for CIDR of 0.0.0.0/0:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.20-6.23" name="Remove inbound rules for CIDR of 0 (Global Allow) for tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you 
  can assign the instance to up to five security groups. Security groups act at the instance 
  level, not the subnet level. Therefore, each instance in a subnet in your VPC could be 
  assigned to a different set of security groups. If you don't specify a particular group at 
  launch time, the instance is automatically assigned to the default security group for the 
  VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a 
  separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Remove the ingress rules for CIDR 0.0.0.0/0 (use the "WebTierSecurityGroup" element from Audit procedure):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; --protocol tcp/udp --port &amp;lt;specific_port&amp;gt; --cidr 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.20" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.20" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.23" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.23" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the ingress rules for the Web tier security group, and make sure it has no inbound rules for CIDR of 0.0.0.0/0:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-security-groups --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, WebTierSecurityGroup:GroupId}" --output table 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.6" name="Restrict all traffic with the default security group" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit all traffic
                        (ingress/egress) on the default security group in order to force the use of least privilege via
                        custom created security groups.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify AWS resources that exist within the default security group.&lt;/li&gt;
                        &lt;li&gt;Create a set of least privilege security groups for those resources.&lt;/li&gt;
                        &lt;li&gt;Place the resources in those security groups.&lt;/li&gt;
                        &lt;li&gt;Remove the resources noted in 1 from the default security group.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the default security group.&lt;/li&gt;
                            &lt;li&gt;Click the Inbound Rules tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exist.&lt;/li&gt;
                            &lt;li&gt;Click the Outbound Rules tab.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure no rules exist.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.7-1.8" name="Set Customer-owned AMIs in tier to be private" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon Machine Images (AMI) are an exact duplicate of the instance they were created from and will allow anyone with access to create a complete replica of the original instance. The original instance may contain intellectual property, proprietary applications, and configuration information that can be used to exploit or compromise any running instance in the web tier.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For each AMI that is public remove group ALL from the launch permissions:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 modify-image-attribute --image-id &amp;lt;public_image_id&amp;gt; --launch-permission "{\"Remove\":[{\"Group\":\"all\"}]}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Default Value&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt;
   The prescribed value is the default value. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe images" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html"/>
            <reference name="Modify image attribute" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-image-attribute.html"/>
            <reference name="Sharing AMIs" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-intro.html"/>
          </references>
          <standards>
            <standard ref="1.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface: (Note that you should replace&amp;nbsp;&amp;lt;tier_tag&amp;gt;:&amp;lt;tier_tag_value&amp;gt;&amp;nbsp;with your own tag and value for the tier)&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note the image id's, AMI name, and check if Public element is True or False:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-images --owners self --filters 
  &lt;/div&gt; 
  &lt;div&gt;
    Name=tag:&amp;lt;tier_tag&amp;gt;,Values=&amp;lt;tier_tag_value&amp;gt; --query 'Images[*].{Name:Name, 
  &lt;/div&gt; 
  &lt;div&gt;
    ImageId:ImageId, Public:Public}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="49" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-API-GW9" name="Use AWS Shield for DDoS protection" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use AWS Shield for protection against most common DDoS attacks, and access to tools and best practices to build a DDoS resilient architecture. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Shield is a managed Distributed Denial of Service (DDoS) protection service that safeguards applications running on AWS. AWS Shield provides always-on detection and automatic inline mitigations that minimize application downtime and latency, so there is no need to engage AWS Support to benefit from DDoS protection. There are two tiers of AWS Shield - Standard and Advanced. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All AWS customers benefit from the automatic protections of AWS Shield Standard, at no additional charge. AWS Shield Standard defends against most common, frequently occurring network and transport layer DDoS attacks that target your web site or applications. When you use AWS Shield Standard with Amazon CloudFront and Amazon Route 53, you receive comprehensive availability protection against all known infrastructure (Layer 3 and 4) attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For higher levels of protection against attacks targeting your applications running on Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), Amazon CloudFront, AWS Global Accelerator and Amazon Route 53 resources, you can subscribe to AWS Shield Advanced. In addition to the network and transport layer protections that come with Standard, AWS Shield Advanced provides additional detection and mitigation against large and sophisticated DDoS attacks, near real-time visibility into attacks, and integration with AWS WAF, a web application firewall. AWS Shield Advanced also gives you 24x7 access to the AWS DDoS Response Team (DRT) and protection against DDoS related spikes in your Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), Amazon CloudFront, AWS Global Accelerator and Amazon Route 53 charges. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Shield Advanced is available globally on all Amazon CloudFront, AWS Global Accelerator, and Amazon Route 53 edge locations. You can protect your web applications hosted anywhere in the world by deploying Amazon CloudFront in front of your application. Your origin servers can be Amazon S3, Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), or a custom server outside of AWS. You can also enable AWS Shield Advanced directly on an Elastic IP or Elastic Load Balancing (ELB) in the following AWS Regions - Northern Virginia, Ohio, Oregon, Northern California, Montreal, Sao Paulo, Ireland, Frankfurt, London, Paris, Stockholm, Singapore, Tokyo, Sydney, Seoul, and Mumbai. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable AWS Shield. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Shield Managed DDoS protection" url="https://aws.amazon.com/shield/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;How can I test AWS Shield?&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Acceptable Use Policy describes permitted and prohibited behavior on AWS, and it includes descriptions of prohibited security violations and network abuse. However, because penetration testing and other simulated events are frequently indistinguishable from these activities, AWS has established a policy for customers to request permission to conduct penetration tests and vulnerability scans to or originating from the AWS environment. Visit AWS Penetration testing page to request permissions (see link in References). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.874">
              <output/>
            </source>
            <references>
              <reference name="AWS Shield FAQs" url="https://aws.amazon.com/shield/faqs/"/>
              <reference name="Penetration Testing - Test the AWS environment against defined security standards" url="https://aws.amazon.com/security/penetration-testing/"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SRA-8" name="Use AWS Traffic Mirroring to copy network traffic from an elastic network interface of EC2 instances" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;You can use Traffic Mirroring to copy network traffic from an elastic network interface of EC2 instances. You can then send the traffic to out-of-band security and monitoring appliances for content inspection, threat monitoring, or troubleshooting. For example, you might want to monitor the traffic that is leaving your VPC or the traffic whose source is outside your VPC. In this case, you will mirror all traffic except for the traffic passing within your VPC and send it to a single monitoring appliance. VPC flow logs do not capture mirrored traffic; they generally capture information from packet headers only. Traffic Mirroring provides deeper insight into the network traffic by allowing you to analyze actual traffic content, including payload. Enable Traffic Mirroring only for the elastic network interface of EC2 instances that might be operating as part of sensitive workloads or for which you expect to need detailed diagnostics in the event of an issue.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Reference Architecture" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the network traffic is copied from an EC2 instance after having configured Traffic Mirroring.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.3" name="Use Cloudfront CDN" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront can be used to deliver either the entire website, including dynamic, 
  static, streaming, and interactive content using a global network of edge locations. 
  Requests for your content are automatically routed to the nearest edge location, so content 
  is delivered with the best possible performance. Amazon CloudFront is optimized to work 
  with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), 
  Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and 
  Amazon Route 53. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront gives you three options for accelerating your entire website while 
  delivering your content securely over HTTPS from all of CloudFront's edge locations. In 
  addition to delivering securely from the edge, you can also configure CloudFront to use 
  HTTPS connections for origin fetches so that your data is encrypted end-to-end from your 
  origin to your end users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can either create a Cloudfront distribution only by specifying the origin domain name (ELB, S3 bucket or web server):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --origin-domain-name &amp;lt;your_original_domain_name&amp;gt; -- default-root-object index.html 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Or by creating locally a distribution config file distconfig.json with all the Cloudfront distribution parameters:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --distribution-config file://distconfig.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Working with distributions" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-working-with.html"/>
          </references>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the Cloudfront distributions present in the AWS account, and check in the aliases field for the presence of the domain name used by the application:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront list-distributions --query "DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-IMDS" name="Use IMDSv2 instead of IMDSv1" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All EC2 Instances have access to the metadata service at 169.254.169.254. This contains useful information about the instance such as its IP address, the name of the security group, etc. On EC2 instances that have an IAM role attached the metadata service will also contain IAM credentials to authenticate as this role. Depending on what version of IMDS is in place, and what capabilities the SSRF has those credentials could be stolen.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Tools for helping with the transition to IMDSv2&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If your software uses IMDSv1, use the following tools to help reconfigure your software to use IMDSv2.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;AWS software:&lt;/strong&gt; The latest versions of the AWS SDKs and CLIs support IMDSv2. To use IMDSv2, make sure that your EC2 instances have the latest versions of the AWS SDKs and CLIs. For information about updating the CLI, see &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"&gt;Installing, updating, and uninstalling the AWS CLI&lt;/a&gt; in the &lt;i&gt;AWS Command Line Interface User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CloudWatch&lt;/strong&gt;: IMDSv2 uses token-backed sessions, while IMDSv1 does not. The MetadataNoToken CloudWatch metric tracks the number of calls to the instance metadata service that are using IMDSv1. By tracking this metric to zero, you can determine if and when all of your software has been upgraded to use IMDSv2. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html#ec2-cloudwatch-metrics"&gt;Instance metrics&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Updates to EC2 APIs and CLIs&lt;/strong&gt;: For existing instances, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API) to require the use of IMDSv2. For new instances, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html"&gt;run-instances&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; API) and the metadata-options parameter to launch new instances that require the use of IMDSv2.&lt;/p&gt;&lt;p&gt;To require the use of IMDSv2 on all new instances launched by Auto Scaling groups, your Auto Scaling groups can use either a launch template or a launch configuration. When you &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-launch-template.html"&gt;create a launch template&lt;/a&gt; or &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"&gt;create a launch configuration&lt;/a&gt;, you must configure the MetadataOptions parameters to require the use of IMDSv2. After you configure the launch template or launch configuration, the Auto Scaling group launches new instances using the new launch template or launch configuration, but existing instances are not affected.&lt;/p&gt;&lt;p&gt;Use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API) to require the use of IMDSv2 on the existing instances, or terminate the instances and the Auto Scaling group will launch new replacement instances with the instance metadata options settings that are defined in the launch template or launch configuration.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;IAM policies and SCPs&lt;/strong&gt;: You can use an IAM condition to enforce that IAM users can't launch an instance unless it uses IMDSv2. You can also use IAM conditions to enforce that IAM users can't modify running instances to re-enable IMDSv1, and to enforce that the instance metadata service is available on the instance.&lt;/p&gt;&lt;p&gt;The ec2:MetadataHttpTokens, ec2:MetadataHttpPutResponseHopLimit, and ec2:MetadataHttpEndpoint IAM condition keys can be used to control the use of the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API and corresponding CLI. If a policy is created, and a parameter in the API call does not match the state specified in the policy using the condition key, the API or CLI call fails with an UnauthorizedOperation response. These condition keys can be used either in IAM policies or AWS Organizations service control policies (SCPs).&lt;/p&gt;&lt;p&gt;Furthermore, you can choose an additional layer of protection to enforce the change from IMDSv1 to IMDSv2. At the access management layer with respect to the APIs called via EC2 Role credentials, you can use a new condition key in either IAM policies or AWS Organizations service control policies (SCPs). Specifically, by using the policy condition key ec2:RoleDelivery with a value of 2.0 in your IAM policies, API calls made with EC2 Role credentials obtained from IMDSv1 will receive an UnauthorizedOperation response. The same thing can be achieved more broadly with that condition required by an SCP. This ensures that credentials delivered via IMDSv1 cannot actually be used to call APIs because any API calls not matching the specified condition will receive an UnauthorizedOperation error. For example IAM policies, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExamplePolicies_EC2.html#iam-example-instance-metadata"&gt;Work with instance metadata&lt;/a&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html"&gt;Service Control Policies&lt;/a&gt; in the &lt;i&gt;AWS Organizations User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Recommended path to requiring IMDSv2 access&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Using the above tools, we recommend that you follow this path for transitioning to IMDSv2:&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 1: At the start&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Update the SDKs, CLIs, and your software that use Role credentials on their EC2 instances to IMDSv2-compatible versions. For information about updating the CLI, see &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/install-linux.html#install-linux-awscli-upgrade"&gt;Upgrading to the latest version of the AWS CLI&lt;/a&gt; in the &lt;i&gt;AWS Command Line Interface User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Then, change your software that directly accesses instance metadata (in other words, that does not use an SDK) using the IMDSv2 requests.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 2: During the transition&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Track your transition progress by using the CloudWatch metric MetadataNoToken. This metric shows the number of calls to the instance metadata service that are using IMDSv1 on your instances. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html#ec2-cloudwatch-metrics"&gt;Instance metrics&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 3: When everything is ready on all instances&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Everything is ready on all instances when the CloudWatch metric MetadataNoToken records zero IMDSv1 usage. At this stage, you can do the following:&lt;/p&gt;&lt;p&gt;For existing instances: You can require IMDSv2 use through the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; command. You can make these changes on running instances; you do not need to restart your instances.&lt;/p&gt;&lt;p&gt;For new instances: When launching a new instance, you can do one of the following:&lt;/p&gt;&lt;p&gt;In the Amazon EC2 console launch instance wizard, set &lt;strong&gt;Metadata accessible&lt;/strong&gt; to &lt;strong&gt;Enabled&lt;/strong&gt; and &lt;strong&gt;Metadata version&lt;/strong&gt; to &lt;strong&gt;V2&lt;/strong&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launching-instance.html#configure_instance_details_step"&gt;Step 3: Configure Instance Details&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html"&gt;run-instances&lt;/a&gt; command to specify that only IMDSv2 is to be used.&lt;/p&gt;&lt;p&gt;Updating instance metadata options for existing instances is available only through the API or AWS CLI. It is currently not available in the Amazon EC2 console. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html"&gt;Configure the instance metadata options&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 4: When all of your instances are transitioned to IMDSv2&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;The ec2:MetadataHttpTokens, ec2:MetadataHttpPutResponseHopLimit, and ec2:MetadataHttpEndpoint IAM condition keys can be used to control the use of the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API and corresponding CLI. If a policy is created, and a parameter in the API call does not match the state specified in the policy using the condition key, the API or CLI call fails with an UnauthorizedOperation response. For example IAM policies, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExamplePolicies_EC2.html#iam-example-instance-metadata"&gt;Work with instance metadata&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Configuring IMDS" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;If there is a valid role you can steal, make a request to http://&amp;lt;aws-ip&amp;gt;/?proxy=http://169.254.169.254/latest/meta-data/iam/security-credentials/. This will return the name of the IAM role the credentials represent.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references>
              <reference name="Steal EC2 Metadata Credentials via SSRF" url="https://hackingthe.cloud/aws/exploitation/ec2-metadata-ssrf/"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.7" name="Use Network Access Control Lists (NACLs) for blacklisting" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Network Access Control Lists (NACLs) act as packet filters across subnets, allowing or deny traffic per pre-created rules. It is recommended to use NACLs as a method to blacklist IP addresses, denying either inbound or outbound access across your subnets.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console (with VPC update).&lt;/li&gt;&lt;li&gt;Select VPC from the service menu.&lt;/li&gt;&lt;li&gt;Select Network ACL's.&lt;/li&gt;&lt;li&gt;For each Network ACL ID, perform the following:&lt;ul&gt;&lt;li&gt;Select the Inbound Rules tab.&lt;/li&gt;&lt;li&gt;Click edit.&lt;/li&gt;&lt;li&gt;add a DENY rule that will restrict inbound access from a blacklisted IP address or range to a designated port or IP range.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select VPC from the services menu.&lt;/li&gt;&lt;li&gt;Select Network ACLs.&lt;/li&gt;&lt;li&gt;For each Network ACL ID, perform the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Click the Inbound Rules tab.&lt;/li&gt;&lt;li&gt;Ensure a rule exists to DENY access from a blacklisted IP or range.&lt;/li&gt;&lt;li&gt;Click the Outbound Rules tab.&lt;/li&gt;&lt;li&gt;Ensure a rule exists to DENY access to a blacklisted IP or range.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.5" name="Use security groups to block ingress to all ports from 0.0.0.0/0 and ::/0" issueId="" issueLink="" platform="" cost="1" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        ALL TCP or ALL ports to avoid undue server exposure.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update).&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select Security Groups.&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be edited or removed.&lt;/li&gt;
                        &lt;li&gt;Either A) update the Source field to a range other than 0.0.0.0/0 or ::/0, or, B) Click Delete to remove the offending inbound rule.&lt;/li&gt;
                        &lt;li&gt;Click Save rules.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="5.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="5.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range of 0-1024 of 0-65535 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;br /&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.3" name="Use security groups to block ingress to port 22 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="1" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        port 22 (SSH) to IP addresses that require this access to avoid undue exposure to risk.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select Security Groups&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be removed.&lt;/li&gt;
                        &lt;li&gt;Click the x in the Remove column.&lt;/li&gt;
                        &lt;li&gt;Click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt; 
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="4.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range that includes port 22 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;NB: Note that if the port range includes 0-1024 or 0-65535 these also include
                            port 22</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.4" name="Use security groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="1" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        port 3389 (RDP) to IP addresses that require this access to avoid undue exposure to risk.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update).&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select Security Groups.&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be removed.&lt;/li&gt;
                        &lt;li&gt;Click the x in the Remove column.&lt;/li&gt;
                        &lt;li&gt;Click Save&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range that includes port 22 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;NB: Note that if the port range includes 0-1024 or 0-65535 these also include
                            port 3389</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-1" name="VPC default security group should prohibit inbound and outbound traffic" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If a service that is in scope for PCI DSS is associated with the default security group, the default rules for the security group will allow all outbound traffic. The rules also allow all inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group.&lt;/p&gt;&lt;p&gt;You should change the default security group rules setting to restrict inbound and outbound traffic. Using the default might violate the requirement to allow only necessary traffic to and from the CDE.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;To remediate this issue, create new security groups and assign those security groups to your resources. To prevent the default security groups from being used, remove their inbound and outbound rules.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To create new security groups and assign them to your resources&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon VPC console at https://console.aws.amazon.com/vpc/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Security groups&lt;/strong&gt;. View the default security groups details to see the resources that are assigned to them.&lt;/li&gt;&lt;li&gt;Create a set of least-privilege security groups for the resources. For details on how to create security groups, see Creating a security group in the &lt;i&gt;Amazon VPC User Guide&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.&lt;/li&gt;&lt;li&gt;On the Amazon EC2 console, change the security group for the resources that use the default security groups to the least-privilege security group you created. See Changing an instance's security groups in the &lt;i&gt;Amazon VPC User Guide&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;After you assign the new security groups to the resources, remove the inbound and outbound rules from the default security groups. This ensures that the default security groups are not used.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To remove the rules from the default security group&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon VPC console at https://console.aws.amazon.com/vpc/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Security groups&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Select a default security group, and choose the &lt;strong&gt;Inbound rules&lt;/strong&gt; tab. Choose &lt;strong&gt;Edit inbound rules&lt;/strong&gt;. Then delete all of the inbound rules. Choose &lt;strong&gt;Save rules&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Repeat the previous step for each default security group.&lt;/li&gt;&lt;li&gt;Select a default security group and choose the &lt;strong&gt;Outbound rules&lt;/strong&gt; tab. Choose &lt;strong&gt;Edit outbound rules&lt;/strong&gt;. Then delete all of the outbound rules. Choose &lt;strong&gt;Save rules&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Repeat the previous step for each default security group.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.874">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ssrf-threat" issueId="" issueLink="" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-IMDS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-IMDS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-CF-DOS" issueId="" issueLink="" name="Attackers perform a denial of service" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack is a deliberate attempt to make your website unavailable. Attackers use a variety of techniques that consume large amount of resources.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="SYSTEM-VUL-DOS">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW9" mitigation="34"/>
                    <countermeasure ref="aws-tier-6.3" mitigation="33"/>
                    <countermeasure ref="aws-tier-6.32-6.33" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW9" mitigation="34"/>
                <countermeasure ref="aws-tier-6.3" mitigation="33"/>
                <countermeasure ref="aws-tier-6.32-6.33" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SRA-8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SRA-8" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="NON-UPDATED-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized access to data on EC2 instances" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers gain access to data on EC2 instances by exploiting weaknesses in non-updated or misconfigured systems.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-EC2-6.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IND-RESOURCES">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-04">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.7" mitigation="12"/>
                    <countermeasure ref="aws-tier-1.7-1.8" mitigation="12"/>
                    <countermeasure ref="aws-tier-3.2" mitigation="12"/>
                    <countermeasure ref="aws-tier-3.3-3.4" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="12"/>
                    <countermeasure ref="aws-tier-5.10-5.11" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-EC2-6.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.7" mitigation="12"/>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="12"/>
                <countermeasure ref="aws-tier-1.7-1.8" mitigation="12"/>
                <countermeasure ref="aws-tier-3.2" mitigation="12"/>
                <countermeasure ref="aws-tier-3.3-3.4" mitigation="12"/>
                <countermeasure ref="aws-tier-5.1" mitigation="12"/>
                <countermeasure ref="aws-tier-5.10-5.11" mitigation="12"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" issueId="" issueLink="" name="Attackers gain unauthorized connection to the resources" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.5" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Network-5.6" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.10" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.11" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.12" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.14-6.15" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.16" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.20-6.23" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.24" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.25" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.27-6.28-6.29" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.31" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.6-6.7-6.8" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.9" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-02">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.3" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-03">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-04">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-1" mitigation="5"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-1" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.3" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.4" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.5" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Network-5.6" mitigation="5"/>
                <countermeasure ref="aws-tier-6.10" mitigation="5"/>
                <countermeasure ref="aws-tier-6.11" mitigation="5"/>
                <countermeasure ref="aws-tier-6.12" mitigation="5"/>
                <countermeasure ref="aws-tier-6.14-6.15" mitigation="5"/>
                <countermeasure ref="aws-tier-6.16" mitigation="5"/>
                <countermeasure ref="aws-tier-6.20-6.23" mitigation="5"/>
                <countermeasure ref="aws-tier-6.24" mitigation="5"/>
                <countermeasure ref="aws-tier-6.25" mitigation="5"/>
                <countermeasure ref="aws-tier-6.27-6.28-6.29" mitigation="5"/>
                <countermeasure ref="aws-tier-6.31" mitigation="5"/>
                <countermeasure ref="aws-tier-6.6-6.7-6.8" mitigation="5"/>
                <countermeasure ref="aws-tier-6.9" mitigation="5"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="65102a67-86b7-4776-973f-3de56f980851" diagramComponentId="e0bd9fb5-f1f3-4d39-82ef-d01305edd3d4" ref="f4661e7d-e24f-45d6-9704-3ba6e1a8aec4" name="AWS RDS (Relational Database Service)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="c7533c7a-9081-435d-9260-c5602f5e07b7" componentDefinitionRef="rds" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="database-publically-accesible" name="Database is publically accesible" state="0" impact="100" issueId="" issueLink="">
          <desc>Everyone can access the RDS database and obtain the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-notification-incident" name="No notification when an incident occurs" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no notifications when a security incident occurs. Therefore, we do not know when an
                        attacker gains access to our systems and/or security systems
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-access-control-onrds" name="Not access control on RDS databases" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no access control mechanisms on the RDS database resources and any user can gain access
                        to them and exfiltrate the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NOT_BACKUP_POLICIES" name="Not backup retention policies" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no data backup retention policies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.3" name="Sensitive data is exposed in transit" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Sensitive data is not encrypted in transit with HTTPS or SSL, and is accessible while traversing the network.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.236">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-RDS-02" name="Assign to IAM roles the permissions for RDS instances" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The following AWS managed policies, which you can attach to users in your account, are
                        specific to Amazon RDS:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSReadOnlyAccess:&lt;/b&gt; Grants read-only access to all Amazon RDS
                        resources for the root AWS account.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSFullAccess:&lt;/b&gt; Grants full access to all Amazon RDS resources
                        for the root AWS account.&lt;/li&gt;
                        &lt;/ul&gt;You can also create custom IAM policies that allow users to access the required
                        Amazon RDS API actions and resources. You can attach these custom policies to the IAM users or
                        groups that require those permissions.
                        &lt;br /&gt;
                        &lt;br /&gt;The permissions above shall be assigned to roles or groups:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The roles or groups only do calls to the API to get information, the
                        AmazonRDSReadOnlyAccess permission shall be assigned.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The roles or groups who are responsible of managing the RDS instances shall be
                        assigned the AmazonRDSFullAccess permission.&lt;/li&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Review the IAM roles and groups.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles or groups have got the AmazonRDSReadOnlyAccess permission.&lt;/li&gt;
                            &lt;li&gt;Check that only the appropriate personnel have got AmazonRDSFullAccess permissions
                            to manage the RDS instances.&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.34" name="Configure RDS database to leverage the Data Tier Security Group" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
  Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
  &lt;li&gt;Network access to the managed Data-Tier must be tightly controlled using Security Groups for RDS and non local accessibility of the DB instance.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each non-compliant DB instance, and configure it to use the Data Tier Security Group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --vpc-security-group-ids &amp;lt;data_tier_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are configured to use the Data Tier
                            Security Group:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{VpcSecurityGroups:VpcSecurityGroups,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.105">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.30" name="Do not allow the RDS database to be publically accessible" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt;Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each publicly accessible DB instance, and make it private:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --no-publicly-accessible 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="6.30" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are publicly available:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{PubliclyAccessible:PubliclyAccessible,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.105">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.6" name="Enable Auto Minor Version Upgrade on RDS" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair.&lt;/p&gt; 
&lt;p&gt;There are 6 database engines available for customers to run their database workloads on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;MariaDB&lt;/li&gt; 
 &lt;li&gt;Oracle&lt;/li&gt; 
 &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the database engine used by your application supports it, ensure that the RDS Instances have Auto Minor Version Upgrade Enabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt; 
&lt;p&gt;Using the Amazon unified command line interface:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modify each DB instance with auto-minor-version-upgrade set to False, and enable auto-minor-version-upgrade:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --auto-minor-version-upgrade&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="2.3.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have Auto Minor Version Upgrade enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{AutoMinorVersionUpgrade:AutoMinorVersionUpgrade,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.4" name="Enable encryption at rest for Databases running on RDS" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon RDS instances and snapshots can be encrypted at rest by enabling the encryption option on the Amazon RDS DB instance. Data that is encrypted at rest includes the underlying storage for a DB instance, its automated backups, read replicas, and snapshots. Encryption at rest should be enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Perform a snapshot of the DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds create-db-snapshot --db-snapshot-identifier db_snapshot --db-instance-identifier your_db_instance 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Confirm created snapshot is available (once snapshot process has completed):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-snapshots --query 'DBSnapshots[*].{DBSnapshotIdentifier:DBSnapshotIdentifier, DBInstanceIdentifier:DBInstanceIdentifier, Snapshotstatus:Status}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all KMS Customer Managed Keys:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws kms list-aliases 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Copy to source RDS snapshot (from previous step) to a destination snapshot which will be encrypted:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt;
   aws rds copy-db-snapshot --source-db-snapshot-identifier db_snapshot&amp;nbsp; --target-db-snapshot-identifier encrypted_db_snapshot --kms-key-id data_tier_kms_key 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Restore a snapshot to the target DB instance(from previous step) with the same values as original db instance with additional encrypted storage values:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds restore-db-instance-from-db-snapshot --db-instance-identifier your_db_instance --db-snapshot-identifier encrypted_db_snapshot 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: copy db snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/rds/copy-db-snapshot.html"/>
            <reference name="Amazon docs: copy snapshot" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html"/>
            <reference name="Amazon docs: create db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html"/>
            <reference name="Amazon docs: create db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-snapshot.html"/>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-snapshots.html"/>
            <reference name="Amazon docs: encryption" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"/>
            <reference name="Amazon docs: list aliases" url="https://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.html"/>
          </references>
          <standards>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all current RDS instances and review the encryption status of the DB
                            instance:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws rds describe-db-instances --query 'DBInstances[*].{DBName:DBName,
                            EncryptionEnabled:StorageEncrypted, CMK:KmsKeyId}'
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.4" name="Enable event subscriptions for DataBase security on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS Relational Database Services offers customers a managed database engine solution
                        for hosting customer created databases which can allow for a reduction in operational burden on
                        customers.&lt;/p&gt;
                        &lt;p&gt;RDS event subscriptions provide notification of selected event changes at a DB security
                        group level.&lt;/p&gt;
                        &lt;p&gt;Event subscriptions are designed to provide incident notification of events which may
                        affect the network availability of the RDS instance.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a new event subscription for DB Security Group events:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;p&gt;aws rds create-event-subscription --subscription-name rds_event_subscription
                        --sns-topic-arn
                        sns_topic_arn
                        --source-type db-security-group --event-categories rds_events
                        --source-ids events_source_ids --enabled&lt;/p&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-security-group&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.3" name="Enable Event subscriptions for Instance level events on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  AWS Relational Database Services offers customers a managed database engine solution for hosting customer created databases which can allow for a reduction in operational burden on customers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  RDS event subscriptions provide notification of selected event changes at DataBase engine level such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Deletion&lt;/li&gt; 
  &lt;li&gt;Failure&lt;/li&gt; 
  &lt;li&gt;Failover&lt;/li&gt; 
  &lt;li&gt;Low Storage&lt;/li&gt; 
  &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;/ul&gt; 
  Event subscriptions are designed to provide incident notification of events which may affect the availability of a RDS database instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new event subscription for DB instance level events:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds create-event-subscription --subscription-name &amp;lt;rds_event_subscription&amp;gt; --sns-topic-arn sns_topic_arn --source-type &amp;lt;db-instance&amp;gt; --event-categories &amp;lt;rds_events&amp;gt; --source-ids &amp;lt;events_source_ids&amp;gt; --enabled 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create event subscription" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-event-subscription.html"/>
            <reference name="Amazon docs: describe event subcriptions" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-event-subscriptions.html"/>
            <reference name="Amazon docs: user event messages" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html#USER_Events.Messages"/>
          </references>
          <standards>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-instance&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.5" name="Enable Multi-AZ on RDS" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides AWS managed high availability of the Database Tier across 2 availability zones within a region through asynchronous replication at the data layer. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each no-multi-az DB instance, and make it Multi-AZ enabled:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --multi-az 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are Multi-AZ enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{MultiAZ:MultiAZ,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.8" name="Set Backup retention policy on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides a managed backup function of the RDS Database, it is possible to define the backup window and retention period of the backup. Each customer should have a retention policy set for the type of data being stored. It is recommended to set this to at least 7. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Possible values are from 0 to 35 days. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each DB instance with a Backup Retention Period of 0, and set a desired Backup Retention Period in days (recommended value = 7):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --backup-retention-period &amp;lt;backup_retention_period&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have a Backup Retention Period set (0 =
                            there is no backup retention in place, 7 = there are 7 daily backups retained):&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{BackupRetentionPeriod:BackupRetentionPeriod,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.104">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-RDS-01" name="Use SSL to Encrypt the connection to a DB Instance" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use SSL from your application to encrypt a connection to a DB instance running MySQL, MariaDB,
                        Amazon Aurora, SQL Server, Oracle, or PostgreSQL. Each DB engine has its own process for
                        implementing SSL. To learn how to implement SSL for your particular DB instance, please see link
                        provided in &amp;quot;References&amp;quot; section.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the SSL protocol is used to encrypt the data in transit.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:42.103">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON WEB SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                <countermeasure ref="aws-tier-1.4" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="NOT_BACKUP_POLICIES">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.8" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="NON-UPDATED-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized access to data on EC2 instances" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers gain access to data on EC2 instances by exploiting weaknesses in non-updated or misconfigured systems.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.6" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers gain undetected access to the security configurations and changes made by the attackers are undetected and unaudited.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="no-notification-incident">
                  <countermeasures>
                    <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                    <countermeasure ref="aws-tier-4.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                <countermeasure ref="aws-tier-4.4" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="database-publically-accesible">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="no-access-control-onrds">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.34" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                <countermeasure ref="aws-tier-6.34" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="191e7093-f70a-4598-9ec4-0cd8e6098003" diagramComponentId="94751604-fcf7-463a-b603-b6fad4c5d0f0" ref="c7533c7a-9081-435d-9260-c5602f5e07b7" name="AWS VPC (Virtual Private Cloud)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="7593ee1f-6a32-4907-a5f7-b7ef2c02801c" componentDefinitionRef="vpc" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.8" name="The access to the routing tables are not restricted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Being highly selective in peering routing tables is a very effective way of minimizing the
                        impact of breach as resources outside of these routes are inaccessible to the peered VPC.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.282">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AWS-VPC2" name="Connect to VPC using an AWS Site-to-Site VPN connection" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect to VPC using an AWS Site-to-Site VPN connection&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  By default, instances that you launch into an Amazon VPC can't communicate with your own (remote) network. You can enable access to your remote network from your VPC by creating an AWS Site-to-Site VPN (Site-to-Site VPN) connection, and configuring routing to pass traffic through the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your Site-to-Site VPN resources using any of the following interfaces: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your Site-to-Site VPN resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC, and is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs and takes care of many of the connection details, such as calculating signatures, handling request retries, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC, but it requires that your application handle low-level details such as generating the hash to sign the request, and error handling. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS VPC - VPN connections" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpn-connections.html"/>
            <reference name="What is AWS Site-to-Site VPN?" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/VPC_VPN.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  After you create the AWS Site-to-Site VPN connection and configure the customer gateway, you can launch an instance and test the connection by pinging the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before you begin, make sure of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use an AMI that responds to ping requests. AWS recommends that you use one of the Amazon Linux AMIs.&lt;/li&gt; 
  &lt;li&gt;Configure any security group or network ACL in your VPC that filters traffic to the instance to allow inbound and outbound ICMP traffic.&lt;/li&gt; 
  &lt;li&gt;If you are using instances running Windows Server, connect to the instance and enable inbound ICMPv4 on the Windows firewall in order to ping the instance.&lt;/li&gt; 
  &lt;li&gt;(Static routing) Ensure that the customer gateway device has a static route to your VPC, and that your VPN connection has a VPN connection has a static route so that traffic can get back to your customer gateway device.&lt;/li&gt; 
  &lt;li&gt;(Dynamic routing) Ensure that the BGP status on your customer gateway device is established. It takes approximately 30 seconds for a BGP peering session to be established. Ensure that routes are advertised with BGP correctly and showing in the subnet route table, so that traffic can get back to your customer gateway. Make sure that both tunnels are configured with BGP routing.&lt;/li&gt; 
  &lt;li&gt;Ensure that you have configured routing in your subnet route tables for the VPN connection.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test end-to-end connectivity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon EC2 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On the dashboard, choose Launch Instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Choose an Amazon Machine Image (AMI) page, choose an AMI, and then choose Select. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Choose an instance type, and then choose Next: Configure Instance Details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the Configure Instance Details page, for Network, select your VPC. For Subnet, select your subnet. Choose Next until you reach the Configure Security Group page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Select the Select an existing security group option, and then select the group that you configured earlier. Choose Review and Launch. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Review the settings that you've chosen. Make any changes that you need, and then choose Launch to select a key pair and launch the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. After the instance is running, get its private IP address (for example, 10.0.0.4). The Amazon EC2 console displays the address as part of the instance's details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. From a computer in your network that is behind the customer gateway device, use the ping command with the instance's private IP address. A successful response is similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ping 10.0.0.4 
&lt;/div&gt; 
&lt;div&gt;
  Pinging 10.0.0.4 with 32 bytes of data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt;
  Reply from 10.0.0.4: bytes=32 time&amp;lt;1ms TTL=128 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ping statistics for 10.0.0.4: 
&lt;/div&gt; 
&lt;div&gt;
  Packets: Sent = 3, Received = 3, Lost = 0 (0% loss), 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Approximate round trip times in milliseconds: 
&lt;/div&gt; 
&lt;div&gt;
  Minimum = 0ms, Maximum = 0ms, Average = 0ms 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To test tunnel failover, you can temporarily disable one of the tunnels on your customer gateway device, and repeat the above step. You cannot disable a tunnel on the AWS side of the VPN connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use SSH or RDP to connect to your instances in the VPC. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Testing the Site-to-Site VPN connection" url="https://docs.aws.amazon.com/vpn/latest/s2svpn/HowToTestEndToEnd_Linux.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC1" name="Control access to VPC resources with IAM identities and policies" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Control access to VPC resources with IAM identities and policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Identity and Access Management (IAM) is an AWS service that helps an administrator securely control access to AWS resources. IAM administrators control who can be authenticated (signed in) and authorized (have permissions) to use Amazon VPC resources. IAM is an AWS service that you can use with no additional charge. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Control access to VPC resources by using: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identities: 
&lt;/div&gt; 
&lt;div&gt;
  Authentication is how you sign in to AWS using your identity credentials. 
&lt;/div&gt; 
&lt;div&gt;
  You must be authenticated (signed in to AWS) as the AWS account root user, an IAM user, or by assuming an IAM role. You can also use your company's single sign-on authentication, or even sign in using Google or Facebook. In these cases, your administrator previously set up identity federation using IAM roles. When you access AWS using credentials from another company, you are assuming a role indirectly. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Identity-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Identity-based policies are JSON permissions policy documents that you can attach to an identity, such as an IAM user, role, or group. These policies control what actions that identity can perform, on which resources, and under what conditions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Resource-based policies: 
&lt;/div&gt; 
&lt;div&gt;
  Resource-based policies are JSON policy documents that you attach to a resource such as an Amazon S3 bucket. Service administrators can use these policies to define what actions a specified principal (account member, user, or role) can perform on that resource and under what conditions. Resource-based policies are inline policies. There are no managed resource-based policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Access control lists (ACLs): 
&lt;/div&gt; 
&lt;div&gt;
  Access control lists (ACLs) are a type of policy that controls which principals (account members, users, or roles) have permissions to access a resource. ACLs are similar to resource-based policies, although they do not use the JSON policy document format. Amazon S3, AWS WAF, and Amazon VPC are examples of services that support ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity and access management for Amazon VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/security-iam.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC8" name="Create CloudWatch alarms to monitor a NAT gateway" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Creating CloudWatch alarms to monitor a NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor your NAT gateway using CloudWatch, which collects information from your NAT gateway and creates readable, near real-time metrics. You can use this information to monitor and troubleshoot your NAT gateway. NAT gateway metric data is provided at 1-minute intervals, and statistics are recorded for a period of 15 months. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create a CloudWatch alarm that sends an Amazon SNS message when the alarm changes state. An alarm watches a single metric over a time period that you specify. It sends a notification to an Amazon SNS topic based on the value of the metric relative to a given threshold over a number of time periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, you can create an alarm that monitors the amount of traffic coming in or leaving the NAT gateway. The following alarm monitors the amount of outbound traffic from clients in your VPC through the NAT gateway to the internet. It sends a notification when the number of bytes reaches a threshold of 5,000,000 during a 15-minute period. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm for outbound traffic through the NAT gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the BytesOutToDestination metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt;= and enter 5000000. Enter 1 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 15 minutes and specify a statistic of Sum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can create an alarm that monitors the ErrorPortAllocation metric and sends a notification when the value is greater than zero (0) for three consecutive 5-minute periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alarm to monitor port allocation errors 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the CloudWatch console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Alarms, Create Alarm. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose NAT Gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the NAT gateway and the ErrorPortAllocation metric and choose Next. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure the alarm as follows, and choose Create Alarm when you are done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Threshold, enter a name and description for your alarm. For Whenever, choose &amp;gt; and enter 0. Enter 3 for the consecutive periods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Actions, select an existing notification list or choose New list to create a new one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Under Alarm Preview, select a period of 5 minutes and specify a statistic of Maximum. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring NAT gateways using Amazon CloudWatch" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-nat-gateway-cloudwatch.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can test an alarm by setting it to any state using the SetAlarmState API action or the set-alarm-state command in the AWS CLI. This temporary state change lasts only until the next alarm comparison occurs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Using Amazon CloudWatch Alarms" url="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC3" name="Create Route 53 alias records for VPC endpoints" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create Route 53 alias records for VPC endpoints 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Attackers sometimes hijack traffic to internet endpoints such as web servers by intercepting DNS queries and returning their own IP addresses to DNS resolvers in place of the actual IP addresses for those endpoints. Users are then routed to the IP addresses provided by the attackers in the spoofed response, for example, to fake websites. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can protect your domain from this type of attack, known as DNS spoofing or a man-in-the-middle attack, by configuring Domain Name System Security Extensions (DNSSEC), a protocol for securing DNS traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An Amazon Virtual Private Cloud (Amazon VPC) interface endpoint lets you use AWS PrivateLink to access selected services. These services include some AWS services, services that are hosted by other AWS customers and partners in their own VPCs, and supported AWS Marketplace partner services. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To route domain traffic to an interface endpoint, use Amazon Route 53 to create an alias record. An alias record is a Route 53 extension to DNS. It's similar to a CNAME record, but you can create an alias record both for the root domain, such as example.com, and for subdomains, such as www.example.com. (You can create CNAME records only for subdomains.) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To route traffic to an Amazon VPC interface endpoint 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the Route 53 hosted zone and the Amazon VPC interface endpoint using the same account, skip to step 2. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you created the hosted zone and the interface endpoint using different accounts, get the service name for the interface endpoint: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Sign in to the AWS Management Console and open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the right pane, choose the endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the bottom pane, get the value of DNS name, for example, vpce-0fd00dd593example-dexample.cloudtrail.us-west-2.vpce.amazonaws.com. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Open the Route 53 console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In the navigation pane, choose Hosted Zones. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose the name of the hosted zone that has the domain name that you want to use to route traffic to your interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create Record Set. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Specify the following values: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Name 
&lt;/div&gt; 
&lt;div&gt;
  Enter the domain name that you want to use to route traffic to your Amazon VPC interface endpoint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type 
&lt;/div&gt; 
&lt;div&gt;
  Choose A - IPv4 address. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias 
&lt;/div&gt; 
&lt;div&gt;
  Choose Yes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alias Target 
&lt;/div&gt; 
&lt;div&gt;
  How you specify the value for Alias Target depends on whether you created the hosted zone and the interface endpoint using the same AWS account or different accounts: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Same account - Choose the list, and find the category Amazon VPC Endpoints. Then choose the DNS name of the interface endpoint that you want to route internet traffic to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Different accounts - Enter the value that you got in step 1 of this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Routing Policy 
&lt;/div&gt; 
&lt;div&gt;
  Choose the applicable routing policy. For more information, see Choosing a routing policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Evaluate Target Health 
&lt;/div&gt; 
&lt;div&gt;
  Accept the default value of No. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Choose Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Changes generally propagate to all Route 53 servers within 60 seconds. When propagation is done, you'll be able to route traffic to your interface endpoint by using the name of the alias record that you created in this procedure.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Routing traffic to an Amazon Virtual Private Cloud interface endpoint by using your domain name" url="https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-vpc-interface-endpoint.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC7" name="Do not put sensitive data into VPC free-form fields" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Do not put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS strongly recommends that you never put sensitive identifying information, such as your customers' account numbers, into free-form fields such as a Name field. This includes when you work with Amazon VPC or other AWS services using the console, API, AWS CLI, or AWS SDKs. Any data that you enter into Amazon VPC or other services might get picked up for inclusion in diagnostic logs. When you provide a URL to an external server, don't include credentials information in the URL to validate your request to that server. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that free-form fields do not contain sensitive data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Data protection in Amazon Virtual Private Cloud" url="https://docs.aws.amazon.com/vpc/latest/userguide/data-protection.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Logging-3.7" name="Enable VPC flow logs" issueId="" issueLink="" platform="" cost="1" risk="29" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>VPC Flow logs enable the capture of IP traffic that traverses the network interfaces within a
                        VPC. These logs are captured and sent to cloudtrail logs enabling you to detect security
                        incidents that may be occurring across the network.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Sign into the management console.&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select a VPC.&lt;/li&gt;
                        &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Create Flow Log&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose a role (note this must be pre-created. Follow the link provided in the text
                        underneath &amp;quot;Role&amp;quot; for help).&lt;/li&gt;
                        &lt;li&gt;Select a &amp;quot;Destination Log Group&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Create flow Log&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.9" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Sign into the management console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;In the left pane click &amp;quot;Your VPCs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select a VPC.&lt;/li&gt;
                            &lt;li&gt;Select the Flow Logs tab from the preview panel.&lt;/li&gt;
                            &lt;li&gt;Ensure a Log Flow exists that has Active in the Status column.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC9" name="Enable VPC Traffic Mirroring" issueId="" issueLink="" platform="" cost="0" risk="29" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable VPC Traffic Mirroring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Mirroring is an Amazon VPC feature that you can use to copy network traffic from an elastic network interface of Amazon EC2 instances. You can then send the traffic to out-of-band security and monitoring appliances for: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Content inspection 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Threat monitoring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Troubleshooting 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security and monitoring appliances can be deployed as individual instances, or as a fleet of instances behind a Network Load Balancer with a UDP listener. Traffic Mirroring supports filters and packet truncation, so that you only extract the traffic of interest to monitor by using monitoring tools of your choice. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can create, access, and manage your traffic mirror resources using any of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Management Console- Provides a web interface that you can use to access your traffic mirror resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Command Line Interface (AWS CLI) - Provides commands for a broad set of AWS services, including Amazon VPC. The AWS CLI is supported on Windows, macOS, and Linux. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS SDKs - Provide language-specific APIs. The AWS SDKs take care of many of the connection details, such as calculating signatures, handling request retries, and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Query API- Provides low-level API actions that you call using HTTPS requests. Using the Query API is the most direct way to access Amazon VPC. However, it requires that your application handle low-level details such as generating the hash to sign the request and handling errors. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is Traffic Mirroring?" url="https://docs.aws.amazon.com/vpc/latest/mirroring/what-is-traffic-mirroring.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  You can review your traffic mirror targets, filters and sessions from Amazon VPC console:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the Region selector, choose the AWS Region that you used when you created the VPCs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the navigation pane, choose Traffic Mirroring, Mirror Targets/Mirror Filters/Mirror Sessions. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Getting started with Traffic Mirroring" url="https://docs.aws.amazon.com/vpc/latest/mirroring/traffic-mirroring-getting-started.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.8" name="Reduce routing tables entries for VPC peering" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Once a VPC peering connection is established, routing tables must be updated to establish any connections between the peered VPCs. These routes can be as specific as desired - even peering a VPC to only a single host on the other side of the connection. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
  Being highly selective in peering routing tables is a very effective way of minimizing the impact of breach as resources outside of these routes are inaccessible to the peered VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
  Remove and add route table entries to ensure that the least number of subnets or hosts as is required to accomplish the purpose for peering are routable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Via CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For each &amp;lt;route_table_id&amp;gt; containing routes non compliant with your routing policy (which grants more than desired ""least access""), delete the non compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;non_compliant_destination_CIDR&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new compliant route:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block &amp;lt;compliant_destination_CIDR&amp;gt; --vpc-peering-connection-id &amp;lt;peering_connection_id&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configurations with Specific Routes" url="https://docs.aws.amazon.com/AmazonVPC/latest/PeeringGuide/peering-configurations-partial-access.html"/>
          </references>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review routing tables of peered VPCs for whether they route
                            all subnets of each VPC and whether that is necessary to accomplish the intended purposes
                            for peering the VPCs.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Via CLI:&lt;/b&gt;&lt;br /&gt;List all
                            the route tables from a VPC and check if &amp;quot;GatewayId&amp;quot; is pointing to a
                            &amp;lt;peering_connection_id&amp;gt; (e.g. pcx-1a2b3c4d) and if &amp;quot;DestinationCidrBlock&amp;quot;
                            is as specific as desired.&lt;br /&gt;
                            &lt;blockquote&gt;
                            aws ec2 describe-route-tables --filter &amp;quot;Name=vpc-id,Values=&amp;lt;vpc_id&amp;gt;&amp;quot;
                            --query &amp;quot;RouteTables[*].{RouteTableId:RouteTableId, VpcId:VpcId, Routes:Routes,
                            AssociatedSubnets:Associations[*].SubnetId}&amp;quot;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.2" name="Separate VPC into zones by function" issueId="" issueLink="" platform="" cost="1" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>AWS virtual private cloud is the de-facto standard for networking AWS as it provides additional security controls such as Security Groups, Network Access Control Lists (NACL's) and routing. It is recommended that resources be placed into VPC's according to use case (ie dev/test/prod) and that appropriate security levels be set on these VPC's. Placing such resources accordingly ensures that a resource of a higher security level is not exposed by the security settings of a lower labeled VPC.&amp;nbsp; 
&lt;div&gt;
  &amp;nbsp; 
 &lt;br&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;br&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify the resources that exist within an incorrect VPC.&lt;/li&gt; 
  &lt;li&gt;Migrate or move them to the correct VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
   &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that each AWS resource added to a VPC is isolated according to its designation (ie
                            test/dev/prod).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC6" name="Use Network ACLs for VPC" issueId="" issueLink="" platform="" cost="0" risk="31" state="Recommended" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network ACLs for VPC as an additional layer of security 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  A network access control list (ACL) is an optional layer of security for your VPC that acts as a firewall for controlling traffic in and out of one or more subnets. You might set up network ACLs with rules similar to your security groups in order to add an additional layer of security to your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  You can add or remove rules from the default network ACL, or create additional network ACLs for your VPC. When you add or remove rules from a network ACL, the changes are automatically applied to the subnets that it's associated with. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following are the parts of a network ACL rule: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rule number. Rules are evaluated starting with the lowest numbered rule. As soon as a rule matches traffic, it's applied regardless of any higher-numbered rule that might contradict it. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Type. The type of traffic; for example, SSH. You can also specify all traffic or a custom range. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Protocol. You can specify any protocol that has a standard protocol number. For more information, see Protocol Numbers. If you specify ICMP as the protocol, you can specify any or all of the ICMP types and codes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Port range. The listening port or port range for the traffic. For example, 80 for HTTP traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Source. [Inbound rules only] The source of the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Destination. [Outbound rules only] The destination for the traffic (CIDR range). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow/Deny. Whether to allow or deny the specified traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;Review your Network ACLs using the console:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Amazon VPC console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the navigation pane, choose Network ACLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select a Network ACL to see details. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Network ACLs" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC4" name="Use VPC endpoint policies" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;div&gt;
  Use VPC endpoint policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  When you create an endpoint, you can attach an endpoint policy to it that controls access to the service to which you are connecting. Endpoint policies must be written in JSON format. Not all services support endpoint policies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  A VPC endpoint policy is an IAM resource policy that you attach to an endpoint when you create or modify the endpoint. If you do not attach a policy when you create an endpoint, AWS attaches a default policy for you that allows full access to the service. If a service does not support endpoint policies, the endpoint allows full access to the service. An endpoint policy does not override or replace IAM user policies or service-specific policies (such as S3 bucket policies). It is a separate policy for controlling access from the endpoint to the specified service. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You cannot attach more than one policy to an endpoint. However, you can modify the policy at any time. If you do modify a policy, it can take a few minutes for the changes to take effect. For more information about writing policies, see Overview of IAM Policies in the IAM User Guide. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your endpoint policy can be like any IAM policy; however, take note of the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Only the parts of the policy that relate to the specified service will work. You cannot use an endpoint policy to allow resources in your VPC to perform other actions; for example, if you add EC2 actions to an endpoint policy for an endpoint to Amazon S3, they will have no effect. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your policy must contain a Principal element. For additional information related gateway endpoints, see Endpoint policies for gateway endpoints. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The size of an endpoint policy cannot exceed 20,480 characters (including white space). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Controlling access to services with VPC endpoints" url="https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Testing IAM policies with the IAM policy simulator" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_testing-policies.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-VPC5" name="Use VPC security groups" issueId="" issueLink="" platform="" cost="0" risk="31" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Use VPC security groups&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A security group acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in a VPC, you can assign up to five security groups to the instance. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC can be assigned to a different set of security groups.&lt;/p&gt;&lt;p&gt;If you launch an instance using the Amazon EC2 API or a command line tool and you don't specify a security group, the instance is automatically assigned to the default security group for the VPC. If you launch an instance using the Amazon EC2 console, you have an option to create a new security group for the instance.&lt;/p&gt;&lt;p&gt;For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;To create a security group using the console&lt;/p&gt;&lt;p&gt;Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;Choose Create Security Group.&lt;/p&gt;&lt;p&gt;Enter a name for the security group (for example, my-security-group) and provide a description. Select the ID of your VPC from the VPC menu and choose Yes, Create.&lt;/p&gt;&lt;p&gt;To create a security group use the command line&lt;/p&gt;&lt;p&gt;create-security-group (AWS CLI)&lt;/p&gt;&lt;p&gt;New-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;Describe one or more security groups using the command line&lt;/p&gt;&lt;p&gt;describe-security-groups (AWS CLI)&lt;/p&gt;&lt;p&gt;Get-EC2SecurityGroup (AWS Tools for Windows PowerShell)&lt;/p&gt;&lt;p&gt;By default, new security groups start with only an outbound rule that allows all traffic to leave the instances. You must add rules to enable any inbound traffic or to restrict the outbound traffic.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Review your security groups using the console:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;1. Open the Amazon VPC console.&lt;/p&gt;&lt;p&gt;2. In the navigation pane, choose Security Groups.&lt;/p&gt;&lt;p&gt;3. Select a security group to see the details.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.180">
              <output/>
            </source>
            <references>
              <reference name="Security groups for your VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                    <countermeasure ref="AWS-VPC1" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="50"/>
                <countermeasure ref="AWS-VPC1" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC7" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC8" mitigation="33"/>
                    <countermeasure ref="AWS-VPC9" mitigation="33"/>
                    <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC8" mitigation="33"/>
                <countermeasure ref="AWS-VPC9" mitigation="33"/>
                <countermeasure ref="Hydras-AWS-Logging-3.7" mitigation="34"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="EAVESDROPPING-COMMUNICATIONS" issueId="" issueLink="" name="An attacker eavesdrops on the communication between the client and server and decrypts the data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Eavesdropping on communication is a network attack that captures network packets transmitted by other computers and reads the data content. This type of network attack is most effective when weak encryption services are used. An attacker could eavesdrop on the communication between the client and server and decrypt the encrypted data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC2" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Partly-Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC4" mitigation="17"/>
                    <countermeasure ref="AWS-VPC5" mitigation="17"/>
                    <countermeasure ref="AWS-VPC6" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="AWS-VPC3" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-Network-5.8">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-VPC3" mitigation="17"/>
                <countermeasure ref="AWS-VPC4" mitigation="17"/>
                <countermeasure ref="AWS-VPC5" mitigation="17"/>
                <countermeasure ref="AWS-VPC6" mitigation="17"/>
                <countermeasure ref="Hydras-AWS-Network-5.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.8" mitigation="16"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3258a993-8806-462a-bad4-acf3c84e7503" diagramComponentId="da21e51b-ff2e-4772-80f5-600d7feeaffa" ref="d74ae0ed-f971-47f6-8964-41c7ccc4cc09" name="AWS WAF (Web Application Firewall)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="7593ee1f-6a32-4907-a5f7-b7ef2c02801c" componentDefinitionRef="CD-WAF" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.723">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-WAF1" name="Control access to AWS WAF resources" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Control access to AWS WAF resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Every AWS resource is owned by an AWS account, and permissions to create or access a resource are governed by permissions policies. An account administrator can attach permissions policies to IAM identities (that is, users, groups, and roles). &lt;br&gt; Policies that are attached to an IAM identity are known as identity-based policies, and policies that are attached to a resource are known as resource-based policies. AWS WAF supports only identity-based policies.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Using identity-based policies (IAM policies) for AWS WAF&lt;/p&gt; 
&lt;p&gt;The following shows an example of a permissions policy:&lt;/p&gt; 
&lt;p&gt;{ "Version": "2019-07-29", "Statement": [ { "Sid": "CreateFunctionPermissions", "Effect": "Allow", "Action": [ "wafv2:ListWebACLs", "wafv2:GetWebACL", "cloudwatch:ListMetrics", "wafv2:GetSampledRequests" ], "Resource": "*" }, { "Sid": "PermissionToPassAnyRole", "Effect": "Allow", "Action": [ "iam:PassRole" ], "Resource": "arn:aws:iam::account-id:role/*" } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Overview of managing access permissions to your AWS WAF resources" url="https://docs.aws.amazon.com/waf/latest/developerguide/access-control-overview.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.665">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-CLOUDTRAIL2" name="Log to a dedicated and centralized Amazon S3 bucket" issueId="" issueLink="" platform="" cost="0" risk="0" state="Implemented" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="RULES" priority="">
          <desc>&lt;p&gt;Log to a dedicated and centralized Amazon S3 bucket&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; CloudTrail log files are an audit log of actions taken by a user, role or an AWS service. The integrity, completeness and availability of these logs is crucial for forensic and auditing purposes. By logging to a dedicated and centralized Amazon S3 bucket, you can enforce strict security controls, access, and segregation of duties.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The following are some steps you can take:&lt;/p&gt; 
&lt;p&gt;- Create a separate AWS account as a log archive account. If you use AWS Organizations, enroll this account in the organization, and consider creating an organization trail to log data for all AWS accounts in your organization.&lt;/p&gt; 
&lt;p&gt;- If you do not use Organizations but want to log data for multiple AWS accounts, create a trail to log activity in this log archive account. Restrict access to this account to only trusted administrative users who should have access to account and auditing data.&lt;/p&gt; 
&lt;p&gt;- As part of creating a trail, whether it is an organization trail or a trail for a single AWS account, create a dedicated Amazon S3 bucket to store log files for this trail.&lt;/p&gt; 
&lt;p&gt;- If you want to log activity for more than one AWS account, modify the bucket policy to allow logging and storing log files for all AWS accounts that you want to log AWS account activity.&lt;/p&gt; 
&lt;p&gt;- If you are not using an organization trail, create trails in all of your AWS accounts, specifying the Amazon S3 bucket in the log archive account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Best Practices in AWS CloudTrail" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/best-practices-security.html"/>
            <reference name="Security OU - Log Archive account" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/log-archive.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using a dedicated and centralized Amazon S3 bucket for CloudTrail log files.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:38.664">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-CLOUDTRAIL2" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Mitigate" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-WAF1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-WAF1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2a5ab363-99ce-406b-b85e-6144ead85682" diagramComponentId="204bef18-6a45-4ca0-86c7-4a9f305fcbbf" ref="75352eeb-eed3-4da3-bc40-f7bc879b1bfe" name="Bluetooth port" desc="" library="IR-Hardware-Components" parentComponentRef="57f3c399-34a3-4da3-ad31-ffa68abf92da" componentDefinitionRef="CD-BLUETOOTH-PORT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.861">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.862">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.861">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.862">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.861">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1ebe1483-bbe1-4970-99c4-adb8cb4231b8" diagramComponentId="c77ebd76-c6c5-4efc-8ce7-12940b8a20f9" ref="cf25d1a3-167a-4a8a-89f3-09152b0291cc" name="Bluetooth port" desc="" library="IR-Hardware-Components" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="CD-BLUETOOTH-PORT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.179">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.179">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.179">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.180">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.179">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.090">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.089">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.090">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.090">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.090">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ed142721-4982-4986-8c16-02d9056f87f8" diagramComponentId="52585986-e10a-4a59-bf51-910f76dbd6e5" ref="6195b120-d6d5-407c-9dbd-136f9f4833fb" name="Embedded Storage" desc="" library="IR-Dataflows" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="embedded-storage" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-89" name="Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software constructs all or part of an SQL command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended SQL command when it is sent to a downstream component.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Without sufficient removal or quoting of SQL syntax in user-controllable inputs, the generated SQL query can cause those inputs to be interpreted and executed as SQL instead of ordinary user data. This can be leveraged to alter query logic in order to bypass security checks, or to insert additional statements that modify the back-end database, possibly including execution of system commands. SQL injection has become a common issue with database-driven web sites. The flaw is relatively easily detected, and often easily exploited, and as such, any site or software package with even a minimal user base is likely to be subject to an attempted automated attack of this kind. This flaw depends on the fact that SQL makes no real distinction between the control and data planes.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:42.087">
              <output/>
            </source>
            <references>
              <reference name="CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')" url="https://cwe.mitre.org/data/definitions/89.html"/>
              <reference name="OWASP Testing Guide" url="https://www.owasp.org/index.php/Testing_for_SQL_Injection_(OTG-INPVAL-005)#Standard_SQL_Injection_Testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.542">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.542">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.541">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.542">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.542">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.408">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.406">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.407">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.408">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:18:24.407">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Dataflows" source="DATAFLOW_RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should be used in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.992">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="IR-Dataflows">
          <threats>
            <threat ref="CAPEC-66" issueId="" issueLink="" name="Attackers gain unauthorised access to data and/or systems through SQL Injection attacks" state="Expose" source="DATAFLOW_RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Dataflows" editable="true">
              <desc>&lt;p&gt;Successful SQL Injection attacks could lead to full compromise of the database or to a partial compromise of only the data visible to the application.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Typically, these types of attacks result in unauthorized disclosure of sensitive data, but can also be used to inject spurious data into the database or to drop tables and deny services to legitimate users.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-89">
                  <countermeasures>
                    <countermeasure ref="CWE-89-PREPARED" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-89-PREPARED" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="9833a18f-2988-4a44-bc2b-801adbae209d" diagramComponentId="356802eb-e5d7-489e-b325-8ca1b0acc898" ref="237d4260-8555-4f51-bd66-a126e10fae2c" name="External Video interface" desc="" library="CS-Default" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="b8e291e4-241e-4f98-8580-adccfc382cb2" diagramComponentId="1791c3b8-a51c-45c2-86af-1c479f33bdc8" ref="eea9d511-2e18-4019-a530-8dbb142a431f" name="Generic hardware" desc="" library="IR-Hardware-Components" parentComponentRef="" componentDefinitionRef="CD-GENERIC-HARDWARE" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.487">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.487">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.486">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.487">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.487">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.328">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.327">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.328">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.328">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:34.328">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="048f13ac-4bd7-4652-9bab-7042048fedff" diagramComponentId="0f706eef-1b73-4731-8e07-530a7f9f5730" ref="7bd64aec-f5c0-4c05-96bb-d723e1bcbcea" name="iOS App Store" desc="" library="iot-security-compliance-framework" parentComponentRef="3fd51d0d-e64d-427a-8f35-b2e1a64584f8" componentDefinitionRef="ios-app-store" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-215" name="Information Exposure Through Debug Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The application contains debugging code that can expose sensitive information to untrusted parties.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.685">
              <output/>
            </source>
            <references>
              <reference name="CWE-215: Information Exposure Through Debug Information" url="https://cwe.mitre.org/data/definitions/215.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="IOT2.4.14.1" name="All the production test and calibration software is erased, removed or secured before the product is dispatched from the factory" issueId="" issueLink="" platform="" cost="1" risk="0" state="N/A" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="THREAT" priority="">
          <desc>&lt;p&gt;All the production test and calibration software used during manufacture is erased, removed or secured before the product is dispatched from the factory.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The product should have all of the production test and calibration software used during manufacture erased, removed or secured before the product is dispatched from the factory. This is to prevent alteration of the product post manufacture when using authorized production software, for example, hacking of the RF characteristics for greater RF &lt;span class="caps"&gt;ERP&lt;/span&gt;. Where such functionality is required in a service center, it should be erased or removed upon completion of any servicing activities.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Erase, remove or secure all the production test and calibration software used during manufacture, before the product is dispatched from the factory.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.641">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-WIDE-ATTACK-SURFACE" issueId="" issueLink="" name="Attackers try to take advantage of a wide attack surface" state="Not Applicable" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-215">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.14.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.14.1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1f560e24-7d90-4305-9945-f2f57f78f3f2" diagramComponentId="6543d615-2b3e-432b-a72d-7e3b76941547" ref="57f3c399-34a3-4da3-ad31-ffa68abf92da" name="iOS Device Client" desc="" library="OWASP-MASVS" parentComponentRef="" componentDefinitionRef="ios-device-client" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-388" name="An error condition is not properly handled (Error Handling)" state="0" impact="100" issueId="" issueLink="">
          <desc>Errors and error handling represent a class of API. Errors related to error handling are so
                        common that they deserve a special kingdom of their own. As with "API Abuse", there
                        are two ways to introduce an error-related security vulnerability: the most common one is handling errors poorly (or not at all). The second is producing errors that either give out too much information (to possible attackers) or are difficult to handle
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-388: An error condition is not properly handled (Error Handling)" url="https://cwe.mitre.org/data/definitions/388.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-120" name="Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')" state="0" impact="100" issueId="" issueLink="">
          <desc>The program copies an input buffer to an output buffer without verifying that the size of the
                        input buffer is less than the size of the output buffer, leading to a buffer overflow.
                        &lt;br /&gt;A buffer overflow condition exists when a program attempts to put more data in a
                        buffer than it can hold, or when a program attempts to put data in a memory area outside of the
                        boundaries of a buffer. The simplest type of error, and the most common cause of buffer
                        overflows, is the &amp;quot;classic&amp;quot; case in which the program copies the buffer
                        without restricting how much is copied. Other variants exist, but the existence of a classic
                        overflow strongly suggests that the programmer is not considering even the most basic of
                        security protections.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.901">
              <output/>
            </source>
            <references>
              <reference name="CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')" url="https://cwe.mitre.org/data/definitions/120.html"/>
              <reference name="Smashing The Stack For Fun And Profit" url="https://insecure.org/stf/smashstack.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-494" name="Download of Code Without Integrity Check" state="0" impact="100" issueId="" issueLink="">
          <desc>The product downloads source code or an executable from a remote location and executes the
                        code without sufficiently verifying the origin and integrity of the code.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-494: Download of Code Without Integrity Check" url="https://cwe.mitre.org/data/definitions/494.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-749" name="Exposed Dangerous Method or Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software provides an Applications Programming Interface (API) or similar interface for
                        interaction with external actors, but the interface includes a dangerous method or function that
                        is not properly restricted.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-749: Exposed Dangerous Method or Function" url="https://cwe.mitre.org/data/definitions/749.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it
                        is placed in output that is used as a web page that is served to other users. Cross-site
                        scripting (XSS) vulnerabilities occur when:
                        &lt;ol&gt;
                        &lt;li&gt;Untrusted data enters a web application, typically from a web request.&lt;/li&gt;
                        &lt;li&gt;The web application dynamically generates a web page that contains this untrusted
                        data.&lt;/li&gt;
                        &lt;li&gt;During page generation, the application does not prevent the data from containing
                        content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes,
                        mouse events, Flash, ActiveX, etc.&lt;/li&gt;
                        &lt;li&gt;A victim visits the generated web page through a web browser, which contains malicious
                        script that was injected using the untrusted data.&lt;/li&gt;
                        &lt;li&gt;Since the script comes from a web page that was sent by the web server, the victim's
                        web browser executes the malicious script in the context of the web server's domain.&lt;/li&gt;
                        &lt;li&gt;This effectively violates the intention of the web browser's same-origin policy, which
                        states that scripts in one domain should not be able to access resources or run code in a
                        different domain.&lt;/li&gt;
                        &lt;/ol&gt;There are three main kinds of XSS:
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 1: Reflected XSS (or Non-Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The server reads data directly from the HTTP request and reflects it back in the HTTP response.
                        Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a
                        vulnerable web application, which is then reflected back to the victim and executed by the web
                        browser. The most common mechanism for delivering malicious content is to include it as a
                        parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed
                        in this manner constitute the core of many phishing schemes, whereby an attacker convinces a
                        victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's
                        content back to the victim, the content is executed by the victim's browser.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 2: Stored XSS (or Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The application stores dangerous data in a database, message forum, visitor log, or other
                        trusted data store. At a later time, the dangerous data is subsequently read back into the
                        application and included in dynamic content. From an attacker's perspective, the optimal place
                        to inject malicious content is in an area that is displayed to either many users or particularly
                        interesting users. Interesting users typically have elevated privileges in the application or
                        interact with sensitive data that is valuable to the attacker. If one of these users executes
                        malicious content, the attacker may be able to perform privileged operations on behalf of the
                        user or gain access to sensitive data belonging to the user. For example, the attacker might
                        inject XSS into a log message, which might not be handled properly when an administrator views
                        the logs.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 0: DOM-Based XSS&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        In DOM-based XSS, the client performs the injection of XSS into the page; in the other types,
                        the server performs the injection. DOM-based XSS generally involves server-controlled, trusted
                        script that is sent to the client, such as Javascript that performs sanity checks on a form
                        before the user submits it. If the server-supplied script processes user-supplied data and then
                        injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is
                        possible.Once the malicious script is injected, the attacker can perform a variety of malicious
                        activities. The attacker could transfer private information, such as cookies that may include
                        session information, from the victim's machine to the attacker. The attacker could send
                        malicious requests to a web site on behalf of the victim, which could be especially dangerous to
                        the site if the victim has administrator privileges to manage that site. Phishing attacks could
                        be used to emulate trusted web sites and trick the victim into entering a password, allowing the
                        attacker to compromise the victim's account on that web site. Finally, the script could exploit
                        a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes
                        referred to as &amp;quot;drive-by hacking&amp;quot;.
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;In many cases, the attack can be launched without the victim even being aware
                        of it. Even with careful users, attackers frequently use a variety of methods to encode the
                        malicious portion of the attack, such as URL encoding or Unicode, so the request looks less
                        suspicious.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" url="https://cwe.mitre.org/data/definitions/79.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-83" name="Improper Neutralization of Script in Attributes in a Web Page" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes "javascript:" or other URIs from
                        dangerous attributes within tags, such as onmouseover, onload, onerror, or style.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-83: Improper Neutralization of Script in Attributes in a Web Page" url="https://cwe.mitre.org/data/definitions/83.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="MASVS-EMULATION-TOOLS" name="Inappropriate use of emulation tools" state="0" impact="100" issueId="" issueLink="">
          <desc>The inappropriate use of emulation tools are not detected by the app, and attackers can
                        leverage them to obtain information about the app.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="MASVS-REVERSE-ENGINEERING-TOOLS" name="Inappropriate use of reverse engineering tools" state="0" impact="100" issueId="" issueLink="">
          <desc>The inappropriate use of the reverse engineering tools is not detected by the app, and
                        attackers can leverage them to obtain information about the app.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="" issueLink="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.

When a resource is given a permission setting that provides access to a wider range of actors than required, it can lead to the exposure of sensitive information or to the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-732: Incorrect Permission Assignment for Critical Resource" url="https://cwe.mitre.org/data/definitions/732.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-215" name="Information Exposure Through Debug Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The application contains debugging code that can expose sensitive information to untrusted parties.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-215: Information Exposure Through Debug Information" url="https://cwe.mitre.org/data/definitions/215.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.904">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-489" name="Leftover Debug Code" state="0" impact="100" issueId="" issueLink="">
          <desc>The application can be deployed with active debugging code that can create unintended entry
                        points.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-489: Leftover Debug Code" url="https://cwe.mitre.org/data/definitions/489.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="MEMORY-LEAKAGE" name="Memory Leakage" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="OUTDATED-LIBRARIES" name="Outdated libraries" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.904">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-656" name="Reliance on Security Through Obscurity" state="0" impact="100" issueId="" issueLink="">
          <desc>The software uses a protection mechanism whose strength depends heavily on its obscurity, such
                        that knowledge of its algorithms or key data is sufficient to defeat the mechanism.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-656: Reliance on Security Through Obscurity" url="https://cwe.mitre.org/data/definitions/656.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="MASVS-7.9" name="Activate the Free Security Features" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>For Android:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;We shall activate the Obfuscation of the code and strip unneeded debugging information.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;For iOS:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;We shall activate:&amp;nbsp;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ARC (Automatic Reference Counting): memory management feature, adds retain and release messages when required.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Stack Canary: helps prevent buffer overflow attacks.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;PIE (Position Independent Executable): enables full ASLR for binary.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing Obfuscation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0051/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Code and Verbose Error Logging" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0041/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Symbols" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0040/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.6" name="Allow only the minimum set of protocol handlers required" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Configure the WebViews to allow only the minimum set of protocol handlers required (ideally, only https). Potentially dangerous handlers, such as file, tel and app-id, are disabled.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing JavaScript Execution in WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0031/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebView Protocol Handlers" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0032/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebViews Cleanup" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0037/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing for Java Objects Exposed Through WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0033/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the set of protocol handlers are deactivated.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.9" name="Apply 2FA Authentication on remote services" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A second factor of authentication exists at the remote endpoint and the 2FA requirement is consistently enforced. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.13" name="Apply application level payload encryption" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;As a defense in depth, next to having solid hardening of the communicating parties, application level payload encryption can be applied to further impede eavesdropping.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.11" name="Avoid usage of third-party keyboards when writing sensitive data" issueId="" issueLink="" platform="" cost="0" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;Verify that the app prevents usage of custom third-party keyboards whenever sensitive data is entered.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:36.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.6" name="Catch and handle the possible exceptions" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement a well-designed and unified scheme to handle exceptions. Make sure the application has centralized handlers for exceptions that result in similar behavior. This can be a static class for instance. For specific exceptions given the methods context, specific catch blocks should be provided.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the exceptions are well-designed and are catched and handled well.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.5" name="Check for weaknesses in 3rd party libraries" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;iOS applications often make use of third party libraries. These third party libraries accelerate development as the developer has to write less code in order to solve a problem. There are two categories of libraries:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are not (or should not) be packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;OHHTTPStubs&lt;/code&gt;&lt;/span&gt;&lt;span&gt; used for testing.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;Alamofire&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;These libraries can lead to unwanted side-effects:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;A library can contain a vulnerability, which will make the application vulnerable. A good example is &lt;/span&gt;&lt;span&gt;&lt;code&gt;AFNetworking&lt;/code&gt;&lt;/span&gt;&lt;span&gt; version 2.5.1, which contained a bug that disabled certificate validation. This vulnerability would allow attackers to execute man-in-the-middle attacks against apps that are using the library to connect to their APIs.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can no longer be maintained or hardly be used, which is why no vulnerabilities are reported and/or fixed. This can lead to having bad and/or vulnerable code in your application through the library.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can use a license, such as LGPL2.1, which requires the application author to provide access to the source code for those who use the application and request insight in its sources. In fact the application should then be allowed to be redistributed with modifications to its source code. This can endanger the intellectual property (IP) of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Note: there are two widely used package management tools: Carthage and CocoaPods. Please note that this issue can hold on multiple levels: When you use webviews with JavaScript running in the webview, the JavaScript libraries can have these issues as well. The same holds for plugins/libraries for Cordova, React-native and Xamarin apps.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;iOS applications often make use of third party libraries. These third party libraries accelerate development as the developer has to write less code in order to solve a problem. There are two categories of libraries:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are not (or should not) be packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;OHHTTPStubs&lt;/code&gt;&lt;/span&gt;&lt;span&gt; used for testing.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;Alamofire&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;These libraries can lead to unwanted side-effects:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;A library can contain a vulnerability, which will make the application vulnerable. A good example is &lt;/span&gt;&lt;span&gt;&lt;code&gt;AFNetworking&lt;/code&gt;&lt;/span&gt;&lt;span&gt; version 2.5.1, which contained a bug that disabled certificate validation. This vulnerability would allow attackers to execute man-in-the-middle attacks against apps that are using the library to connect to their APIs.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can no longer be maintained or hardly be used, which is why no vulnerabilities are reported and/or fixed. This can lead to having bad and/or vulnerable code in your application through the library.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can use a license, such as LGPL2.1, which requires the application author to provide access to the source code for those who use the application and request insight in its sources. In fact the application should then be allowed to be redistributed with modifications to its source code. This can endanger the intellectual property (IP) of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Note: there are two widely used package management tools: Carthage and CocoaPods. Please note that this issue can hold on multiple levels: When you use webviews with JavaScript running in the webview, the JavaScript libraries can have these issues as well. The same holds for plugins/libraries for Cordova, React-native and Xamarin apps.&lt;/span&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-CODE-3 - Checking for Weaknesses in Third Party Libraries" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0042/"/>
          </references>
          <standards>
            <standard ref="MASVS-CODE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;The dynamic analysis of this section comprises validating whether the copyrights of the licenses have been adhered to. This often means that the application should have an &lt;/span&gt; 
&lt;span&gt;&lt;code&gt;about&lt;/code&gt;&lt;/span&gt; 
&lt;span&gt; or &lt;/span&gt; 
&lt;span&gt;&lt;code&gt;EULA&lt;/code&gt;&lt;/span&gt; 
&lt;span&gt; section in which the copy-right statements are noted as required by the license of the third party library.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.15" name="Clean local storage after several failed attempts to authenticate user" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The app's local storage should be wiped after an excessive number of failed authentication attempts.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that local storage is cleaned after failed attempts to authenticate</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.10" name="Clear WebView's resources" issueId="" issueLink="" platform="" cost="0" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;A WebView's cache, storage, and loaded resources (JavaScript, etc.) should be cleared before the WebView is destroyed.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-1.9" name="Create a mechanism to force updates on application" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Starting from Android 5.0 (API level 21), together with the Play Core Library, apps can be forced to be updated. This mechanism is based on using the &lt;/span&gt;&lt;span&gt;&lt;code&gt;AppUpdateManager&lt;/code&gt;&lt;/span&gt;&lt;span&gt;. Before that, other mechanisms were used, such as doing http calls to the Google Play Store, which are not as reliable as the APIs of the Play Store might change. Alternatively, Firebase could be used to check for possible forced updates as well (see this &lt;/span&gt;&lt;/span&gt;&lt;a href="https://medium.com/@sembozdemir/force-your-users-to-update-your-app-with-using-firebase-33f1e0bcec5a" target="_blank"&gt;&lt;span&gt;&lt;span&gt;blog&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;). Enforced updating can be really helpful when it comes to public key pinning (see the Testing Network communication for more details) when a pin has to be refreshed due to a certificate/public key rotation. Next, vulnerabilities are easily patched by means of forced updates.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;For iOS, enforced updating can be really helpful when it comes to public key pinning (see the Testing Network communication for more details) when a pin has to be refreshed due to a certificate/public key rotation. Next, vulnerabilities are easily patched by means of forced updates. The challenge with iOS however, is that Apple does not provide any APIs yet to automate this process, instead, developers will have to create their own mechanism, such as described at various &lt;/span&gt;&lt;/span&gt;&lt;a href="https://mobikul.com/show-update-application-latest-version-functionality-ios-app-swift-3/" target="_blank"&gt;&lt;span&gt;&lt;span&gt;blogs&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; which boil down to looking up properties of the app using &lt;/span&gt;&lt;span&gt;&lt;code&gt;http://itunes.apple.com/lookup\?id\&amp;lt;BundleId&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span&gt; or third party libraries, such as &lt;/span&gt;&lt;/span&gt;&lt;a href="https://github.com/ArtSabintsev/Siren" target="_blank"&gt;&lt;span&gt;&lt;span&gt;Siren&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; and &lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.npmjs.com/package/react-native-appstore-version-checker" target="_blank"&gt;&lt;span&gt;&lt;span&gt;react-native-appstore-version-checker&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;. Most of these implementations will require a certain given version offered by an API or just "latest in the appstore", which means users can be frustrated with having to update the app, even though no business/security need for an update is truly there.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Please note that newer versions of an application will not fix security issues that are living in the backends to which the app communicates. Allowing an app not to communicate with it might not be enough. Having proper API-lifecycle management is key here. Similarly, when a user is not forced to update, do not forget to test older versions of your app against your API and/or use proper API versioning.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-CODE-2 - Testing Enforced Updating" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0036/"/>
          </references>
          <standards>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-CODE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span style="white-space: pre;"&gt;In order to test for proper updating: try downloading an older version of the application with a security vulnerability, either by a release from the developers or by using a third party app-store. Next, verify whether or not you can continue to use the application without updating it. If an update prompt is given, verify if you can still use the application by canceling the prompt or otherwise circumventing it through normal application usage. This includes validating whether the backend will stop calls to vulnerable backends and/or whether the vulnerable app-version itself is blocked by the backend. Lastly, see if you can play with the version number of a man-in-the-middled app and see how the backend responds to this (and if it is recorded at all for instance).&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.519">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.12" name="Create an authorization model on remote endpoints" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;Authorization models should be defined and enforced at the remote endpoint.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.5-4.6" name="Create a strong password policy" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;Password strength is a key concern when passwords are used for authentication. The password policy defines requirements to which end users should adhere. A password policy typically specifies password length, password complexity, and password topologies. A "strong" password policy makes manual or automated password cracking difficult or impossible.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;Automated password guessing attacks can be performed using a number of tools. For HTTP(S) services, using an interception proxy is a viable option. For example, you can use &lt;/span&gt; 
&lt;a href="https://portswigger.net/burp/help/intruder_using.html" target="_blank"&gt;&lt;span&gt;Burp Suite Intruder&lt;/span&gt;&lt;/a&gt; 
&lt;span&gt; to perform both wordlist-based and brute-force attacks.&lt;/span&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Execute the following steps for a wordlist based brute force attack with Burp Intruder:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Start Burp Suite Professional.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Create a new project (or open an existing one).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Set up your mobile device to use Burp as the HTTP/HTTPS proxy. Log into the mobile app and intercept the authentication request sent to the backend service.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Right-click this request on the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Proxy/HTTP History&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab and select &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Send to Intruder&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; in the context menu.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Select the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Intruder&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab. For further information on how to use &lt;/span&gt;&lt;/span&gt;&lt;a href="https://portswigger.net/burp/documentation/desktop/tools/intruder/using" target="_blank"&gt;&lt;span&gt;&lt;span&gt;Burp Intruder&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; read the official documentation on Portswigger.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Make sure all parameters in the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Target&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Positions&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Options&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tabs are appropriately set and select the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Payload&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Load or paste the list of passwords you want to try. There are several resources available that offer password lists, like &lt;/span&gt;&lt;/span&gt;&lt;a href="https://github.com/fuzzdb-project/fuzzdb/" target="_blank"&gt;&lt;span&gt;&lt;span&gt;FuzzDB&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;, the built-in lists in Burp Intruder or the files available in &lt;/span&gt;&lt;span&gt;&lt;code&gt;/usr/share/wordlists&lt;/code&gt;&lt;/span&gt;&lt;span&gt; on Kali Linux.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
  &lt;/ul&gt;&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Once everything is configured and you have a word-list selected, you're ready to start the attack!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.11" name="Create the functionality to verify the app uses a minimum device-access-security policy" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Different checks on the Android device can be implemented by querying different system preferences from Settings.Secure. The Device Administration API offers different mechanisms to create security aware applications, that are able to enforce password policies or encryption of the device.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-STORAGE-1 - Testing Local Storage for Sensitive Data" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0001/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-1 - Testing the Device-Access-Security Policy" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0012/"/>
          </references>
          <standards>
            <standard ref="MASVS-STORAGE-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the app verifies the mobile device complies with the minimum
                            device-access-security policy.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.7" name="Deny the access by default when an uncaught exception appears" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Deny the access by default to prevent the app crashing because of uncaught exception and to avoid unauthorized access.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the application denies access to the session when the exceptions appear.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.5" name="Disable JavaScript by default in a WebView if it is not necessary" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>JavaScript is disabled by default in a WebView and if not needed shouldn't be enabled. This reduces the attack surface and potential threats to the app.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing JavaScript Execution in WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0031/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebView Protocol Handlers" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0032/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebViews Cleanup" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0037/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing for Java Objects Exposed Through WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0033/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Search in the code the following instruction:
                            webview.getSettings().setJavaScriptEnabled(true);&lt;/li&gt;
                            &lt;li&gt;Check that this instruction doesn't exist in the code.&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;For iOS:&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the JavaScript is disabled and configured as following:&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            #import &amp;quot;ViewController.h&amp;quot;&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            #import @interface ViewController () @property(strong,nonatomic) WKWebView *webView;
                            &lt;/div&gt;
                            &lt;div&gt;
                            @end @implementation ViewController - (void)viewDidLoad { NSURL *url = [NSURL
                            URLWithString:@&amp;quot;http://www.example.com/&amp;quot;];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            NSURLRequest *request = [NSURLRequest requestWithURL:url];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            WKPreferences *pref = [[WKPreferences alloc] init]; //Disable javascript execution: [pref
                            setJavaScriptEnabled:NO];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [pref setJavaScriptCanOpenWindowsAutomatically:NO];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            WKWebViewConfiguration *conf = [[WKWebViewConfiguration alloc] init];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [conf setPreferences:pref]; _webView = [[WKWebView
                            alloc]initWithFrame:CGRectMake(self.view.frame.origin.x,85, self.view.frame.size.width,
                            self.view.frame.size.height-85) configuration:conf] ;&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [_webView loadRequest:request];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [self.view addSubview:_webView]; }
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.5" name="Disable keyboard cache on sensitive data text inputs" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>A general best practice is overwriting different functions in the input field to disable the clipboard specifically for it. Also longclickable should be deactivated for the input field.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Determining Whether Sensitive Stored Data Has Been Exposed via IPC Mechanisms" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0007/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing Deep Links" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0028/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for App Permissions" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0024/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Sensitive Functionality Exposure Through IPC" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0029/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Vulnerable Implementation of PendingIntent" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0030/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Determining Whether Sensitive Data Is Shared with Third Parties via Embedded Services" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0004/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Determining Whether Sensitive Data Is Shared with Third Parties via Notifications" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0005/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Determining Whether the Keyboard Cache Is Disabled for Text Input Fields" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0006/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Testing Backups for Sensitive Data" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0009/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Testing Logs for Sensitive Data" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0003/"/>
            <reference name="OWASP MASTG - MASVS-STORAGE-2 - Testing Memory for Sensitive Data" url="https://mas.owasp.org/MASTG/tests/android/MASVS-STORAGE/MASTG-TEST-0011/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-1" supportedStandardRef="owasp-masvs-testing-guide"/>
            <standard ref="MASVS-STORAGE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the clipboard is disabled when sensitive data is used.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.6-IOS-UIWEBVIEW" name="Disable the UIWebView for iOS platform" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>UIWebView is deprecated and should not be used. Make sure that either WKWebView or SafariViewController are used to embed web content:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;WKWebView is the appropriate choice for extending app functionality, controlling displayed content (i.e., prevent the user from navigating to arbitrary URLs) and customizing. SafariViewController should be used to provide a generalized web viewing experience. Note that SafariViewController shares cookies and other website data with Safari.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;WKWebView comes with several security advantages over UIWebView:&amp;nbsp;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;The JavaScriptEnabled property can be used to completely disable JavaScript in the WKWebView. This prevents all script injection flaws.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;The JavaScriptCanOpenWindowsAutomatically can be used to prevent JavaScript from opening new windows, such as pop-ups.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;The hasOnlySecureContent property can be used to verify resources loaded by the WebView are retrieved through encrypted connections.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;WKWebView implements out-of-process rendering, so memory corruption bugs won't affect the main app process.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing JavaScript Execution in WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0031/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebView Protocol Handlers" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0032/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebViews Cleanup" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0037/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing for Java Objects Exposed Through WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0033/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that UIWebView is not used to embed web content.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:36.725">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.10" name="Do not use the SSAID for 'device binding'" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do not use the SSAID for device binding because the behavior of the SSAID has changed since
                        Android O and the behavior of MAC addresses have changed in Android N.

                        Google has set a new set of recommendations in their SDK documentation regarding identifiers as
                        well. Because of this new behavior, we recommend developers not rely on the SSAID alone, as the
                        identifier has become less stable. For instance: The SSAID might change upon a factory reset or
                        when the app is reinstalled after the upgrade to Android O. Please note that there are a number
                        of devices which have the same ANDROID_ID and/or have an ANDROID_ID that can be overridden.
                        Also, the Build.Serial was often used but now apps targeting Android O will get "UNKNOWN" when
                        they request the Build.Serial.
                    </desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Dynamic Analysis using an Emulator.&lt;/li&gt;
                            &lt;li&gt;Run the application on an Emulator.&lt;/li&gt;
                            &lt;li&gt;Make sure you can raise the trust in the instance of the application (e.g.
                            authenticate).&lt;/li&gt;
                            &lt;li&gt;Retrieve the data from the Emulator. This has a few steps:&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;ol&gt;
                            &lt;ol&gt;
                            &lt;li&gt;ssh to your emulator using ADB shell&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;run-as&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;chmod 777 the contents of cache and shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;exit the current user&lt;/li&gt;
                            &lt;li&gt;copy the contents of /dat/data//cache &amp;amp; shared-preferences to the sdcard&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;use ADB or the DDMS to pull the contents&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Install the application on another Emulator&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;&amp;nbsp;Overwrite the data from step 3 in the data folder of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;copy the contents of step 3 to the sdcard of the second emulator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;ssh to your emulator using ADB shell&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;run-as&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;chmod 777 the folders cache and shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;copy the older contents of the sdcard to /dat/data//cache &amp;amp;
                            shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Can you continue in an authenticated state? If so, then binding might not be
                            working properly.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.3" name="Don't write any sensitive data on logs" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;There are many legitimate reasons for creating log files on a mobile device, including keeping track of crashes or errors that are stored locally while the device is offline (so that they can be sent to the app's developer once online), and storing usage statistics. However, logging sensitive data, such as credit card numbers and session information, may expose the data to attackers or malicious applications. Log files can be created in several ways.&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;The following list includes two classes that are available for Android:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log Class&lt;/li&gt; 
 &lt;li&gt;Logger Class&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Use a centralized logging class and mechanism and remove logging statements from the production release because other applications may be able to read them.&lt;/p&gt; 
&lt;p&gt;The following list shows the methods available on iOS:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NSLog Method&lt;/li&gt; 
 &lt;li&gt;printf-like function&lt;/li&gt; 
 &lt;li&gt;NSAssert-like function&lt;/li&gt; 
 &lt;li&gt;Macro&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="M1: Improper Platform Usage" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M2: Insecure Data Storage" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt; 
 &lt;li&gt;Review app logs in search of sensitive data&lt;/li&gt; 
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.11" name="Encrypt and pack all executable files and libraries belonging to the app" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that all executable files and libraries belonging to the app are encrypted on the file level and/or important code and data segments inside the executables are encrypted or packed.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing Obfuscation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0051/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Code and Verbose Error Logging" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0041/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Symbols" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0040/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all executable files and libraries belonging to the app are encrypted or
                            packed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.14" name="Encrypt sensitive data stored locally" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>If sensitive data is still required to be stored locally, it should be encrypted using a key derived from hardware backed storage which requires authentication</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that sensitive data is not stored in plain text.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.13" name="Ensure sensitive data is not stored locally on the mobile device" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>No sensitive data should be stored locally on the mobile device. Instead, data should be retrieved from a remote endpoint when needed and only be kept in memory.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if any sensitive data is stored on the device and analyze if it is necessary.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-2.6" name="Ensure that no sensitive stored data has been exposed via IPC mechanisms" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Inter Process Communication (IPC) allows processes to send each other messages and data. For processes that need to communicate with each other, there are different ways to implement IPC on iOS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;XPC Services: XPC is a structured, asynchronous library that provides basic interprocess communication. It is managed by launchd. It is the most secure and flexible implementation of IPC on iOS and should be the preferred method. It runs in the most restricted environment possible: sandboxed with no root privilege escalation and minimal file system access and network access. Two different APIs are used with XPC Services:&lt;ul&gt;&lt;li&gt;NSXPCConnection API&lt;/li&gt;&lt;li&gt;XPC Services API&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Mach Ports: All IPC communication ultimately relies on the Mach Kernel API. Mach Ports allow local communication (intra-device communication) only. They can be implemented either natively or via Core Foundation (CFMachPort) and Foundation (NSMachPort) wrappers.&lt;/li&gt;&lt;li&gt;NSFileCoordinator: The class NSFileCoordinator can be used to manage and send data to and from apps via files that are available on the local file system to various processes. NSFileCoordinator methods run synchronously, so your code will be blocked until they stop executing. That's convenient because you don't have to wait for an asynchronous block callback, but it also means that the methods block the running thread.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;No sensitive data should be exposed via IPC mechanisms.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Determining Whether Sensitive Stored Data Has Been Exposed via IPC Mechanisms" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0007/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing Deep Links" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0028/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for App Permissions" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0024/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Sensitive Functionality Exposure Through IPC" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0029/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Vulnerable Implementation of PendingIntent" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0030/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;For Android:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Static Analysis&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The first step is to look at AndroidManifest.xml to detect content providers exposed by the app. You can identify content providers by the &amp;lt;provider&amp;gt; element. Complete the following steps:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Determine whether the value of the export tag (android:exported) is "true". Even if it is not, the tag will be set to "true" automatically if an &amp;lt;intent-filter&amp;gt; has been defined for the tag. If the content is meant to be accessed only by the app itself, set android:exported to "false". If not, set the flag to "true" and define proper read/write permissions.&lt;/li&gt;&lt;li&gt;Determine whether the data is being protected by a permission tag (android:permission). Permission tags limit exposure to other apps.&lt;/li&gt;&lt;li&gt;Determine whether the android:protectionLevel attribute has the value signature. This setting indicates that the data is intended to be accessed only by apps from the same enterprise (i.e., signed with the same key). To make the data accessible to other apps, apply a security policy with the &amp;lt;permission&amp;gt; element and set a proper android:protectionLevel. If you use android:permission, other applications must declare corresponding &amp;lt;uses-permission&amp;gt; elements in their manifests to interact with your content provider. You can use the android:grantUriPermissions attribute to grant more specific access to other apps; you can limit access with the &amp;lt;grant-uri-permission&amp;gt; element.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Inspect the source code to understand how the content provider is meant to be used. Search for the following keywords:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;android.content.ContentProvider&lt;/li&gt;&lt;li&gt;android.database.Cursor&lt;/li&gt;&lt;li&gt;android.database.sqlite&lt;/li&gt;&lt;li&gt;.query&lt;/li&gt;&lt;li&gt;.update&lt;/li&gt;&lt;li&gt;.delete&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;To avoid SQL injection attacks within the app, use parameterized query methods, such as query, update, and delete. Be sure to properly sanitize all method arguments; for example, the selection argument could lead to SQL injection if it is made up of concatenated user input.&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If you expose a content provider, determine whether parameterized &lt;a href="https://developer.android.com/reference/android/content/ContentProvider.html#query%28android.net.Uri%2C%20java.lang.String%5B%5D%2C%20java.lang.String%2C%20java.lang.String%5B%5D%2C%20java.lang.String%29"&gt;query methods&lt;/a&gt; (query, update, and delete) are being used to prevent SQL injection. If so, make sure all their arguments are properly sanitized.&lt;/p&gt;&lt;p&gt;We will use the vulnerable password manager app &lt;a href="https://github.com/mwrlabs/drozer/releases/download/2.3.4/sieve.apk"&gt;Sieve&lt;/a&gt; as an example of a vulnerable content provider.&lt;/p&gt;&lt;h4&gt;Inspect the Android Manifest&lt;/h4&gt;&lt;p&gt;Identify all defined &amp;lt;provider&amp;gt; elements:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;&amp;lt;provider&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:authorities="com.mwr.example.sieve.DBContentProvider"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:exported="true"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:multiprocess="true"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:name=".DBContentProvider"&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;&amp;lt;path-permission&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;android:path="/Keys"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;android:readPermission="com.mwr.example.sieve.READ_KEYS"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;android:writePermission="com.mwr.example.sieve.WRITE_KEYS"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; /&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;/provider&amp;gt;&lt;/p&gt;&lt;p&gt;&amp;lt;provider&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:authorities="com.mwr.example.sieve.FileBackupProvider"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:exported="true"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:multiprocess="true"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;android:name=".FileBackupProvider"&lt;/p&gt;&lt;p&gt;/&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;As shown in the AndroidManifest.xml above, the application exports two content providers. Note that one path ("/Keys") is protected by read and write permissions.&lt;/p&gt;&lt;h4&gt;Inspect the source code&lt;/h4&gt;&lt;p&gt;Inspect the query function in the DBContentProvider.java file to determine whether any sensitive information is being leaked:&lt;/p&gt;&lt;p&gt;Example in Java:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;public Cursor query(final Uri uri, final String[] array, final String s, final String[] array2, final String s2) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;final int match = this.sUriMatcher.match(uri);&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;final SQLiteQueryBuilder sqLiteQueryBuilder = new SQLiteQueryBuilder();&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;if (match &amp;gt;= 100 &amp;amp;&amp;amp; match &amp;lt; 200) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sqLiteQueryBuilder.setTables("Passwords");&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;else if (match &amp;gt;= 200) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sqLiteQueryBuilder.setTables("Key");&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;return sqLiteQueryBuilder.query(this.pwdb.getReadableDatabase(), array, s, array2, (String)null, (String)null, s2);&lt;/p&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Example in Kotlin:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;fun query(uri: Uri?, array: Array&amp;lt;String?&amp;gt;?, s: String?, array2: Array&amp;lt;String?&amp;gt;?, s2: String?): Cursor {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;val match: Int = this.sUriMatcher.match(uri)&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;val sqLiteQueryBuilder = SQLiteQueryBuilder()&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;if (match &amp;gt;= 100 &amp;amp;&amp;amp; match &amp;lt; 200) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sqLiteQueryBuilder.tables = "Passwords"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;} else if (match &amp;gt;= 200) {&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;sqLiteQueryBuilder.tables = "Key"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;return sqLiteQueryBuilder.query(this.pwdb.getReadableDatabase(), array, s, array2, null as String?, null as String?, s2)&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp;}&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Here we see that there are actually two paths, "/Keys" and "/Passwords", and the latter is not being protected in the manifest and is therefore vulnerable.&lt;/p&gt;&lt;p&gt;When accessing a URI, the query statement returns all passwords and the path Passwords/. We will address this in the "Dynamic Analysis" section and show the exact URI that is required.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Dynamic Analysis&lt;/strong&gt;&lt;/p&gt;&lt;h4&gt;Testing Content Providers&lt;/h4&gt;&lt;p&gt;To dynamically analyze an application's content providers, first enumerate the attack surface: pass the app's package name to the Drozer module app.provider.info:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.info -a com.mwr.example.sieve&lt;/p&gt;&lt;p&gt;&amp;nbsp;Package: com.mwr.example.sieve&lt;/p&gt;&lt;p&gt;&amp;nbsp;Authority: com.mwr.example.sieve.DBContentProvider&lt;/p&gt;&lt;p&gt;&amp;nbsp;Read Permission: null&lt;/p&gt;&lt;p&gt;&amp;nbsp;Write Permission: null&lt;/p&gt;&lt;p&gt;&amp;nbsp;Content Provider: com.mwr.example.sieve.DBContentProvider&lt;/p&gt;&lt;p&gt;&amp;nbsp;Multiprocess Allowed: True&lt;/p&gt;&lt;p&gt;&amp;nbsp;Grant Uri Permissions: False&lt;/p&gt;&lt;p&gt;&amp;nbsp;Path Permissions:&lt;/p&gt;&lt;p&gt;&amp;nbsp;Path: /Keys&lt;/p&gt;&lt;p&gt;&amp;nbsp;Type: PATTERN_LITERAL&lt;/p&gt;&lt;p&gt;&amp;nbsp;Read Permission: com.mwr.example.sieve.READ_KEYS&lt;/p&gt;&lt;p&gt;&amp;nbsp;Write Permission: com.mwr.example.sieve.WRITE_KEYS&lt;/p&gt;&lt;p&gt;&amp;nbsp;Authority: com.mwr.example.sieve.FileBackupProvider&lt;/p&gt;&lt;p&gt;&amp;nbsp;Read Permission: null&lt;/p&gt;&lt;p&gt;&amp;nbsp;Write Permission: null&lt;/p&gt;&lt;p&gt;&amp;nbsp;Content Provider: com.mwr.example.sieve.FileBackupProvider&lt;/p&gt;&lt;p&gt;&amp;nbsp;Multiprocess Allowed: True&lt;/p&gt;&lt;p&gt;&amp;nbsp;Grant Uri Permissions: False&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In this example, two content providers are exported. Both can be accessed without permission, except for the /Keys path in the DBContentProvider. With this information, you can reconstruct part of the content URIs to access the DBContentProvider (the URIs begin with content://).&lt;/p&gt;&lt;p&gt;To identify content provider URIs within the application, use Drozer's scanner.provider.finduris module. This module guesses paths and determines accessible content URIs in several ways:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run scanner.provider.finduris -a com.mwr.example.sieve&lt;/p&gt;&lt;p&gt;Scanning com.mwr.example.sieve...&lt;/p&gt;&lt;p&gt;Unable to Query content://com.mwr.example.sieve.DBContentProvider/&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;&lt;p&gt;Unable to Query content://com.mwr.example.sieve.DBContentProvider/Keys&lt;/p&gt;&lt;p&gt;Accessible content URIs:&lt;/p&gt;&lt;p&gt;content://com.mwr.example.sieve.DBContentProvider/Keys/&lt;/p&gt;&lt;p&gt;content://com.mwr.example.sieve.DBContentProvider/Passwords&lt;/p&gt;&lt;p&gt;content://com.mwr.example.sieve.DBContentProvider/Passwords/&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Once you have a list of accessible content providers, try to extract data from each provider with the app.provider.query module:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --vertical&lt;/p&gt;&lt;p&gt;_id: 1&lt;/p&gt;&lt;p&gt;service: Email&lt;/p&gt;&lt;p&gt;username: incognitoguy50&lt;/p&gt;&lt;p&gt;password: PSFjqXIMVa5NJFudgDuuLVgJYFD+8w== (Base64 - encoded)&lt;/p&gt;&lt;p&gt;email: incognitoguy50@gmail.com&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;You can also use Drozer to insert, update, and delete records from a vulnerable content provider:&lt;/p&gt;&lt;p&gt;Insert record&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.insert content://com.vulnerable.im/messages&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--string date 1331763850325&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--string type 0&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--integer _id 7&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Update record&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.update content://settings/secure&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--selection "name=?"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--selection-args assisted_gps_enabled&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--integer value 0&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Delete record&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.delete content://settings/secure&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--selection "name=?"&lt;/p&gt;&lt;p&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;--selection-args my_setting&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;SQL Injection in Content Providers&lt;/h4&gt;&lt;p&gt;The Android platform promotes SQLite databases for storing user data. Because these databases are based on SQL, they may be vulnerable to SQL injection. You can use the Drozer module app.provider.query to test for SQL injection by manipulating the projection and selection fields that are passed to the content provider:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --projection "'"&lt;/p&gt;&lt;p&gt;unrecognized token: "' FROM Passwords" (code 1): , while compiling: SELECT ' FROM Passwords&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --selection "'"&lt;/p&gt;&lt;p&gt;unrecognized token: "')" (code 1): , while compiling: SELECT * FROM Passwords WHERE (')
&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If an application is vulnerable to SQL Injection, it will return a verbose error message. SQL Injection on Android may be used to modify or query data from the vulnerable content provider. In the following example, the Drozer module app.provider.query is used to list all the database tables:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --projection "*&lt;/p&gt;&lt;p&gt;FROM SQLITE_MASTER WHERE type='table';--"&lt;/p&gt;&lt;p&gt;| type &amp;nbsp;| name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | tbl_name &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; | rootpage | sql &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;|&lt;/p&gt;&lt;p&gt;| table | android_metadata | android_metadata | 3 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| CREATE TABLE ... |&lt;/p&gt;&lt;p&gt;| table | Passwords &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| Passwords &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| 4 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| CREATE TABLE ... |&lt;/p&gt;&lt;p&gt;| table | Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| Key &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| 5 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;| CREATE TABLE ... |
&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;SQL Injection may also be used to retrieve data from otherwise protected tables:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.query content://com.mwr.example.sieve.DBContentProvider/Passwords/ --projection "* FROM Key;--"&lt;/p&gt;&lt;p&gt;| Password | pin |&lt;/p&gt;&lt;p&gt;| thisismypassword | 9876 |&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;You can automate these steps with the scanner.provider.injection module, which automatically finds vulnerable content providers within an app:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run scanner.provider.injection -a com.mwr.example.sieve&lt;/p&gt;&lt;p&gt;Scanning com.mwr.example.sieve...&lt;/p&gt;&lt;p&gt;Injection in Projection:&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Keys/&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Passwords&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Passwords/&lt;/p&gt;&lt;p&gt;Injection in Selection:&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Keys/&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Passwords&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.DBContentProvider/Passwords/
&lt;/p&gt;&lt;/blockquote&gt;&lt;h4&gt;File System Based Content Providers&lt;/h4&gt;&lt;p&gt;Content providers can provide access to the underlying filesystem. This allows apps to share files (the Android sandbox normally prevents this). You can use the Drozer modules app.provider.read and app.provider.download to read and download files, respectively, from exported file-based content providers. These content providers are susceptible to directory traversal, which allows otherwise protected files in the target application's sandbox to be read.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run app.provider.download content://com.vulnerable.app.FileProvider/../../../../../../../../data/data/com.vulnerable.app/database.db /home/user/database.db
Written 24488 bytes
&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the scanner.provider.traversal module to automate the process of finding content providers that are susceptible to directory traversal:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;dz&amp;gt; run scanner.provider.traversal -a com.mwr.example.sieve&lt;/p&gt;&lt;p&gt;Scanning com.mwr.example.sieve...&lt;/p&gt;&lt;p&gt;Vulnerable Providers:&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.FileBackupProvider/&lt;/p&gt;&lt;p&gt;&amp;nbsp;content://com.mwr.example.sieve.FileBackupProvider&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note that adb can also be used to query content providers:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$ adb shell content query --uri content://com.owaspomtg.vulnapp.provider.CredentialProvider/credentials&lt;/p&gt;&lt;p&gt;Row: 0 id=1, username=admin, password=StrongPwd&lt;/p&gt;&lt;p&gt;Row: 1 id=2, username=test, password=test&lt;/p&gt;&lt;p&gt;...&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;For iOS:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Static Analysis&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The following section summarizes keywords that you should look for to identify IPC implementations within iOS source code.&lt;/p&gt;&lt;h4&gt;XPC Services&lt;/h4&gt;&lt;p&gt;Several classes may be used to implement the NSXPCConnection API:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;NSXPCConnection&lt;/li&gt;&lt;li&gt;NSXPCInterface&lt;/li&gt;&lt;li&gt;NSXPCListener&lt;/li&gt;&lt;li&gt;NSXPCListenerEndpoint&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;You can set security attributes for the connection. The attributes should be verified.&lt;/p&gt;&lt;p&gt;Check for the following two files in the Xcode project for the XPC Services API (which is C-based):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;xpc.h&lt;/li&gt;&lt;li&gt;connection.h&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Mach Ports&lt;/h4&gt;&lt;p&gt;Keywords to look for in low-level implementations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;mach_port_t&lt;/li&gt;&lt;li&gt;mach_msg_*&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Keywords to look for in high-level implementations (Core Foundation and Foundation wrappers):&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CFMachPort&lt;/li&gt;&lt;li&gt;CFMessagePort&lt;/li&gt;&lt;li&gt;NSMachPort&lt;/li&gt;&lt;li&gt;NSMessagePort&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;NSFileCoordinator&lt;/h4&gt;&lt;p&gt;Keywords to look for:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;NSFileCoordinator&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Dynamic Analysis&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Verify IPC mechanisms with static analysis of the iOS source code. No iOS tool is currently available to verify IPC usage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.7" name="Ensure that the app responds correctly against tampering, debugging and emulation" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the app implements multiple different responses to tampering, debugging and emulation,
                        including stealthy responses that don't simply terminate the app.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Making Sure that the App is Properly Signed" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0038/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing File Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0047/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing Runtime Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0050/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the app implements multiple different responses to tampering, debugging and
                            emulation, including stealthy responses that don't simply terminate the app.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-5.6" name="Ensure the app only depends on up-to-date connectivity and security libraries" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Android relies on a security provider to provide SSL/TLS-based connections. The problem with this kind of security provider (one example is OpenSSL), which comes with the device, is that it often has bugs and/or vulnerabilities. To avoid known vulnerabilities, developers need to make sure that the application will install a proper security provider. Since July 11, 2016, Google has been rejecting Play Store application submissions (both new applications and updates) that use vulnerable versions of OpenSSL.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-NETWORK-1 - Testing Data Encryption on the Network" url="https://mas.owasp.org/MASTG/tests/android/MASVS-NETWORK/MASTG-TEST-0019/"/>
            <reference name="OWASP MASTG - MASVS-NETWORK-1 - Testing Endpoint Identify Verification" url="https://mas.owasp.org/MASTG/tests/android/MASVS-NETWORK/MASTG-TEST-0021/"/>
            <reference name="OWASP MASTG - MASVS-NETWORK-1 - Testing the Security Provider" url="https://mas.owasp.org/MASTG/tests/android/MASVS-NETWORK/MASTG-TEST-0023/"/>
            <reference name="OWASP MASTG - MASVS-NETWORK-1 - Testing the TLS Settings" url="https://mas.owasp.org/MASTG/tests/android/MASVS-NETWORK/MASTG-TEST-0020/"/>
          </references>
          <standards>
            <standard ref="MASVS-NETWORK-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;When you have the source code:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Run the application in debug mode, then create a breakpoint where the app will first contact the endpoint(s).&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Right click the highlighted code and select &lt;/span&gt;&lt;span&gt;&lt;code&gt;Evaluate Expression&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Type &lt;/span&gt;&lt;span&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/span&gt;&lt;span&gt; and press enter.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Check the providers and try to find &lt;/span&gt;&lt;span&gt;&lt;code&gt;GmsCore_OpenSSL&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, which should be the new top-listed provider.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;When you do not have the source code:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Use Xposed to hook into the &lt;/span&gt;&lt;span&gt;&lt;code&gt;java.security&lt;/code&gt;&lt;/span&gt;&lt;span&gt; package, then hook into &lt;/span&gt;&lt;span&gt;&lt;code&gt;java.security.Security&lt;/code&gt;&lt;/span&gt;&lt;span&gt; with the method &lt;/span&gt;&lt;span&gt;&lt;code&gt;getProviders&lt;/code&gt;&lt;/span&gt;&lt;span&gt; (with no arguments). The return value will be an array of &lt;/span&gt;&lt;span&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Determine whether the first provider is &lt;/span&gt;&lt;span&gt;&lt;code&gt;GmsCore_OpenSSL&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.4" name="Ensure the logout functionality terminates the session" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The purpose of this test case is verifying logout functionality and determining whether it effectively terminates the session on both client and server and invalidates a stateless token.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Failing to destroy the server-side session is one of the most common logout functionality implementation errors. This error keeps the session or token alive, even after the user logs out of the application. An attacker who gets valid authentication information can continue to use it and hijack a user's account.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Many mobile apps don't automatically log users out. There can be various reasons, such as: because it is inconvenient for customers, or because of decisions made when implementing stateless authentication. The application should still have a logout function, and it should be implemented according to best practices, destroying all locally stored tokens or session identifiers. If session information is stored on the server, it should also be destroyed by sending a logout request to that server. In case of a high-risk application, tokens should be blacklisted. Not removing tokens or session identifiers can result in unauthorized access to the application in case the tokens are leaked. Note that other sensitive types of information should be removed as well, as any information that is not properly cleared may be leaked later, for example during a device backup.&lt;/span&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Use an interception proxy for dynamic application analysis and execute the following steps to check whether the logout is implemented properly:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Log in to the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Access a resource that requires authentication, typically a request for private information belonging to your account.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Log out of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Try to access the data again by resending the request from step 2.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;If the logout is correctly implemented on the server, an error message or redirect to the login page will be sent back to the client. On the other hand, if you receive the same response you got in step 2, the token or session ID is still valid and hasn't been correctly terminated on the server.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.11" name="Implement a device blocking functionality" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;For applications which require L2 protection, the MASVS states that they should inform the user about all login activities within the app with the possibility of blocking certain devices. This can be broken down into various scenarios:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides a push notification the moment their account is used on another device to notify the user of different activities. The user can then block this device after opening the app via the push-notification.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides an overview of the last session after login. If the previous session was with a different configuration (e.g. location, device, app-version) compared to the current configuration, then the user should have the option to report suspicious activities and block devices used in the previous session.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides an overview of the last session after login at all times.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application has a self-service portal in which the user can see an audit-log. This allows the user to manage the different devices that are logged in.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The developer can make use of specific meta-information and associate it to each different activity or event within the application. This will make it easier for the user to spot suspicious behavior and block the corresponding device. The meta-information may include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Device: The user can clearly identify all devices where the app is being used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Date and Time: The user can clearly see the latest date and time when the app was used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Location: The user can clearly identify the latest locations where the app was used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application can provide a list of activities history which will be updated after each sensitive activity within the application. The choice of which activities to audit needs to be done for each application based on the data it handles and the level of security risk the team is willing to have. Below is a list of common sensitive activities that are usually audited:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Login attempts&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Password changes&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Personal Identifiable Information changes (name, email address, telephone number, etc.)&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Sensitive activities (purchase, accessing important resources, etc.)&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Consent to Terms and Conditions clauses&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Paid content requires special care, and additional meta-information (e.g., operation cost, credit, etc.) might be used to ensure user's knowledge about the whole operation's parameters.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;In addition, non-repudiation mechanisms should be applied to sensitive transactions (e.g. payed content access, given consent to Terms and Conditions clauses, etc.) in order to prove that a specific transaction was in fact performed (integrity) and by whom (authentication).&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;In all cases, you should verify whether different devices are detected correctly. Therefore, the binding of the application to the actual device should be tested. In iOS, a developer can use&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;identifierForVendor&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, which is related to the bundle ID: the moment you change a bundle ID, the method will return a different value. When the app is ran for the first time, make sure you store the value returned by&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;identifierForVendor&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the KeyChain, so that changes to it can be detected at an early stage.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;In Android, the developer can use&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;till Android 8.0 (API level 26) to identify an application instance. Note that starting at Android 8.0 (API level 26),&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is no longer a device unique ID. Instead, it becomes scoped by the combination of app signing key, user and device. So validating&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for device blocking could be tricky for these Android versions. Because if an app changes its signing key, the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;will change and it won't be able to recognize old users devices. Therefore, it's better to store the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;encrypted and privately in a private a shared preferences file using a randomly generated key from the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;AndroidKeyStore&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and preferably AES_GCM encryption. The moment the app signature changes, the application can check for a delta and register the new&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;. The moment this new ID changes without a new application signing key, it should indicate that something else is wrong. Next, the device binding can be extended by signing requests with a key stored in the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;Keychain&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for iOS and in the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in Android can reassure strong device binding. You should also test if using different IPs, different locations and/or different time-slots will trigger the right type of information in all scenarios.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Lastly, the blocking of the devices should be tested, by blocking a registered instance of the app and see if it is then no longer allowed to authenticate. Note: in case of an application which requires L2 protection, it can be a good idea to warn a user even before the first authentication on a new device. Instead: warn the user already when a second instance of the app is registered.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.1" name="Implement detection and response functionalities for root detection" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement detection and response functionalities to detect rooted devices and if the device is rooted, the app shall respond in two ways:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The app notifies the user that their device is rooted and it's not secure to continue with the app.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Terminate the session and the app, because sensitive data is vulnerable.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-1 - Testing Emulator Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0049/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-1 - Testing Root Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0045/"/>
          </references>
          <standards>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M9: Reverse Engineering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-RESILIENCE-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Check that the app has two or more functionalities with independent methods to
                            detect a rooted device.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that if the device is rooted, the user is alerted or the app is terminated.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.3" name="Implement functionality to alert when the app code changes" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to detect, notify and respond when the app is modified by executable files or by anti-debugging tools within its own sandbox. When the injection is detected the app shall alert the user and terminate the session.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Making Sure that the App is Properly Signed" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0038/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing File Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0047/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing Runtime Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0050/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;For the application source integrity checks, run the app on the device in an
                            unmodified state and make sure that everything works.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Then apply simple patches to the classes.dex and any .so libraries contained in
                            the app package. Re-package and re-sign the app.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the app alerts the user and/or terminates the session.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.6" name="Implement functionality to detect and respond to, modifications of process memory" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create functionality to detect &amp;quot;hostile&amp;quot; code in its memory and respond
                        accordingly. Controls in this category verify the integrity of the app's own memory space, with
                        the goal of protecting against memory patches applied during runtime. This includes unwanted
                        changes to binary code or bytecode, functions pointer tables, and important data structures, as
                        well as rogue code loaded into process memory.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;div&gt;
                        Integrity can be verified either by:&amp;nbsp;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Comparing the contents of memory, or a checksum over the contents, with known good
                        values.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Searching memory for signatures of unwanted modifications.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Making Sure that the App is Properly Signed" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0038/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing File Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0047/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing Runtime Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0050/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Disable all file-based detection of reverse engineering tools.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Then inject code using Xposed, Frida and Substrate, and attempt to install native
                            hooks and Java method hooks.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the app detects the &amp;quot;hostile&amp;quot; code in its memory and
                            responds accordingly.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.5" name="Implement functionality to detect if the app is being run inside an emulator" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create and implement functionality to detect when the app is being run inside an emulator. If
                        the app is running inside an emulator, the app shall terminate the session.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-1 - Testing Emulator Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0049/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-1 - Testing Root Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0045/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Install and run the app within an emulator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the app detects this and terminates the session.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.4" name="Implement functionality to detect the presence of widely used reverse engineering tools" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create functionality to detect the presence of widely used reverse engineering tools, such as
                        code injection tools, hooking frameworks and debugging servers. If any reverse engineering tool
                        is detected, the app shall force termination of the session.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing Anti-Debugging Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0046/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing Reverse Engineering Tools Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0048/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing whether the App is Debuggable" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0039/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-4" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Launch the app systematically with various apps and frameworks installed, such as the
                            following:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Substrate for Android&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Xposed&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Frida&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Introspy-Android&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Drozer&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;RootCloak&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Android SSL Trust Killer&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;The app should alert the user and/or terminate the app.
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.2" name="Implement functionality to notify when debugging mechanisms are presented within the app" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement anti-debugging mechanisms to prohibit debug mode being activated. Anti-debugging
                        features can be preventive or reactive. As the name implies, preventive anti-debugging
                        techniques prevent the debugger from attaching in the first place, while reactive techniques
                        attempt to detect whether a debugger is present and react to it in some way (e.g. terminating
                        the app, or triggering some kind of hidden behavior).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The &amp;quot;more-is-better&amp;quot; rule applies: To maximize effectiveness, defenders
                        combine multiple methods of prevention and detection which operate on different API layers and
                        are distributed throughout the app.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing Anti-Debugging Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0046/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing Reverse Engineering Tools Detection" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0048/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-4 - Testing whether the App is Debuggable" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0039/"/>
          </references>
          <standards>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M9: Reverse Engineering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-RESILIENCE-4" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check for the presence of anti-debugging mechanisms and verify if with the following
                            criteria the anti-debugging mechanisms are bypassed:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Attaching JDB and ptrace based debuggers either fails or causes the app to
                            terminate or malfunction&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Multiple detection methods are scattered throughout the app (as opposed to putting
                            everything into a single method or function);&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;The anti-debugging defenses operate on multiple API layers (Java, native library
                            functions, Assembler/system calls);&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;The mechanisms show some level of originality (vs. copy/paste from StackOverflow
                            or other sources);&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.525">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.4" name="Insert the condition DEVELOPER-MODE to remove the debugging code, log verbose errors or debugging messages in the production version" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Insert the policy in the if statement with DEVELOPER_MODE as condition. The DEVELOPER_MODE has
                        to be disabled for release build in order to disable StrictMode too.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Remove the debugging code, log verbose errors or debugging messages in the production version.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing Obfuscation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0051/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Code and Verbose Error Logging" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0041/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Symbols" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0040/"/>
          </references>
          <standards>
            <standard ref="M10: Extraneous Functionality" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-RESILIENCE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Check that there is only one method to activate the DEVELOPMENT_MODE.&lt;/li&gt;
                            &lt;li&gt;Check that the debugging code was removed.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.9-8.12" name="Obfuscate all executable files, libraries, important code and data segments" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Obfuscation is the process of transforming code and data in order to make it more difficult to comprehend. It is an integral part of every software protection scheme. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If the goal of obfuscation is to protect sensitive computations, an obfuscation scheme is used that is both appropriate for the particular task and robust against manual and automated de-obfuscation methods, considering currently published research. The effectiveness of the obfuscation scheme must be verified through manual testing. Note that hardware-based isolation features are preferred over obfuscation whenever possible. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing Obfuscation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0051/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Code and Verbose Error Logging" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0041/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Symbols" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0040/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Attempt to decompile the byte-code, disassemble any included library files, and perform static analysis. At the very least, the app's core functionality (i.e., the functionality meant to be obfuscated) shouldn't be easily discerned. Verify that&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;meaningful identifiers, such as class names, method names, and variable names, have been discarded,&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;string resources and strings in binaries are encrypted,&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;code and data related to the protected functionality is encrypted, packed, or otherwise concealed.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;For a more detailed assessment, you need a detailed understanding of the relevant threats and the obfuscation methods used.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.7" name="Only JavaScript provided with the app code is allowed" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>If native methods of the app are exposed to a WebView, verify that the WebView only renders JavaScript contained within the app package.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing JavaScript Execution in WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0031/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebView Protocol Handlers" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0032/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing WebViews Cleanup" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0037/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-2 - Testing for Java Objects Exposed Through WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0033/"/>
          </references>
          <standards>
            <standard ref="MASVS-PLATFORM-2" supportedStandardRef="owasp-masvs-testing-guide"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>- Produce a JavaScript payload.
                            - Inject it into the file that the app is requesting. The injection could be done either
                            through a MITM attack or by directly modifying the file in case it is stored on external
                            storage. The whole process could be done through Drozer that uses weasel (MWR's advanced
                            exploitation payload) which is able to install a full agent, injecting a limited agent into
                            a running process, or connecting a reverse shell to act as a Remote Access Tool (RAT).
                            - Check that only the JavaScript provided with the app is allowed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-4.1" name="Perform authentication process on remote services" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  If the app provides users access to a remote service, some form of authentication, such as username/password authentication, is performed at the remote endpoint. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.3" name="Remove or obfuscate the debugging symbols from native binaries" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>As a general rule of thumb, as little explanative information as possible should be provided
                        along with the compiled code. Some metadata such as debugging information, line numbers and
                        descriptive function or method names make the binary or bytecode easier to understand for the
                        reverse engineer, but isn't actually needed in a release build and can therefore be safely
                        discarded without impacting the functionality of the app.

                        This data shall be removed from the release version or shall be obfuscated in order to be
                        inaccessible to the reverse engineer.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing Obfuscation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0051/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Code and Verbose Error Logging" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0041/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-3 - Testing for Debugging Symbols" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0040/"/>
          </references>
          <standards>
            <standard ref="MASVS-RESILIENCE-3" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android:&amp;nbsp;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Symbols are usually stripped during the build process, so you need the compiled byte-code
                            and libraries to verify whether any unnecessary metadata has been discarded. First find the
                            nm binary in your Android NDK and export it (or create an alias).
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            export $NM =
                            $ANDROID_NDK_DIR/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            To display debug symbols:
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            $ $NM -a
                            libfoo.so/tmp/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm:
                            libfoo.so: no symbols&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;To display dynamic symbols:
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            $ $NM -D libfoo.so&amp;nbsp;
                            &lt;/blockquote&gt;Alternatively, open the file in your favorite disassembler and check the
                            symbol tables manually. Dynamic symbols can be stripped using the visibility compiler flag.
                            Adding this flag causes gcc to discard the function names while still preserving the names
                            of functions declared as JNIEXPORT.&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;br /&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            Check if the following was added to build.gradle:&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            externalNativeBuild { cmake { cppFlags &amp;quot;-fvisibility=hidden&amp;quot; } }&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;br /&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;For iOS:&amp;nbsp;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Use gobjdump to inspect the main binary and any included dylibs for Stabs and DWARF symbols.
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            $ gobjdump --stabs --dwarf TargetApp&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;In archive MyTargetApp:&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            - armv5te: file format mach-o-arm - aarch64: file format mach-o-arm64 Gobjdump is part of
                            binutils and can be installed via Homebrew on Mac OS X.
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-6.1" name="Request only the minimum required permissions from the mobile operating system" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security best practice dictates the practice of least-privilege is followed, thereby reducing the attack surface and risk of compromise. By limiting the access an application has to the system, developers may reduce the impact a compromise may have.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Request only the minimum required permissions from the mobile operating system. For example, if there is no requirement to use the camera then the application should not request this permission. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Review features and functionality present in the application, in particular legacy features, to determine if they are relevant and required, and if not remove them and associated OS permissions. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Determining Whether Sensitive Stored Data Has Been Exposed via IPC Mechanisms" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0007/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing Deep Links" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0028/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for App Permissions" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0024/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Sensitive Functionality Exposure Through IPC" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0029/"/>
            <reference name="OWASP MASTG - MASVS-PLATFORM-1 - Testing for Vulnerable Implementation of PendingIntent" url="https://mas.owasp.org/MASTG/tests/android/MASVS-PLATFORM/MASTG-TEST-0030/"/>
          </references>
          <standards>
            <standard ref="M1: Improper Platform Usage" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-PLATFORM-1" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android applications:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Install the application and review the permissions the application is asking for.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check they are actually needed.&lt;/li&gt;
                            &lt;/ol&gt;For iOS applications:&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Install the application and use its main functionality, iOS will ask for the
                            permission when it is needed.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify those permissions requests are in accordance with the minimum set of
                            permissions needed by the application.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-5.1-5.2" name="Secure channels with TLS" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  One of the core mobile app functions is sending/receiving data over untrusted networks like the Internet. If the data is not properly protected in transit, an attacker with access to any part of the network infrastructure (e.g., a Wi-Fi access point) may intercept, read, or modify it. This is why plaintext network protocols are rarely advisable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The vast majority of apps rely on HTTP for communication with the backend. HTTPS wraps HTTP in an encrypted connection (the acronym HTTPS originally referred to HTTP over Secure Socket Layer (SSL); SSL is the deprecated predecessor of TLS). TLS allows authentication of the backend service and ensures confidentiality and integrity of the network data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensuring proper TLS configuration on the server side is also important. The SSL protocol is deprecated and should no longer be used. Also TLS v1.0 and TLS v1.1 have known vulnerabilities and their usage is deprecated in all major browsers by 2020. TLS v1.2 and TLS v1.3 are considered best practice for secure transmission of data. Starting with Android 10 (API level 29) TLS v1.3 will be enabled by default for faster and secure communication. The major change with TLS v1.3 is that customizing cipher suites is no longer possible and that all of them are enabled when TLS v1.3 is enabled, whereas Zero Round Trip (0-RTT) mode isn't supported. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both the client and server are controlled by the same organization and used only for communicating with one another, you can increase security by hardening the configuration. 
&lt;/div&gt; 
&lt;div&gt;
  If a mobile application connects to a specific server, its networking stack can be tuned to ensure the highest possible security level for the server's configuration. Lack of support in the underlying operating system may force the mobile application to use a weaker configuration. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="M3: Insecure Communication" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Intercept the tested app's incoming and outgoing network traffic and make sure that this traffic is encrypted. You can intercept network traffic in any of the following ways: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Capture all HTTP(S) and Websocket traffic with an interception proxy like OWASP ZAP or Burp Suite and make sure all requests are made via HTTPS instead of HTTP.&lt;/li&gt; 
  &lt;li&gt;Interception proxies like Burp and OWASP ZAP will show HTTP(S) traffic only. You can, however, use a Burp plugin such as Burp-non-HTTP-Extension or the tool mitm-relay to decode and visualize communication via XMPP and other protocols.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.521">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.8" name="Secure in the unmanaged code, the allocated memory, freed memory and used memory" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Memory corruption bugs are a popular mainstay for hackers. This class of bug results from a programming error that causes the program to access an unintended memory location. Under the right conditions, attackers can capitalize on this behavior to hijack the execution flow of the vulnerable program and execute arbitrary code.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This kind of vulnerability occurs in a number of ways: 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;b&gt;Buffer overflows:&lt;/b&gt; This describes a programming error where an app writes beyond an allocated memory range for a particular operation. An attacker can use this flaw to overwrite important control data located in adjacent memory, such as function pointers. Buffer overflows were formerly the most common type of memory corruption flaw, but have become less prevalent over the years due to a number of factors. Notably, awareness among developers of the risks in using unsafe C library functions is now a common best practice plus, catching buffer overflow bugs is relatively simple. However, it is still worth testing for such defects.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Out-of-bounds-access: &lt;/b&gt;Buggy pointer arithmetic may cause a pointer or index to reference a position beyond the bounds of the intended memory structure (e.g. buffer or list). When an app attempts to write to an out-of-bounds address, a crash or unintended behavior occurs. If the attacker can control the target offset and manipulate the content written to some extent, code execution exploit is likely possible.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Dangling pointers:&lt;/b&gt; These occur when an object with an incoming reference to a memory location is deleted or deallocated, but the object pointer is not reset. If the program later uses the dangling pointer to call a virtual function of the already deallocated object, it is possible to hijack execution by overwriting the original vtable pointer. Alternatively, it is possible to read or write object variables or other memory structures referenced by a dangling pointer.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Use-after-free:&lt;/b&gt; This refers to a special case of dangling pointers referencing released (deallocated) memory. After a memory address is cleared, all pointers referencing the location become invalid, causing the memory manager to return the address to a pool of available memory. When this memory location is eventually re-allocated, accessing the original pointer will read or write the data contained in the newly allocated memory. This usually leads to data corruption and undefined behavior, but crafty attackers can set up the appropriate memory locations to leverage control of the instruction pointer.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Integer overflows: &lt;/b&gt;When the result of an arithmetic operation exceeds the maximum value for the integer type defined by the programmer, this results in the value "wrapping around" the maximum integer value, inevitably resulting in a small value being stored. Conversely, when the result of an arithmetic operation is smaller than the minimum value of the integer type, an integer underflow occurs where the result is larger than expected. Whether a particular integer overflow/underflow bug is exploitable depends on how the integer is used - for example, if the integer type were to represent the length of a buffer, this could create a buffer overflow vulnerability.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Format string vulnerabilities: &lt;/b&gt;When unchecked user input is passed to the format string parameter of the printf() family of C functions, attackers may inject format tokens such as '%c' and '%n' to access memory. Format string bugs are convenient to exploit due to their flexibility. Should a program output the result of the string formatting operation, the attacker can read and write to memory arbitrarily, thus bypassing protection features such as ASLR.&amp;nbsp;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   A best practice to fix the Memory Corruption Bugs are the following:&amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When using integer variables for array indexing, buffer length calculations, or any other security-critical operation, verify that unsigned integer types are used and perform precondition tests to prevent the possibility of integer wrapping.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Ensure the app does not use unsafe string functions such as strcpy, most other functions beginning with the "str" prefix, sprint, vsprintf, gets, etc.; If the app contains C++ code, ANSI C++ string classes are used; iOS apps written in Objective-C use NSString class. C apps on iOS should use CFString, the Core Foundation representation of a string. No untrusted data is concatenated into format strings.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Make Sure That Free Security Features Are Activated" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0044/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Memory Corruption Bugs" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0043/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Testing Implicit Intents" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0026/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Testing Local Storage for Input Validation" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0002/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Testing Object Persistence" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0034/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Testing for Injection Flaws" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0025/"/>
            <reference name="OWASP MASTG - MASVS-CODE-4 - Testing for URL Loading in WebViews" url="https://mas.owasp.org/MASTG/tests/android/MASVS-CODE/MASTG-TEST-0027/"/>
          </references>
          <standards>
            <standard ref="MASVS-CODE-4" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if some of the different Memory Corruption bugs appear when you try to use them to
                            gain access to the system.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-8.8" name="Set the detection mechanism to trigger different alarms" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;The detection mechanisms trigger responses of different types, including delayed and stealthy responses.&lt;/span&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.526">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="MASVS-7.1" name="Sign the app and provision with valid certificate with a properly protected key" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Code signing your app assures users that it is from a known source and the app hasn't been modified since it was last signed. This process can prevent an app from being tampered with, or modified to include malicious code.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Making Sure that the App is Properly Signed" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0038/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing File Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0047/"/>
            <reference name="OWASP MASTG - MASVS-RESILIENCE-2 - Testing Runtime Integrity Checks" url="https://mas.owasp.org/MASTG/tests/android/MASVS-RESILIENCE/MASTG-TEST-0050/"/>
          </references>
          <standards>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="MASVS-RESILIENCE-2" supportedStandardRef="owasp-masvs-testing-guide"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the app is correctly signed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T19:24:35.522">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="OWASP-MASVS">
          <threats>
            <threat ref="CAPEC-122-MOBILE" issueId="" issueLink="" name="Users lose trust in the application because it requests unnecessary privileges" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>If the mobile application requests permissions or access to components that are not
                                strictly needed by the application, then users can lose trust in the security of the
                                application with an associated impact on the trust placed in the application provider.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.11" mitigation="20"/>
                    <countermeasure ref="MASVS-4.11" mitigation="20"/>
                    <countermeasure ref="MASVS-4.5-4.6" mitigation="20"/>
                    <countermeasure ref="MASVS-6.1" mitigation="20"/>
                    <countermeasure ref="MASVS-8.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-2.11" mitigation="20"/>
                <countermeasure ref="MASVS-4.11" mitigation="20"/>
                <countermeasure ref="MASVS-4.5-4.6" mitigation="20"/>
                <countermeasure ref="MASVS-6.1" mitigation="20"/>
                <countermeasure ref="MASVS-8.1" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-133" issueId="" issueLink="" name="An attacker attempts to invoke all common switches and options to discover weaknesses" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>An attacker attempts to invoke all common switches and options in the target
                                application for the purpose of discovering weaknesses in the target. For example, in
                                some applications, adding the --debug switch causes debugging information to be
                                displayed, which can sometimes reveal sensitive processing or configuration information
                                to an attacker.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This attack differs from other forms of API abuse in that the attacker is blindly
                                attempting to invoke options in the hope that one of them will work rather than
                                specifically targeting a known option. Nonetheless, even if the attacker is familiar
                                with the published options of a targeted application this attack method may still be
                                fruitful as it might discover unpublicized functionality.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-215">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.3" mitigation="15"/>
                    <countermeasure ref="MASVS-7.4" mitigation="5"/>
                    <countermeasure ref="MASVS-8.2" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-489">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-656">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.13" mitigation="5"/>
                    <countermeasure ref="MASVS-2.14" mitigation="5"/>
                    <countermeasure ref="MASVS-2.3" mitigation="5"/>
                    <countermeasure ref="MASVS-5.1-5.2" mitigation="5"/>
                    <countermeasure ref="MASVS-7.9" mitigation="5"/>
                    <countermeasure ref="MASVS-8.11" mitigation="5"/>
                    <countermeasure ref="MASVS-8.13" mitigation="5"/>
                    <countermeasure ref="MASVS-8.8" mitigation="5"/>
                    <countermeasure ref="MASVS-8.9-8.12" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="MEMORY-LEAKAGE">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.15" mitigation="5"/>
                    <countermeasure ref="MASVS-2.5" mitigation="5"/>
                    <countermeasure ref="MASVS-4.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="OUTDATED-LIBRARIES">
                  <countermeasures>
                    <countermeasure ref="MASVS-1.9" mitigation="5"/>
                    <countermeasure ref="MASVS-5.6" mitigation="5"/>
                    <countermeasure ref="MASVS-7.5" mitigation="5"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-1.9" mitigation="5"/>
                <countermeasure ref="MASVS-2.13" mitigation="5"/>
                <countermeasure ref="MASVS-2.14" mitigation="5"/>
                <countermeasure ref="MASVS-2.15" mitigation="5"/>
                <countermeasure ref="MASVS-2.3" mitigation="5"/>
                <countermeasure ref="MASVS-2.5" mitigation="5"/>
                <countermeasure ref="MASVS-4.4" mitigation="5"/>
                <countermeasure ref="MASVS-5.1-5.2" mitigation="5"/>
                <countermeasure ref="MASVS-5.6" mitigation="5"/>
                <countermeasure ref="MASVS-7.3" mitigation="15"/>
                <countermeasure ref="MASVS-7.4" mitigation="5"/>
                <countermeasure ref="MASVS-7.5" mitigation="5"/>
                <countermeasure ref="MASVS-7.9" mitigation="5"/>
                <countermeasure ref="MASVS-8.11" mitigation="5"/>
                <countermeasure ref="MASVS-8.13" mitigation="5"/>
                <countermeasure ref="MASVS-8.2" mitigation="5"/>
                <countermeasure ref="MASVS-8.8" mitigation="5"/>
                <countermeasure ref="MASVS-8.9-8.12" mitigation="5"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-188" issueId="" issueLink="" name="Attacker gains access to sensitive data by modifying the application's expected behavior" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>An attacker discovers the structure, function, and composition of an object, resource,
                                or system by using a variety of analysis techniques to effectively determine how the
                                analyzed entity was constructed or operates. The goal of reverse engineering is often to
                                duplicate the function, or a part of the function, of an object in order to duplicate or
                                &amp;quot;back engineer&amp;quot; some aspect of its functioning.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Reverse engineering techniques can be applied to mechanical objects, electronic devices,
                                or software, although the methodology and techniques involved in each type of analysis
                                differ widely. When adversaries are reverse engineering software, methodologies fall
                                into two broad categories, 'white box' and 'black box.' White box techniques involve
                                methods which can be applied to a piece of software when an executable or some other
                                compiled object can be directly subjected to analysis, revealing at least a portion of
                                its machine instructions that can be observed upon execution.
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                'Black Box' methods involve interacting with the software indirectly, in the absence of
                                the ability to measure, instrument, or analyze an executable object directly. Such
                                analysis typically involves interacting with the software at the boundaries of where the
                                software interfaces with a larger execution environment, such as input-output vectors,
                                libraries, or APIs.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="MASVS-EMULATION-TOOLS">
                  <countermeasures>
                    <countermeasure ref="MASVS-8.5" mitigation="20"/>
                    <countermeasure ref="MASVS-8.7" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="MASVS-REVERSE-ENGINEERING-TOOLS">
                  <countermeasures>
                    <countermeasure ref="MASVS-8.10" mitigation="20"/>
                    <countermeasure ref="MASVS-8.4" mitigation="20"/>
                    <countermeasure ref="MASVS-8.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-8.10" mitigation="20"/>
                <countermeasure ref="MASVS-8.4" mitigation="20"/>
                <countermeasure ref="MASVS-8.5" mitigation="20"/>
                <countermeasure ref="MASVS-8.6" mitigation="20"/>
                <countermeasure ref="MASVS-8.7" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="sec-vuln-dev-process" issueId="" issueLink="" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-494">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.1" mitigation="34"/>
                    <countermeasure ref="MASVS-8.3" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.1" mitigation="34"/>
                <countermeasure ref="MASVS-8.3" mitigation="33"/>
                <countermeasure ref="use-analysis-static-code" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="PROVIDE MOBILE ACCESS TO SERVICES" name="Provide mobile access to services" desc="" library="OWASP-MASVS">
          <threats>
            <threat ref="7k-CWE-ErrorH" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through an error handling flaw" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>Errors and error handling represent a class of API. Errors related to error handling
                                are so common that they deserve a special kingdom of their own. As with API Abuse, there are two ways to introduce an error-related security vulnerability: the most common
                                one is handling errors poorly (or not at all). The second is producing errors that either give out too much information (to possible attackers) or are difficult to handle.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-388">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.6" mitigation="50"/>
                    <countermeasure ref="MASVS-7.7" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.6" mitigation="50"/>
                <countermeasure ref="MASVS-7.7" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-WEBVIEW" issueId="" issueLink="" name="Attackers gain access to the data through the WebView functionality" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>An attacker employs forceful browsing to access portions of a website that are
                                otherwise unreachable through direct URL entry.

                                Usually, a front controller or similar design pattern is employed to protect access to
                                portions of a web application.

                                Forceful browsing enables an attacker to access information, perform privileged
                                operations and otherwise reach sections of the web application that have been improperly
                                protected.
                            </desc>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-749">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.10" mitigation="25"/>
                    <countermeasure ref="MASVS-6.11" mitigation="20"/>
                    <countermeasure ref="MASVS-6.6" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-83">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.5" mitigation="25"/>
                    <countermeasure ref="MASVS-6.6-IOS-UIWEBVIEW" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-6.10" mitigation="25"/>
                <countermeasure ref="MASVS-6.11" mitigation="20"/>
                <countermeasure ref="MASVS-6.5" mitigation="25"/>
                <countermeasure ref="MASVS-6.6" mitigation="25"/>
                <countermeasure ref="MASVS-6.6-IOS-UIWEBVIEW" mitigation="20"/>
                <countermeasure ref="MASVS-6.7" mitigation="25"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-1" issueId="" issueLink="" name="Accessing Functionality Not Properly Constrained by ACLs" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>&lt;p&gt;In applications, particularly web applications, access to functionality is mitigated by the authorization framework, whose job it is to map ACLs to elements of the application's functionality; particularly URL's for web-apps. In cases in which the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker could potentially access resources that should only be available to users of a higher privilege level, or access management sections of the application, or can run queries for data that he is otherwise not supposed to.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.6" mitigation="25"/>
                    <countermeasure ref="MASVS-4.1" mitigation="25"/>
                    <countermeasure ref="MASVS-4.12" mitigation="25"/>
                    <countermeasure ref="MASVS-4.9" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-2.6" mitigation="25"/>
                <countermeasure ref="MASVS-4.1" mitigation="25"/>
                <countermeasure ref="MASVS-4.12" mitigation="25"/>
                <countermeasure ref="MASVS-4.9" mitigation="25"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="OWASP-MASVS" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-120">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.8" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a4acbe8d-0231-404c-aace-56de7fe5c070" diagramComponentId="9c4b6dc2-4d4b-481f-bff5-96a6247eda1e" ref="036adfeb-40aa-49e3-9879-19a9303f9ead" name="IoT Application" desc="" library="iot-security-compliance-framework" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="iot-application" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-592" name="Authentication Bypass Issues" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly perform authentication, allowing it to be bypassed through various methods.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references>
              <reference name="CWE-592: Authentication Bypass Issues" url="https://cwe.mitre.org/data/definitions/592.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="" issueLink="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently
                        proves that the claim is correct.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.898">
              <output/>
            </source>
            <references>
              <reference name="CWE-287: Improper Authentication" url="https://cwe.mitre.org/data/definitions/287.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="" issueLink="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="" issueLink="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.

When a resource is given a permission setting that provides access to a wider range of actors than required, it can lead to the exposure of sensitive information or to the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references>
              <reference name="CWE-732: Incorrect Permission Assignment for Critical Resource" url="https://cwe.mitre.org/data/definitions/732.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software generates an error message that includes sensitive information about its environment, users, or associated data.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;This sensitive information may be valuable on its own (such as a password), or it may be useful for launching other deadlier attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.591">
              <output/>
            </source>
            <references>
              <reference name="CWE-209: Information Exposure Through an Error Message" url="https://cwe.mitre.org/data/definitions/209.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-215" name="Information Exposure Through Debug Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The application contains debugging code that can expose sensitive information to untrusted parties.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.329">
              <output/>
            </source>
            <references>
              <reference name="CWE-215: Information Exposure Through Debug Information" url="https://cwe.mitre.org/data/definitions/215.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.899">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NO-PASSWORD-CHANGE" name="Lack of password change facility" state="0" impact="100" issueId="" issueLink="">
          <desc>When the application does not offer a password change facility, a compromise of the current user password will lead to an attacker having persistent access to the account.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.899">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-257" name="Plaintext Storage of a Password" state="0" impact="100" issueId="" issueLink="">
          <desc>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references>
              <reference name="CWE-257: Storing Passwords in a Recoverable Format" url="https://cwe.mitre.org/data/definitions/257.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Poor quality passwords in use" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.

An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references>
              <reference name="CWE-521: Weak Password Requirements" url="https://cwe.mitre.org/data/definitions/521.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNPATCHED-PRODUCT" name="Recommended security patches are not applied" state="0" impact="100" issueId="" issueLink="">
          <desc>When patches and updates are not applied in a timely manner then a product (e.g. Operating System, Software or Mobile App) or a system could be vulnerable to known security issues. These issues could be leveraged by an attacker to gain access to the system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.591">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.591">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNRESTRICTED-NETWORK" name="Service is exposed to a wide attack surface" state="0" impact="100" issueId="" issueLink="">
          <desc>The product is exposed or reachable by an unnecessarily large group of potential attackers. An over-exposure of a component increases the chance of an attacker gaining access to the system through a vulnerability.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="The application does not implement anti-automation mechanisms to prevent automated long-time sustained probes" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.

This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, to compromise program logic (such as limiting humans to a single vote), or for other purposes. For example, an authentication routine might not limit the number of times an attacker can guess a password, or a website might conduct a poll but only expect humans to vote a maximum of once a day.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.265">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-254-PROD" name="The product lacks key security features" state="0" impact="100" issueId="" issueLink="">
          <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.264">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-400" name="Uncontrolled Resource Consumption ('Resource Exhaustion')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly restrict the size or amount of resources that are requested or
                        influenced by an actor, which can be used to consume more resources than intended.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.900">
              <output/>
            </source>
            <references>
              <reference name="CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')" url="https://cwe.mitre.org/data/definitions/400.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-2" name="Unexpected Environment Condition" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;This is a generic weakness which includes several different situations that are all connected to unexpected environmental conditions and could be related to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify the areas of the application that can be affected by the following causes:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Misconfiguration.&lt;/li&gt;
                            &lt;li&gt;Uncleared buffers, shared memory, files, etc.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Problems between the interaction of two different entities that cause unexpected
                            behavior.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;div&gt;
                            Perform testing on them to look for a security problem.&amp;nbsp;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.899">
              <output/>
            </source>
            <references>
              <reference name="CWE-2: Unexpected Environment Condition" url="https://cwe.mitre.org/data/definitions/2.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="IOT2.4.13.3" name="All product related web servers have their web server HTTP trace and trace methods disabled" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  All product related web servers have their webserver HTTP trace and trace methods disabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The HTTP trace method is normally used to return the full HTTP request back to the requesting client for proxy-debugging purposes. However, servers supporting the HTTP trace method are subject to cross-site scripting (XSS) attacks when used in conjunction with various weaknesses in browsers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Disable web servers' HTTP trace and trace methods. 
&lt;/div&gt; 
&lt;div&gt;
  For example, regarding an Apache2.0 server: 
&lt;/div&gt; 
&lt;div&gt;
  Modify the security.conf file located under /etc/apache2/conf.d/security and set the Track option to Off. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.13.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>You can use curl to verify if HTTP TRACE was disabled in the server: 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;curl -v -X TRACE http://www.yourserver.com 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="Test HTTP Methods" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/02-Configuration_and_Deployment_Management_Testing/06-Test_HTTP_Methods"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.14.1" name="All the production test and calibration software is erased, removed or secured before the product is dispatched from the factory" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All the production test and calibration software used during manufacture is erased, removed or secured before the product is dispatched from the factory.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The product should have all of the production test and calibration software used during manufacture erased, removed or secured before the product is dispatched from the factory. This is to prevent alteration of the product post manufacture when using authorized production software, for example, hacking of the RF characteristics for greater RF &lt;span class="caps"&gt;ERP&lt;/span&gt;. Where such functionality is required in a service center, it should be erased or removed upon completion of any servicing activities.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Erase, remove or secure all the production test and calibration software used during manufacture, before the product is dispatched from the factory.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.284">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.18" name="All the related servers and network elements prevent anonymous/guest access except for read only access to public information" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  All the related servers and network elements prevent anonymous/guest access except for read only access to public information. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Read only access must be granted only for public information, so servers and network elements have to prevent all anonymous/guest access in order to prevent a potential theft or disclosure of sensitive information. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that all the related servers and network elements prevent anonymous/guest access except for read only access to public information. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.13.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.18" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>When you have identified an application interface, for example a Cisco router web interface or a WebLogic administrator portal, check that the known usernames and passwords for these devices do not result in successful authentication. To do this you can consult the manufacturer's documentation or, even simpler, you can find common credentials using a search engine or one of the sites or tools listed in the Reference section.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for Default Credentials" url="https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/04-Authentication_Testing/02-Testing_for_Default_Credentials"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.16" name="All the related servers and network elements store any passwords using a cryptographic implementation using industry standard cryptographic algorithms" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  All the related servers and network elements store any passwords using a cryptographic implementation using industry standard cryptographic algorithms. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Passwords must be securely stored using only strong and approved cryptographic algorithms. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the product securely stores any passwords using an industry standard cryptographic algorithm. For example, see FIPS 140 or OWASP Password Storage Cheat Sheet. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP - Password Storage Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html"/>
            <reference name="Security Requirements for Cryptographic Modules" url="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.13.16" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.16" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.17" name="All the related servers and network elements support access control measures" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  All the related servers and network elements support access control measures to restrict access to sensitive information or system processes to privileged accounts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Sensitive information or system processes must be protected by means of access control measures implemented on servers and network elements. It is very important that users, devices, and systems be verified, authenticated and authorized before access to such critical data is granted, in order to prevent a potential theft or disclosure of sensitive information or system processes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that all the related servers and network elements support access control measures. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NCSC CAF guidance - B.2 Identity and access control" url="https://www.ncsc.gov.uk/collection/caf/caf-principles-and-guidance/b-2-identity-and-access-control"/>
          </references>
          <standards>
            <standard ref="2.4.13.17" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.17" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;Testing for role/privilege manipulation&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In every portion of the application where a user can create information in the database (e.g., making a payment, adding a contact, or sending a message), receive information (account statement, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record this functionality. The tester should try to access such functions as a different user in order to check if it is possible to access a function that should not be permitted for the user's role/privilege (but might be permitted as another user).&amp;nbsp; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://wiki.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.2" name="Any product related web servers have their webserver identification options switched off" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Any product related web servers have their webserver identification options (e.g. Apache or Linux) switched off. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When a web server is showing the world its type and possibly its version number, it allows attackers to launch targeted attacks against this specific web server and version. In addition, if the version of the web server is known to be vulnerable to a specific exploit, an attacker would just need to use the exploit as part of their attack. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Switch off the webserver identification options.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  For example, to limit the information provided by an Apache server, modify the /etc/httpd/conf/httpd.conf file and change the following two lines: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ServerSignature Off 
&lt;/div&gt; 
&lt;div&gt;
  ServerTokens Prod 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Save the file, exit, and restart your Apache web server. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.13.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Check what information the web sever is currently revealing. 
&lt;/div&gt; 
&lt;div&gt;
  For example, for an Apache server run: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  curl --head localhost 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you receive a response with a line similar to: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Server: Apache/2.2.15 (CentOS) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Then the web server is revealing too much information and should be reconfigured so that the output is: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Server: Apache 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references>
              <reference name="Fingerprint Web Server" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/01-Information_Gathering/02-Fingerprint_Web_Server"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.5" name="Any product's port(s) that are not required for normal operation should be restricted or disabled" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If the product has any virtual port(s) that are not required for normal operation, they are only allowed to communicate with authorized and authenticated entities or are securely disabled when shipped.&lt;/p&gt; 
&lt;p&gt; Where a port is used for field diagnostics, the port input commands are deactivated and the output provides no information which could compromise the device, such as credentials, memory addresses or function names. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; One of the most important principles in information security is to reduce the attack surface. Open ports are not always a security risk. For example, a web server has to have 80 or 443 open, or otherwise users will not be able to connect to use the web server. Thus, taking into account that every open port increases the attack surface, any product's port(s) that are not required for normal operation should be restricted or disabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Restrict or disable any port(s) that are not required for normal operation.&lt;/p&gt; 
&lt;p&gt; Deactivate port input for port(s) that are used for field diagnostics and ensure their output provides no information which could compromise the device.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10 2014-I3 Insecure Network Services" url="https://www.owasp.org/index.php/Top_10_2014-I3_Insecure_Network_Services"/>
          </references>
          <standards>
            <standard ref="2.4.5.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Checking for Insecure Network Services includes:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Determining if insecure network services exist by reviewing your device for open ports using a port scanner.&lt;/li&gt; 
 &lt;li&gt;As open ports are identified, each can be tested using any number of automated tools that look for DoS vulnerabilities, vulnerabilities related to &lt;span class="caps"&gt;UDP&lt;/span&gt; services and vulnerabilities related to buffer overflow and fuzzing attacks.&lt;/li&gt; 
 &lt;li&gt;Reviewing network ports to ensure they are absolutely necessary and if there are any ports being exposed to the internet using UPnP.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.451">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.22" name="Input data validation should be maintained in accordance with industry practiced methods" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Input data validation should be maintained in accordance with industry practiced methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The failure to properly validate inputs is one of the most common software security weaknesses, specifically for web applications. This weakness leads to almost all of the major vulnerabilities in applications, such as cross site scripting, SQL injection, interpreter injection, locale/Unicode attacks, file system attacks and buffer overflows. Input data should never be trusted, and therefore software should ensure that input data is strongly typed, has correct syntax, and that it is within length boundaries and contains only permitted characters or that numbers are correctly signed and within range boundaries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that input data validation is maintained in accordance with industry practiced methods as per NIST Special Publication 800-53 SI-10 (please see reference URL). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST - SI-10 INFORMATION INPUT VALIDATION" url="https://nvd.nist.gov/800-53/Rev4/control/SI-10"/>
            <reference name="OWASP Proactive Controls - C5 - Validate all inputs" url="https://owasp.org/www-project-proactive-controls/v3/en/c5-validate-inputs"/>
          </references>
          <standards>
            <standard ref="2.4.13.22" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.22" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;Test&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that all areas that accept user data properly handle unexpected data such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;special characters (examples: &amp;lt; &amp;gt; $ % &amp;amp;)&lt;/li&gt; 
  &lt;li&gt;values other than the default items (e.g. letters if the URL argument is normally a number)&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Testing Scope&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; Input Form Fields 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; Hidden Variables 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; URL Parameters 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Desired System Behavior&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Whenever unexpected data is received by the application, the application will gracefully handle the situation and not return a stack trace or display detailed system information to the user. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Invalid form data should result in a message shown to the user explaining how to complete the form correctly. Unexpected data in hidden fields or the URL should result in more generic messages such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;i&gt;&amp;nbsp;The requested operation could not be performed.&lt;/i&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Input Validation testing" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/"/>
              <reference name="WebAppSec/Secure Coding QA Checklist" url="https://wiki.mozilla.org/WebAppSec/Secure_Coding_QA_Checklist"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.33" name="Memory locations used to store sensitive material (e.g. cryptographic keys, passwords/passphrases, etc.) are sanitized as soon as possible after they are no longer needed" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Memory locations used to store sensitive material (e.g. cryptographic keys, passwords/passphrases, etc.) are sanitized as soon as possible after they are no longer needed. These can include, but are not limited to, locations on the heap, the stack, and statically-allocated storage.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="ISO/IEC TR 24772:2013" url="https://www.iso.org/standard/61457.html"/>
            <reference name="MEM03-C. Clear sensitive information stored in reusable resources" url="https://wiki.sei.cmu.edu/confluence/display/c/MEM03-C.+Clear+sensitive+information+stored+in+reusable+resources"/>
          </references>
          <standards>
            <standard ref="2.4.5.33" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.451">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="TLS-STRONG-PROTOCOLS" name="Require cryptographically secure protocols (e.g. TLSv1.2 and above)" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only cryptographically strong ciphers should be used. Best-practice dictates that a subset of 'known good' ciphers and protocols must be defined and enforced on the server. &amp;nbsp;This may, however, cause compatibility issues with older browsers, requiring a balance between accessibility and security.&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define and enforce a list of acceptable ciphers and protocols. Disable SSLv3 and earlier protocols on the service.&lt;/li&gt;
 &lt;li&gt;Ideally, only TLSv1.2 and newer versions should be supported.&lt;/li&gt;
 &lt;li&gt;If TLSv1.1 or 1.0 are required, known secure configurations and ciphers should be selected.&lt;/li&gt;
 &lt;li&gt;SSLv3.0 and earlier should not be used.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="SSL Labs - SSL/TLS Deployment Best Practices" url="https://www.ssllabs.com/projects/best-practices/"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Use automated tools to identify all of the SSL/TLS protocols supported by the
                            service.&lt;/li&gt;
                            &lt;li&gt;Verify that TLSv1.2 is supported.&lt;/li&gt;
                            &lt;/ol&gt;Some of the tools that can perform these tests are:
                            &lt;ul&gt;
                            &lt;li&gt;&lt;a href="https://www.continuumsecurity.net/bdd-security/"&gt;BDD-Security&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://www.ssllabs.com/"&gt;SSLabs&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://github.com/mozilla/cipherscan"&gt;cipherscan&lt;/a&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="TLS-STRONG-CIPHERS" name="Require cryptographically strong TLS cipher suites" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only cryptographically strong ciphers should be used. Best-practice dictates that a subset of ' &lt;i&gt;known good&lt;/i&gt;' ciphers and protocols must be defined and enforced on the server. &amp;nbsp;This may, however, cause compatibility issues with older browsers, requiring a balance between accessibility and security.&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define and enforce a list of acceptable ciphers and protocols.&lt;/li&gt;
 &lt;li&gt;Explicitly disable known-bad ciphers and protocols, such as:
  &lt;ul&gt;
   &lt;li&gt;Null and export ciphers.&lt;/li&gt;
   &lt;li&gt;DH, MD5 and other weak cryptography.&lt;/li&gt;
   &lt;li&gt;Ciphers with keys smaller than 128 bits.&lt;/li&gt;
   &lt;li&gt;CBC ciphers with TLSv1.0 or earlier.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
            <reference name="SSL Labs - SSL/TLS Deployment Best Practices" url="https://www.ssllabs.com/projects/best-practices/"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Use automated tools to identify all the SSL/TLS protocols supported by the
                            service.&lt;/li&gt;
                            &lt;li&gt;Verify that cryptographically weak (also known as &amp;quot;export&amp;quot;
                            class) ciphers are not supported.&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;br /&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;Some of the tools that can perform these tests are:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;ul&gt;
                            &lt;li&gt;&lt;a href="https://www.continuumsecurity.net/bdd-security/" rel="nofollow"&gt;BDD-Security&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://www.ssllabs.com/" rel="nofollow"&gt;SSLabs&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://github.com/mozilla/cipherscan" rel="nofollow"&gt;cipherscan&lt;/a&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.2" name="Software images are digitally signed by the organization's approved signing authority. (for remote software upgrade)" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where remote software upgrade can be supported by the device, the software images are digitally signed by the organization's approved signing authority.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. A Certificate authority (CA) acts as a trusted third party, trusted both by the software author and by the device to verify the entity's identity.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that, for remote software upgrades, the software images are digitally signed by the organization's approved signing authority.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Protecting Software Integrity through code signing" url="https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=925977"/>
          </references>
          <standards>
            <standard ref="2.4.5.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.449">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.4" name="Software images should be encrypted whilst being transferred to a device. (for remote software upgrade)" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If remote software upgrades are supported by a device, software images should be encrypted whilst being transferred to it.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Data transmitted over a public network can be intercepted by unauthorized parties. A secure file transfer adds security features to the transmission by encrypting the file to preserve its confidentiality and integrity. This prevents eavesdroppers on the networks between the systems from accessing the file contents and reading or modifying them, necessitating the use of encryption for software images that are used for remote software upgrades.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Utilize encrypted protocols wherever possible to protect all data in transit. Where protocol encryption is not possible, consider encrypting data before the transfer.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Guide for Interconnecting Information Technology Systems" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-47.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.5.4" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.451">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.21" name="Software uses certificate pinning or public/private key equivalent for TCP/IP or UDP/IP connections" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the device software communicates with a product related webserver or application over &lt;span class="caps"&gt;TCP&lt;/span&gt;/IP or &lt;span class="caps"&gt;UDP&lt;/span&gt;/IP, the device software uses certificate pinning or public/private key equivalent, where appropriate.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Secure connections are a cornerstone for client/server communication. Users, developers, and applications expect end-to-end security for their secure channels, but some secure channels are not meeting this expectation. Specifically, channels built using well known protocols can be vulnerable to a number of attacks. For example, traditional certificate validation protects against many types of man-in-the-middle (&lt;span class="caps"&gt;MITM&lt;/span&gt;) attacks, but it doesn't prevent all of them.&lt;/p&gt; 
&lt;p&gt;Certificate pinning can still prevent the interception of a program's network traffic. Pinning is the process of associating a host with their expected X509 certificate or public key, which can be added to an application during development, or it can be added upon first encountering the certificate or public key.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the device software uses certificate pinning or a public/private key equivalent for &lt;span class="caps"&gt;TCP&lt;/span&gt;/IP or &lt;span class="caps"&gt;UDP&lt;/span&gt;/IP connections.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Certificate and Public Key Pinning" url="https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning#What_Is_Pinning"/>
            <reference name="Pinning Cheat Sheet" url="https://www.owasp.org/index.php/Pinning_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="2.4.5.21" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.450">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.26" name="Support for partially downloading updates is provided" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Support for partially downloading updates is provided for devices whose network access is limited or sporadic.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software updates perform numerous tasks and they are available for both the Operating System and individual software programs. Updates can apply a wide range of revisions to a system, adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For this reason, support for partially downloading updates may be provided for devices whose network access is limited or sporadic.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that software provides support for partially downloading updates.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The importance of general software updates and patches" url="https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html"/>
            <reference name="Why Software Updates Are So Important" url="https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.450">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.25" name="Support for partially installing updates is provided" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Support for partially installing updates is provided for devices whose on-time is insufficient for the complete installation of a whole update.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software updates perform numerous tasks and they are available for both the Operating System and individual software programs. Updates can apply a wide range of revisions into a system, adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For this reason, support for partially installing updates may be provided for devices whose on-time is insufficient for the complete installation of a whole update.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that software provides support for partially installing updates.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The importance of general software updates and patches" url="https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html"/>
            <reference name="Why Software Updates Are So Important" url="https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.450">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.15" name="The maximum permissible number of failed login attempts follows the recommendations of 3GPP TS33.117" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The maximum permissible number of consecutive failed user account login attempts follows the recommendations of 3GPP TS33.117. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If web services allow users to enter passwords as many times as they want, an attacker may try to exploit this by using scripts that enter different combinations until the password cracks. To prevent this, the number of failed login attempts per user should be limited, for example, to 5 failed attempts, locking the user out as a result. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the maximum permissible number of consecutive failed user account login attempts follows the recommendations of 3GPP TS33.117. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="4.2.3.4.5 - Policy regarding consecutive failed login attempts" url="https://www.etsi.org/deliver/etsi_ts/133100_133199/133117/15.00.00_60/ts_133117v150000p.pdf"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.13.15" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Refer to the following test case in the 3GPP TS 33.117 document:&amp;nbsp;&amp;nbsp; 
&lt;div&gt;
  Test Name: TC_FAILED_LOGIN_ATTEMPTS&amp;nbsp; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.689">
              <output/>
            </source>
            <references>
              <reference name="4.2.3.4.5 - Policy regarding consecutive failed login attempts" url="https://www.etsi.org/deliver/etsi_ts/133100_133199/133117/15.00.00_60/ts_133117v150000p.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.16" name="The product allows an authorized factory reset of the device's authorization information" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows an authorized factory reset of the device's authorization information.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The devices are often authorized to an account, based on license agreements with service providers. The device should have the option to be deauthorized and reset in case the user no longer wants to use it or if the user wants to authorize the device to another account.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows an authorized factory reset of the device's authorization information.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.951">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.12" name="The product allows the factory issued or OEM login accounts to be disabled, erased or renamed" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts should be disabled, erased or renamed. This is to avoid the type of attacks where factory default logins and passwords are published on the web, which allows attackers to mount very simple scanning and dictionary attacks on devices.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed when installed or commissioned.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.951">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.8" name="The product has protection against software reverting" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product has protection against reverting the software to an earlier and potentially less secure version.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions into a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For this reason, the product should have protection to prevent software reverting to an earlier, out-of-date and probably insecure version.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product has mechanisms against software reverting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The importance of general software updates and patches" url="https://ie.norton.com/internetsecurity-how-to-the-importance-of-general-software-updates-and-patches.html"/>
            <reference name="Why Software Updates Are So Important" url="https://securingtomorrow.mcafee.com/consumer/consumer-threat-notices/software-updates-important/"/>
          </references>
          <standards>
            <standard ref="2.4.5.8" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.8" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.452">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.11" name="The product only allows controlled user account access" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product only allows controlled user account access. Access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Product should not allow any unjustified anonymous or guest access in order to prevent potential theft or disclosure of sensitive information, therefore only controlled user account access should be permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product only allows controlled user account access and access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10 2013-A7-Missing Function Level Access Control" url="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control"/>
          </references>
          <standards>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The best way to find out if an application has failed to properly restrict function level access is to verify every application function:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Does the UI show navigation to unauthorized functions?&lt;/li&gt; 
 &lt;li&gt;Are server side authentication or authorization checks missing?&lt;/li&gt; 
 &lt;li&gt;Are server side checks done that solely rely on information provided by the attacker?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Using a proxy, browse your application with a privileged role. Then revisit restricted pages using a less privileged role. If the server responses are alike, you're probably vulnerable. Some testing proxies directly support this type of analysis.&lt;/p&gt; 
&lt;p&gt;You can also check the access control implementation in the code. Try following a single privileged request through the code and verifying the authorization pattern. Then search the codebase to find where that pattern is not being followed.&lt;/p&gt; 
&lt;p&gt; Automated tools are unlikely to find these problems.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.7" name="The product related web servers have repeated renegotiation of TLS connections disabled" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The product related web servers have repeated renegotiation of TLS connections disabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Generally, a TLS renegotiation is a process that allows changing the details of a handshake after a connection is made with the server and it occurs when the session expires on either side and data continues to be sent. This means either that the session has simply expired due to timeout, or that a peer wants to change the cipher suite or wants to request a peer certificate and hasn't done so yet.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  In the case of web services, the server encrypts traffic using TLS, but allows a client to renegotiate the connection after the initial handshake. If the server does not&amp;nbsp; limit the number of renegotiations for a single TLS connection, then a client may open several simultaneous connections and repeatedly renegotiate them, which may exhaust the server's resources and lead to a Denial of Service (DoS) condition. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that web servers have repeated renegotiation of TLS connections disabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tips for Securing SSL Renegotiation" url="https://www.mcafee.com/blogs/enterprise/tips-securing-ssl-renegotiation/"/>
            <reference name="Transport Layer Security (TLS) Renegotiation Indication Extension" url="https://tools.ietf.org/html/rfc5746"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.13.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  The following example demonstrates how to check if client-initiated renegotiation is supported. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  openssl s_client -connect example.com:443 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Once the connection is established, the server will wait for us to type the next command. We can write the following two lines in order to initiate a renegotiation by specifying R in the second line, followed by enter or return. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  openssl s_client -connect host:port 
&lt;/div&gt; 
&lt;div&gt;
  HEAD / HTTP/1.0 
&lt;/div&gt; 
&lt;div&gt;
  R 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;Enter or Return key&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A system that does not support client-initiated renegotiation will return an error and end the connection or the connection will time out. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  RENEGOTIATING 
&lt;/div&gt; 
&lt;div&gt;
  write:errno=104 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A system that supports client-initiated renegotiation will keep the connection active and respond to further commands.&amp;nbsp; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="Manually Testing SSL/TLS Weaknesses" url="https://www.contextis.com/us/blog/manually-testing-ssl-tls-weaknesses"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.6" name="The product/system enforces passwords to be compliant with 3GPP TS33.117 or similar recommendations" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Password entry follows industry standard practice such recommendations of the 3GPP TS33.117 Password policy. [ref. 1] or &lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3] on password length, characters from the groupings and special characters.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; A key concern when using passwords for authentication is password strength. A "strong" password policy makes it difficult or even improbable for one to guess the password through either manual or automated means. The main characteristics that define a strong password are length, complexity and topology (the pattern that a password is written).&lt;/p&gt; 
&lt;p&gt;Passwords should not be vulnerable to dictionary attack, which is a type of brute force attack technique for defeating a cipher or authentication mechanism by trying to determine its decryption key or passphrase by trying hundreds or sometimes millions of likely possibilities, such as words in a dictionary. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product/system enforces passwords to be compliant with 3GPP TS33.117 or similar (&lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3]) recommendations to include: At least eight characters in length, characters from the groupings: alpha, numeric and special characters and should not be vulnerable to dictionary attack.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Catalogue of general security assurance requirements" url="https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=2928"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="Password strategies that can help your organisation remain secure" url="https://www.ncsc.gov.uk/guidance/password-collection"/>
          </references>
          <standards>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [3] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.5" name="The product will not allow new passwords containing the user account name with which the user account is associated" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product will not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Weak passwords are a serious threat to computer security, and specifically the guessable ones should be forbidden through organizational policy and suitable technical measures. Using the user account name as password or part of a password is completely insecure and makes a brute-force attack against the login interface much easier.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product does not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Authentication Cheat Sheet" url="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"/>
            <reference name="Testing for Default or Guessable User Account (OWASP-AT-003)" url="https://www.owasp.org/index.php/Testing_for_Default_or_Guessable_User_Account_(OWASP-AT-003)"/>
          </references>
          <standards>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [2] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.8" name="The related servers have unused IP ports disabled" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The related servers have unused IP ports disabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  One of the most important principles in information security is to reduce the attack surface. Open ports are not always a security risk. For example, a web server has to have ports 80 or 443 open, or otherwise users will not be able to connect to use the web server. However, taking into account that every open port increases the attack surface, any related servers' port(s) that are not used should be disabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Disable the servers' unused IP ports.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST - CM-7 LEAST FUNCTIONALITY" url="https://nvd.nist.gov/800-53/Rev4/control/CM-7"/>
          </references>
          <standards>
            <standard ref="2.4.13.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.8" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For example, the following command will look up, with a TCP connect scan, all open ports on IP 192.168.1.100 and will try to determine what services are bound to them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  nmap -PN -sT -sV -p0-65535 192.168.1.100 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Enumerate Applications on Webserver" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/01-Information_Gathering/04-Enumerate_Applications_on_Webserver"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.24" name="The software has been designed to fail safely" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The software has been designed to meet the safety requirements identified in the risk assessment, i.e. in the case of unexpected invalid inputs, or erroneous software operations, the product does not become dangerous or compromise the security of other connected systems.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software is expected to fail, but when it does it has to be in a safe way and security controls and settings must remain in effect. The confidentiality and integrity of a system should remain intact even if availability has been lost. Attackers must not be permitted to gain access rights to privileged objects during a failure when those objects are normally inaccessible. Upon failing, a system that reveals sensitive information about the failure to potential attackers could supply additional knowledge to launch an attack.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that software has been designed to fail safely. This typically involves several things:&lt;br /&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Secure defaults (default is to deny access).&lt;/li&gt; 
 &lt;li&gt;Upon failure, undo changes and restore a secure state.&lt;/li&gt; 
 &lt;li&gt;Always check return values for failure.&lt;/li&gt; 
 &lt;li&gt;In conditional code/filters make sure that there is a default case that does the right thing.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="US-CERT: Failing Securely" url="https://www.us-cert.gov/bsi/articles/knowledge/principles/failing-securely"/>
          </references>
          <standards>
            <standard ref="2.4.5.24" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.450">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.4" name="Web servers' TLS certificate(s) are signed by trusted CAs, are within their validity period and processes are in place for their renewal" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  All the product related web servers' TLS certificate(s) are signed by trusted Certificate Authorities, are within their validity period and processes are in place for their renewal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The server validation component of TLS provides authentication between the server and the client via digital certificates. These certificates commonly include: 
&lt;/div&gt; 
&lt;div&gt;
  - Issuer: The entity that verified the information and issued the certificate (Certificate Authority). 
&lt;/div&gt; 
&lt;div&gt;
  - Valid to: The expiration date after which the certificate is no longer valid. 
&lt;/div&gt; 
&lt;div&gt;
  - Signature algorithm: The algorithm used to create the signature (keys) and prove its integrity. 
&lt;/div&gt; 
&lt;div&gt;
  As mentioned above, the Certificate Authority (CA) is an entity that issues digital certificates and acts as a trusted third party, trusted both by the client and by the server, and which verifies the server's identity. Therefore, all web server certificates must be signed by a trusted Certificate Authority. 
&lt;/div&gt; 
&lt;div&gt;
  Expired or untrusted certificates that users usually ignore are an issue, as they are taken advantage of by attackers to expose users to DNS spoofing or Man-in-the-middle attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the web servers' TLS certificates are signed by trusted certificate authorities, their validity period has not elapsed, and that processes are in place for their renewal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Transport Layer Protection Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Protection_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="2.4.13.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using OpenSSL, we can gather the server and intermediate certificates sent by a server using the following command: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  openssl s_client -showcerts -connect example.com:443 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references>
              <reference name="TLS/SSL Certificate Validity – Client and Server" url="https://owasp.org/www-project-web-security-testing-guide/stable/4-Web_Application_Security_Testing/09-Testing_for_Weak_Cryptography/01-Testing_for_Weak_Transport_Layer_Security.html"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.30" name="When a device cannot verify the authenticity of updates itself, it should be possible to revert to the last known good configuration which was stored on the device before the update was attempted" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When a device cannot verify the authenticity of updates itself, it should be possible to revert to the last known good configuration which was stored on the device before the update was attempted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; To implement certain control capabilities into a system, you'll want to remotely reset the device so as to achieve a known-good state and recover from errors and implement new configuration changes. You may also want to be able to reset the device to a factory default configuration, which is useful when you want to decommission a device or as a more invasive way to recover from unknown error conditions.&lt;/p&gt; 
&lt;p&gt;Lastly, issuing a command to update or reload firmware is very important in order maintain security of the remote device, implement feature enhancements, and patch bugs.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; When a device cannot verify authenticity of updates itself, it should be possible to revert to the last known good configuration which was stored on the device before the update was attempted.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Code of Practice for Consumer IoT Security" url="https://assets.publishing.service.gov.uk/government/uploads/system/uploads/attachment_data/file/971440/Code_of_Practice_for_Consumer_IoT_Security_October_2018_V2.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.5.30" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.30" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.30" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.451">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.29" name="Where a device cannot verify the authenticity of updates itself, only local updates are permitted" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where a device cannot verify the authenticity of updates itself (e.g. due to a lack of cryptographic capabilities), only local update by a physically present user is permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. This process is used for remote updates too, where devices can verify the signature to confirm that the package is authentic and complete. For this reason, if a device cannot verify the authenticity of updates itself, only local updates should be permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; If the device cannot verify the authenticity of updates, permit local updates only.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Top 10 2014-I9 Insecure Software/Firmware" url="https://www.owasp.org/index.php/Top_10_2014-I9_Insecure_Software/Firmware"/>
          </references>
          <standards>
            <standard ref="2.4.5.29" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.29" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.29" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.450">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.20" name="Where a Product or Service includes a critical functionality, the service's infrastructure shall incorporate protection against DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Where a Product or Service includes any safety-critical or life-impacting functionality, the service's infrastructure shall incorporate protection against Distributed Denial of Service (DDoS) attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Denial of Service (DoS) attack focuses on making a resource (site, application, server, etc.) unavailable for the purpose it was designed. There are many ways to make a service unavailable for legitimate users by manipulating network packets, programming, logical, or resources handling vulnerabilities, among others. If a service receives a very large number of requests, it may stop being available to legitimate users. In the same way, a service may stop if a programming vulnerability is exploited, or the way the service handles the resources it uses. 
&lt;/div&gt; 
&lt;div&gt;
  Distributed Denial of Service (DDoS) attacks achieve effectiveness by utilizing multiple compromised computer systems as sources of attack traffic. The exploited machines can include computers and other networked resources such as IoT devices.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the services' infrastructure incorporates protection against Distributed Denial of Service (DDoS) attacks, such as dropping of traffic or sink-holing (please see NIST 800-53 SC-5, reference URL [1]). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST - SC-5 DENIAL OF SERVICE PROTECTION" url="https://nvd.nist.gov/800-53/Rev4/control/SC-5"/>
            <reference name="OWASP Denial Of Service Attacks" url="https://owasp.org/www-community/attacks/Denial_of_Service"/>
          </references>
          <standards>
            <standard ref="2.4.13.20" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for Denial of Service" url="https://wiki.owasp.org/index.php/Testing_for_Denial_of_Service"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.21" name="Where a Product or Service includes critical functionality, the services' infrastructure shall incorporate redundancy to ensure service continuity and availability" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Where a Product or Service includes any safety-critical or life-impacting functionality, the services' infrastructure must incorporate redundancy to ensure service continuity and availability. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Since Web Services are susceptible to Denial of Service (DoS) attacks, it is important to replicate data and applications in a robust manner. Replication and redundancy can ensure access to critical data in the event of a failure. It will also enable the system to react in a coordinated way to deal with disruptions. Therefore, Web Services must be designed to include redundancy of critical functions, ensuring diversity among those critical functions implemented.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that, where a Product or Service includes a safety-critical or life-impacting functionality, the services' infrastructure incorporates redundancy to ensure service continuity and availability. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST - Guide to Secure Web Services" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-95.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.13.21" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.21" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.690">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.13.9" name="Where a TLS client certificate is requested, the server(s) only establishes a connection if the client certificate and its chain of trust are valid" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Where a product related to a webserver encrypts communications using TLS and requests a client certificate, the server(s) only establishes a connection if the client certificate and its chain of trust are valid. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In a traditional TLS handshake, the client authenticates the server, and the server doesn't know too much about the client. TLS Client Authentication is useful in cases where a server is keeping track of its numerous clients, as in IoT with millions of installs exchanging secure information. For example, an IoT company can issue a unique client certificate per device, and then limit the connections to their IoT infrastructure to only their devices by blocking connections where the client doesn't present a certificate signed by the company's Certificate Authority (CA). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that, where a TLS client certificate is requested, the server(s) only establishes a connection if the client certificate and its chain of trust are valid. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Client Authentication During SSL Handshake" url="https://docs.oracle.com/cd/E19424-01/820-4811/aakhe/index.html"/>
            <reference name="OWASP - TLS Client Authentication" url="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="2.4.13.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.9" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that only users whose certificates are signed by the trusted certificate authority can successfully authenticate with the server using client certificates.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:42.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.3" name="Where a UI password is used for login authentication, the factory issued or reset password is unique to each device in the product family" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where a user interface password is used for login authentication, the factory issued or reset password is unique to each device in the product family.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Apply a process which ensures that the initial user interface password or factory reset password is unique to each device in the product family. If a password-less authentication is used the same principles of uniqueness apply.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="US-CERT: Risks of Default Passwords on the Internet" url="https://www.us-cert.gov/ncas/alerts/TA13-175A"/>
          </references>
          <standards>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.15" name="Where passwords are entered on a UI, the actual pass phrase is obscured by default" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (.), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against "shoulder surfing", in other words to prevent nearby observers reading the password "over the user's shoulder" and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Pros and Cons of Password Masking" url="https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html"/>
          </references>
          <standards>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.951">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.2" name="Where the product has a secure source of time there is a method of validating its integrity" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the product has a secure source of time there is a method of validating its integrity.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Network Time Protocol (&lt;span class="caps"&gt;NTP&lt;/span&gt;) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks. In operation since before 1985, &lt;span class="caps"&gt;NTP&lt;/span&gt; is one of the oldest Internet protocols in current use. &lt;span class="caps"&gt;NTP&lt;/span&gt;sec is a fork implementation of &lt;span class="caps"&gt;NTP&lt;/span&gt; that has been systematically security-hardened.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the product has a secure source of time there is a method of validating its integrity such as &lt;span class="caps"&gt;NTP&lt;/span&gt;sec (please see reference &lt;span class="caps"&gt;URL&lt;/span&gt; [1]).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NTPsec project - a secure, hardened, and improved implementation of Network Time Protocol derived from NTP" url="https://www.ntpsec.org/"/>
          </references>
          <standards>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.952">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.17" name="Where the product  has the ability to remotely recover from an attack, it should rely on a known good state, to enable safe recovery and updating of the device" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;The ability to remotely recover from these situations should rely on a known good state, such as locally storing a known good version to enable safe recovery and updating of the device. This will avoid denial of service and costly recalls or maintenance visits, whilst managing the risk of potential takeover of the device by an attacker subverting update or other network communications mechanisms.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Ensuring Software Integrity in IoT Devices" url="https://www.omicsonline.org/open-access/ensuring-software-integrity-in-iot-devices-2165-7866-1000217.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:41.951">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-control" name="Access control" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-37" issueId="" issueLink="" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION AND AUTHORIZATION" name="Authentication and Authorization" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.15" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="NO-PASSWORD-CHANGE">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.15" mitigation="100"/>
                <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-USERNAME" issueId="" issueLink="" name="User accounts compromised through username guessing" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122" issueId="" issueLink="" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.17" mitigation="50"/>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.17" mitigation="50"/>
                <countermeasure ref="IOT2.4.13.18" mitigation="50"/>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130" issueId="" issueLink="" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="network-rate-limit" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CWE-256" issueId="" issueLink="" name="Users' passwords are compromised if the storage medium is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>A compromise of the storage system medium itself (device, server or database) could
                                allow attackers full access to the data
                                stored, including authentication credentials such as passwords.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-257">
                  <countermeasures>
                    <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-151" issueId="" issueLink="" name="An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials. Alternatively, an attacker may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the identity of the message, but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1036.001" url="https://attack.mitre.org/techniques/T1036/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.002" url="https://attack.mitre.org/techniques/T1036/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.003" url="https://attack.mitre.org/techniques/T1036/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.004" url="https://attack.mitre.org/techniques/T1036/004"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.005" url="https://attack.mitre.org/techniques/T1036/005"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.006" url="https://attack.mitre.org/techniques/T1036/006"/>
                <reference name="Mitre ATT&amp;CK Technique T1036.007" url="https://attack.mitre.org/techniques/T1036/007"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-592">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.9" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.9" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-20" issueId="" issueLink="" name="Attackers perform an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker, armed with the cipher text and the encryption algorithm used, performs an exhaustive (brute force) search on the key space to determine the key that decrypts the cipher text to obtain the plaintext.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.16" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.16" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-WIDE-ATTACK-SURFACE" issueId="" issueLink="" name="Attackers try to take advantage of a wide attack surface" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-215">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.14.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.14.1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.21" mitigation="100"/>
                    <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                    <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                    <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.21" mitigation="100"/>
                <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="OWASP A6:2017" issueId="" issueLink="" name="Attackers attempt to exploit unpatched flaws to gain unauthorized access or knowledge of the system" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attackers will often attempt to exploit unpatched flaws or access default accounts, unused pages, unprotected files and directories, etc., to gain unauthorized access or knowledge of the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.2" mitigation="33"/>
                    <countermeasure ref="IOT2.4.13.3" mitigation="33"/>
                    <countermeasure ref="IOT2.4.13.7" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.2" mitigation="33"/>
                <countermeasure ref="IOT2.4.13.3" mitigation="33"/>
                <countermeasure ref="IOT2.4.13.7" mitigation="34"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-607" issueId="" issueLink="" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-400">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.20" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.20" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-94" issueId="" issueLink="" name="Man in the Middle Attack" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>	&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed on to the other component as if it was never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identify between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.4" mitigation="100"/>
                    <countermeasure ref="IOT2.4.5.21" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.4" mitigation="100"/>
                <countermeasure ref="IOT2.4.5.21" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-157" issueId="" issueLink="" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="TLS-STRONG-CIPHERS" mitigation="50"/>
                    <countermeasure ref="TLS-STRONG-PROTOCOLS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="TLS-STRONG-CIPHERS" mitigation="50"/>
                <countermeasure ref="TLS-STRONG-PROTOCOLS" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="IOT-WIDE-ATTACK-SURFACE-OPEN-PORTS" issueId="" issueLink="" name="Attackers try to retrieve banner information through the open ports to discover potential vulnerabilities" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Every point of network interaction or another service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="UNRESTRICTED-NETWORK">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.8" mitigation="100"/>
                    <countermeasure ref="IOT2.4.5.5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.8" mitigation="100"/>
                <countermeasure ref="IOT2.4.5.5" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="read-or-post-data" name="Read or Post data" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-137" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>An adversary manipulates the content of request parameters for the purpose of undermining the security of the target. Some parameter encodings use text characters as separators. For example, parameters in a HTTP GET message are encoded as name-value pairs separated by an ampersand (&amp;amp;). If an attacker can supply text strings that are used to fill in these parameters, then they can inject special characters used in the encoding scheme to add or modify parameters. For example, if user input is fed directly into an HTTP GET request and the user provides the value "myInput&amp;amp;new_param=myValue", then the input parameter is set to myInput, but a new parameter (new_param) is also added with a value of myValue. This can significantly change the meaning of the query that is processed by the server. Any encoding scheme where parameters are identified and separated by text characters is potentially vulnerable to this attack - the HTTP GET encoding used above is just one example.</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.13.22" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.13.22" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="device-operation" name="Device operation" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.33" mitigation="14"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.24" mitigation="14"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.8" mitigation="13"/>
                  </countermeasures>
                </weakness>
                <weakness ref="UNPATCHED-PRODUCT">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.25" mitigation="14"/>
                    <countermeasure ref="IOT2.4.5.26" mitigation="15"/>
                    <countermeasure ref="IOT2.4.5.29" mitigation="15"/>
                    <countermeasure ref="IOT2.4.5.30" mitigation="15"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.5.24" mitigation="14"/>
                <countermeasure ref="IOT2.4.5.25" mitigation="14"/>
                <countermeasure ref="IOT2.4.5.26" mitigation="15"/>
                <countermeasure ref="IOT2.4.5.29" mitigation="15"/>
                <countermeasure ref="IOT2.4.5.30" mitigation="15"/>
                <countermeasure ref="IOT2.4.5.33" mitigation="14"/>
                <countermeasure ref="IOT2.4.5.8" mitigation="13"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="update-process" name="Update Process" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-122-UPDATE-PROCESS" issueId="" issueLink="" name="An adversary is able to exploit the update process of the device to escalate its privileges" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.30" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.5.2" mitigation="50"/>
                <countermeasure ref="IOT2.4.5.30" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-157" issueId="" issueLink="" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.5.4" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6a202cff-2ea3-4a31-8c95-1f2c32e4b724" diagramComponentId="f543eaf4-f120-4908-90ee-01515f8e13ad" ref="d0fdc25d-5d11-4e1f-af10-16a726654f57" name="IoT Mobile Application" desc="" library="iot-security-compliance-framework" parentComponentRef="098d813e-0ed5-4bb8-8f6a-58d4a2a3a4e8" componentDefinitionRef="iot-mobile-application" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CSD-ADM-OPEN" name="Access to the administration interfaces is open to untrusted parties" state="0" impact="100" issueId="" issueLink="">
          <desc>The application does not restrict access to administration interfaces to untrusted parties. 
This fact could allow an attacker to chain vulnerabilities in order to gain unauthorized access to the system. </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.738">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.273">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="" issueLink="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.

When a resource is given a permission setting that provides access to a wider range of actors than required, it can lead to the exposure of sensitive information or to the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-732: Incorrect Permission Assignment for Critical Resource" url="https://cwe.mitre.org/data/definitions/732.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.272">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NO-PASSWORD-CHANGE" name="Lack of password change facility" state="0" impact="100" issueId="" issueLink="">
          <desc>When the application does not offer a password change facility, a compromise of the current user password will lead to an attacker having persistent access to the account.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.273">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-916" name="Password hashes can be reverted over a reasonable period of time" state="0" impact="100" issueId="" issueLink="">
          <desc>The software generates a hash for a password, but it uses a scheme that does not provide a sufficient level of computational effort to make password cracking attacks infeasible or expensive. Many password storage mechanisms compute a hash and store the hash, instead of storing the original password in plaintext. In this design, authentication involves accepting an incoming password, computing its hash, and comparing it to the stored hash.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Many hash algorithms are designed to execute quickly with minimal overhead, even cryptographic hashes. However, this efficiency is a problem for password storage, because it can reduce an attacker's workload for brute-force password cracking. If an attacker can obtain the hashes through some other method (such as SQL injection on a database that stores hashes), then the attacker can store the hashes offline and use various techniques to crack the passwords by computing hashes efficiently. Without a built-in workload, modern attacks can compute large numbers of hashes, or even exhaust the entire space of all possible passwords, within a very short amount of time, using massively-parallel computing (such as cloud computing) and GPU, ASIC, or FPGA hardware. In such a scenario, an efficient hash algorithm helps the attacker. There are several properties of a hash scheme that are relevant to its strength against an offline, massively-parallel attack:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The amount of CPU time required to compute the hash (&amp;quot;stretching&amp;quot;)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The amount of memory required to compute the hash (&amp;quot;memory-hard&amp;quot; operations)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Including a random value, along with the password, as input to the hash computation (&amp;quot;salting&amp;quot;)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Given a hash, there is no known way of determining a password that produces this hash value, other than by guessing possible passwords (&amp;quot;one-way&amp;quot; hashing)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Relative to the number of all possible hashes that can be generated by the scheme, there is a low likelihood of producing the same hash for multiple different inputs (&amp;quot;collision resistance&amp;quot;)&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;Note that the security requirements for the software may vary depending on the environment and the value of the passwords. Different schemes might not provide all of these properties, yet may still provide sufficient security for the environment. Conversely, a solution might be very strong in preserving one property, which still being very weak for an attack against another property, or it might not be able to significantly reduce the efficiency of a massively-parallel attack. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-916" url="https://cwe.mitre.org/data/definitions/916.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-257" name="Plaintext Storage of a Password" state="0" impact="100" issueId="" issueLink="">
          <desc>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.273">
              <output/>
            </source>
            <references>
              <reference name="CWE-257: Storing Passwords in a Recoverable Format" url="https://cwe.mitre.org/data/definitions/257.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Poor quality passwords in use" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.

An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-521: Weak Password Requirements" url="https://cwe.mitre.org/data/definitions/521.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SOCI-ENG-SS" name="Shoulder surfing attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attacks leveraging social engineering such as monitoring the keyboard entry by the user or collecting her personal information to verify whether it is used as a password or forms part of the password.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.273">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-254-PROD" name="The product lacks key security features" state="0" impact="100" issueId="" issueLink="">
          <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.739">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="IOT2.4.11.3" name="Any related databases or files are either tamper resistant or restricted in their access" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The mobile application ensures that any related databases or files are either tamper resistant or restricted in their access.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Anti-tamper software is software which makes it harder for an attacker to modify it. Attackers can tamper with or install a backdoor on an app, re-sign it and publish the malicious version to third-party app marketplaces. Such attacks typically target popular apps and financial apps.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Employ anti-tamper and tamper-detection techniques to prevent illegitimate applications from executing. For example use checksums, digital signatures and other validation mechanisms to help detect file tampering. Upon detection of tampering, databases or files are re-initialized.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Impact:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Anti-tampering technology typically makes the software somewhat larger and also has a performance impact.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Android application development guidance" url="https://www.ncsc.gov.uk/guidance/application-development-guidance-introduction"/>
            <reference name="Implement Anti-tamper Techniques" url="https://books.nowsecure.com/secure-mobile-development/en/coding-practices/anti-tamper-techniques.html"/>
          </references>
          <standards>
            <standard ref="2.4.11.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.3" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.11.4" name="Application communicates with product related remote server(s) or device over a secure connection" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the application communicates with a product related remote server(s) or device it does so over a secure connection.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Secure connections are a cornerstone for a client/server communication. Cryptographic protocols such as Transport Layer Security (&lt;span class="caps"&gt;TLS&lt;/span&gt;) are used to prevent eavesdropping and tampering. Therefore the application should always communicate over a secure connection.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the application communicates with the product related remote server(s) or device over a secure connection such as a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection using certificate pinning.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Certificate and Public Key Pinning" url="https://www.owasp.org/index.php/Certificate_and_Public_Key_Pinning#What_Is_Pinning"/>
            <reference name="The Transport Layer Security (TLS) Protocol Version 1.2" url="https://tools.ietf.org/html/rfc5246"/>
            <reference name="Using TLS to protect data" url="https://www.ncsc.gov.uk/guidance/tls-external-facing-services"/>
          </references>
          <standards>
            <standard ref="2.4.11.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.4" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.474">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.11.6" name="Pass phrase is obscured by default where entered on a UI" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default to prevent the capture of passwords.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (.), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily to protect against "shoulder surfing", in other words to prevent nearby observers reading the password "over the user's shoulder" and thus stealing them, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Pros and Cons of Password Masking" url="https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html"/>
          </references>
          <standards>
            <standard ref="2.4.11.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.6" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-ADM-TRUST" name="Restrict access to administrative interfaces" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access to administrative interfaces to trusted actors from trusted locations to reduce the application attack surface and likelihood of compromise.&lt;/p&gt; 
&lt;p&gt;Restrict administrative access to specific networks or hosts.&lt;/p&gt; 
&lt;div&gt;
  Use strong authentication for privileged access, for example a 2FA. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
          </references>
          <standards>
            <standard ref="2.4.10.13" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.13" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Try to access the administrative interface from an untrusted location. For example, if you are using a Wordpress &lt;span class="caps"&gt;CMS&lt;/span&gt; you should restrict access to /wp-admin which should not be available from the internet but only from trusted networks or IP addresses.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-312-ENCRYPT" name="Store sensitive data in a cryptographically secure (system provided) store" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Applications storing or caching data locally are at risk of attack and compromise the data. Most mobile devices and operating systems offer built in APIs to store data in their encrypted stores, such as the Keychain on iOS. These stores are ultimately encrypted using a key derived from the device passcode and require the user to set a passcode.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  However, they do not enforce the quality of the passcode, nor is it possible to determine the quality of the passcode (and therefore, ultimately the key) from within the application.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Data should not be stored locally unless there is an explicit requirement to do so. This includes restricting thumbnails or screenshots of pages in the application that contain private data.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Data that must be stored on the client side must be held in a cryptographically secure store.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Use OS provided stores to protect private data on the client side, acknowledging that the residual risk from users with weak passwords may affect that data.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Do not store highly sensitive/financial data on the client-side without implementing a provably strong cryptographic process. For example, it should be encrypted using a key derived from an independent password where the strength of this password can be verified.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify which points of the component are storing sensitive data.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the storage routines and verify they are using OS APIs which are built on
                            top of secure storage components.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.16" name="The product allows an authorized factory reset of the device's authorization information" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows an authorized factory reset of the device's authorization information.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The devices are often authorized to an account, based on license agreements with service providers. The device should have the option to be deauthorized and reset in case the user no longer wants to use it or if the user wants to authorize the device to another account.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows an authorized factory reset of the device's authorization information.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.12" name="The product allows the factory issued or OEM login accounts to be disabled, erased or renamed" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts should be disabled, erased or renamed. This is to avoid the type of attacks where factory default logins and passwords are published on the web, which allows attackers to mount very simple scanning and dictionary attacks on devices.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed when installed or commissioned.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.152">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.11" name="The product only allows controlled user account access" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product only allows controlled user account access. Access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Product should not allow any unjustified anonymous or guest access in order to prevent potential theft or disclosure of sensitive information, therefore only controlled user account access should be permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product only allows controlled user account access and access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10 2013-A7-Missing Function Level Access Control" url="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control"/>
          </references>
          <standards>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The best way to find out if an application has failed to properly restrict function level access is to verify every application function:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Does the UI show navigation to unauthorized functions?&lt;/li&gt; 
 &lt;li&gt;Are server side authentication or authorization checks missing?&lt;/li&gt; 
 &lt;li&gt;Are server side checks done that solely rely on information provided by the attacker?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Using a proxy, browse your application with a privileged role. Then revisit restricted pages using a less privileged role. If the server responses are alike, you're probably vulnerable. Some testing proxies directly support this type of analysis.&lt;/p&gt; 
&lt;p&gt;You can also check the access control implementation in the code. Try following a single privileged request through the code and verifying the authorization pattern. Then search the codebase to find where that pattern is not being followed.&lt;/p&gt; 
&lt;p&gt; Automated tools are unlikely to find these problems.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.151">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.6" name="The product/system enforces passwords to be compliant with 3GPP TS33.117 or similar recommendations" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Password entry follows industry standard practice such recommendations of the 3GPP TS33.117 Password policy. [ref. 1] or &lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3] on password length, characters from the groupings and special characters.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; A key concern when using passwords for authentication is password strength. A "strong" password policy makes it difficult or even improbable for one to guess the password through either manual or automated means. The main characteristics that define a strong password are length, complexity and topology (the pattern that a password is written).&lt;/p&gt; 
&lt;p&gt;Passwords should not be vulnerable to dictionary attack, which is a type of brute force attack technique for defeating a cipher or authentication mechanism by trying to determine its decryption key or passphrase by trying hundreds or sometimes millions of likely possibilities, such as words in a dictionary. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product/system enforces passwords to be compliant with 3GPP TS33.117 or similar (&lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3]) recommendations to include: At least eight characters in length, characters from the groupings: alpha, numeric and special characters and should not be vulnerable to dictionary attack.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Catalogue of general security assurance requirements" url="https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=2928"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="Password strategies that can help your organisation remain secure" url="https://www.ncsc.gov.uk/guidance/password-collection"/>
          </references>
          <standards>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [3] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.5" name="The product will not allow new passwords containing the user account name with which the user account is associated" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product will not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Weak passwords are a serious threat to computer security, and specifically the guessable ones should be forbidden through organizational policy and suitable technical measures. Using the user account name as password or part of a password is completely insecure and makes a brute-force attack against the login interface much easier.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product does not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Authentication Cheat Sheet" url="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"/>
            <reference name="Testing for Default or Guessable User Account (OWASP-AT-003)" url="https://www.owasp.org/index.php/Testing_for_Default_or_Guessable_User_Account_(OWASP-AT-003)"/>
          </references>
          <standards>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [2] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-20" name="Validate all input data sent to exported activities, intents or content providers" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. This affects all application platforms, including mobile. All data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
 Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot; &lt;/p&gt;

 Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data. While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright. Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server. 

 This validation and sanitization must be performed in context. For example, data sent to an &lt;span class="caps"&gt;SQL&lt;/span&gt; database must be escaped for &lt;span class="caps"&gt;SQL&lt;/span&gt; special characters whereas data sent as part of a shell command must be escaped for shell special characters.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify exported activities, intents and content providers.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria).&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters.&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt; 
 &lt;li&gt;Check the code to look for input validation methods and input restrictions.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Test that they are effective by fuzzing the identified features.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Tools such as&amp;nbsp;&lt;a href="https://labs.mwrinfosecurity.com/tools/drozer/"&gt;Drozer&lt;/a&gt;&amp;nbsp;can help with this task.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.3" name="Where a UI password is used for login authentication, the factory issued or reset password is unique to each device in the product family" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where a user interface password is used for login authentication, the factory issued or reset password is unique to each device in the product family.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Apply a process which ensures that the initial user interface password or factory reset password is unique to each device in the product family. If a password-less authentication is used the same principles of uniqueness apply.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="US-CERT: Risks of Default Passwords on the Internet" url="https://www.us-cert.gov/ncas/alerts/TA13-175A"/>
          </references>
          <standards>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.11.1" name="Where a UI password is used for login authentication, the initial password or factory reset password is unique to each device" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where an application's user interface password is used for login authentication, the initial password or factory reset password is unique to each device in the product family.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Apply a process which ensures that the initial password or factory reset password is unique to each device in the product family.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="US-CERT: Risks of Default Passwords on the Internet" url="https://www.us-cert.gov/ncas/alerts/TA13-175A"/>
          </references>
          <standards>
            <standard ref="2.4.11.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.1" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:39.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.15" name="Where passwords are entered on a UI, the actual pass phrase is obscured by default" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (.), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against "shoulder surfing", in other words to prevent nearby observers reading the password "over the user's shoulder" and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Pros and Cons of Password Masking" url="https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html"/>
          </references>
          <standards>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.152">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.2" name="Where the product has a secure source of time there is a method of validating its integrity" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the product has a secure source of time there is a method of validating its integrity.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Network Time Protocol (&lt;span class="caps"&gt;NTP&lt;/span&gt;) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks. In operation since before 1985, &lt;span class="caps"&gt;NTP&lt;/span&gt; is one of the oldest Internet protocols in current use. &lt;span class="caps"&gt;NTP&lt;/span&gt;sec is a fork implementation of &lt;span class="caps"&gt;NTP&lt;/span&gt; that has been systematically security-hardened.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the product has a secure source of time there is a method of validating its integrity such as &lt;span class="caps"&gt;NTP&lt;/span&gt;sec (please see reference &lt;span class="caps"&gt;URL&lt;/span&gt; [1]).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NTPsec project - a secure, hardened, and improved implementation of Network Time Protocol derived from NTP" url="https://www.ntpsec.org/"/>
          </references>
          <standards>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.17" name="Where the product  has the ability to remotely recover from an attack, it should rely on a known good state, to enable safe recovery and updating of the device" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;The ability to remotely recover from these situations should rely on a known good state, such as locally storing a known good version to enable safe recovery and updating of the device. This will avoid denial of service and costly recalls or maintenance visits, whilst managing the risk of potential takeover of the device by an attacker subverting update or other network communications mechanisms.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Ensuring Software Integrity in IoT Devices" url="https://www.omicsonline.org/open-access/ensuring-software-integrity-in-iot-devices-2165-7866-1000217.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:40.153">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ADMINISTRATION SERVICE" name="Administration service" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CSD-ADM-IFACE" issueId="" issueLink="" name="Attackers gain access to the system through an unprotected administration interface" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Administrative interfaces grant access to sensitive operations that can typically
                                affect key security mechanisms, like modifying credentials and adding/removing user
                                accounts.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSD-ADM-OPEN">
                  <countermeasures>
                    <countermeasure ref="CSD-ADM-TRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-ADM-TRUST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION AND AUTHORIZATION" name="Authentication and Authorization" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CWE-256" issueId="" issueLink="" name="Users' passwords are compromised if the storage medium is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>A compromise of the storage system medium itself (device, server or database) could
                                allow attackers full access to the data
                                stored, including authentication credentials such as passwords.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-257">
                  <countermeasures>
                    <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-1-ANDROID" issueId="" issueLink="" name="Malicious applications gain access to unauthorized data or perform unauthorized actions" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>	&lt;p&gt;Attackers could use malicious mobile applications to attack legitimate applications that export their components improperly. The attacks and consequences of improperly exporting a component may depend on the exported component: If access to an exported Activity is not restricted, any application will be able to launch the activity. 
 This may allow a malicious application to gain access to sensitive information, modify the internal state of the application, or trick a user into interacting with the victim application whilst believing they are still interacting with the malicious application. If access to an exported Service is not restricted, any application may start and bind to the Service. &lt;/p&gt;

 Depending on the exposed functionality, this may allow a malicious application to perform unauthorized actions, gain access to sensitive information, or corrupt the internal state of the application. If access to a Content Provider is not restricted to only the expected applications, then malicious applications might be able to access the sensitive data. Note that in Android before 4.2, the Content Provider is automatically exported unless it has been explicitly declared as &lt;span class="caps"&gt;NOT&lt;/span&gt; exported.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="CWE-20" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-20" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-MOBILE" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks against the mobile application's user interface" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions. The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since elimination of patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.11.1" mitigation="50"/>
                    <countermeasure ref="require-use-strong-passwords" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.11.1" mitigation="50"/>
                <countermeasure ref="require-use-strong-passwords" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122-MOBILE-INTEGRITY" issueId="" issueLink="" name="An adversary is able to exploit the integrity of the Mobile Application" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.11.3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.11.3" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-403" issueId="" issueLink="" name="Attackers try to convince a target into performing actions or divulging confidential information in their benefit, often resulting in access to computer systems or facilities" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attack patterns within this category focus on the manipulation and exploitation of people. The techniques defined by each pattern are used to convince a target into performing actions or divulging confidential information that benefit the adversary, often resulting in access to computer systems or facilities. While similar to a confidence trick or simple fraud, the term typically applies to trickery or deception for the purpose of information gathering, fraud, or computer system access. In most cases, the adversary never comes face-to-face with the victim.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="SOCI-ENG-SS">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.11.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.11.6" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-AUTH-HASH" issueId="" issueLink="" name="Attackers gain access to user accounts by accessing the password database" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>An attacker with access to the plain, readable credential database would have access
                                to the system as any of those users.&amp;nbsp;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-916">
                  <countermeasures>
                    <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="NO-PASSWORD-CHANGE">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-USERNAME" issueId="" issueLink="" name="User accounts compromised through username guessing" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122" issueId="" issueLink="" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130" issueId="" issueLink="" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="network-rate-limit" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                    <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                    <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" issueId="" issueLink="" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="mobile-user-interface" name="Mobile user interface" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.11.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.11.6" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="SENSITIVE READ OR POST DATA" name="Sensitive Read or Post data" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-157" issueId="" issueLink="" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.11.4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.11.4" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-167" issueId="" issueLink="" name="Sensitive Data stored on the client could be accessed by an attacker" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker examines a client application for the presence of sensitive information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This information may be stored in configuration files, embedded within the application itself, or stored in other ways. Sensitive information may include long-term keys, passwords, credit card or financial information, and other private material that the client uses in its interactions with the server.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;While servers are (hopefully) protected by professional security administrators, most users may be less skilled at protecting their data. As a result, the user client may represent a weak link that an attacker could exploit directly. If an attacker can gain access to a client installation, they may be able to detect and lift sensitive information that could be leveraged directly (such as financial information), or allow the attacker to subvert future communication between the client and the server.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;In some cases, it may not even be necessary to gain access to another user's installation - if all instances of the client software are embedded with the same sensitive information (for example, long term keys for communication with the server), then the attacker must simply find a way to gain their own copy of the client in order to perform this attack.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="50" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CWE-312-ENCRYPT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-312-ENCRYPT" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CWE-94" issueId="" issueLink="" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="access-control" name="Access control" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-37" issueId="" issueLink="" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="8e72658a-b134-4714-848a-82866972b669" diagramComponentId="8eff8ca6-efa4-4420-9696-70f0411df7a9" ref="098d813e-0ed5-4bb8-8f6a-58d4a2a3a4e8" name="IoT Operating System" desc="" library="iot-security-compliance-framework" parentComponentRef="57f3c399-34a3-4da3-ad31-ffa68abf92da" componentDefinitionRef="iot-operating-system" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.394">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.097">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.393">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-326" name="Inadequate Encryption Strength" state="0" impact="100" issueId="" issueLink="">
          <desc>The software stores or transmits sensitive data using an encryption scheme that is theoretically sound, but is not strong enough for the level of protection required. A weak encryption scheme can be subjected to brute force attacks that have a reasonable chance of succeeding using current attack methods and resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.394">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-708" name="Incorrect Ownership Assignment" state="0" impact="100" issueId="" issueLink="">
          <desc>The software assigns an owner to a resource, but the owner is outside of the intended control sphere.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.006">
              <output/>
            </source>
            <references>
              <reference name="CWE-708: Incorrect Ownership Assignment" url="https://cwe.mitre.org/data/definitions/708.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="" issueLink="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.

When a resource is given a permission setting that provides access to a wider range of actors than required, it can lead to the exposure of sensitive information or to the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references>
              <reference name="CWE-732: Incorrect Permission Assignment for Critical Resource" url="https://cwe.mitre.org/data/definitions/732.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.533">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NO-PASSWORD-CHANGE" name="Lack of password change facility" state="0" impact="100" issueId="" issueLink="">
          <desc>When the application does not offer a password change facility, a compromise of the current user password will lead to an attacker having persistent access to the account.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.097">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-257" name="Plaintext Storage of a Password" state="0" impact="100" issueId="" issueLink="">
          <desc>The storage of passwords in a recoverable format makes them subject to password reuse attacks by malicious users. In fact, it should be noted that recoverable encrypted passwords provide no significant benefit over plaintext passwords since they are subject not only to reuse by malicious attackers but also by malicious insiders. If a system administrator can recover a password directly, or use a brute force search on the available information, the administrator can use the password on other accounts.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references>
              <reference name="CWE-257: Storing Passwords in a Recoverable Format" url="https://cwe.mitre.org/data/definitions/257.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Poor quality passwords in use" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.

An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references>
              <reference name="CWE-521: Weak Password Requirements" url="https://cwe.mitre.org/data/definitions/521.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNPATCHED-PRODUCT" name="Recommended security patches are not applied" state="0" impact="100" issueId="" issueLink="">
          <desc>When patches and updates are not applied in a timely manner then a product (e.g. Operating System, Software or Mobile App) or a system could be vulnerable to known security issues. These issues could be leveraged by an attacker to gain access to the system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.395">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNRESTRICTED-NETWORK" name="Service is exposed to a wide attack surface" state="0" impact="100" issueId="" issueLink="">
          <desc>The product is exposed or reachable by an unnecessarily large group of potential attackers. An over-exposure of a component increases the chance of an attacker gaining access to the system through a vulnerability.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.395">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-485" name="The application does not define isolated boundaries (Insufficient Encapsulation)" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The application does not sufficiently encapsulate critical data or functionality.
                        &lt;/div&gt;
                        &lt;p&gt;Encapsulation is about drawing strong boundaries. In a web browser, this might mean
                        ensuring that your mobile code cannot be abused by other mobile code. On the server, it might
                        mean differentiating between validated data and unvalidated data, between one user's data and
                        another's, or between data that users are allowed to see and data that they are not.&lt;/p&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify boundaries on the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Make sure that the application adequately enforces access control across those
                            boundaries. &amp;nbsp;For example, does it require some form of authentication at the
                            boundary? &amp;nbsp;Or does it prevent access across the boundary entirely?&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.006">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-254-PROD" name="The product lacks key security features" state="0" impact="100" issueId="" issueLink="">
          <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.534">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-2" name="Unexpected Environment Condition" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;This is a generic weakness which includes several different situations that are all connected to unexpected environmental conditions and could be related to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify the areas of the application that can be affected by the following causes:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Misconfiguration.&lt;/li&gt;
                            &lt;li&gt;Uncleared buffers, shared memory, files, etc.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Problems between the interaction of two different entities that cause unexpected
                            behavior.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;div&gt;
                            Perform testing on them to look for a security problem.&amp;nbsp;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.096">
              <output/>
            </source>
            <references>
              <reference name="CWE-2: Unexpected Environment Condition" url="https://cwe.mitre.org/data/definitions/2.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNNECESSARY-SERVICES" name="Unnecessary services are exposed" state="0" impact="100" issueId="" issueLink="">
          <desc>The application exposes unnecessary services which increase the attack surface.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.098">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SSL-WEAK-CIPHERS" name="Use of weak TLS cipher suites" state="0" impact="100" issueId="" issueLink="">
          <desc>A weak TLS cipher suite could allow an attacker to sniff the transmission by exploiting this weakness.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.394">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="RESTRICT-ACCESS-DATABASE" name="Access the data store from an account with the least privileges necessary" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Use an account with only the minimum set of permissions required to access the data store. The account should not be able to perform operations that are not explicitly required by the component that performs these operations. For example, if a web application needs to read data from certain tables and insert and update data from others, then a database account with only those specific permissions should be used by the application server.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify the user account used by external components to access this data store.&lt;/li&gt; 
 &lt;li&gt;Check which permissions are assigned to this user account.&lt;/li&gt; 
 &lt;li&gt;Verify that they are the minimum set of permissions necessary and no unnecessary permissions are assigned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.5" name="Alerting on unauthorized changes" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If an unauthorized change is detected, the device should alert the user/administrator to the issue and should not connect to wider networks than those necessary to perform the alerting function.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; IoT device software should be verified using secure boot mechanisms. When an unauthorized change is detected, the device should alert operators to the issue. The issue notification should not result in connections to wider networks than necessary to deliver the alert.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that, if an unauthorized change is detected, the device alerts the user/administrator to the issue and doesn't connect to wider networks than those necessary to perform the alerting function.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10-2017 A3-Sensitive Data Exposure" url="https://www.owasp.org/index.php/Top_10-2017_A3-Sensitive_Data_Exposure"/>
          </references>
          <standards>
            <standard ref="2.4.7.5" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.7.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.12" name="All network communication keys are stored securely, in accordance with industry standards" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All network communication keys are stored securely, in accordance with industry standards such as &lt;span class="caps"&gt;FIPS&lt;/span&gt; 140, or similar.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Network communication keys should be securely stored in accordance with industry standards. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that cryptographic keys for update integrity protection and confidentiality are securely managed in accordance with industry standards such as &lt;span class="caps"&gt;FIPS&lt;/span&gt; or 140-2.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Requirements for Cryptographic Modules" url="https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.140-2.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.7.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.12" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.7" name="All OS command line access to the most privileged accounts has been removed from the operating system" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All OS command line access to the most privileged accounts has been removed from the Operating System.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The most privileged account or "superuser" of the device's OS is a special user account used for system administration, capable of making unrestricted and potentially adverse system-wide changes. Due to this, it is often recommended that no one use the "superuser" as their normal user account, and any access from the command line should be removed.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Remove all OS command line access from the most privileged accounts of the Operating System.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.880">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.10" name="All the applicable security features supported by the OS are enabled" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All the applicable security features supported by the Operating System are enabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Operating System security features are essential to ensure OS security and to prevent various types of malicious actions and attacks such as malware, viruses, etc. Therefore all the applicable security features should be enabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Enable all the applicable security features supported by the Operating System such as updates, anti-spyware and anti-virus protection, etc.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="MacOS Security. Built right in" url="https://www.apple.com/macos/security/"/>
            <reference name="Overview of Linux Kernel Security Features" url="https://www.linux.com/learn/overview-linux-kernel-security-features"/>
            <reference name="Windows 10 Enterprise Security" url="https://docs.microsoft.com/en-us/windows/security/"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.6.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.6.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.3" name="Any unintended packet forwarding function should be blocked" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;For products with one or more network interfaces, any unintended packet forwarding function should be blocked.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Forwarding refers to the router-local action of transferring the packet from an input link interface to the appropriate output link interface. When applications allow user input to forward requests between different parts of the site, the application must check that the user is authorized to access the &lt;span class="caps"&gt;URL&lt;/span&gt;, to perform the functions it provides, and that it is an appropriate &lt;span class="caps"&gt;URL&lt;/span&gt; request. If the application fails to perform these checks, an attacker-crafted &lt;span class="caps"&gt;URL&lt;/span&gt; may pass the application's access control check and then forward the attacker to an administrative function that is not normally permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that any unintended packet forwarding function is blocked to stop undesirable communication paths.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10 2013-A10-Unvalidated Redirects and Forwards" url="https://www.owasp.org/index.php/Top_10_2013-A10-Unvalidated_Redirects_and_Forwards"/>
            <reference name="Unvalidated Redirects and Forwards Cheat Sheet" url="https://www.owasp.org/index.php/Unvalidated_Redirects_and_Forwards_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="2.4.7.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.3" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The best way to find out if an application has any unvalidated redirects or forwards is to:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Review the code for all redirect or forward uses (called transfer in .NET). For each use, identify if the target &lt;span class="caps"&gt;URL&lt;/span&gt; is included in any parameter values. If the target &lt;span class="caps"&gt;URL&lt;/span&gt; isn't validated against a whitelist, you are vulnerable.&lt;/li&gt; 
 &lt;li&gt;Also, spider the site to see if it generates any redirects (&lt;span class="caps"&gt;HTTP&lt;/span&gt; response codes 300-307, typically 302). Look at the parameters supplied prior to the redirect to see if they appear to be a target &lt;span class="caps"&gt;URL&lt;/span&gt; or a piece of such a &lt;span class="caps"&gt;URL&lt;/span&gt;. If so, change the &lt;span class="caps"&gt;URL&lt;/span&gt; target and observe whether the site redirects to the new target.&lt;/li&gt; 
 &lt;li&gt;If the code is unavailable, check all parameters to see if they look like part of a redirect or forward &lt;span class="caps"&gt;URL&lt;/span&gt; destination and test those that do.&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.9" name="Applications are operated at the lowest privilege level possible" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Applications are operated at the lowest privilege level possible. 	Rationale: Applications follow the principle of the least privilege in every module (such as processes, users, etc.), which means that they must be able to access only the information and resources that are necessary for their legitimate purpose. Doing this minimizes the amount of damage caused if an attacker successfully exploits any known or future vulnerability. Remediation: Configure the Operating System to operate applications at the lowest privilege level possible.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Principle_of_Least_Privilege" url="https://www.owasp.org/index.php/Category:Access_Control#Principle_of_Least_Privilege"/>
          </references>
          <standards>
            <standard ref="2.4.6.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.6.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.6.9" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.880">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.24" name="As far as reasonably possible, devices should remain operating and locally functional in the case of a loss of network connection and should recover cleanly in the case of restoration of a loss of power" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;As far as reasonably possible, devices should remain operating and locally functional in the case of a loss of network connection and should recover cleanly in the case of restoration of a loss of power. Devices should be able to return to a network in a sensible state and in an orderly fashion, rather than in a massive scale reconnect.&lt;/p&gt;

	&lt;p&gt;Continuous operation ensures that devices provide basic functionality without relying on other systems or networks. It is important to note here that a device should only be required to supply basic features when the network is inaccessible. Devices should provide continuous operation if the network or the Internet is inaccessible. Manual controls where needed, either physical buttons - or digital - on the device itself.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.7.24" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.7.24" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.24" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.3" name="A software update package is verified by the device before the update process begins" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A software update package has its digital signature, signing certificate and signing certificate chain verified by the device before the update process begins.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Code signing is the process of using a certificate-based digital signature to sign executables and scripts in order to confirm the software author and ensure that the code has not been altered or corrupted since it was signed. The Certificate Authority (CA) acts as a trusted third party, trusted both by the software author and by the device, and verifies the entity's identity. A chain of trust is established by validating each certificate from the end entity to the root certificate.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the device verifies the digital signature, the signing certificate and the signing certificate chain of a software update before the update process begins.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How certificate chains work" url="https://knowledge.digicert.com/solution/SO16297.html"/>
            <reference name="Microsoft Trusted Root Certificate: Program Requirements" url="https://technet.microsoft.com/en-us/library/cc751157.aspx"/>
            <reference name="Understanding An SSL Certificate Chain" url="https://comodosslstore.com/resources/what-is-an-ssl-certificate-chain-and-why-should-i-follow-it/"/>
          </references>
          <standards>
            <standard ref="2.4.5.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.4" name="Files and directories are set to appropriate access privileges" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Files and directories are set to appropriate access privileges on a need-to-access basis.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Most Operating Systems have methods to assign permissions or access rights to specific users or groups. These permissions control the ability of the users to view, change, navigate, and execute the contents of the file system. Therefore, files and directories should be set to appropriate access privileges according to the principle of the least privilege.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Set files, directories and persistent data to the minimum access privileges required to function correctly.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The principle of least privilege" url="https://www.owasp.org/index.php/Least_privilege"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.17" name="If there is a loss of communication, it should not compromise the integrity of the device" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If there is a loss of communications, it should not compromise the integrity of the device.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; A device is expected to lose communication periodically, but when it does it should be in a safe way and all security controls and settings should remain in effect. The integrity of a system should remain intact even if the network connection has been lost. Therefore, the device's integrity should be ensured regardless of whether or not it is connected to a network. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that, if there is a loss of communication, it does not compromise the integrity of the device.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.7.17" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.7.17" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.17" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.3" name="OS accounts or logins have been disabled or eliminated at the end of the development process" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All unnecessary accounts or logins have been disabled or removed from the software at the end of the software development process. E.g. Development or debug accounts.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Interactive Operating System accounts have been used during the software development process and in most cases have high privileges. This gives them access to critical resources and consequently they can be exploitable if they remain active after the development process. Therefore, any interactive accounts or logins should be disabled or eliminated at the end of the software development process.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Disable or remove all interactive Operating System accounts or logins at the end of the development process.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.8" name="OS kernel and its functions are prevented from being called by external product level interfaces and unauthorized applications" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product's OS kernel and its functions are prevented from being called by external product level interfaces and unauthorized applications.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The kernel is a computer program that is the core of a computer's Operating System, with complete control over everything in the system. Therefore only internal calls should be allowed and only from authorized applications in order to minimize the exposed attack surface.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Configure the product's OS kernel and its functions to prevent it being called by external product level interfaces and unauthorized applications.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.6.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.6.8" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.880">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.5" name="Password file(s) ownership and access/write permissions are set to the most privileged account of the device's OS" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If passwords must absolutely be stored in a local file, then password file(s) are owned by - and are only accessible to - and writable by the most privileged account of the device's OS.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The most privileged account or "superuser" of the devices' OS is a special user account used for system administration, capable of making unrestricted and potentially adverse system-wide changes. Due to this, it is often recommended that no-one use the "superuser" as their normal user account.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;According to the principle of least privilege, most users and applications run under an ordinary account to perform their work, and must be able to access only the information and resources that are necessary for their legitimate purpose. Thus, if a user only needs to be able to view a particular file, that user should have read-only access to it and should not be able to write to that file. Therefore all files that contain critical or sensitive data, like the password file(s), should have their ownership and access/write permissions set to the most privileged account of the device's OS.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Set ownership and access/write permissions for password file(s) to most privileged account of the device's OS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The principle of least privilege" url="https://www.owasp.org/index.php/Least_privilege"/>
          </references>
          <standards>
            <standard ref="2.4.6.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.6.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="INF-UNNECESSARY-SERVICES" name="Restrict access to required services only" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The attack surface, and therefore susceptibility to attack, should be minimized. In particular, services that are not explicitly required for the proper operation of the server or service should be disable, or access to them be restricted.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Any service, feature, or functionality that is not required should be disabled or removed. This applies equally to the operating system, middleware, web-server, or other software in use.&lt;/li&gt; 
 &lt;li&gt;Access to the server and remaining services (in particular those that cannot be disabled or removed) should be controlled use host-based and/or network security controls; for example host firewalls, network firewalls, routers, or switches.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt; 
 &lt;li&gt;Conduct a host review to confirm the software and services running and exposed on the system. - Support the host review with network based scans across at least all &lt;span class="caps"&gt;TCP&lt;/span&gt; and &lt;span class="caps"&gt;UDP&lt;/span&gt; ports (0-65535), together with &lt;span class="caps"&gt;RPC&lt;/span&gt; and other remote call services.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify the running and accessible services against expected configuration for the system, and against the security principal of 'least privilege'.&lt;/li&gt; 
 &lt;li&gt;Where a network or host based firewall is in use, it should be configured to drop connections rather than reject them. i.e. port-scans should identify only 'open' or 'filtered' services; no service should be identifiably 'closed'.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Note however that different network based security solutions exhibit different behavior in this regard.&lt;/li&gt; 
&lt;/ul&gt; </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.975">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="RESTRICT-SERVICE" name="Restrict access to the service at the network layer to reduce exposure" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to services should be restricted to expected sources, limiting the exposure of the service and its attack surface; and the likelihood of a malicious actor gaining access to the system.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Apply network layer security controls so that only the necessary and expected IP addresses are permitted access to connect to the service.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check that the network access to the service is only allowed for the components which need it.&lt;/li&gt; 
 &lt;li&gt;There should be a firewall protecting the network segment in which the service is installed.&lt;/li&gt; 
 &lt;li&gt;Check that the firewall restricts all access and only permits the minimum connections required using the principal of least privilege.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.12" name="The OS implements a separation architecture to separate trusted and untrusted applications" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;The trusted execution environment, or &lt;span class="caps"&gt;TEE&lt;/span&gt;, is an isolated area on the main processor of a device that is separated from the main operating system. It ensures that data is stored, processed and protected in a trusted environment. &lt;span class="caps"&gt;TEE&lt;/span&gt; provides protection for any connected "thing" by enabling end-to-end security, protected execution of authenticated code, confidentiality, authenticity, privacy, system integrity and data access rights.&lt;/p&gt;

	&lt;p&gt;It is already used widely in complex devices, such as smartphones, tablets and set-top boxes, and also by manufacturers of constrained chipsets and IoT devices in sectors such as industrial automation, automotive and healthcare, who are now recognizing its value in protecting connected things.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Trusted Execution Environment Provisioning (TEEP) Architecture" url="https://tools.ietf.org/id/draft-ietf-teep-architecture-01.html"/>
          </references>
          <standards>
            <standard ref="2.4.6.12" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.11" name="The OS is separated from the application(s) and is only accessible via defined secure interfaces" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The Operating System is separated from the application(s) and is only accessible via defined secure interfaces.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Every device that is to be operated by an individual requires a user interface, usually referred to as a shell. The shell is the outermost layer around the Operating System kernel and is used to access its services, including file management, process management (running and terminating applications), batch processing, and the operating system monitoring and configuration.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the Operating System is separated from the application(s) and is only accessible via defined secure interfaces.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Operating System Structure" url="https://ycpcs.github.io/cs420-fall2014/lectures/lecture4_operating_system_structure.pdf"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.878">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.16" name="The product allows an authorized factory reset of the device's authorization information" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows an authorized factory reset of the device's authorization information.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The devices are often authorized to an account, based on license agreements with service providers. The device should have the option to be deauthorized and reset in case the user no longer wants to use it or if the user wants to authorize the device to another account.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows an authorized factory reset of the device's authorization information.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.12" name="The product allows the factory issued or OEM login accounts to be disabled, erased or renamed" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts should be disabled, erased or renamed. This is to avoid the type of attacks where factory default logins and passwords are published on the web, which allows attackers to mount very simple scanning and dictionary attacks on devices.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product allows the factory issued or &lt;span class="caps"&gt;OEM&lt;/span&gt; login accounts to be disabled, erased or renamed when installed or commissioned.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.382">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.1" name="The product has measures to prevent unauthenticated software and files being loaded onto it or to limit their permissions" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product has measures to prevent unauthenticated software and files being loaded onto it. In the event that the product is intended to allow unauthenticated software, such software should only be run with limited permissions and/or sandbox.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; The product should have software execution control to limit which software applications and services are able to run on the Operating System and to control the exposed attack surface of the system by reducing the number of potential vulnerabilities.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software execution control is used in combination with an administrator defined set of rules, that define which software a non-privileged user is able to execute. These rules can be based on:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Software's properties e.g. name, signature, etc.&lt;/li&gt; 
 &lt;li&gt;More generic rules e.g. permitting execution of files based on their storage location on the system.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;In the event that the product is intended to allow unauthenticated software, such software should only be run with limited permissions and/or sandbox (security mechanism which executes the software in a restricted operating system environment).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Software Execution Control: CPA SC" url="https://www.ncsc.gov.uk/files/CPA-SC_Software_Execution_Control_2-3.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.5.1" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.5.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.5.1" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.11" name="The product only allows controlled user account access" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product only allows controlled user account access. Access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Product should not allow any unjustified anonymous or guest access in order to prevent potential theft or disclosure of sensitive information, therefore only controlled user account access should be permitted.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product only allows controlled user account access and access using anonymous or guest user accounts is not supported without justification.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top 10 2013-A7-Missing Function Level Access Control" url="https://www.owasp.org/index.php/Top_10_2013-A7-Missing_Function_Level_Access_Control"/>
          </references>
          <standards>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.11" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The best way to find out if an application has failed to properly restrict function level access is to verify every application function:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt;Does the UI show navigation to unauthorized functions?&lt;/li&gt; 
 &lt;li&gt;Are server side authentication or authorization checks missing?&lt;/li&gt; 
 &lt;li&gt;Are server side checks done that solely rely on information provided by the attacker?&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Using a proxy, browse your application with a privileged role. Then revisit restricted pages using a less privileged role. If the server responses are alike, you're probably vulnerable. Some testing proxies directly support this type of analysis.&lt;/p&gt; 
&lt;p&gt;You can also check the access control implementation in the code. Try following a single privileged request through the code and verifying the authorization pattern. Then search the codebase to find where that pattern is not being followed.&lt;/p&gt; 
&lt;p&gt; Automated tools are unlikely to find these problems.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.381">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.1" name="The product prevents unauthorized connections to itself or other devices the product is connected to" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product prevents unauthorized connections to itself or other devices the product is connected to.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; A significant vulnerability is networked system accessibility. Because by definition IoT systems are connected to the Internet, attacks can be conducted remotely, either by direct access to networked control interfaces, or by downloading malware to devices. Due to this, the product should prevent unauthorized connections to itself or other devices the product is connected to, for example by means of firewalls.&lt;/p&gt; 
&lt;p&gt;A firewall is software used to maintain the security of a private network and block unauthorized access to or from private networks and are often employed to prevent unauthorized Web users or malware from gaining access to private networks connected to the Internet.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product prevents unauthorized connections to itself or other devices the product is connected to. For example, there is a firewall on each interface and internet layer protocol.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST Guidelines on Firewalls and Firewall Policy" url="https://ws680.nist.gov/publication/get_pdf.cfm?pub_id=901083"/>
          </references>
          <standards>
            <standard ref="2.4.7.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.1" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.224">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.6.13" name="The product's OS kernel is designed so that each component runs with the minimal security capabilities required (e.g. a microkernel architecture)" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Monolithic kernels are large in size and the structure - or lack of structure - makes them difficult to change and maintain without affecting other parts of the kernel. The microkernel approach is based on the idea of only placing essential core real-time operating system functions in the kernel, and another functionality is designed in modules that communicate through the kernel via minimal, well-defined interfaces. The microkernel approach results in easily reconfigurable systems without the need to rebuild the kernel.&lt;/p&gt;

	&lt;p&gt;Modern mainstream operating systems (OSs) are designed for functionality, speed and ease of development. With the increase of functionality and support for more diverse hardware, their size and complexity keeps growing. These OSs have a monolithic structure, with most services contained in the kernel, i.e. the part of the system that is executed in the privileged mode of the hardware. The result is an explosive growth of the amount of privileged code.&lt;/p&gt;

	&lt;p&gt;Any code executing in privileged mode can bypass security and is therefore inherently part of a system's trusted computing base (&lt;span class="caps"&gt;TCB&lt;/span&gt;). Hence, we are experiencing a rapid growth of the &lt;span class="caps"&gt;TCB&lt;/span&gt; of mainstream OSs. As almost all code is buggy, and the number of bugs grows with the size of the code base, this &lt;span class="caps"&gt;TCB&lt;/span&gt; growth is bound to lead to a growth in the number of vulnerabilities.&lt;/p&gt;

	&lt;p&gt;The microkernel design, with its ability to reduce the &lt;span class="caps"&gt;TCB&lt;/span&gt; size, contains faults and encapsulates untrusted components, and therefore is, in terms of security, superior to monolithic systems.&lt;/p&gt;

	&lt;p&gt;Examples of microkernel architectures are: Mach, L4, &lt;span class="caps"&gt;QNX&lt;/span&gt;, &lt;span class="caps"&gt;MINIX&lt;/span&gt;, &lt;span class="caps"&gt;IBM&lt;/span&gt; K42.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Jury Is In: Monolithic OS Design Is Flawed" url="https://dl.acm.org/doi/10.1145/3265723.3265733"/>
          </references>
          <standards>
            <standard ref="2.4.6.13" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.879">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.6" name="The product/system enforces passwords to be compliant with 3GPP TS33.117 or similar recommendations" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Password entry follows industry standard practice such recommendations of the 3GPP TS33.117 Password policy. [ref. 1] or &lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3] on password length, characters from the groupings and special characters.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; A key concern when using passwords for authentication is password strength. A "strong" password policy makes it difficult or even improbable for one to guess the password through either manual or automated means. The main characteristics that define a strong password are length, complexity and topology (the pattern that a password is written).&lt;/p&gt; 
&lt;p&gt;Passwords should not be vulnerable to dictionary attack, which is a type of brute force attack technique for defeating a cipher or authentication mechanism by trying to determine its decryption key or passphrase by trying hundreds or sometimes millions of likely possibilities, such as words in a dictionary. &lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product/system enforces passwords to be compliant with 3GPP TS33.117 or similar (&lt;span class="caps"&gt;NIST&lt;/span&gt; SP800-63b [ref. 2] or &lt;span class="caps"&gt;NCSC&lt;/span&gt; [Ref 3]) recommendations to include: At least eight characters in length, characters from the groupings: alpha, numeric and special characters and should not be vulnerable to dictionary attack.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Catalogue of general security assurance requirements" url="https://portal.3gpp.org/desktopmodules/Specifications/SpecificationDetails.aspx?specificationId=2928"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="Password strategies that can help your organisation remain secure" url="https://www.ncsc.gov.uk/guidance/password-collection"/>
          </references>
          <standards>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.6" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [3] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.5" name="The product will not allow new passwords containing the user account name with which the user account is associated" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The product will not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Weak passwords are a serious threat to computer security, and specifically the guessable ones should be forbidden through organizational policy and suitable technical measures. Using the user account name as password or part of a password is completely insecure and makes a brute-force attack against the login interface much easier.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the product does not allow new passwords containing the user account name with which the user account is associated.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Authentication Cheat Sheet" url="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"/>
            <reference name="Testing for Default or Guessable User Account (OWASP-AT-003)" url="https://www.owasp.org/index.php/Testing_for_Default_or_Guessable_User_Account_(OWASP-AT-003)"/>
          </references>
          <standards>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.5" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Please see reference [2] for &lt;span class="caps"&gt;OWASP&lt;/span&gt; testing methodology link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.5.27" name="Update mechanisms must not interfere with performance expectations" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where real-time expectations of performance are present, update mechanisms must not interfere with meeting these expectations.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software update mechanisms may reduce the device's performance when running simultaneously with other processes.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that update mechanisms are not interfering with performance expectations, e.g. by running update processes at low priority.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Best practices for software updates in Configuration Manager" url="https://docs.microsoft.com/en-us/sccm/sum/plan-design/software-updates-best-practices"/>
            <reference name="Ubuntu Software Updates" url="https://wiki.ubuntu.com/SoftwareUpdates"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:43.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.21" name="When a factory reset is leveraged the device should warn that the secure operation may be compromised unless updated" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If a factory reset is leveraged the device should warn that the secure operation may be compromised unless updated.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Software updates perform numerous tasks and they are available for both Operating System and individual software programs. Updates can apply a wide range of revisions on a system such as adding new features, removing outdated features, updating drivers, fixing bugs, and most importantly, fixing security holes. For that reason, after a factory reset, the device may be reverted to an earlier, out-of-date and possibly insecure version and should be updated again to ensure its secure operation.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that if a factory reset is applied the device warns that the secure operation may be compromised unless updated.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.4.7.21" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.21" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.3" name="Where a UI password is used for login authentication, the factory issued or reset password is unique to each device in the product family" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where a user interface password is used for login authentication, the factory issued or reset password is unique to each device in the product family.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Where a device needs a password to log in, a default password is usually provided that allows the device to be accessed during its initial setup, and then the user will be prompted to change it after he/she first logs on. An attacker with knowledge of the default password can log in, usually with root or administrative privileges and perform malicious actions. Therefore, all initial passwords and factory reset passwords issued should be unique to each user.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Apply a process which ensures that the initial user interface password or factory reset password is unique to each device in the product family. If a password-less authentication is used the same principles of uniqueness apply.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="US-CERT: Risks of Default Passwords on the Internet" url="https://www.us-cert.gov/ncas/alerts/TA13-175A"/>
          </references>
          <standards>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.3" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.15" name="Where passwords are entered on a UI, the actual pass phrase is obscured by default" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where passwords are entered on a user interface, the actual pass phrase is obscured by default.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Password masking is the practice of obscuring the password characters when entered on a user interface, more often behind bullets (.), asterisks (*) or similar camouflaging characters. The idea behind password masking is primarily the protection against "shoulder surfing", in other words to prevent nearby observers reading the password "over the user's shoulder" and thus stolen, which is crucial for mobile devices. A second reason is to obscure the password in cases of shared screens, projectors, etc.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that the actual pass phrase is obscured by default where entered on a user interface.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Pros and Cons of Password Masking" url="https://www.schneier.com/blog/archives/2009/07/the_pros_and_co.html"/>
          </references>
          <standards>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.15" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.382">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.14" name="Where the CoAP protocol is used, it is protected by a DTLS connection with no known cipher vulnerabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the CoAP protocol is used, it is protected by a &lt;span class="caps"&gt;DTLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Constrained Application Protocol (CoAP) is a service layer protocol that is intended for use in resource-constrained internet devices, such as wireless sensor network nodes. CoAP is designed to easily translate to &lt;span class="caps"&gt;HTTP&lt;/span&gt; for simplified integration with the web, whilst also meeting specialized requirements such as multicast support, very low overhead, and simplicity, which are extremely important for IoT.&lt;/p&gt; 
&lt;p&gt;Because CoAP is built on top of &lt;span class="caps"&gt;UDP&lt;/span&gt; not &lt;span class="caps"&gt;TCP&lt;/span&gt;, &lt;span class="caps"&gt;SSL&lt;/span&gt;/TLS are not available to provide security. Datagram Transport Layer Security (&lt;span class="caps"&gt;DTLS&lt;/span&gt;) provides the same assurances as &lt;span class="caps"&gt;TLS&lt;/span&gt; but for transfers of data over &lt;span class="caps"&gt;UDP&lt;/span&gt;.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that, where the CoAP protocol is used, it is protected by a &lt;span class="caps"&gt;DTLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="MQTT and CoAP, IoT Protocols" url="https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php"/>
          </references>
          <standards>
            <standard ref="2.4.7.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.14" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.7.13" name="Where the MQTT protocol is used, it is protected by a TLS connection with no known cipher vulnerabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; &lt;span class="caps"&gt;MQTT&lt;/span&gt; (Message Queue Telemetry Transport), is a very lightweight and widely used messaging and information exchange protocol for IoT devices throughout the world. The &lt;span class="caps"&gt;MQTT&lt;/span&gt; communication can be encrypted using &lt;span class="caps"&gt;TLS&lt;/span&gt; / &lt;span class="caps"&gt;SSL&lt;/span&gt; protocols, ensuring a secure and safe communication.&lt;/p&gt; 
                    &lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the &lt;span class="caps"&gt;MQTT&lt;/span&gt; protocol is used, it is protected by a &lt;span class="caps"&gt;TLS&lt;/span&gt; connection with no known cipher vulnerabilities.&lt;/p&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="MQTT Version 3.1.1 Plus Errata 01" url="https://docs.oasis-open.org/mqtt/mqtt/v3.1.1/mqtt-v3.1.1.html"/>
            <reference name="MQTT and CoAP, IoT Protocols" url="https://www.eclipse.org/community/eclipse_newsletter/2014/february/article2.php"/>
          </references>
          <standards>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.13" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:45.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.2" name="Where the product has a secure source of time there is a method of validating its integrity" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Where the product has a secure source of time there is a method of validating its integrity.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Rationale:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Network Time Protocol (&lt;span class="caps"&gt;NTP&lt;/span&gt;) is a networking protocol for clock synchronization between computer systems over packet-switched, variable-latency data networks. In operation since before 1985, &lt;span class="caps"&gt;NTP&lt;/span&gt; is one of the oldest Internet protocols in current use. &lt;span class="caps"&gt;NTP&lt;/span&gt;sec is a fork implementation of &lt;span class="caps"&gt;NTP&lt;/span&gt; that has been systematically security-hardened.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;&lt;font size="4"&gt;Remediation:&lt;br /&gt;&lt;/font&gt;&lt;/b&gt; Ensure that where the product has a secure source of time there is a method of validating its integrity such as &lt;span class="caps"&gt;NTP&lt;/span&gt;sec (please see reference &lt;span class="caps"&gt;URL&lt;/span&gt; [1]).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NTPsec project - a secure, hardened, and improved implementation of Network Time Protocol derived from NTP" url="https://www.ntpsec.org/"/>
          </references>
          <standards>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.2" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="IOT2.4.8.17" name="Where the product  has the ability to remotely recover from an attack, it should rely on a known good state, to enable safe recovery and updating of the device" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;The ability to remotely recover from these situations should rely on a known good state, such as locally storing a known good version to enable safe recovery and updating of the device. This will avoid denial of service and costly recalls or maintenance visits, whilst managing the risk of potential takeover of the device by an attacker subverting update or other network communications mechanisms.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Ensuring Software Integrity in IoT Devices" url="https://www.omicsonline.org/open-access/ensuring-software-integrity-in-iot-devices-2165-7866-1000217.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.17" supportedStandardRef="iotsf-class-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-09T18:42:44.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION AND AUTHORIZATION" name="Authentication and Authorization" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="VULN-SERVICE" issueId="" issueLink="" name="Attackers gain access to unauthorised data by exploiting vulnerabilities in the service" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Attackers exploit vulnerabilities in the service and gain access to data, or to
                                services for which they are not authorized.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1190" url="https://attack.mitre.org/techniques/T1190"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="RESTRICT-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AUTH-DATASTORE-LEAST-PRIV" issueId="" issueLink="" name="Attackers who compromise the application or application server could directly access and modify the data store" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>If attackers gain access to the application or the application server, then they could
                                directly access the data store using the privilege assigned to the application.
                                &lt;div&gt;
                                If the data store user account used by the application has elevated privileges then this
                                could allow attackers to perform unauthorized operations such as dropping tables,
                                modifying the database schema or modifying data.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="1" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-180" issueId="" issueLink="" name="An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the system or network" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.1" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.3" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.5.1" mitigation="50"/>
                <countermeasure ref="IOT2.4.5.3" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="SERVER-ATTACK" issueId="" issueLink="" name="Data is compromised if the server itself is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>If attackers compromise the server that hosts the service or data, then the data and
                                the service itself could be at risk of compromise. The server could be compromised
                                through any of the services that it exposes.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="UNNECESSARY-SERVICES">
                  <countermeasures>
                    <countermeasure ref="INF-UNNECESSARY-SERVICES" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INF-UNNECESSARY-SERVICES" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                    <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="NO-PASSWORD-CHANGE">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.12" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.16" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.3" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.5" mitigation="20"/>
                <countermeasure ref="IOT2.4.8.6" mitigation="20"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-USERNAME" issueId="" issueLink="" name="User accounts compromised through username guessing" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="require-use-strong-passwords" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122" issueId="" issueLink="" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130" issueId="" issueLink="" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="network-rate-limit" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CWE-256" issueId="" issueLink="" name="Users' passwords are compromised if the storage medium is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>A compromise of the storage system medium itself (device, server or database) could
                                allow attackers full access to the data
                                stored, including authentication credentials such as passwords.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-257">
                  <countermeasures>
                    <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122-OS" issueId="" issueLink="" name="An adversary is able to exploit Operating System features of the target that should be reserved for privileged users" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts. This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.6.13" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-708">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.6.5" mitigation="13"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.6.11" mitigation="12"/>
                    <countermeasure ref="IOT2.4.6.3" mitigation="12"/>
                    <countermeasure ref="IOT2.4.6.4" mitigation="12"/>
                    <countermeasure ref="IOT2.4.6.7" mitigation="13"/>
                    <countermeasure ref="IOT2.4.6.8" mitigation="13"/>
                    <countermeasure ref="IOT2.4.6.9" mitigation="13"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.6.11" mitigation="12"/>
                <countermeasure ref="IOT2.4.6.13" mitigation="12"/>
                <countermeasure ref="IOT2.4.6.3" mitigation="12"/>
                <countermeasure ref="IOT2.4.6.4" mitigation="12"/>
                <countermeasure ref="IOT2.4.6.5" mitigation="13"/>
                <countermeasure ref="IOT2.4.6.7" mitigation="13"/>
                <countermeasure ref="IOT2.4.6.8" mitigation="13"/>
                <countermeasure ref="IOT2.4.6.9" mitigation="13"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="update-process" name="Update Process" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="OWASP A6:2017" issueId="" issueLink="" name="Attackers attempt to exploit unpatched flaws to gain unauthorized access or knowledge of the system" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attackers will often attempt to exploit unpatched flaws or access default accounts, unused pages, unprotected files and directories, etc., to gain unauthorized access or knowledge of the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.5.27" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.5.27" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="access-control" name="Access control" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="CAPEC-37" issueId="" issueLink="" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.11" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="OWASP A6:2017-OS" issueId="" issueLink="" name="Exploitation of Operating System security misconfiguration" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attackers will often attempt to exploit unpatched flaws or access default accounts, unused pages, unprotected files and directories, etc., to gain unauthorized access or knowledge of the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.6.10" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-485">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.6.11" mitigation="33"/>
                    <countermeasure ref="IOT2.4.6.12" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.6.10" mitigation="33"/>
                <countermeasure ref="IOT2.4.6.11" mitigation="33"/>
                <countermeasure ref="IOT2.4.6.12" mitigation="34"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                    <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                    <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.8.15" mitigation="33"/>
                <countermeasure ref="IOT2.4.8.17" mitigation="34"/>
                <countermeasure ref="IOT2.4.8.2" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="OWASP A6:2017" issueId="" issueLink="" name="Attackers attempt to exploit unpatched flaws to gain unauthorized access or knowledge of the system" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Attackers will often attempt to exploit unpatched flaws or access default accounts, unused pages, unprotected files and directories, etc., to gain unauthorized access or knowledge of the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="UNPATCHED-PRODUCT">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.21" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.21" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="iot-security-compliance-framework">
          <threats>
            <threat ref="IOT-WIDE-ATTACK-SURFACE" issueId="" issueLink="" name="Attackers try to take advantage of a wide attack surface" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="UNRESTRICTED-NETWORK">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.1" mitigation="50"/>
                    <countermeasure ref="IOT2.4.7.3" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.1" mitigation="50"/>
                <countermeasure ref="IOT2.4.7.3" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="IOT-INSUF-SEC" issueId="" issueLink="" name="Attackers gain access to the system exploiting insufficient or misconfigured security features" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>The product lacks key security features such as protection against tampering or unprotected storages, or it has other misconfigurations and omissions during production.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-254-PROD">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.17" mitigation="50"/>
                    <countermeasure ref="IOT2.4.7.24" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.17" mitigation="50"/>
                <countermeasure ref="IOT2.4.7.24" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-157" issueId="" issueLink="" name="An attacker monitors information transmitted between logical or physical nodes of a network" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker monitors information transmitted between logical or physical nodes of a network. The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic. The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information. Any transmission medium can theoretically be sniffed if the attacker can listen to the contents between the sender and recipient.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.14" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-326">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.5" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="SSL-WEAK-CIPHERS">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.13" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.13" mitigation="33"/>
                <countermeasure ref="IOT2.4.7.14" mitigation="34"/>
                <countermeasure ref="IOT2.4.7.5" mitigation="33"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37" issueId="" issueLink="" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="iot-security-compliance-framework" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="IOT2.4.7.12" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="IOT2.4.7.12" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="d0623bd3-f98a-44a1-83fb-5f072a000896" diagramComponentId="823eed8e-79b4-4324-9eb5-bdfc12edf2ab" ref="375e500c-8224-4ff1-b3a9-8dcb9da062dc" name="Other database" desc="" library="CS-Default" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="other" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets>
        <asset name="Protected Health Information" accessType="10"/>
        <asset name="Protected Health Information" accessType="40"/>
        <asset name="Protected Health Information" accessType="50"/>
      </assets>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.654">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.382">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.893">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-524" name="Information Exposure Through Caching" state="0" impact="100" issueId="" issueLink="">
          <desc>The application uses a cache to maintain a pool of objects, threads, connections, pages, or
                        passwords to minimize the time it takes to access them or the resources to which they connect.
                        If implemented improperly, these caches can allow access to unauthorized information or cause a
                        denial of service vulnerability.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.894">
              <output/>
            </source>
            <references>
              <reference name="CWE-524: Information Exposure Through Caching" url="https://cwe.mitre.org/data/definitions/524.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.503">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;ul&gt; 
 &lt;li&gt;Weak encryption algorithms&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Loss of encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Compromised encryption keys&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Revoked keys are still active (bad key lifecycle management)&lt;/li&gt; 
&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.383">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-485-PREPROD" name="Production data used in pre-production system" state="0" impact="100" issueId="" issueLink="">
          <desc>Production data used in pre-production system might not be properly protected as applications
                        in pre-production are not usually well tested. pre-production environments usually lack the
                        strong Countermeasures that are set for production environments.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.238">
              <output/>
            </source>
            <references>
              <reference name="CWE-485: Production data used in pre-production system" url="https://cwe.mitre.org/data/definitions/485.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-226" name="Sensitive information is not cleared from memory" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not fully clear previously used information in a data structure, file, or
                        other resource, before making that resource available to a party in another control sphere.

                        This typically results from new data that is not as long as the old data, which leaves portions
                        of the old data still available. Equivalent errors can occur in other situations where the
                        length of data is variable but the associated data structure is not. If memory is not cleared
                        after use, it may allow unintended actors to read the data when the memory is reallocated.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.894">
              <output/>
            </source>
            <references>
              <reference name="CWE-226: Sensitive information is not cleared from memory" url="https://cwe.mitre.org/data/definitions/226.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="EU-GDPR-UNRECOVERED-SENSITIVE-DATA" name="Unrecovered sensitive data" state="0" impact="100" issueId="" issueLink="">
          <desc>The sensitive data cannot be recovered after the data has been accidentally or intentionally deleted due to non-existent data backup.
          </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.504">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.238">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="RESTRICT-ACCESS-DATABASE" name="Access the data store from an account with the least privileges necessary" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>	&lt;p&gt;Use an account with only the minimum set of permissions required to access the data store. The account should not be able to perform operations that are not explicitly required by the component that performs these operations. For example, if a web application needs to read data from certain tables and insert and update data from others, then a database account with only those specific permissions should be used by the application server.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify the user account used by external components to access this data store.&lt;/li&gt; 
 &lt;li&gt;Check which permissions are assigned to this user account.&lt;/li&gt; 
 &lt;li&gt;Verify that they are the minimum set of permissions necessary and no unnecessary permissions are assigned.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.599">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="PATCH-SERVICE" name="Apply required security patches to the service" issueId="" issueLink="" platform="" cost="1" risk="86" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Vendors and other maintainers of software release patches in response to security flaws and other bugs in their products.&amp;nbsp; The longer a system is exposed with a known security vulnerability, the easier to compromise it. &amp;nbsp;As the exploit enters the public domain, they get included in automated exploitation suites like Metasploit and a wider less skilled miscreant is able to leverage them.&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Apply patches and other software updates in a timely manner to prevent unexpected failures or exploitation.&lt;/li&gt;&lt;li&gt;Clearly define an approach for testing and applying patches, in particular security patches, with expected timescales. &amp;nbsp;There is often a small window between the release of a patch, and potentially malicious actors reverse-engineering the patch to identify and exploit the flaw.&lt;/li&gt;&lt;li&gt;Use a threat intelligence, vulnerability scanning, or other alerting services to ensure the project team is promptly aware of issues within the project or its components.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-01 Configuration Management Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/152-08_02_CM-01"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check with the software or service vendor whether security vulnerabilities and
                            their associated patches are available for the version deployed.&lt;/li&gt;
                            &lt;li&gt;Evaluate the criticality of the vulnerability and schedule a fix accordingly.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-524" name="Clear caches of sensitive data" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications storing or caching data locally are at risk of attack and compromise of that data. Local temporary storage, thumbnail images, and configuration files often contain excerpts of sensitive information that may be left on the device during or after the application is used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure all temporary files, caches, and storage are purged after use and when the application is closed.&lt;/li&gt;&lt;li&gt;Do not allow the application to cache sensitive information outside of the OS provided secure stores.&lt;/li&gt;&lt;li&gt;Use OS controls to restrict thumbnails of the application in cases where sensitive information is displayed.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check the application for the use of caching.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify they are periodically emptied.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.789">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-backups-securely" name="Encrypt Backups securely on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="65" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Sensitive data and Backups of sensitive data shall be stored securely by encryption (data at rest).
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption should be used to protect the data.&lt;/li&gt;
  &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent storage.&lt;/li&gt;
  &lt;li&gt;The key for encrypting and decrypting the data should not be accessible from the same host.&amp;nbsp;&lt;/li&gt;
  &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
  &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference to a bespoke implementation).&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.1.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the functions of the application which are storing backups with sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="71" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.1" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.6" supportedStandardRef="swift-cscf"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.088">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="71" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.279">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" name="Encrypt personal data" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement encryption at rest (see guidance below) or give a risk-based explanation as to why encryption was not implemented.&lt;br /&gt;&lt;br /&gt;Use well-known encryption libraries, taking into account the data use, and do not invent your own. 
          &lt;br /&gt;
              &lt;ul&gt;
              &lt;li&gt;personal data must be encrypted&lt;/li&gt;
              &lt;li&gt;data that is not used by the application (e.g. passwords, ...) should be hashed so they cannot be recovered easily&lt;/li&gt;
              &lt;/ul&gt;
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
            <reference name="OWASP Proactive controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
          </references>
          <standards>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                &lt;ol&gt;
                &lt;li&gt;Verify that users' personal data processed by the application is encrypted at rest (e.g. databases).&lt;/li&gt;
                &lt;li&gt;If encryption is not being leveraged, verify that there is documentation outlining the reasoning for that decision.&lt;/li&gt;
                &lt;/ol&gt;
                &lt;/div&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-485-PREPROD" name="Ensure personal and other sensitive data is not exposed in pre-production environments" issueId="" issueLink="" platform="" cost="1" risk="71" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Pre-production environments should not expose personally identifiable information (PII) or other sensitive information. Often, such environments are populated with production data for testing or other purposes. &amp;nbsp;Security weaknesses, either in the software or controls around access to pre-production systems, can unnecessarily expose sensitive data. This is often a breach of legal and commercial requirements, including various governmental data protection standards and privacy acts, and industry regulations such as those required by the Payments Card Industry (PCI).&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Where test data is derived from production data, the following must be observed:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Data masking or obfuscation techniques must be leveraged to anonymize the data used in pre-production. &amp;nbsp;For example, all but the start and end of a credit card number must be removed/replaced&lt;/li&gt;&lt;li&gt;No real personally identifiable information (PII) or other sensitive data should be present in pre-production environments. &amp;nbsp;For example, names, dates of birth, and other personal information must be removed, randomized, or replaced.&lt;/li&gt;&lt;li&gt;Only data that has been processed and anonymized should be transferred into pre-production; ideally representative test data should be generated rather than relying on obfuscated production data.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the data used on the pre-production environment is not duplicated from production.&lt;/li&gt;&lt;li&gt;Where production data is modified for use in pre-production, review the transformations applied to ensure all PII and other sensitive data is removed, obfuscated, or otherwise scrubbed.&lt;/li&gt;&lt;li&gt;Verify that pre-production data is not real, and does not constitute PII data.&lt;/li&gt;&lt;li&gt;Consider use of 'canaries' or other deliberately injected values in production to perform random searches in pre-production environments for data that has been inappropriately migrated or used.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.089">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" name="Ensure that only strong algorithms, cyphers and protocols are used" issueId="" issueLink="" platform="" cost="0" risk="71" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Ensure that the application is using strong algorithms, cyphers and protocols. The general
                        practice and required minimum key lengths depend on the scenarios listed below.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048 bits&lt;/li&gt;
                        &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                        &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                        &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                        &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                        &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="NIST SP 800-175b" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-175b.pdf"/>
            <reference name="NIST SP 800-57" url="https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP cryptographic storage" url="https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet"/>
            <reference name="OWASP key management" url="https://www.owasp.org/index.php/Key_Management_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Cryptographic protocols comply to the best practices listed bellow:
                            &lt;br /&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048
                            bits&lt;/li&gt;
                            &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                            &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                            &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                            &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                            &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;br /&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:31.089">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="identify-sensitive-data" name="Identify the processed and stored sensitive data" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a mechanism or procedures to identify all created and processed data by the application and classify it to determine which level of sensitivity each piece of data belongs to. Each data category can then be mapped to security rules necessary for each level of sensitivity. Therefore, we should create a policy explaining how sensitive data should be managed and processed.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;For example, public marketing information that is not sensitive may be categorized as public data which is fine to place on the public website. Credit card numbers may be classified as private user data which may need to be encrypted whilst stored or in transit.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
          </references>
          <standards>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify all sensitive data created and processed by the application has been identified, and ensure that a policy is in place detailing how to best to deal with this data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.789">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="EU-GDPR-BACKUP" name="Implement a Backup and Recovery process" issueId="" issueLink="" platform="" cost="0" risk="71" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure backup policy is active and tested.The policy should describe the required recovery time objective (RTO) and recovery point objective (RPO) so that the availability of personal data can be restored in a timely manner (based upon the requirements specified by the DPO/CISO).
          &lt;br /&gt;&lt;br /&gt;
          Ensure an SLA has been defined for data availability. How 'timely manner' will be interpreted depends on your SLA. 
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
          </references>
          <standards>
            <standard ref="8.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>
                &lt;ol&gt;
                &lt;li&gt;Verify backup policy documentation exists that are up-to-date and in compliance with the requirements of the Data Protection Practitioner.&lt;/li&gt;
                &lt;li&gt;Regularly test data backup procedures and data restoration.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.281">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-226" name="Overwrite data in memory before release" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Memory chunks released by an application are not actively overwritten, they are simply de-referenced with the data left until the memory is reallocated and used by another process. As such, sensitive data that is stored in memory may be exposed to an attacker with the ability to inspect that memory; for example through use of an uninitialized variable or other process.&amp;nbsp;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  Overwrite memory with zeros or random data before release.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  Pay particular attention to sensitive data, such as passwords or other credentials, or sensitive personal information.
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.3.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the parts of the code that handles authentication and very sensitive data
                            (i.e. credit card data).&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify that the buffers holding that data are overwritten with zeros and freed as
                            soon as they are not needed anymore.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:23:30.787">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-306-SERVICE" name="Require authentication before presenting restricted data" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For less sensitive but still restricted data, simple verification of the location of the user may suffice (e.g. IP restrictions).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For non-sensitive but non-public data, access could be restricted by IP address, limiting access to internal networks, workstations, or gateways&lt;/li&gt;&lt;li&gt;For more sensitive data, TLS client-side certificates may be appropriate&lt;/li&gt;&lt;li&gt;Where secret or other sensitive data is handled, a full authentication process to identify and validate users with single or multi-factor authentication may be required&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Identify which parts of the service present sensitive data.&amp;nbsp;&lt;/li&gt;
                &lt;li&gt;Try to obtain access to this information without any type of authentication, for example, attempt to navigate directly to URLs that present sensitive data.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.268">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="RESTRICT-SERVICE" name="Restrict access to the service at the network layer to reduce exposure" issueId="" issueLink="" platform="" cost="1" risk="86" state="Recommended" owner="jrabe@iriusrisk.com" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to services should be restricted to expected sources, limiting the exposure of the service and its attack surface; and the likelihood of a malicious actor gaining access to the system.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Apply network layer security controls so that only the necessary and expected IP addresses are permitted access to connect to the service.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.7.18" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Check that the network access to the service is only allowed for the components which need it.&lt;/li&gt; 
 &lt;li&gt;There should be a firewall protecting the network segment in which the service is installed.&lt;/li&gt; 
 &lt;li&gt;Check that the firewall restricts all access and only permits the minimum connections required using the principal of least privilege.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACCESS SERVICE" name="Access service" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-115" issueId="" issueLink="" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" issueId="" issueLink="" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="EU-GDPR-MISSING-ENCRYPTION-SENSITIVE-DATA">
                  <countermeasures>
                    <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="EU-GDPR-ENCRYPT-PERSONAL-DATA" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="VULN-SERVICE" issueId="" issueLink="" name="Attackers gain access to unauthorised data by exploiting vulnerabilities in the service" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Attackers exploit vulnerabilities in the service and gain access to data, or to
                                services for which they are not authorized.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1190" url="https://attack.mitre.org/techniques/T1190"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                    <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="PATCH-SERVICE" mitigation="50"/>
                <countermeasure ref="RESTRICT-SERVICE" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication" name="Authentication" desc="" library="CS-Default">
          <threats>
            <threat ref="AUTH-DATASTORE-LEAST-PRIV" issueId="" issueLink="" name="Attackers who compromise the application or application server could directly access and modify the data store" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>If attackers gain access to the application or the application server, then they could
                                directly access the data store using the privilege assigned to the application.
                                &lt;div&gt;
                                If the data store user account used by the application has elevated privileges then this
                                could allow attackers to perform unauthorized operations such as dropping tables,
                                modifying the database schema or modifying data.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="1" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="RESTRICT-ACCESS-DATABASE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="STORE SENSITIVE DATA" name="Storing sensitive data" desc="" library="CS-Default">
          <threats>
            <threat ref="BACKUP-COMPROMISE" issueId="" issueLink="" name="Sensitive data is compromised if a backup of the data is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Sensitive data could be compromised if an attacker gained access to a backup copy of
                                that data.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="50"/>
                    <countermeasure ref="store-backups-securely" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="50"/>
                <countermeasure ref="store-backups-securely" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="EU-GDPR-LOSS-PERSONAL-DATA" issueId="" issueLink="" name="Loss of personal data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Personal data can be lost by (accidental or malicious) deletion and system failures.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="EU-GDPR-UNRECOVERED-SENSITIVE-DATA">
                  <countermeasures>
                    <countermeasure ref="EU-GDPR-BACKUP" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="EU-GDPR-BACKUP" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="HOST-COMPROMISE" issueId="" issueLink="" name="Sensitive data is compromised if the host itself is compromised" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>If sensitive data is stored or processed on the host, then should the host itself be
                                compromised by an attacker, the confidentiality and/or the integrity of the data would
                                also be at risk.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="ACCESS SENSITIVE DATA" name="Access sensitive data" desc="" library="CS-Default">
          <threats>
            <threat ref="PRE-PROD" issueId="" issueLink="" name="Sensitive data is exposed to unauthorised personnel in a pre-production environment" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>Pre-production environments are usually available to a wide group of developers and
                                testers who may not be authorized to view sensitive production data.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-485-PREPROD">
                  <countermeasures>
                    <countermeasure ref="CWE-485-PREPROD" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-485-PREPROD" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-204" issueId="" issueLink="" name="An attacker examines a target application's cache for sensitive information in order to get at sensitive data" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>An attacker examines a target application's cache for sensitive information. Many applications that communicate with remote entities or which perform intensive calculations utilize caches to improve efficiency. However, if the application computes or receives sensitive information and the cache is not appropriately protected, an attacker can browse the cache and retrieve this information. This can result in the disclosure of sensitive information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-226">
                  <countermeasures>
                    <countermeasure ref="CWE-226" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-524">
                  <countermeasures>
                    <countermeasure ref="CWE-524" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-226" mitigation="50"/>
                <countermeasure ref="CWE-524" mitigation="50"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-115" issueId="" issueLink="" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1548.001" url="https://attack.mitre.org/techniques/T1548/001"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.002" url="https://attack.mitre.org/techniques/T1548/002"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.003" url="https://attack.mitre.org/techniques/T1548/003"/>
                <reference name="Mitre ATT&amp;CK Technique T1548.004" url="https://attack.mitre.org/techniques/T1548/004"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37" issueId="" issueLink="" name="An attacker examines a target system to find sensitive data that has been embedded within it" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker examines a target system to find sensitive data that has been embedded within it. This information can reveal confidential contents, such as account numbers or individual keys/credentials that can be used as an intermediate step in a larger attack.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="identify-sensitive-data" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-sensitive-data" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-158" issueId="" issueLink="" name="Sensitive data is compromised through network sniffing attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker monitoring network traffic between nodes of a public or multicast network.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic.&lt;/li&gt;&lt;li&gt;The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="70"/>
                <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="30"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="74d45fef-532c-46f7-9423-79a00a7ebfcb" diagramComponentId="cf26070f-ad8a-491b-a5bc-9d64064996cf" ref="3fd51d0d-e64d-427a-8f35-b2e1a64584f8" name="Out Of Scope" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="trusted-partner"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="9b46ce04-3bf7-47d0-8423-ea2667d26cfa" diagramComponentId="f362dfe9-69a5-46e8-9717-d0ebba31488e" ref="a8e21836-69ca-4ed3-96b7-4b152a3a3a36" name="Router" desc="" library="IR-Network-Components" parentComponentRef="" componentDefinitionRef="CD-ROUTER" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-276" name="Incorrect Default Permissions" state="0" impact="100" issueId="" issueLink="">
          <desc>The software, upon installation, sets incorrect permissions for an object that exposes it to an unintended actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.902">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-521" name="Poor quality passwords in use" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not enforce a strong password policy, which makes it easier for attackers to compromise user accounts through brute force or dictionary based attacks.

An authentication mechanism is only as strong as its credentials. For this reason, it is important to require users to have strong passwords. Lack of password complexity significantly reduces the search space when trying to guess user's passwords, making brute-force attacks easier.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.903">
              <output/>
            </source>
            <references>
              <reference name="CWE-521: Weak Password Requirements" url="https://cwe.mitre.org/data/definitions/521.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="UNNECESSARY-SERVICES" name="Unnecessary services are exposed" state="0" impact="100" issueId="" issueLink="">
          <desc>The application exposes unnecessary services which increase the attack surface.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.903">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ROUTER3" name="Limit Unnecessary Lateral Communications" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Network-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit Unnecessary Lateral Communications&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Allowing unfiltered peer-to-peer communications, including workstation-to-workstation, creates serious vulnerabilities and can allow a network intruder's access to spread easily to multiple systems. Once an intruder establishes an effective beachhead within the network, unfiltered lateral communications allow the intruder to create backdoors throughout the network. Backdoors help the intruder maintain persistence within the network and hinder defenders' efforts to contain and eradicate the intruder.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; - Restrict communications using host-based firewall rules to deny the flow of packets from other hosts in the network. The firewall rules can be created to filter on a host device, user, program, or internet protocol (IP) address to limit access from services and systems.&lt;br&gt; - Implement a VLAN access control list (VACL), a filter that controls access to and from VLANs. VACL filters should be created to deny packets the ability to flow to other VLANs.&lt;br&gt; - Logically segregate the network using physical or virtual separation, allowing network administrators to isolate critical devices onto network segments.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Network Infrastructure Devices" url="https://www.cisa.gov/uscert/ncas/tips/ST18-001"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that you limit Unnecessary Lateral Communications&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.824">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ROUTER2" name="Protect routers by controlling access lists for remote administration" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Network-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Protect routers by controlling access lists for remote administration&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; An access-control list is a list of permissions associated with a system resource. An ACL specifies which users or system processes are granted access to objects, as well as what operations are allowed on given objects.&lt;br&gt; Specifically for routers, an ACL is a list of permit or deny rules detailing what can or can't enter or leave the interface of a router. Every packet that attempts to enter or leave a router must be tested against each rule in the ACL until a match is found. If no match is found, then it will be denied.&lt;br&gt; It is highly recommended to protect routers by controlling access lists for remote administration.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Follow your device's guidelines to implement ACLs for remote administration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Network Infrastructure Devices" url="https://www.cisa.gov/uscert/ncas/tips/ST18-001"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that routers are protected by controlling access lists for remote administration.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.824">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ROUTER1" name="Setup a strong combination of credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Network-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Setup a strong combination of credentials (username/password) for the web interface of the router&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Having a strong combination of credentials can prevent unauthorized users from finding these credentials and gaining access to the web interface of the router.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; 1. Use a non-common username. For instance, avoid using common usernames, such as admin.&lt;/p&gt; 
&lt;p&gt;2. The password length must be at least 12 characters.&lt;/p&gt; 
&lt;p&gt;3. The complexity of the password is important. Use at least one digit, one lower-case character, one upper-case character, and one special character.&lt;/p&gt; 
&lt;p&gt;4. The pair of username/password is unique. This means that these credentials cannot be used to gain access to any other application, say an email address.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Network Infrastructure Devices" url="https://www.cisa.gov/uscert/ncas/tips/ST18-001"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that the credentials are strong and are not used in another application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:41.823">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="IR-Network-Components">
          <threats>
            <threat ref="CAPEC-16" issueId="" issueLink="" name="Dictionary-based or brute force password attack" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Network-Components" editable="true">
              <desc>&lt;p&gt;An attacker tries each word in a dictionary as passwords to gain access to the system via some user's account. If the password chosen by the user is a word within the dictionary, this attack will be successful (in the absence of other mitigations). This is a specific instance of the password brute forcing attack pattern.&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1110.001" url="https://attack.mitre.org/techniques/T1110/001"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-521">
                  <countermeasures>
                    <countermeasure ref="C-ROUTER1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ROUTER1" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Network-Components">
          <threats>
            <threat ref="CAPEC-1" issueId="" issueLink="" name="Accessing Functionality Not Properly Constrained by ACLs" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Network-Components" editable="true">
              <desc>&lt;p&gt;In applications, particularly web applications, access to functionality is mitigated by the authorization framework, whose job it is to map ACLs to elements of the application's functionality; particularly URL's for web-apps. In cases in which the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker could potentially access resources that should only be available to users of a higher privilege level, or access management sections of the application, or can run queries for data that he is otherwise not supposed to.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-276">
                  <countermeasures>
                    <countermeasure ref="C-ROUTER2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ROUTER2" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="IR-Network-Components">
          <threats>
            <threat ref="T-WIDE-ATTACK-SURFACE" issueId="" issueLink="" name="Attackers try to take advantage of a wide attack surface" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Network-Components" editable="true">
              <desc>	&lt;p&gt;Every point of network interaction or other service is a potential part of the attack surface having exploitable vulnerabilities.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="UNNECESSARY-SERVICES">
                  <countermeasures>
                    <countermeasure ref="C-ROUTER3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ROUTER3" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="8e7fe80e-5580-444d-9fd5-a1bf530f74d1" diagramComponentId="9246d860-db32-419c-8fe6-e8fa2eee14a0" ref="e6a9e3e2-8bd8-4ffd-8a55-beedcaa1f75e" name="Sensor" desc="" library="IR-Hardware-Components" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="CD-SENSOR" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.015">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.015">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.016">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:41.015">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:40.897">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:40.895">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:40.896">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:40.897">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T21:42:40.897">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="80c87caf-41c2-4eed-a449-cf3cf4c740c7" diagramComponentId="8ee485b8-6254-4a2d-a05e-339a27aabaff" ref="e148c09c-55cb-4b04-ba4b-e20911a1dbad" name="USB port" desc="" library="IR-Hardware-Components" parentComponentRef="eea9d511-2e18-4019-a530-8dbb142a431f" componentDefinitionRef="CD-USB-PORT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.411">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.407">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.167">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.165">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.167">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.167">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-24T15:32:49.167">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="38ce062a-f5d4-4ee9-b338-4cec971269e4" diagramComponentId="19cdd2fb-4c94-4bb2-b7b8-3d08e1e60e3e" ref="c49d2e8c-310a-4618-9e97-40382c616251" name="Wi-Fi port" desc="" library="IR-Hardware-Components" parentComponentRef="57f3c399-34a3-4da3-ad31-ffa68abf92da" componentDefinitionRef="CD-WI-FI-PORT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.859">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.860">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.859">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="W-FIRMWARE-NOT-UPDATED" name="The firmware of the device is outdated" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The version of the firmware installed on a hardware device is not the latest version available.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.860">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-633" name="Weaknesses that Affect Memory" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category affect memory
                        resources.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.860">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" name="Ensure that purpose-built/custom chipsets are not used if possible" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Custom chipsets continue to anchor a great deal of the hardware within corporate data centers or in high-end desktops. Because these purpose-built chips are tailored for niche purposes, manufacturer security reviews are not nearly as intense as those conducted for chips that are to be installed in much larger groups of devices. Over time, hackers find vulnerabilities in these chips, causing the manufacturer to scramble to find a patch.&lt;/p&gt;&lt;p&gt;When possible avoid using custom chipsets.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.736">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" name="Protect local access to the device" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In many cases IoT, IIoT and smart building hardware can be accessed locally though a managed Ethernet or serial interface. If these connections aren't locked down -- from both a configuration and physical sense -- a bad actor may be able to compromise a company's infrastructure by tampering with these devices while visiting the office, warehouse or manufacturing plant.&lt;/p&gt;&lt;p&gt;Ensure that the local connections to these devices are protected enough to avoid physical attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" name="Update system firmware to latest version" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There's a set of steps to follow in order to update the firmware of a device:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Know the model of your device and what firmware it uses&lt;/li&gt;&lt;li&gt;Check if there is a firmware update available for your device&lt;/li&gt;&lt;li&gt;Prepare your device for the firmware update&lt;ul&gt;&lt;li&gt;Read the &lt;strong&gt;Readme&lt;/strong&gt; file that is distributed with the new firmware update&lt;/li&gt;&lt;li&gt;Always use a &lt;strong&gt;reliable power supply&lt;/strong&gt; for your device during the firmware update process&lt;/li&gt;&lt;li&gt;If you use a computer to update a device's firmware, make sure that the computer has &lt;strong&gt;no third-party antivirus&lt;/strong&gt; running on it&lt;/li&gt;&lt;li&gt;If you're going to update the firmware on a device using a USB memory stick or any other kind of external memory, make sure that you use a memory stick of good quality&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Backup the current firmware from your device&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to do a firmware update for any kind of device" url="https://www.digitalcitizen.life/how-update-firmware-any-device-6-steps/"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify that the latest version of the firmware has been successfully installed by checking that the installed version is the same as the latest version.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-12T20:06:37.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Hardware-Components">
          <threats>
            <threat ref="T-FIRMWARE-EXPLOIT" issueId="" issueLink="" name="Attackers can perform malicious activity due to a vulnerability in the firmware of the device" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A device has a vulnerability that is used by malicious actors to exploit the system.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="W-FIRMWARE-NOT-UPDATED">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-UPDATE-FIRMWARE" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="insecure-default-configuration" issueId="" issueLink="" name="Attackers gain access to credentials via insecure default configurations" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to sensitive data using known vulnerabilities in the default configuration. These configurations are not secure enough for production environments.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-TO-DATA" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-PROTECT-LOCAL-ACCESS" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-100" issueId="" issueLink="" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-633">
                  <countermeasures>
                    <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-HARDWARE-CUSTOM-CHIPSET" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112" issueId="" issueLink="" name="Attackers gain unauthorized access through Brute Force attacks" state="Expose" source="RULES" edited="false" owner="jrabe@iriusrisk.com" library="IR-Hardware-Components" editable="true">
              <desc>&lt;p&gt;In this attack, some asset (information, functionality, identity, etc.) is protected by a finite secret value. The attacker attempts to gain access to this asset by using trial-and-error to exhaustively explore all the possible secret values in the hope of finding the secret (or a value that is functionally equivalent) that will unlock the asset. Examples of secrets can include, but are not limited to, passwords, encryption keys, database lookup keys, and initial values to one-way functions.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;The key factor in this attack is the attackers' ability to explore the possible secret space rapidly. This, in turn, is a function of the size of the secret space and the computational power the attacker is able to bring to bear on the problem. If the attacker has modest resources and the secret space is large, the challenge facing the attacker is intractable. While the defender cannot control the resources available to an attacker, they can control the size of the secret space.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Creating a large secret space involves selecting one's secret from as large a field of equally likely alternative secrets as possible and ensuring that an attacker is unable to reduce the size of this field using available clues or cryptanalysis. Doing this is more difficult than it sounds since eliminating patterns (which, in turn, would provide an attacker clues that would help them reduce the space of potential secrets) is difficult to do using deterministic machines, such as computers.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Assuming a finite secret space, a brute force attack will eventually succeed. The defender must rely on making sure that the time and resources necessary to do so will exceed the value of the information. For example, a secret space that will likely take hundreds of years to explore is likely safe from raw-brute force attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields/>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
  <threadFixScans/>
</project>

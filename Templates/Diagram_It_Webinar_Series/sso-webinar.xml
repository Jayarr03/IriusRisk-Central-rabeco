<?xml version="1.0" encoding="UTF-8"?>
<project ref="sso-webinar" name="SSO - Webinar" isSyncing="false" tags="" modelUpdated="2024-02-28 16:35:55" workflowState="new" locked="false">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings>
    <issueTrackers>
      <jira>
        <fields/>
      </jira>
    </issueTrackers>
  </settings>
  <dataflows>
    <dataflow name="Web Client -&gt; Reset Password" ref="031d4192-27f2-48ca-9977-92ac169d7b7a" source="b6455908-d262-488d-bd47-503b18c745cc" target="9db8384d-8173-4668-97d8-b4c5e6a7f4e9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Client -&gt; Generic SSO" ref="0c15a667-e72f-4f58-9a7a-1df77c3affdc" source="f9121616-c975-420f-88ca-cb2db1021abe" target="70a78f32-86da-4797-b1fd-31acc1cc0f67">
      <assets/>
      <tags>
        <tag tag="Authentication Request"/>
      </tags>
    </dataflow>
    <dataflow name="Web Client -&gt; Login &amp; Password" ref="0cc6331c-0aa5-4168-b1b8-ea95f5c82a63" source="f9121616-c975-420f-88ca-cb2db1021abe" target="3593e3d1-3cad-4317-8ad7-9895bc5045bf">
      <assets/>
      <tags>
        <tag tag="Credential Response"/>
      </tags>
    </dataflow>
    <dataflow name="Login &amp; Password -&gt; Access Server" ref="0fb4a75a-919a-4df3-99ac-e32ddbd75193" source="3593e3d1-3cad-4317-8ad7-9895bc5045bf" target="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5">
      <assets/>
      <tags>
        <tag tag="Success // Token Request"/>
      </tags>
    </dataflow>
    <dataflow name="Login (IR-Functional-Components) -&gt; AWS SSO (Single Sign-On)" ref="1fa2f0f2-129f-4f89-a1ac-5901b3efd1da" source="cece0ec6-d373-4f35-8d22-1c4af7e9b6c9" target="6b236eb0-e1fc-4481-8634-1224ad463bb8">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Token -&gt; Web Client" ref="24aeeaf8-3e2f-4597-9ce8-eb5bad721dd9" source="a2b01f0d-f522-4750-a9ab-e2a4cdb9babe" target="f9121616-c975-420f-88ca-cb2db1021abe">
      <assets/>
      <tags>
        <tag tag="Token Granted"/>
      </tags>
    </dataflow>
    <dataflow name="Change Password -&gt; AWS SSO (Single Sign-On)" ref="31e2671e-c228-4cb1-896b-1981768bff44" source="9946907e-d4e3-473b-b962-186f4a54e3e5" target="6b236eb0-e1fc-4481-8634-1224ad463bb8">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Client -&gt; SSO Project Component" ref="354ce9da-8a70-412a-9763-3e55147d897f" source="1a9add6e-6f63-493a-8551-a0349e0c028e" target="db64e514-0041-4d61-9617-ccfe03f4210a">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Authentication Server -&gt; Token" ref="41ea19cf-0938-4ab1-a624-a17faf583a1a" source="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5" target="a2b01f0d-f522-4750-a9ab-e2a4cdb9babe">
      <assets/>
      <tags>
        <tag tag="Token Granted"/>
      </tags>
    </dataflow>
    <dataflow name="Unauthenticated User -&gt; Web Client" ref="49f50116-daba-4f31-8d2b-6bbf10cf52e5" source="411fa1c9-795a-45ad-a566-e08b058f5d76" target="b6455908-d262-488d-bd47-503b18c745cc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Client -&gt; Authenticated User" ref="8d9ee60a-5ce9-46cf-94b4-e08523ec7bf7" source="f9121616-c975-420f-88ca-cb2db1021abe" target="66a6117e-b874-4bed-ace4-18c6c9491297">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Client -&gt; Change Password" ref="938f9676-c869-4823-a16c-54d0f5df347c" source="b6455908-d262-488d-bd47-503b18c745cc" target="9946907e-d4e3-473b-b962-186f4a54e3e5">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Client -&gt; Login (IR-Functional-Components)" ref="a1cb6668-ca44-46d9-8a6a-245049314d04" source="b6455908-d262-488d-bd47-503b18c745cc" target="cece0ec6-d373-4f35-8d22-1c4af7e9b6c9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Some Resource -&gt; Authenticated User" ref="a5589cfa-dffe-471c-b55c-0daa18ed8e6a" source="71b5280f-5c9c-4d98-9fa8-d0f1154512e9" target="66a6117e-b874-4bed-ace4-18c6c9491297">
      <assets/>
      <tags>
        <tag tag="Session Granted"/>
      </tags>
    </dataflow>
    <dataflow name="AWS SSO (Single Sign-On) -&gt; Some Resources" ref="bf915e5b-c19e-4f26-b747-a9115232c29c" source="6b236eb0-e1fc-4481-8634-1224ad463bb8" target="f5a71ec5-cb58-4608-8c4a-a667cd446e45">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Login &amp; Password -&gt; Web Client" ref="c098493a-8807-4d58-ba12-0a6b9fb04002" source="3593e3d1-3cad-4317-8ad7-9895bc5045bf" target="f9121616-c975-420f-88ca-cb2db1021abe">
      <assets/>
      <tags>
        <tag tag="Credential Request"/>
      </tags>
    </dataflow>
    <dataflow name="Unauthenticated User -&gt; Web Client" ref="cfa2bea2-b2ce-47dd-9635-a1e9a756d1f2" source="ed687610-d75c-461f-8ede-ff390dbc0c14" target="f9121616-c975-420f-88ca-cb2db1021abe">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Generic SSO -&gt; Authentication" ref="d046a796-2195-487b-ad1e-33e667b919f0" source="70a78f32-86da-4797-b1fd-31acc1cc0f67" target="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5">
      <assets/>
      <tags>
        <tag tag="Authentication Process"/>
      </tags>
    </dataflow>
    <dataflow name="Reset Password -&gt; AWS SSO (Single Sign-On)" ref="d924e774-95f3-45bf-a4cf-cb6c95abd8ab" source="9db8384d-8173-4668-97d8-b4c5e6a7f4e9" target="6b236eb0-e1fc-4481-8634-1224ad463bb8">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="SSO Project Component -&gt; Some Resources" ref="ddad8cdd-8286-4a3e-b7af-04a8ee801450" source="db64e514-0041-4d61-9617-ccfe03f4210a" target="f1abecbe-1bcc-4ca8-a7f3-4f68765bd1dc">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Authenticated User -&gt; Some Resource" ref="e0d05a7e-59dc-4d7f-9959-26e856d19613" source="66a6117e-b874-4bed-ace4-18c6c9491297" target="71b5280f-5c9c-4d98-9fa8-d0f1154512e9">
      <assets/>
      <tags>
        <tag tag="Token Provided"/>
      </tags>
    </dataflow>
    <dataflow name="Login &amp; Password -&gt; Audit Log" ref="f1a66904-9084-4c96-86f4-d0b76ade638a" source="3593e3d1-3cad-4317-8ad7-9895bc5045bf" target="69464381-792f-47c8-8f4e-38c7c4bd5c44">
      <assets/>
      <tags>
        <tag tag="No // Logged"/>
        <tag tag="Yes // Logged"/>
      </tags>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="Project Manager" value=""/>
    <customField ref="Test" value=""/>
    <customField ref="Test 2" value=""/>
  </customFields>
  <components>
    <component uuid="2e3a548c-119c-4bb6-a7f2-ba59d1097349" diagramComponentId="ce3327ea-48b7-4875-8bc4-ea33b716c06c" ref="52f0aa09-592e-4d54-8d39-b0b303fe30ef" name="API Endpoint (IR-Functional-Components)" desc="" library="IR-Functional-Components" parentComponentRef="f5a71ec5-cb58-4608-8c4a-a667cd446e45" componentDefinitionRef="CD-API-ENDPOINT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate and authorized users can access the application data. It is important that an application prevent unauthorized users gaining inappropriate access to each other's data. Although user A and user B may both be trusted to access data within the application, they may be only authorized to access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are the manipulation of an ID value or other object reference sent in the URL or body of an HTTP request).&lt;/p&gt;&lt;p&gt;It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this is done by checking the validity of the session token issued after login.&lt;/li&gt;&lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g. their confirmed identify is checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt;&lt;li&gt;Access controls should be granular and make it possible to issue to individual resources to individual users or roles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework.&lt;/p&gt;&lt;p&gt;Object-level authorization checks should be considered in every function that accesses a data source using input from the user.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Favor not using an ID that has been sent from the client, but instead use an ID that is stored in the session object when accessing a database record by the record ID.&lt;/li&gt;&lt;li&gt;Use an authorization mechanism to check if the logged-in user has access to perform the requested action on the record in every function that uses an input from the client to access a record in the database.&lt;/li&gt;&lt;li&gt;Use random and unpredictable values as GUIDs for records' IDs.&lt;/li&gt;&lt;li&gt;Write tests to evaluate the authorization mechanism. Do not deploy vulnerable changes that break these tests.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="5.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;&lt;li&gt;Login as user A in browser A.&lt;/li&gt;&lt;li&gt;Login as user B in browser B.&lt;/li&gt;&lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;ol&gt;&lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;&lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;&lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;&lt;li&gt;Perform the operation as user A again, but this time intercept all the requests and replace user A's session ID with that of user B.&lt;/li&gt;&lt;li&gt;Ensure that user A's sensitive data is &lt;strong&gt;not &lt;/strong&gt;visible.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To ensure object-level authorization checks are in place:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Map out all locations in the application in which user input is used to reference objects directly. For example, locations where user input is used to access a database row, a file, application page, etc.&lt;/li&gt;&lt;li&gt;Modify the value of the parameter used to reference objects to see if the application raises an authorization error.&lt;/li&gt;&lt;li&gt;Assess whether it is possible to retrieve objects belonging to other users or otherwise bypass authorization.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.724">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" name="Minimize the information that each client receives from the server side to accomplish its intended action" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Servers are often designed to send more data to the client than is really required, so it's necessary to send the minimum data from the server to the client. It's an easy way to send all information from server to client and then filter in the client's own, but this behaviour can lead to further data leak, in case that an attacker obtains this information, for example by intercepting requests or accessing the browser, so this could increase the risk of a future attack.&lt;/p&gt;&lt;p&gt;It is a good idea to have different endpoints that return different data, according to needs.&lt;/p&gt;&lt;p&gt;An example of bad code in JSP:&lt;/p&gt;&lt;p&gt;&lt;i&gt;Social Security Number: &amp;lt;%= ssn %&amp;gt;&amp;lt;/br&amp;gt;Credit Card Number: &amp;lt;%= ccn %&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;This is a bad code, because it displays a user's credit card and social security numbers, even though they aren't absolutely necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CWE-213: Exposure of Sensitive Information Due to Incompatible Policies" url="https://cwe.mitre.org/data/definitions/213.html"/>
          </references>
          <standards>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Use a proxy to pass browser requests through it and check the responses to see what data the server is sending. Can you get unnecessary data?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Proxy can be replaced using DevTools from your browser.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.723">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.724">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-180-BROKEN-ACCESS-CONTROL" issueId="" issueLink="" name="An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the application" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An Access Control functionality often spans many areas of software depending on the complexity of the access control system. For example, managing access control metadata or building caching for scalability purposes are often additional components in an access control system that need to be built or managed. Vulnerabilities appear when a user is able to successfully request access to something they usually shouldn't have access to. Oftentimes this is found when the authorization is not implemented properly. A typical example would be a certain endpoint on a website that throws a 403 forbidden error which is then bypassed by adding an X-Forwarded-For: "127.0.0.1" header.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-285" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="DATA-VAL" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-157-DATA-DISCLOSURE" issueId="" issueLink="" name="An attacker can inspect the HTTP responses using a proxy to access to sensitive information that is not directly visible in the client application" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;APIs retrieve necessary data from back end systems when client applications make an API call. However, most of the backend systems were not designed to handover the exact data that the client requested. Rather, the API serves more data than what is needed by the client and then a filtering mechanism is used in the client app code to mask or discard unwanted data. If an attacker launches the underlying API and examines the response patterns, they are able to access the redundant data which could contain sensitive information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Besides returning excessive data records in response to a client request, an API may also expose certain references to the platform technologies used by the application. This allows hackers to look for vulnerabilities on such software and attack the system using that information.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130" issueId="" issueLink="" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="no-security-procedures-monitoring" issueId="" issueLink="" name="Attackers gain access to the system and are not detected" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected. Therefore, they can make changes to the systems and remain undetected. Data integrity is destroyed.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="security-logging" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7e51d2cd-59fc-4b2f-8355-5aada1e4c9c5" diagramComponentId="3b975819-f19d-4160-a9a4-31909685c968" ref="a9c77f15-fea3-49a4-9645-1e7c8bced9a9" name="API Endpoint (IR-Functional-Components)" desc="" library="IR-Functional-Components" parentComponentRef="f1abecbe-1bcc-4ca8-a7f3-4f68765bd1dc" componentDefinitionRef="CD-API-ENDPOINT" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate and authorized users can access the application data. It is important that an application prevent unauthorized users gaining inappropriate access to each other's data. Although user A and user B may both be trusted to access data within the application, they may be only authorized to access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are the manipulation of an ID value or other object reference sent in the URL or body of an HTTP request).&lt;/p&gt;&lt;p&gt;It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this is done by checking the validity of the session token issued after login.&lt;/li&gt;&lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g. their confirmed identify is checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt;&lt;li&gt;Access controls should be granular and make it possible to issue to individual resources to individual users or roles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework.&lt;/p&gt;&lt;p&gt;Object-level authorization checks should be considered in every function that accesses a data source using input from the user.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Favor not using an ID that has been sent from the client, but instead use an ID that is stored in the session object when accessing a database record by the record ID.&lt;/li&gt;&lt;li&gt;Use an authorization mechanism to check if the logged-in user has access to perform the requested action on the record in every function that uses an input from the client to access a record in the database.&lt;/li&gt;&lt;li&gt;Use random and unpredictable values as GUIDs for records' IDs.&lt;/li&gt;&lt;li&gt;Write tests to evaluate the authorization mechanism. Do not deploy vulnerable changes that break these tests.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="5.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;&lt;li&gt;Login as user A in browser A.&lt;/li&gt;&lt;li&gt;Login as user B in browser B.&lt;/li&gt;&lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;ol&gt;&lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;&lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;&lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;&lt;li&gt;Perform the operation as user A again, but this time intercept all the requests and replace user A's session ID with that of user B.&lt;/li&gt;&lt;li&gt;Ensure that user A's sensitive data is &lt;strong&gt;not &lt;/strong&gt;visible.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To ensure object-level authorization checks are in place:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Map out all locations in the application in which user input is used to reference objects directly. For example, locations where user input is used to access a database row, a file, application page, etc.&lt;/li&gt;&lt;li&gt;Modify the value of the parameter used to reference objects to see if the application raises an authorization error.&lt;/li&gt;&lt;li&gt;Assess whether it is possible to retrieve objects belonging to other users or otherwise bypass authorization.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.349">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.349">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.349">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" name="Minimize the information that each client receives from the server side to accomplish its intended action" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Servers are often designed to send more data to the client than is really required, so it's necessary to send the minimum data from the server to the client. It's an easy way to send all information from server to client and then filter in the client's own, but this behaviour can lead to further data leak, in case that an attacker obtains this information, for example by intercepting requests or accessing the browser, so this could increase the risk of a future attack.&lt;/p&gt;&lt;p&gt;It is a good idea to have different endpoints that return different data, according to needs.&lt;/p&gt;&lt;p&gt;An example of bad code in JSP:&lt;/p&gt;&lt;p&gt;&lt;i&gt;Social Security Number: &amp;lt;%= ssn %&amp;gt;&amp;lt;/br&amp;gt;Credit Card Number: &amp;lt;%= ccn %&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;This is a bad code, because it displays a user's credit card and social security numbers, even though they aren't absolutely necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CWE-213: Exposure of Sensitive Information Due to Incompatible Policies" url="https://cwe.mitre.org/data/definitions/213.html"/>
          </references>
          <standards>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Use a proxy to pass browser requests through it and check the responses to see what data the server is sending. Can you get unnecessary data?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Proxy can be replaced using DevTools from your browser.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.349">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.348">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.349">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-180-BROKEN-ACCESS-CONTROL" issueId="" issueLink="" name="An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the application" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An Access Control functionality often spans many areas of software depending on the complexity of the access control system. For example, managing access control metadata or building caching for scalability purposes are often additional components in an access control system that need to be built or managed. Vulnerabilities appear when a user is able to successfully request access to something they usually shouldn't have access to. Oftentimes this is found when the authorization is not implemented properly. A typical example would be a certain endpoint on a website that throws a 403 forbidden error which is then bypassed by adding an X-Forwarded-For: "127.0.0.1" header.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-285" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="DATA-VAL" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-157-DATA-DISCLOSURE" issueId="" issueLink="" name="An attacker can inspect the HTTP responses using a proxy to access to sensitive information that is not directly visible in the client application" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;APIs retrieve necessary data from back end systems when client applications make an API call. However, most of the backend systems were not designed to handover the exact data that the client requested. Rather, the API serves more data than what is needed by the client and then a filtering mechanism is used in the client app code to mask or discard unwanted data. If an attacker launches the underlying API and examines the response patterns, they are able to access the redundant data which could contain sensitive information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Besides returning excessive data records in response to a client request, an API may also expose certain references to the platform technologies used by the application. This allows hackers to look for vulnerabilities on such software and attack the system using that information.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130" issueId="" issueLink="" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="no-security-procedures-monitoring" issueId="" issueLink="" name="Attackers gain access to the system and are not detected" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected. Therefore, they can make changes to the systems and remain undetected. Data integrity is destroyed.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="security-logging" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="d023898a-f257-4a04-bdea-c3b4ef287cb8" diagramComponentId="710e9299-c78c-4fda-b998-5fad947b349a" ref="69464381-792f-47c8-8f4e-38c7c4bd5c44" name="Audit Log" desc="" library="" parentComponentRef="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="fbad4bb3-0d44-47e6-8ec5-8c5172cde270" diagramComponentId="53d56b6c-1ea4-4b24-8cd2-375ce6690873" ref="66a6117e-b874-4bed-ace4-18c6c9491297" name="Authenticated User" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="7a9ae6bf-df94-4ced-93cf-4bbf14352845" diagramComponentId="120ee3a3-38e2-44bf-ac40-7d8f93646bc2" ref="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5" name="Authentication Server" desc="" library="Lenovo" parentComponentRef="70a78f32-86da-4797-b1fd-31acc1cc0f67" componentDefinitionRef="authentication" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="Improper-Log-Management" name="Improper Log Management " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Inadequate-Password-Protections" name="Inadequate Password Protections " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.391">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Insufficient-Credential-Strength" name="Insufficient Credential Strength " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.392">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Lack-of-Anti-Brute-Force-Measures" name="Lack of Anti-Brute Force Measures " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.392">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Lack-of-Proper-Access-Controls" name="Lack of Proper Access Controls " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.392">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Poor-Session-Management" name="Poor Session Management " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.392">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="Weak-Password-Recovery" name="Weak Password Recovery " state="0" impact="50" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.392">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Privilege_Restriction__" name="Privilege Restriction  " issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Privilege Restriction or the Principle of Least Privilege, is a security approach to limit a user's access to only what is necessary for their tasks. In the context of a Windows driver, it means limiting the driver's capabilities to minimize the risk of unauthorized or malicious activities.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.345">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Regular_Code_reviews" name="Regular Code reviews" issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use regular security code reviews to help identify security vulnerabilities.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.345">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Regular_Security_Auditing" name="Regular Security Auditing " issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Regularly check and patch security vulnerabilities of the driver</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.345">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Robust_Authentication" name="Robust Authentication " issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement robust user authentication mechanisms</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.345">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Secure_Update" name="Secure Update" issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Secure Update refers to the process of updating software or systems in a way that minimizes the risk of introducing security vulnerabilities. This can involve techniques like digital signing of update files to ensure authenticity, encrypting the data transmission to prevent interception, and verifying the integrity of updates. It ensures that updates and patches are received from a trusted source and that they haven't been modified during transit.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.346">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" name="Show a UAC prompt when requiring elevated privilege" issueId="" issueLink="" platform="" cost="1" risk="33" state="Required" owner="support" library="Lenovo" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>UAC reduces the risk of malware by limiting the ability of malicious code to execute with administrator privileges. </desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:47.346">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="Session-Management" name="Session Management " desc="" library="Lenovo">
          <threats>
            <threat ref="Session-Hijacking" issueId="" issueLink="" name="Session Hijacking" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>Unauthorized user accessing and possibly altering another user's session with a system</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Poor-Session-Management">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Regular_Code_reviews" mitigation="100"/>
                    <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Secure_Update" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Regular_Code_reviews" mitigation="100"/>
                <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Secure_Update" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="Password-Recovery" name="Password Recovery " desc="" library="Lenovo">
          <threats>
            <threat ref="Account-Takeover" issueId="" issueLink="" name="Account Takeover" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>Unauthorized user gaining complete control over a user's account</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Weak-Password-Recovery">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="Password-Management" name="Password Management " desc="" library="Lenovo">
          <threats>
            <threat ref="Password-Theft" issueId="" issueLink="" name="Password Theft" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>Unauthorized user gaining access to another user's password, potentially providing system access</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Inadequate-Password-Protections">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="Authentication-Logs" name="Authentication Logs" desc="" library="Lenovo">
          <threats>
            <threat ref="Denial-of-Responsibility" issueId="" issueLink="" name="Denial of Responsibility" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>User denying actions they have performed on the system</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Improper-Log-Management">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Regular_Security_Auditing" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="Authentication" name="Authentication" desc="" library="Lenovo">
          <threats>
            <threat ref="Brute-Force-attacks" issueId="" issueLink="" name="Brute Force attacks" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>Attempt to crack a password or username through trial and error</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Insufficient-Credential-Strength">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="Lack-of-Anti-Brute-Force-Measures">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="Access-Control" name="Access Control " desc="" library="Lenovo">
          <threats>
            <threat ref="Privilege-Escalation" issueId="" issueLink="" name="Privilege Escalation" state="Expose" source="RULES" edited="false" owner="support" library="Lenovo" editable="true">
              <desc>An attacker or unprivileged user can gain more access to the system than they should have.</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="Lack-of-Proper-Access-Controls">
                  <countermeasures>
                    <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                    <countermeasure ref="Robust_Authentication" mitigation="100"/>
                    <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Privilege_Restriction__" mitigation="100"/>
                <countermeasure ref="Robust_Authentication" mitigation="100"/>
                <countermeasure ref="Show_a_UAC_prompt_when_requiring_elevated_privilege" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="34c611ef-60c2-45cd-938e-d0f42edc2da7" diagramComponentId="a04305f0-c238-4038-929c-7e1dba364b76" ref="34c90b57-0258-4f28-ad0c-80f7caeae4f1" name="AWS EC2 (Elastic Compute Cloud)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="3550da2c-6145-4b2a-8f63-305b169e245c" componentDefinitionRef="ec2" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-IND-RESOURCES" name="AWS Resources are indistinguishable" state="0" impact="100" issueId="" issueLink="">
          <desc>AWS Resources are indistinguishable and countermeasures cannot be applied confidently.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.092">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SYSTEM-VUL-DOS" name="System is vulnerable to a denial of service attack" state="0" impact="100" issueId="" issueLink="">
          <desc>Attackers can perform a successful denial of service on the system</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.091">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="VOLUMES-NOT-ENCRYPTED" name="The volumes are not encrypted" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Volumes are not encrypted, leading to the disclosure of information.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-04" name="Unauthorised connection attempts are allowed on Amazon resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Amazon resources is most likely to be receiving an attack. To avoid this, access to the network must be as restricted as possible using Network Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-02" name="Unauthorised connection attempts are allowed on port 22" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-03" name="Unauthorised connection attempts are allowed on port 3389" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
                        To avoid this, access to the network must be as restricted as possible, so that only the
                        necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.093">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-NET-01" name="Unauthorized connection attempts are allowed on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To avoid this, access to network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:33.092">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="aws-tier-6.9" name="Allocate Elastic IPs for NAT Gateways" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  An Elastic IP address is a static, public IP address designed for dynamic cloud computing. 
  You can associate an Elastic IP address with any instance, network interface for your VPC or a NAT Gateway. With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Allocate Elastic IP address for the number of NAT Gateways that you want to deploy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 allocate-address --domain vpc 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Allocate address" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/allocate-address.html"/>
            <reference name="Describe addresses" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-addresses.html"/>
          </references>
          <standards>
            <standard ref="6.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.9" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check if you have Elastic IP addresses allocated and unused for the number of NAT Gateways that you want to deploy:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-addresses --filters Name=domain,Values=vpc --query "Addresses[?AssociationId == null]" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.10-5.11" name="Apply an AWS Managed Config Rule to encrypt volumes" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;AWS Config provides you with a detailed inventory of your AWS resources and their current configuration, and continuously records all configuration changes to these resources. You can evaluate these configurations and changes to comply with the ideal configurations defined by AWS Config Rules.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Create locally a json file (similar to the below example) with the configuration of the Config Rule, and save it as /tmp/ConfigRule.json:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;{&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Description": "Checks whether Web Tier EBS volumes that are in an attached state&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;are encrypted.",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"ConfigRuleName": "encrypted-volumes-web-tier",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Source": {&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Owner": "AWS",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"SourceIdentifier": "ENCRYPTED_VOLUMES"&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;},&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"InputParameters": "{\"kmsId\":\"&amp;lt;web_tier_kms_key&amp;gt;\"}",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"Scope": {&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"TagKey": "&amp;lt;web_tier_tag&amp;gt;",&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;"TagValue": "&amp;lt;web_tier_tag_value&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;blockquote&gt;&lt;p&gt;}&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Create a Config Rule using the configuration saved earlier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws configservice put-config-rule --config-rule file:///tmp/ConfigRule.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is Config" url="https://docs.aws.amazon.com/config/latest/developerguide/WhatIsConfig.html"/>
          </references>
          <standards>
            <standard ref="5.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="5.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Search for a Config Rule that checks if the EBS volumes tagged with Web tier tags are encrypted with the Web tier KMS key:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws configservice describe-config-rules --query "ConfigRules[?Source.SourceIdentifier== 'ENCRYPTED_VOLUMES']|[?Scope.TagKey == '&amp;lt;web_tier_tag&amp;gt;']|[?Scope.TagValue =='&amp;lt;web_tier_tag_value&amp;gt;']|[?InputParameters == '{\"kmsId\":\"&amp;lt;web_tier_kms_key&amp;gt;\"}']"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.2" name="Configure Auto-Scaling Group for multiple Availability Zones" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  These properties can be defined within the Auto-Scaling Group configuration. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon Unified CLI: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List all the subnets and the associated Availability Zones from the application VPC:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-subnets --query "Subnets[?VpcId == '&amp;lt;application_vpc&amp;gt;'].{VPC:VpcId,Subnet:SubnetId, AZ:AvailabilityZone, CIDR:CidrBlock}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Update AutoScaling Group to include more than 1 Availability Zones within the same VPC:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling update-auto-scaling-group --auto-scaling-group-name &amp;lt;autoscaling_group_name&amp;gt; --availability-zones &amp;lt;application_az&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
            <reference name="Update autoscaling group" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/update-auto-scaling-group.html"/>
          </references>
          <standards>
            <standard ref="3.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.2" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all Auto-Scaling Groups and associated Availability Zones, and ensure there is more than 1 Availability Zone assigned to the Auto-Scaling Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --query 'AutoScalingGroups[*].{AZs:AvailabilityZones, ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.3-3.4" name="Configure Auto-Scaling Launch Configuration for Tier to use an approved AMI" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon EC2 capacity up or down automatically according to conditions you define.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  These properties can be defined within the Auto-Scaling Group configuration.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Additional properties can be defined through the launch configuration such as:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Instance Type&lt;/li&gt; 
  &lt;li&gt;Amazon Machine Image (Pre-configured Operating System Images - allows for O.S Hardening)&lt;/li&gt; 
  &lt;li&gt;IAM Role&lt;/li&gt; 
  &lt;li&gt;Security Groups&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;Your Organization must maintain a list of approved AMIs. Use these when creating AutoScaling Groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;div&gt;
    *Note: references to Web tier are also applicable to App tier. 
  &lt;/div&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create new launch configuration for the Web tier using the approved Web tier AMI from your organization's list:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;new_web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt;&amp;nbsp; 
   &lt;/div&gt; 
   &lt;div&gt; 
    &lt;br&gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;b&gt;Impact&lt;/b&gt;: 
&lt;div&gt; 
 &lt;br&gt; 
 &lt;div&gt; 
  &lt;div&gt;
    A list of approved AMIs must be maintained by the organization. 
  &lt;/div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="3.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the associated Launch Configuration of the Web Tier Auto-Scaling Group (note the value of "LaunchConfig" element):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names &amp;lt;web_tier_autoscaling_group_name&amp;gt; --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Ensure actively used Launch Configuration found in the previous step is using an approved AMI from your organization's list (replace &amp;lt;web_tier_launch_config&amp;gt; with the Launch Configuration previously found):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, AMI:ImageId,InstanceType:InstanceType}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.32-6.33" name="Configure Auto-Scaling Launch Configuration for Tier to use the Tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Auto Scaling helps maintain application availability and allows you to scale your Amazon 
  EC2 capacity up or down automatically according to conditions you define. You can use Auto Scaling to help ensure that you are running your desired number of Amazon EC2 instances or can automatically increase the number of Amazon EC2 instances during demand spikes to maintain performance and decrease capacity during lulls to reduce costs. These properties can be defined within the Auto-Scaling Group configuration. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Additional properties can be defined through the launch configuration such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Instance Type&lt;/li&gt; 
  &lt;li&gt;Amazon Machine Image (Pre-configured Operating System Images - allows for O.S Hardening)&lt;/li&gt; 
  &lt;li&gt;IAM Role&lt;/li&gt; 
  &lt;li&gt;Security Groups&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create new launch configuration for the Web tier using the Web Tier Security Group:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling create-launch-configuration --launch-configurationname &amp;lt;new_web_tier_launch_config&amp;gt; --image-id &amp;lt;web_tier_ami&amp;gt; --key-name &amp;lt;your_key_pair&amp;gt; --security-groups &amp;lt;web_tier_security_group&amp;gt; --instance-type &amp;lt;desired_instance_type&amp;gt; --iam-instance-profile &amp;lt;web_tier_instance_profile&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Create launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"/>
            <reference name="Describe autoscaling groups" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-auto-scaling-groups.html"/>
          </references>
          <standards>
            <standard ref="6.32" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.32" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.33" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.33" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the associated Launch Configuration of the Web Tier Auto-Scaling Group (note the value of "LaunchConfig" element):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names &amp;lt;web_tier_autoscaling_group_name&amp;gt; --query 'AutoScalingGroups[*].{LaunchConfig:LaunchConfigurationName,ASG:AutoScalingGroupName}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Ensure actively used Launch Configuration found in the previous step is using the Web Tier Security Group (replace &amp;lt;web_tier_launch_config&amp;gt; with the Launch Configuration previously found):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws autoscaling describe-launch-configurations --launch-configuration-names &amp;lt;web_tier_launch_config&amp;gt; --query 'LaunchConfigurations[*].{LaunchConfig:LaunchConfigurationName, SecurityGroups:SecurityGroups}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.766">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.12" name="Create a route table for the private subnets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a route table for your private subnets, and note the RouteTableId in the output:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route-table --vpc-id &amp;lt;application_vpc&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Associate the new route table with the private subnets: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnetid &amp;lt;private_subnet1&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnetid &amp;lt;private_subnet2&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Create route table" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route-table.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.12" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List route tables attached to the private subnets, and check if they contain the default route (0.0.0.0/0) pointing to the NAT Gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;private_subnet1&amp;gt;,&amp;lt;private_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.11" name="Create a route table for the public subnets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a route table for your public subnets, and note the RouteTableId in the output:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route-table --vpc-id &amp;lt;application_vpc&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Associate the new route table with the public subnets: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnet-id &amp;lt;public_subnet1&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 associate-route-table --route-table-id &amp;lt;route_table_id&amp;gt; --subnet-id &amp;lt;public_subnet2&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Create route table" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route-table.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
          </references>
          <standards>
            <standard ref="6.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.11" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List route tables attached to the public subnets, and check if they contain the default route (0.0.0.0/0) pointing to the Internet Gateway (IGW):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;public_subnet1&amp;gt;,&amp;lt;public_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Tags:Tags, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.14-6.15" name="Create default route (0.0.0.0/0) from Routing Table associated with tier subnet" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists but it doesn't have a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 replace-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_nat_gw&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) doesn't exist: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidr-block 0.0.0.0/0 --gateway-id &amp;lt;vpc_nat_gw&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: EC2 replace route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/replace-route.html"/>
            <reference name="Create route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.14" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.15" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface:: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;web_tier_subnet1&amp;gt;,&amp;lt;web_tier_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.10" name="Create NAT Gateways in at least two AZ" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can use a network address translation (NAT) gateway to enable instances in a private subnet to connect to the Internet or other AWS services, but prevent the Internet from initiating a connection with those instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  To create a NAT gateway, you must specify the public subnet in which the NAT gateway will reside. You must also specify an Elastic IP address to associate with the NAT gateway when you create it. This enables instances in your private subnets to communicate with the Internet. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each NAT gateway is created in a specific Availability Zone and implemented with 
  redundancy in that zone. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a NAT Gateway in a public subnet from a different Availability Zone: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-nat-gateway --subnet-id &amp;lt;public_subnet1&amp;gt; --allocation-id &amp;lt;elastic_ip_allocation&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;div&gt;
   and/or 
 &lt;/div&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-nat-gateway --subnet-id &amp;lt;public_subnet2&amp;gt; --allocation-id &amp;lt;elastic_ip_allocation&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create NAT Gateway" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-nat-gateway.html"/>
            <reference name="Describe NAT Gateways" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-nat-gateways.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.10" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the NAT Gateways from your application VPC, and note the subnets they are deployed in:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-nat-gateways --filter Name=vpc-id,Values=&amp;lt;application_vpc&amp;gt; --query "NatGateways[*].{NatGatewayId:NatGatewayId, SubnetId:SubnetId}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Check the Availability Zones where the above subnets are deployed:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --subnet-ids &amp;lt;public_subnet1&amp;gt; &amp;lt;public_subnet2&amp;gt; --query "Subnets[*].{SubnetId:SubnetId, AvailabilityZone:AvailabilityZone}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.764">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.6-6.7-6.8" name="Create subnets for tier" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  You can create a VPC that spans multiple Availability Zones. After creating a VPC, you can 
  add one or more subnets in each Availability Zone. Each subnet must reside entirely within 
  one Availability Zone and cannot span zones. Availability Zones are distinct locations that 
  are engineered to be isolated from failures in other Availability Zones. By launching 
  instances in separate Availability Zones, you can protect your applications from the failure 
  of a single location. AWS assigns a unique ID to each subnet. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  When you create a subnet, you specify the CIDR block for the subnet. The CIDR block of a 
  subnet shouldn't be the same as the CIDR block for the VPC (for a single subnet in the VPC). 
  The allowed block size is between a /28 netmask and /16 netmask. If you create more than 
  one subnet in a VPC, the CIDR blocks of the subnets must not overlap. 
  Some AWS regions have more than 2 availability zones and it is recommended to use more 
  than 2 where possible. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App and Data tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create subnets for Web tier, and note the subnet id: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-subnet --vpc-id &amp;lt;application_vpc&amp;gt; --cidr-block &amp;lt;desired_cidr&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Tag the above subnets with the Web tier tags: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-tags --resources &amp;lt;web_tier_subnet1&amp;gt; &amp;lt;web_tier_subnet2&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create subnet" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-subnet.html"/>
            <reference name="Amazon docs: create tags" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-tags.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the subnets associated with the Web tier:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-subnets --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.766">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.24" name="Create the Data tier Security Group and ensure it allows inbound connections from App tier Security Group for explicit ports" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you 
  can assign the instance to up to five security groups. Security groups act at the instance 
  level, not the subnet level. Therefore, each instance in a subnet in your VPC could be 
  assigned to a different set of security groups. If you don't specify a particular group at 
  launch time, the instance is automatically assigned to the default security group for the 
  VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a 
  separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The port for these inbound rules would depend on the Database engine used and the 
  configured port. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The default values are: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt; MySQL - TCP 3306&lt;/li&gt; 
  &lt;li&gt;MSSQL - TCP 1433&lt;/li&gt; 
  &lt;li&gt;Oracle SQL - TCP 1521&lt;/li&gt; 
  &lt;li&gt;PostgreSQL - TCP 5432&lt;/li&gt; 
  &lt;li&gt;MariaDB - TCP 3306&lt;/li&gt; 
  &lt;li&gt;Amazon Aurora DB - TCP 3306&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;First remove all the ingress rules for the security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-id &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[0].IpPermissions" &amp;gt; /tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; --ippermissions file:///tmp/IpPermissions.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Add an ingress rule for a specific port, using --source-group option to specify the App tier security group as the source of the connections:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 authorize-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; -- protocol tcp --port &amp;lt;specific_port&amp;gt; --source-group &amp;lt;app_tier_security_group&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: authorize security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/authorize-security-group-ingress.html"/>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.24" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.24" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Retrieve the Data tier security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-instances --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --query "DBInstances[*].VpcSecurityGroups" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure that allows connections only from App tier security group on specific ports:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.31" name="Don't use the default VPC" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A default VPC is ready for you to use - you can immediately start launching instances into your default VPC without having to perform any additional configuration steps. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  When we create a default VPC, AWS does the following to set it up: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Create a default subnet in each Availability Zone.&lt;/li&gt; 
  &lt;li&gt;Create an Internet gateway and connect it to your default VPC.&lt;/li&gt; 
  &lt;li&gt;Create a main route table for your default VPC with a rule that sends all traffic destined for the Internet to the Internet gateway.&lt;/li&gt; 
  &lt;li&gt;Create a default security group and associate it with your default VPC.&lt;/li&gt; 
  &lt;li&gt;Create a default network access control list (ACL) and associate it with your default VPC.&lt;/li&gt; 
  &lt;li&gt;Associate the default DHCP options set for your AWS account with your default VPC.&lt;/li&gt; 
 &lt;/ol&gt; 
  Label this Default VPC "Do Not Use". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create a new VPC with the desired CIDR and migrate your application: &lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 create-vpc --cidr-block &amp;lt;desired_cidr&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Impact&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  The Default VPC can be deleted but only AWS Support can restore it. Don't delete it - just 
  set a label to remind others not to use it. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create VPC" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-vpc.html"/>
            <reference name="Default VPC" url="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/default-vpc.html"/>
            <reference name="Deleted default VPC" url="https://aws.amazon.com/premiumsupport/knowledge-center/deleted-default-vpc/"/>
            <reference name="Describe VPCs" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-vpcs.html"/>
          </references>
          <standards>
            <standard ref="6.31" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon Unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the attributes of the VPC's in your account and note the value of the "IsDefault" attribute for the VPC where the application is deployed:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-vpcs --query "Vpcs[*].{VpcId:VpcId, IsDefault:IsDefault, Tags:Tags}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.766">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.5-1.6" name="Encrypt all EBS Volumes for tier" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;Description&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;br&gt;Elastic Block Storage (EBS) volumes can be encrypted using AWS Key Management Service (KMS). In this configuration, encryption and decryption are handled transparently and require no additional action from the user, an Amazon EC2 instance, or an application. When an encrypted Amazon EBS volume is attached to a supported Amazon EC2 instance type, the data stored at rest on the volume, disk I/O, and snapshots created from the volume are all encrypted. The encryption occurs on the servers that host Amazon EC2 instances. Additionally, snapshots of encrypted volumes are automatically encrypted, and volumes that are created from encrypted snapshots are also automatically encrypted. It is recommended that all EBS volumes for the web tier be encrypted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;*Note: references to Web tier are also applicable to App tier.&lt;/p&gt;&lt;p&gt;&lt;br&gt;Using the Amazon unified command line interface:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note all the volume ids of unencrypted EBS volumes and create a snapshot for each of them:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-snapshot --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt; --description "Snapshot for encryption operation"&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotIdelement from the output of step 1 and copy the snapshot to an encrypted snapshot using the KMS key created for the Web-tier:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 copy-snapshot --source-region &amp;lt;application_region&amp;gt; --source-snapshot-id &amp;lt;unencrypted_ebs_snapshot&amp;gt; --description "Encrypted snapshot." --encrypted --kms-keyid &amp;lt;web_tier_kms_key&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Note the SnapshotId element from the output of step 2 and create a new EBS volume from the encrypted snapshot in the same Availability Zone as the unencrypted volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-volume --availability-zone &amp;lt;application_az&amp;gt; --snapshot-id &amp;lt;encrypted_ebs_snapshot&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Tag the newly created EBS volume using the Volume Id from the previous step &amp;lt;encrypted_ebs_volume&amp;gt;:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 create-tags --resources &amp;lt;encrypted_ebs_volume&amp;gt; --tags Key=&amp;lt;web_tier_tag&amp;gt;,Value=&amp;lt;web_tier_tag_value&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Delete unencrypted EBS volume:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 delete-volume --volume-id &amp;lt;unencrypted_ebs_volume&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Copy snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/copy-snapshot.html"/>
            <reference name="Create snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-snapshot.html"/>
            <reference name="Create volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-volume.html"/>
            <reference name="Delete volume" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-volume.html"/>
            <reference name="Describe volumes" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-volumes.html"/>
            <reference name="EBS Encryption Considerations" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EBSEncryption.html"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified command line interface: (Note that you should replace &amp;lt;web_tier_tag&amp;gt;:&amp;lt;web_tier_tag_value&amp;gt; with your own tag and value for the Web tier)&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Note the EBS volume ids, Instance ids, Availability Zones, and check if the Encrypted element is True or False&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;aws ec2 describe-volumes --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query 'Volumes[*].{VolumeId:VolumeId, Encrypted:Encrypted, AvailabilityZone:AvailabilityZone, InstanceId:Attachments[*].InstanceId}' --output table&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" name="Ensure that the EC2 instances are managed by the systems manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS Systems Manager is an AWS service that you can use to view and control your AWS infrastructure. To help you to maintain security and compliance, Systems Manager scans your managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances. Additional configuration is needed in Systems Manager for patch deployment to managed EC2 instances.&lt;/p&gt;&lt;p&gt;If you use EC2 instances managed by Systems Manager to collect inventory for your cardholder data environment (CDE), make sure that the instances are managed by Systems Manager. Using Systems Manager can help to maintain an inventory of system components that are in scope for PCI DSS.&amp;nbsp;&lt;/p&gt;&lt;p&gt;For systems that are in scope for PCI DSS, before you install vendor patches in a production environment, you should test and validate them. After you deploy patches, validate security settings and controls to ensure that deployed patches have not affected the security of the CDE. If you use EC2 instances managed by Systems Manager to patch managed instances in your CDE, ensure that the instances are managed by Systems Manager. Systems Manager deploys system patches, which helps to protect system components and software from known vulnerabilities.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;You can use the Systems Manager quick setup to set up Systems Manager to manage your EC2 instances.&lt;/p&gt;&lt;p&gt;To determine whether your instances can support Systems Manager associations, see Systems Manager prerequisites in the &lt;i&gt;AWS Systems Manager User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To ensure EC2 instances are managed by Systems Manager&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the AWS Systems Manager console at https://console.aws.amazon.com/systems-manager/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Quick setup&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;On the configuration screen, keep the default options.&lt;/li&gt;&lt;li&gt;Choose &lt;strong&gt;Set up Systems Manager&lt;/strong&gt;.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="6.3.3" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-EC2-6.2" name="Maintain a patch policy and patch EC2 systems regularly" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Patching instances ensures that packages within the Operating System (OS) are updated to the
                        latest version and/or have security fixes applied. It is recommended to patch EC2 instances
                        every 90 days (or immediately if security patches become available) to avoid undue exposure
                        &lt;br /&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;For linux instances ensure your OS is updated as per:
                        http://docs.aws.amazon.com/AWSEC2/latest/UserGuide/managing-software.html&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;For Windows instances ensure your OS is updated as per:
                        http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/windows-ami-version-history.html#update-windows-instance&lt;/li&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Ensure you have a documented patching policy.&lt;/li&gt;
                            &lt;li&gt;Ensure your systems have been patched at least every 90 days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.16" name="Remove default route (0.0.0.0/0) from Routing Table associated with Data tier subnet" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A route table contains a set of rules, called routes, that are used to determine where 
  network traffic is directed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Each subnet in your VPC must be associated with a route table; the table controls the 
  routing for the subnet. A subnet can only be associated with one route table at a time, but 
  you can associate multiple subnets with the same route table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;For the above route tables, if the default route (0.0.0.0/0) exists and it has a NAT GW configured as gateway:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 delete-route --route-table-id &amp;lt;route_table_id&amp;gt; --destination-cidrblock 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Delete route" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/delete-route.html"/>
            <reference name="Describe route tables" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-route-tables.html"/>
            <reference name="Describe subnets" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-subnets.html"/>
          </references>
          <standards>
            <standard ref="6.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.16" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the subnets associated with the Data tier:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-subnets --filters Name=tag:&amp;lt;data_tier_tag&amp;gt;,Values=&amp;lt;data_tier_tag_value&amp;gt; --query "Subnets[*].SubnetId" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the routes of the route tables associated with the above subnets, and check if the default route (0.0.0.0/0) has a NAT GW configured as gateway:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-route-tables --filters Name=association.subnetid,Values=&amp;lt;data_tier_subnet1&amp;gt;,&amp;lt;data_tier_subnet2&amp;gt; --query "RouteTables[*].{RouteTableId:RouteTableId, Routes:Routes}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.27-6.28-6.29" name="Remove Elastic / Public IP addresses from EC2 instances within Tier" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  All subnets have an attribute that determines whether instances launched into that subnet receive a public IP address. The public IP address is assigned to the default network interface (eth0). By default, instances launched into a default subnet are assigned a public IP address. A public IP address is mapped to the primary private IP address through network address translation (NAT). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  An Elastic IP address is a static, public IP address designed for dynamic cloud computing. You can associate an Elastic IP address with any instance or network interface for your VPC. With an Elastic IP address, you can mask the failure of an instance by rapidly remapping the address to another instance in your VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App and Data tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;If in the above output the "IpOwnerId" is "amazon" the public Ip is not an Elastic IP and it cannot be manually disassociated from the instance after launch:&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Make sure that the Web tier subnet doesn't assign public Ip's at launch (run the command for all Web tier subnets)&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;blockquote&gt; 
   &lt;div&gt;
     aws ec2 modify-subnet-attribute --subnet-id &amp;lt;web_tier_subnet1&amp;gt; --no-map-publicip-on-launch 
   &lt;/div&gt; 
  &lt;/blockquote&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Create an AMI from the instance and launch a replacement instance in the same subnet&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;If in the above output the "IpOwnerId" is an AWS account number, this is an Elastic IP and it can be disassociated:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 disassociate-address --public-ip &amp;lt;elastic_ip_address&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe instances" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-instances.html"/>
            <reference name="Disassociate address" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/disassociate-address.html"/>
            <reference name="Modify subnet attribute" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-subnet-attribute.html"/>
            <reference name="VPC IP Addressing" url="https://docs.aws.amazon.com/AmazonVPC/latest/UserGuide/vpc-ip-addressing.html"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="6.27" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.27" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.28" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.28" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.29" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.29" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the instance-id's, tags and public IP's of the EC2 instances from the application VPC that have a public IP associated, and check if there are any instances with Web tier tags listed:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-instances --filters "Name=vpc-id,Values=&amp;lt;application_vpc&amp;gt;" --query "Reservations[*].Instances[?PublicIpAddress != null].{InstanceId:InstanceId, PublicIpAddresses:NetworkInterfaces[*].Association, SubnetId:SubnetId, Tags:Tags}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.25" name="Remove inbound rules for CIDR of 0 (Global Allow) for Data tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you can assign the instance to up to five security groups. Security groups act at the instance level, not the subnet level. Therefore, each instance in a subnet in your VPC could be assigned to a different set of security groups. If you don't specify a particular group at launch time, the instance is automatically assigned to the default security group for the VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Remove the ingress rules for CIDR 0.0.0.0/0:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;data_tier_security_group&amp;gt; --protocol tcp/udp --port &amp;lt;specific_port&amp;gt; --cidr 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.25" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.25" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Retrieve the Data tier security group configured for your RDS DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-instances --db-instance-identifier &amp;lt;your_db_instance&amp;gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the ingress rules for the above security group, and make sure it has no inbound rules for CIDR of 0.0.0.0/0:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-security-groups --group-ids &amp;lt;data_tier_security_group&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions}" --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.20-6.23" name="Remove inbound rules for CIDR of 0 (Global Allow) for tier Security Group" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  A security group acts as a virtual firewall for your instance to control inbound and 
  outbound traffic. When you launch an instance in the AWS Virtual Private Cloud (VPC), you 
  can assign the instance to up to five security groups. Security groups act at the instance 
  level, not the subnet level. Therefore, each instance in a subnet in your VPC could be 
  assigned to a different set of security groups. If you don't specify a particular group at 
  launch time, the instance is automatically assigned to the default security group for the 
  VPC. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  For each security group, you add rules that control the inbound traffic to instances, and a 
  separate set of rules that control the outbound traffic. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   *Note: references to Web tier are also applicable to App tier. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Remove the ingress rules for CIDR 0.0.0.0/0 (use the "WebTierSecurityGroup" element from Audit procedure):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 revoke-security-group-ingress --group-id &amp;lt;web_tier_security_group&amp;gt; --protocol tcp/udp --port &amp;lt;specific_port&amp;gt; --cidr 0.0.0.0/0 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe launch configuration" url="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/describe-launch-configurations.html"/>
            <reference name="Amazon docs: describe security groups" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-security-groups.html"/>
            <reference name="Revoke security group ingress" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/revoke-security-group-ingress.html"/>
          </references>
          <standards>
            <standard ref="6.20" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.20" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="6.23" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.23" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;List the ingress rules for the Web tier security group, and make sure it has no inbound rules for CIDR of 0.0.0.0/0:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 describe-security-groups --filters Name=tag:&amp;lt;web_tier_tag&amp;gt;,Values=&amp;lt;web_tier_tag_value&amp;gt; --query "SecurityGroups[*].{GroupName:GroupName, IpPermissions:IpPermissions, WebTierSecurityGroup:GroupId}" --output table 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.6" name="Restrict all traffic with the default security group" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit all traffic
                        (ingress/egress) on the default security group in order to force the use of least privilege via
                        custom created security groups.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify AWS resources that exist within the default security group.&lt;/li&gt;
                        &lt;li&gt;Create a set of least privilege security groups for those resources.&lt;/li&gt;
                        &lt;li&gt;Place the resources in those security groups.&lt;/li&gt;
                        &lt;li&gt;Remove the resources noted in 1 from the default security group.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the default security group.&lt;/li&gt;
                            &lt;li&gt;Click the Inbound Rules tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exist.&lt;/li&gt;
                            &lt;li&gt;Click the Outbound Rules tab.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Ensure no rules exist.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.7-1.8" name="Set Customer-owned AMIs in tier to be private" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;b&gt;Description&lt;/b&gt;:&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon Machine Images (AMI) are an exact duplicate of the instance they were created from and will allow anyone with access to create a complete replica of the original instance. The original instance may contain intellectual property, proprietary applications, and configuration information that can be used to exploit or compromise any running instance in the web tier.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;For each AMI that is public remove group ALL from the launch permissions:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div&gt;
     aws ec2 modify-image-attribute --image-id &amp;lt;public_image_id&amp;gt; --launch-permission "{\"Remove\":[{\"Group\":\"all\"}]}" 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Default Value&lt;/b&gt;: 
 &lt;/div&gt; 
 &lt;div&gt;
   The prescribed value is the default value. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Describe images" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/describe-images.html"/>
            <reference name="Modify image attribute" url="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-image-attribute.html"/>
            <reference name="Sharing AMIs" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/sharingamis-intro.html"/>
          </references>
          <standards>
            <standard ref="1.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.7" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the Amazon unified command line interface: (Note that you should replace&amp;nbsp;&amp;lt;tier_tag&amp;gt;:&amp;lt;tier_tag_value&amp;gt;&amp;nbsp;with your own tag and value for the tier)&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Note the image id's, AMI name, and check if Public element is True or False:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws ec2 describe-images --owners self --filters 
  &lt;/div&gt; 
  &lt;div&gt;
    Name=tag:&amp;lt;tier_tag&amp;gt;,Values=&amp;lt;tier_tag_value&amp;gt; --query 'Images[*].{Name:Name, 
  &lt;/div&gt; 
  &lt;div&gt;
    ImageId:ImageId, Public:Public}' --output table 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AWS-API-GW9" name="Use AWS Shield for DDoS protection" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use AWS Shield for protection against most common DDoS attacks, and access to tools and best practices to build a DDoS resilient architecture. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  AWS Shield is a managed Distributed Denial of Service (DDoS) protection service that safeguards applications running on AWS. AWS Shield provides always-on detection and automatic inline mitigations that minimize application downtime and latency, so there is no need to engage AWS Support to benefit from DDoS protection. There are two tiers of AWS Shield - Standard and Advanced. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All AWS customers benefit from the automatic protections of AWS Shield Standard, at no additional charge. AWS Shield Standard defends against most common, frequently occurring network and transport layer DDoS attacks that target your web site or applications. When you use AWS Shield Standard with Amazon CloudFront and Amazon Route 53, you receive comprehensive availability protection against all known infrastructure (Layer 3 and 4) attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For higher levels of protection against attacks targeting your applications running on Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), Amazon CloudFront, AWS Global Accelerator and Amazon Route 53 resources, you can subscribe to AWS Shield Advanced. In addition to the network and transport layer protections that come with Standard, AWS Shield Advanced provides additional detection and mitigation against large and sophisticated DDoS attacks, near real-time visibility into attacks, and integration with AWS WAF, a web application firewall. AWS Shield Advanced also gives you 24x7 access to the AWS DDoS Response Team (DRT) and protection against DDoS related spikes in your Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), Amazon CloudFront, AWS Global Accelerator and Amazon Route 53 charges. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Shield Advanced is available globally on all Amazon CloudFront, AWS Global Accelerator, and Amazon Route 53 edge locations. You can protect your web applications hosted anywhere in the world by deploying Amazon CloudFront in front of your application. Your origin servers can be Amazon S3, Amazon Elastic Compute Cloud (EC2), Elastic Load Balancing (ELB), or a custom server outside of AWS. You can also enable AWS Shield Advanced directly on an Elastic IP or Elastic Load Balancing (ELB) in the following AWS Regions - Northern Virginia, Ohio, Oregon, Northern California, Montreal, Sao Paulo, Ireland, Frankfurt, London, Paris, Stockholm, Singapore, Tokyo, Sydney, Seoul, and Mumbai. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable AWS Shield. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Shield Managed DDoS protection" url="https://aws.amazon.com/shield/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt; 
 &lt;b&gt;How can I test AWS Shield?&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  AWS Acceptable Use Policy describes permitted and prohibited behavior on AWS, and it includes descriptions of prohibited security violations and network abuse. However, because penetration testing and other simulated events are frequently indistinguishable from these activities, AWS has established a policy for customers to request permission to conduct penetration tests and vulnerability scans to or originating from the AWS environment. Visit AWS Penetration testing page to request permissions (see link in References). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.759">
              <output/>
            </source>
            <references>
              <reference name="AWS Shield FAQs" url="https://aws.amazon.com/shield/faqs/"/>
              <reference name="Penetration Testing - Test the AWS environment against defined security standards" url="https://aws.amazon.com/security/penetration-testing/"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-SRA-8" name="Use AWS Traffic Mirroring to copy network traffic from an elastic network interface of EC2 instances" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;You can use Traffic Mirroring to copy network traffic from an elastic network interface of EC2 instances. You can then send the traffic to out-of-band security and monitoring appliances for content inspection, threat monitoring, or troubleshooting. For example, you might want to monitor the traffic that is leaving your VPC or the traffic whose source is outside your VPC. In this case, you will mirror all traffic except for the traffic passing within your VPC and send it to a single monitoring appliance. VPC flow logs do not capture mirrored traffic; they generally capture information from packet headers only. Traffic Mirroring provides deeper insight into the network traffic by allowing you to analyze actual traffic content, including payload. Enable Traffic Mirroring only for the elastic network interface of EC2 instances that might be operating as part of sensitive workloads or for which you expect to need detailed diagnostics in the event of an issue.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Security Reference Architecture" url="https://docs.aws.amazon.com/prescriptive-guidance/latest/security-reference-architecture/welcome.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the network traffic is copied from an EC2 instance after having configured Traffic Mirroring.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.3" name="Use Cloudfront CDN" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront can be used to deliver either the entire website, including dynamic, 
  static, streaming, and interactive content using a global network of edge locations. 
  Requests for your content are automatically routed to the nearest edge location, so content 
  is delivered with the best possible performance. Amazon CloudFront is optimized to work 
  with other Amazon Web Services, like Amazon Simple Storage Service (Amazon S3), 
  Amazon Elastic Compute Cloud (Amazon EC2), Amazon Elastic Load Balancing, and 
  Amazon Route 53. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Amazon CloudFront gives you three options for accelerating your entire website while 
  delivering your content securely over HTTPS from all of CloudFront's edge locations. In 
  addition to delivering securely from the edge, you can also configure CloudFront to use 
  HTTPS connections for origin fetches so that your data is encrypted end-to-end from your 
  origin to your end users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Remediation&lt;/b&gt;: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;You can either create a Cloudfront distribution only by specifying the origin domain name (ELB, S3 bucket or web server):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --origin-domain-name &amp;lt;your_original_domain_name&amp;gt; -- default-root-object index.html 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Or by creating locally a distribution config file distconfig.json with all the Cloudfront distribution parameters:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront create-distribution --distribution-config file://distconfig.json 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create distribution" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html"/>
            <reference name="List distributions" url="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/list-distributions.html"/>
            <reference name="Working with distributions" url="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-working-with.html"/>
          </references>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Using the Amazon unified command line interface: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List the Cloudfront distributions present in the AWS account, and check in the aliases field for the presence of the domain name used by the application:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws cloudfront list-distributions --query "DistributionList.Items[*].{Id:Id, Status:Status, DomainName:DomainName, Aliases:Aliases.Items}" 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-IMDS" name="Use IMDSv2 instead of IMDSv1" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All EC2 Instances have access to the metadata service at 169.254.169.254. This contains useful information about the instance such as its IP address, the name of the security group, etc. On EC2 instances that have an IAM role attached the metadata service will also contain IAM credentials to authenticate as this role. Depending on what version of IMDS is in place, and what capabilities the SSRF has those credentials could be stolen.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Tools for helping with the transition to IMDSv2&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If your software uses IMDSv1, use the following tools to help reconfigure your software to use IMDSv2.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;AWS software:&lt;/strong&gt; The latest versions of the AWS SDKs and CLIs support IMDSv2. To use IMDSv2, make sure that your EC2 instances have the latest versions of the AWS SDKs and CLIs. For information about updating the CLI, see &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html"&gt;Installing, updating, and uninstalling the AWS CLI&lt;/a&gt; in the &lt;i&gt;AWS Command Line Interface User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;CloudWatch&lt;/strong&gt;: IMDSv2 uses token-backed sessions, while IMDSv1 does not. The MetadataNoToken CloudWatch metric tracks the number of calls to the instance metadata service that are using IMDSv1. By tracking this metric to zero, you can determine if and when all of your software has been upgraded to use IMDSv2. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html#ec2-cloudwatch-metrics"&gt;Instance metrics&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Updates to EC2 APIs and CLIs&lt;/strong&gt;: For existing instances, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API) to require the use of IMDSv2. For new instances, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html"&gt;run-instances&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; API) and the metadata-options parameter to launch new instances that require the use of IMDSv2.&lt;/p&gt;&lt;p&gt;To require the use of IMDSv2 on all new instances launched by Auto Scaling groups, your Auto Scaling groups can use either a launch template or a launch configuration. When you &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/create-launch-template.html"&gt;create a launch template&lt;/a&gt; or &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/autoscaling/create-launch-configuration.html"&gt;create a launch configuration&lt;/a&gt;, you must configure the MetadataOptions parameters to require the use of IMDSv2. After you configure the launch template or launch configuration, the Auto Scaling group launches new instances using the new launch template or launch configuration, but existing instances are not affected.&lt;/p&gt;&lt;p&gt;Use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; CLI command (or the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API) to require the use of IMDSv2 on the existing instances, or terminate the instances and the Auto Scaling group will launch new replacement instances with the instance metadata options settings that are defined in the launch template or launch configuration.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;IAM policies and SCPs&lt;/strong&gt;: You can use an IAM condition to enforce that IAM users can't launch an instance unless it uses IMDSv2. You can also use IAM conditions to enforce that IAM users can't modify running instances to re-enable IMDSv1, and to enforce that the instance metadata service is available on the instance.&lt;/p&gt;&lt;p&gt;The ec2:MetadataHttpTokens, ec2:MetadataHttpPutResponseHopLimit, and ec2:MetadataHttpEndpoint IAM condition keys can be used to control the use of the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API and corresponding CLI. If a policy is created, and a parameter in the API call does not match the state specified in the policy using the condition key, the API or CLI call fails with an UnauthorizedOperation response. These condition keys can be used either in IAM policies or AWS Organizations service control policies (SCPs).&lt;/p&gt;&lt;p&gt;Furthermore, you can choose an additional layer of protection to enforce the change from IMDSv1 to IMDSv2. At the access management layer with respect to the APIs called via EC2 Role credentials, you can use a new condition key in either IAM policies or AWS Organizations service control policies (SCPs). Specifically, by using the policy condition key ec2:RoleDelivery with a value of 2.0 in your IAM policies, API calls made with EC2 Role credentials obtained from IMDSv1 will receive an UnauthorizedOperation response. The same thing can be achieved more broadly with that condition required by an SCP. This ensures that credentials delivered via IMDSv1 cannot actually be used to call APIs because any API calls not matching the specified condition will receive an UnauthorizedOperation error. For example IAM policies, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExamplePolicies_EC2.html#iam-example-instance-metadata"&gt;Work with instance metadata&lt;/a&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/organizations/latest/userguide/orgs_manage_policies_scp.html"&gt;Service Control Policies&lt;/a&gt; in the &lt;i&gt;AWS Organizations User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Recommended path to requiring IMDSv2 access&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Using the above tools, we recommend that you follow this path for transitioning to IMDSv2:&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 1: At the start&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Update the SDKs, CLIs, and your software that use Role credentials on their EC2 instances to IMDSv2-compatible versions. For information about updating the CLI, see &lt;a href="https://docs.aws.amazon.com/cli/latest/userguide/install-linux.html#install-linux-awscli-upgrade"&gt;Upgrading to the latest version of the AWS CLI&lt;/a&gt; in the &lt;i&gt;AWS Command Line Interface User Guide&lt;/i&gt;.&lt;/p&gt;&lt;p&gt;Then, change your software that directly accesses instance metadata (in other words, that does not use an SDK) using the IMDSv2 requests.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 2: During the transition&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Track your transition progress by using the CloudWatch metric MetadataNoToken. This metric shows the number of calls to the instance metadata service that are using IMDSv1 on your instances. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/viewing_metrics_with_cloudwatch.html#ec2-cloudwatch-metrics"&gt;Instance metrics&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 3: When everything is ready on all instances&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;Everything is ready on all instances when the CloudWatch metric MetadataNoToken records zero IMDSv1 usage. At this stage, you can do the following:&lt;/p&gt;&lt;p&gt;For existing instances: You can require IMDSv2 use through the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/modify-instance-metadata-options.html"&gt;modify-instance-metadata-options&lt;/a&gt; command. You can make these changes on running instances; you do not need to restart your instances.&lt;/p&gt;&lt;p&gt;For new instances: When launching a new instance, you can do one of the following:&lt;/p&gt;&lt;p&gt;In the Amazon EC2 console launch instance wizard, set &lt;strong&gt;Metadata accessible&lt;/strong&gt; to &lt;strong&gt;Enabled&lt;/strong&gt; and &lt;strong&gt;Metadata version&lt;/strong&gt; to &lt;strong&gt;V2&lt;/strong&gt;. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/launching-instance.html#configure_instance_details_step"&gt;Step 3: Configure Instance Details&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/ec2/run-instances.html"&gt;run-instances&lt;/a&gt; command to specify that only IMDSv2 is to be used.&lt;/p&gt;&lt;p&gt;Updating instance metadata options for existing instances is available only through the API or AWS CLI. It is currently not available in the Amazon EC2 console. For more information, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html"&gt;Configure the instance metadata options&lt;/a&gt;.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Step 4: When all of your instances are transitioned to IMDSv2&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;The ec2:MetadataHttpTokens, ec2:MetadataHttpPutResponseHopLimit, and ec2:MetadataHttpEndpoint IAM condition keys can be used to control the use of the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html"&gt;RunInstances&lt;/a&gt; and the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_ModifyInstanceMetadataOptions.html"&gt;ModifyInstanceMetadataOptions&lt;/a&gt; API and corresponding CLI. If a policy is created, and a parameter in the API call does not match the state specified in the policy using the condition key, the API or CLI call fails with an UnauthorizedOperation response. For example IAM policies, see &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ExamplePolicies_EC2.html#iam-example-instance-metadata"&gt;Work with instance metadata&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Configuring IMDS" url="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;If there is a valid role you can steal, make a request to http://&amp;lt;aws-ip&amp;gt;/?proxy=http://169.254.169.254/latest/meta-data/iam/security-credentials/. This will return the name of the IAM role the credentials represent.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.760">
              <output/>
            </source>
            <references>
              <reference name="Steal EC2 Metadata Credentials via SSRF" url="https://hackingthe.cloud/aws/exploitation/ec2-metadata-ssrf/"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.7" name="Use Network Access Control Lists (NACLs) for blacklisting" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Network Access Control Lists (NACLs) act as packet filters across subnets, allowing or deny traffic per pre-created rules. It is recommended to use NACLs as a method to blacklist IP addresses, denying either inbound or outbound access across your subnets.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console (with VPC update).&lt;/li&gt;&lt;li&gt;Select VPC from the service menu.&lt;/li&gt;&lt;li&gt;Select Network ACL's.&lt;/li&gt;&lt;li&gt;For each Network ACL ID, perform the following:&lt;ul&gt;&lt;li&gt;Select the Inbound Rules tab.&lt;/li&gt;&lt;li&gt;Click edit.&lt;/li&gt;&lt;li&gt;add a DENY rule that will restrict inbound access from a blacklisted IP address or range to a designated port or IP range.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Log in to the AWS Management Console.&lt;/li&gt;&lt;li&gt;Select VPC from the services menu.&lt;/li&gt;&lt;li&gt;Select Network ACLs.&lt;/li&gt;&lt;li&gt;For each Network ACL ID, perform the following:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Click the Inbound Rules tab.&lt;/li&gt;&lt;li&gt;Ensure a rule exists to DENY access from a blacklisted IP or range.&lt;/li&gt;&lt;li&gt;Click the Outbound Rules tab.&lt;/li&gt;&lt;li&gt;Ensure a rule exists to DENY access to a blacklisted IP or range.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.5" name="Use security groups to block ingress to all ports from 0.0.0.0/0 and ::/0" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        ALL TCP or ALL ports to avoid undue server exposure.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update).&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select Security Groups.&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be edited or removed.&lt;/li&gt;
                        &lt;li&gt;Either A) update the Source field to a range other than 0.0.0.0/0 or ::/0, or, B) Click Delete to remove the offending inbound rule.&lt;/li&gt;
                        &lt;li&gt;Click Save rules.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="5.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="5.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range of 0-1024 of 0-65535 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;br /&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.3" name="Use security groups to block ingress to port 22 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        port 22 (SSH) to IP addresses that require this access to avoid undue exposure to risk.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select Security Groups&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be removed.&lt;/li&gt;
                        &lt;li&gt;Click the x in the Remove column.&lt;/li&gt;
                        &lt;li&gt;Click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt; 
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="4.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range that includes port 22 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;NB: Note that if the port range includes 0-1024 or 0-65535 these also include
                            port 22</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-Network-5.4" name="Use security groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security groups are analogous to firewalls and therefore provide stateful filtering of
                        ingress/egress network traffic to AWS resources. It is recommended to limit inbound access to
                        port 3389 (RDP) to IP addresses that require this access to avoid undue exposure to risk.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;br /&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Login to the AWS Management Console (with VPC update).&lt;/li&gt;
                        &lt;li&gt;Select VPC from the services menu.&lt;/li&gt;
                        &lt;li&gt;Select Security Groups.&lt;/li&gt;
                        &lt;li&gt;For each security group, perform the following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the security group.&lt;/li&gt;
                        &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                        &lt;li&gt;Identify the rules to be removed.&lt;/li&gt;
                        &lt;li&gt;Click the x in the Remove column.&lt;/li&gt;
                        &lt;li&gt;Click Save&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="4.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Login to the AWS Management Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select VPC from the services menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select Security Groups.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;For each security group, perform the following:&amp;nbsp;&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Select the security group.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the Inbound tab.&lt;/li&gt;
                            &lt;li&gt;Ensure no rule exists that has a port range that includes port 22 and has a source
                            of 0.0.0.0/0.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;NB: Note that if the port range includes 0-1024 or 0-65535 these also include
                            port 3389</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AWS-EC2-1" name="VPC default security group should prohibit inbound and outbound traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If a service that is in scope for PCI DSS is associated with the default security group, the default rules for the security group will allow all outbound traffic. The rules also allow all inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group.&lt;/p&gt;&lt;p&gt;You should change the default security group rules setting to restrict inbound and outbound traffic. Using the default might violate the requirement to allow only necessary traffic to and from the CDE.&lt;/p&gt;&lt;h3&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;To remediate this issue, create new security groups and assign those security groups to your resources. To prevent the default security groups from being used, remove their inbound and outbound rules.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To create new security groups and assign them to your resources&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon VPC console at https://console.aws.amazon.com/vpc/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Security groups&lt;/strong&gt;. View the default security groups details to see the resources that are assigned to them.&lt;/li&gt;&lt;li&gt;Create a set of least-privilege security groups for the resources. For details on how to create security groups, see Creating a security group in the &lt;i&gt;Amazon VPC User Guide&lt;/i&gt;.&lt;/li&gt;&lt;li&gt;Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/.&lt;/li&gt;&lt;li&gt;On the Amazon EC2 console, change the security group for the resources that use the default security groups to the least-privilege security group you created. See Changing an instance's security groups in the &lt;i&gt;Amazon VPC User Guide&lt;/i&gt;.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;After you assign the new security groups to the resources, remove the inbound and outbound rules from the default security groups. This ensures that the default security groups are not used.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To remove the rules from the default security group&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Amazon VPC console at https://console.aws.amazon.com/vpc/.&lt;/li&gt;&lt;li&gt;In the navigation pane, choose &lt;strong&gt;Security groups&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Select a default security group, and choose the &lt;strong&gt;Inbound rules&lt;/strong&gt; tab. Choose &lt;strong&gt;Edit inbound rules&lt;/strong&gt;. Then delete all of the inbound rules. Choose &lt;strong&gt;Save rules&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Repeat the previous step for each default security group.&lt;/li&gt;&lt;li&gt;Select a default security group and choose the &lt;strong&gt;Outbound rules&lt;/strong&gt; tab. Choose &lt;strong&gt;Edit outbound rules&lt;/strong&gt;. Then delete all of the outbound rules. Choose &lt;strong&gt;Save rules&lt;/strong&gt;.&lt;/li&gt;&lt;li&gt;Repeat the previous step for each default security group.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS PCI-DSS Controls" url="https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-pci-controls.html"/>
          </references>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.2.2" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.760">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON-WEB-SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="OWASP A10:2017" issueId="" issueLink="" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SRA-8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SRA-8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" issueId="" issueLink="" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-NET-01">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.5" mitigation="20"/>
                    <countermeasure ref="Hydras-AWS-Network-5.6" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.10" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.11" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.12" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.14-6.15" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.16" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.20-6.23" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.24" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.25" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.27-6.28-6.29" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.31" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.6-6.7-6.8" mitigation="5"/>
                    <countermeasure ref="aws-tier-6.9" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-02">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.3" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-03">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-04">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-1" mitigation="5"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-1" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.3" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.4" mitigation="5"/>
                <countermeasure ref="Hydras-AWS-Network-5.5" mitigation="20"/>
                <countermeasure ref="Hydras-AWS-Network-5.6" mitigation="5"/>
                <countermeasure ref="aws-tier-6.10" mitigation="5"/>
                <countermeasure ref="aws-tier-6.11" mitigation="5"/>
                <countermeasure ref="aws-tier-6.12" mitigation="5"/>
                <countermeasure ref="aws-tier-6.14-6.15" mitigation="5"/>
                <countermeasure ref="aws-tier-6.16" mitigation="5"/>
                <countermeasure ref="aws-tier-6.20-6.23" mitigation="5"/>
                <countermeasure ref="aws-tier-6.24" mitigation="5"/>
                <countermeasure ref="aws-tier-6.25" mitigation="5"/>
                <countermeasure ref="aws-tier-6.27-6.28-6.29" mitigation="5"/>
                <countermeasure ref="aws-tier-6.31" mitigation="5"/>
                <countermeasure ref="aws-tier-6.6-6.7-6.8" mitigation="5"/>
                <countermeasure ref="aws-tier-6.9" mitigation="5"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="NON-UPDATED-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized access to data on EC2 instances" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers gain access to data on EC2 instances by exploiting weaknesses in non-updated or misconfigured systems.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-EC2-6.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-IND-RESOURCES">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-NET-04">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-Network-5.7" mitigation="12"/>
                    <countermeasure ref="aws-tier-1.7-1.8" mitigation="12"/>
                    <countermeasure ref="aws-tier-3.2" mitigation="12"/>
                    <countermeasure ref="aws-tier-3.3-3.4" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="VOLUMES-NOT-ENCRYPTED">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.5-1.6" mitigation="12"/>
                    <countermeasure ref="aws-tier-5.10-5.11" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-EC2-6.2" mitigation="16"/>
                <countermeasure ref="Hydras-AWS-Network-5.7" mitigation="12"/>
                <countermeasure ref="aws-tier-1.5-1.6" mitigation="12"/>
                <countermeasure ref="aws-tier-1.7-1.8" mitigation="12"/>
                <countermeasure ref="aws-tier-3.2" mitigation="12"/>
                <countermeasure ref="aws-tier-3.3-3.4" mitigation="12"/>
                <countermeasure ref="aws-tier-5.1" mitigation="12"/>
                <countermeasure ref="aws-tier-5.10-5.11" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SYSTEMS-MANAGER4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-CF-DOS" issueId="" issueLink="" name="Attackers perform a denial of service" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;A Denial of Service (DoS) attack is a deliberate attempt to make your website unavailable. Attackers use a variety of techniques that consume large amount of resources.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="SYSTEM-VUL-DOS">
                  <countermeasures>
                    <countermeasure ref="AWS-API-GW9" mitigation="34"/>
                    <countermeasure ref="aws-tier-6.3" mitigation="33"/>
                    <countermeasure ref="aws-tier-6.32-6.33" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AWS-API-GW9" mitigation="34"/>
                <countermeasure ref="aws-tier-6.3" mitigation="33"/>
                <countermeasure ref="aws-tier-6.32-6.33" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ssrf-threat" issueId="" issueLink="" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="C-AWS-EC2-IMDS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-EC2-IMDS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4270ad47-f039-428c-a5eb-b97cc5e10659" diagramComponentId="76c40292-6e73-4008-a675-6b3b3c96908b" ref="2d7c3195-4249-4714-b3d8-07ef0d7f06fa" name="AWS RDS (Relational Database Service)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="3550da2c-6145-4b2a-8f63-305b169e245c" componentDefinitionRef="rds" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="database-publically-accesible" name="Database is publically accesible" state="0" impact="100" issueId="" issueLink="">
          <desc>Everyone can access the RDS database and obtain the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.185">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-notification-incident" name="No notification when an incident occurs" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no notifications when a security incident occurs. Therefore, we do not know when an
                        attacker gains access to our systems and/or security systems
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-access-control-onrds" name="Not access control on RDS databases" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no access control mechanisms on the RDS database resources and any user can gain access
                        to them and exfiltrate the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NOT_BACKUP_POLICIES" name="Not backup retention policies" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no data backup retention policies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.3" name="Sensitive data is exposed in transit" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Sensitive data is not encrypted in transit with HTTPS or SSL, and is accessible while traversing the network.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.187">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-RDS-02" name="Assign to IAM roles the permissions for RDS instances" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The following AWS managed policies, which you can attach to users in your account, are
                        specific to Amazon RDS:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSReadOnlyAccess:&lt;/b&gt; Grants read-only access to all Amazon RDS
                        resources for the root AWS account.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSFullAccess:&lt;/b&gt; Grants full access to all Amazon RDS resources
                        for the root AWS account.&lt;/li&gt;
                        &lt;/ul&gt;You can also create custom IAM policies that allow users to access the required
                        Amazon RDS API actions and resources. You can attach these custom policies to the IAM users or
                        groups that require those permissions.
                        &lt;br /&gt;
                        &lt;br /&gt;The permissions above shall be assigned to roles or groups:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The roles or groups only do calls to the API to get information, the
                        AmazonRDSReadOnlyAccess permission shall be assigned.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The roles or groups who are responsible of managing the RDS instances shall be
                        assigned the AmazonRDSFullAccess permission.&lt;/li&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Review the IAM roles and groups.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles or groups have got the AmazonRDSReadOnlyAccess permission.&lt;/li&gt;
                            &lt;li&gt;Check that only the appropriate personnel have got AmazonRDSFullAccess permissions
                            to manage the RDS instances.&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.054">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.34" name="Configure RDS database to leverage the Data Tier Security Group" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
  Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
  &lt;li&gt;Network access to the managed Data-Tier must be tightly controlled using Security Groups for RDS and non local accessibility of the DB instance.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each non-compliant DB instance, and configure it to use the Data Tier Security Group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --vpc-security-group-ids &amp;lt;data_tier_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are configured to use the Data Tier
                            Security Group:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{VpcSecurityGroups:VpcSecurityGroups,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.057">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.30" name="Do not allow the RDS database to be publically accessible" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt;Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each publicly accessible DB instance, and make it private:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --no-publicly-accessible 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="6.30" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are publicly available:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{PubliclyAccessible:PubliclyAccessible,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.056">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.6" name="Enable Auto Minor Version Upgrade on RDS" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair.&lt;/p&gt; 
&lt;p&gt;There are 6 database engines available for customers to run their database workloads on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;MariaDB&lt;/li&gt; 
 &lt;li&gt;Oracle&lt;/li&gt; 
 &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the database engine used by your application supports it, ensure that the RDS Instances have Auto Minor Version Upgrade Enabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt; 
&lt;p&gt;Using the Amazon unified command line interface:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modify each DB instance with auto-minor-version-upgrade set to False, and enable auto-minor-version-upgrade:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --auto-minor-version-upgrade&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="2.3.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have Auto Minor Version Upgrade enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{AutoMinorVersionUpgrade:AutoMinorVersionUpgrade,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.055">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.4" name="Enable encryption at rest for Databases running on RDS" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon RDS instances and snapshots can be encrypted at rest by enabling the encryption option on the Amazon RDS DB instance. Data that is encrypted at rest includes the underlying storage for a DB instance, its automated backups, read replicas, and snapshots. Encryption at rest should be enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Perform a snapshot of the DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds create-db-snapshot --db-snapshot-identifier db_snapshot --db-instance-identifier your_db_instance 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Confirm created snapshot is available (once snapshot process has completed):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-snapshots --query 'DBSnapshots[*].{DBSnapshotIdentifier:DBSnapshotIdentifier, DBInstanceIdentifier:DBInstanceIdentifier, Snapshotstatus:Status}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all KMS Customer Managed Keys:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws kms list-aliases 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Copy to source RDS snapshot (from previous step) to a destination snapshot which will be encrypted:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt;
   aws rds copy-db-snapshot --source-db-snapshot-identifier db_snapshot&amp;nbsp; --target-db-snapshot-identifier encrypted_db_snapshot --kms-key-id data_tier_kms_key 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Restore a snapshot to the target DB instance(from previous step) with the same values as original db instance with additional encrypted storage values:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds restore-db-instance-from-db-snapshot --db-instance-identifier your_db_instance --db-snapshot-identifier encrypted_db_snapshot 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: copy db snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/rds/copy-db-snapshot.html"/>
            <reference name="Amazon docs: copy snapshot" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html"/>
            <reference name="Amazon docs: create db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html"/>
            <reference name="Amazon docs: create db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-snapshot.html"/>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-snapshots.html"/>
            <reference name="Amazon docs: encryption" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"/>
            <reference name="Amazon docs: list aliases" url="https://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.html"/>
          </references>
          <standards>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all current RDS instances and review the encryption status of the DB
                            instance:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws rds describe-db-instances --query 'DBInstances[*].{DBName:DBName,
                            EncryptionEnabled:StorageEncrypted, CMK:KmsKeyId}'
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.055">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.4" name="Enable event subscriptions for DataBase security on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS Relational Database Services offers customers a managed database engine solution
                        for hosting customer created databases which can allow for a reduction in operational burden on
                        customers.&lt;/p&gt;
                        &lt;p&gt;RDS event subscriptions provide notification of selected event changes at a DB security
                        group level.&lt;/p&gt;
                        &lt;p&gt;Event subscriptions are designed to provide incident notification of events which may
                        affect the network availability of the RDS instance.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a new event subscription for DB Security Group events:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;p&gt;aws rds create-event-subscription --subscription-name rds_event_subscription
                        --sns-topic-arn
                        sns_topic_arn
                        --source-type db-security-group --event-categories rds_events
                        --source-ids events_source_ids --enabled&lt;/p&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-security-group&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.056">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.3" name="Enable Event subscriptions for Instance level events on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  AWS Relational Database Services offers customers a managed database engine solution for hosting customer created databases which can allow for a reduction in operational burden on customers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  RDS event subscriptions provide notification of selected event changes at DataBase engine level such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Deletion&lt;/li&gt; 
  &lt;li&gt;Failure&lt;/li&gt; 
  &lt;li&gt;Failover&lt;/li&gt; 
  &lt;li&gt;Low Storage&lt;/li&gt; 
  &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;/ul&gt; 
  Event subscriptions are designed to provide incident notification of events which may affect the availability of a RDS database instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new event subscription for DB instance level events:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds create-event-subscription --subscription-name &amp;lt;rds_event_subscription&amp;gt; --sns-topic-arn sns_topic_arn --source-type &amp;lt;db-instance&amp;gt; --event-categories &amp;lt;rds_events&amp;gt; --source-ids &amp;lt;events_source_ids&amp;gt; --enabled 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create event subscription" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-event-subscription.html"/>
            <reference name="Amazon docs: describe event subcriptions" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-event-subscriptions.html"/>
            <reference name="Amazon docs: user event messages" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html#USER_Events.Messages"/>
          </references>
          <standards>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-instance&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.056">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.5" name="Enable Multi-AZ on RDS" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides AWS managed high availability of the Database Tier across 2 availability zones within a region through asynchronous replication at the data layer. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each no-multi-az DB instance, and make it Multi-AZ enabled:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --multi-az 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are Multi-AZ enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{MultiAZ:MultiAZ,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.055">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.8" name="Set Backup retention policy on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides a managed backup function of the RDS Database, it is possible to define the backup window and retention period of the backup. Each customer should have a retention policy set for the type of data being stored. It is recommended to set this to at least 7. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Possible values are from 0 to 35 days. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each DB instance with a Backup Retention Period of 0, and set a desired Backup Retention Period in days (recommended value = 7):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --backup-retention-period &amp;lt;backup_retention_period&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have a Backup Retention Period set (0 =
                            there is no backup retention in place, 7 = there are 7 daily backups retained):&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{BackupRetentionPeriod:BackupRetentionPeriod,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.056">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-RDS-01" name="Use SSL to Encrypt the connection to a DB Instance" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use SSL from your application to encrypt a connection to a DB instance running MySQL, MariaDB,
                        Amazon Aurora, SQL Server, Oracle, or PostgreSQL. Each DB engine has its own process for
                        implementing SSL. To learn how to implement SSL for your particular DB instance, please see link
                        provided in &amp;quot;References&amp;quot; section.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the SSL protocol is used to encrypt the data in transit.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:32.053">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON WEB SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                <countermeasure ref="aws-tier-1.4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="NOT_BACKUP_POLICIES">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="NON-UPDATED-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized access to data on EC2 instances" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers gain access to data on EC2 instances by exploiting weaknesses in non-updated or misconfigured systems.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers gain undetected access to the security configurations and changes made by the attackers are undetected and unaudited.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="no-notification-incident">
                  <countermeasures>
                    <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                    <countermeasure ref="aws-tier-4.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                <countermeasure ref="aws-tier-4.4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="database-publically-accesible">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="no-access-control-onrds">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.34" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                <countermeasure ref="aws-tier-6.34" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="93036f7f-d676-4f9e-8976-a1478bc74b3d" diagramComponentId="88658830-da09-410f-a00d-d1d25a2631d1" ref="b331a566-e349-4926-b951-2c84453ecd5c" name="AWS RDS (Relational Database Service)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="f5a71ec5-cb58-4608-8c4a-a667cd446e45" componentDefinitionRef="rds" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="database-publically-accesible" name="Database is publically accesible" state="0" impact="100" issueId="" issueLink="">
          <desc>Everyone can access the RDS database and obtain the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.829">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.831">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-Network-5.2" name="Networks for Amazon resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.831">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-notification-incident" name="No notification when an incident occurs" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no notifications when a security incident occurs. Therefore, we do not know when an
                        attacker gains access to our systems and/or security systems
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.833">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="no-access-control-onrds" name="Not access control on RDS databases" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no access control mechanisms on the RDS database resources and any user can gain access
                        to them and exfiltrate the data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.832">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="NOT_BACKUP_POLICIES" name="Not backup retention policies" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no data backup retention policies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.830">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.4" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.831">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-S3-7.3" name="Sensitive data is exposed in transit" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Sensitive data is not encrypted in transit with HTTPS or SSL, and is accessible while traversing the network.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.831">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-EC2-6.2" name="The instances are not patched with the latest vendor updates or are misconfigured" state="0" impact="100" issueId="" issueLink="">
          <desc>The latest vendor updates that ensure that the systems are not vulnerable have not been applied to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.830">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="Hydras-AWS-RDS-02" name="Assign to IAM roles the permissions for RDS instances" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The following AWS managed policies, which you can attach to users in your account, are
                        specific to Amazon RDS:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSReadOnlyAccess:&lt;/b&gt; Grants read-only access to all Amazon RDS
                        resources for the root AWS account.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;&lt;b&gt;AmazonRDSFullAccess:&lt;/b&gt; Grants full access to all Amazon RDS resources
                        for the root AWS account.&lt;/li&gt;
                        &lt;/ul&gt;You can also create custom IAM policies that allow users to access the required
                        Amazon RDS API actions and resources. You can attach these custom policies to the IAM users or
                        groups that require those permissions.
                        &lt;br /&gt;
                        &lt;br /&gt;The permissions above shall be assigned to roles or groups:
                        &lt;br /&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The roles or groups only do calls to the API to get information, the
                        AmazonRDSReadOnlyAccess permission shall be assigned.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The roles or groups who are responsible of managing the RDS instances shall be
                        assigned the AmazonRDSFullAccess permission.&lt;/li&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Review the IAM roles and groups.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles or groups have got the AmazonRDSReadOnlyAccess permission.&lt;/li&gt;
                            &lt;li&gt;Check that only the appropriate personnel have got AmazonRDSFullAccess permissions
                            to manage the RDS instances.&lt;/li&gt;
                            &lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.691">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.34" name="Configure RDS database to leverage the Data Tier Security Group" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
  Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
  &lt;li&gt;Network access to the managed Data-Tier must be tightly controlled using Security Groups for RDS and non local accessibility of the DB instance.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each non-compliant DB instance, and configure it to use the Data Tier Security Group:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --vpc-security-group-ids &amp;lt;data_tier_security_group&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="6.34" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are configured to use the Data Tier
                            Security Group:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{VpcSecurityGroups:VpcSecurityGroups,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.695">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-6.30" name="Do not allow the RDS database to be publically accessible" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt;Customers can deploy RDS databases within a VPC through the configuration of: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Subnet Group for RDS, this group will be used for deployment of single or Multi-AZ RDS instances.&lt;/li&gt; 
  &lt;li&gt;Network access through configuration of Security Groups for RDS&lt;/li&gt; 
  &lt;li&gt;Access from outside the VPC hosting the DB instance by enabling/disabling a Public IP address&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each publicly accessible DB instance, and make it private:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --no-publicly-accessible 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="1.3.1" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.3.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.2" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="1.4.4" supportedStandardRef="PCI-DSS-v4.0"/>
            <standard ref="2.3.3" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.3" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="6.30" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="PCI-DSS-v4.0"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are publicly available:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{PubliclyAccessible:PubliclyAccessible,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.695">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.6" name="Enable Auto Minor Version Upgrade on RDS" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair.&lt;/p&gt; 
&lt;p&gt;There are 6 database engines available for customers to run their database workloads on:&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
 &lt;li&gt;MySQL&lt;/li&gt; 
 &lt;li&gt;MariaDB&lt;/li&gt; 
 &lt;li&gt;Oracle&lt;/li&gt; 
 &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
 &lt;li&gt;PostgreSQL&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;If the database engine used by your application supports it, ensure that the RDS Instances have Auto Minor Version Upgrade Enabled.&lt;/p&gt; 
&lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt; 
&lt;p&gt;Using the Amazon unified command line interface:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Modify each DB instance with auto-minor-version-upgrade set to False, and enable auto-minor-version-upgrade:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;p&gt;aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --auto-minor-version-upgrade&lt;/p&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="2.3.2" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.2" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.6" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have Auto Minor Version Upgrade enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{AutoMinorVersionUpgrade:AutoMinorVersionUpgrade,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.692">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-1.4" name="Enable encryption at rest for Databases running on RDS" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon RDS instances and snapshots can be encrypted at rest by enabling the encryption option on the Amazon RDS DB instance. Data that is encrypted at rest includes the underlying storage for a DB instance, its automated backups, read replicas, and snapshots. Encryption at rest should be enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
  Using the Amazon unified CLI: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Perform a snapshot of the DB instance:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds create-db-snapshot --db-snapshot-identifier db_snapshot --db-instance-identifier your_db_instance 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Confirm created snapshot is available (once snapshot process has completed):&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds describe-db-snapshots --query 'DBSnapshots[*].{DBSnapshotIdentifier:DBSnapshotIdentifier, DBInstanceIdentifier:DBInstanceIdentifier, Snapshotstatus:Status}' 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;List all KMS Customer Managed Keys:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws kms list-aliases 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Copy to source RDS snapshot (from previous step) to a destination snapshot which will be encrypted:&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt;
   aws rds copy-db-snapshot --source-db-snapshot-identifier db_snapshot&amp;nbsp; --target-db-snapshot-identifier encrypted_db_snapshot --kms-key-id data_tier_kms_key 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;ul&gt; 
 &lt;li&gt;Restore a snapshot to the target DB instance(from previous step) with the same values as original db instance with additional encrypted storage values:&lt;/li&gt; 
&lt;/ul&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt;
    aws rds restore-db-instance-from-db-snapshot --db-instance-identifier your_db_instance --db-snapshot-identifier encrypted_db_snapshot 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: copy db snapshot" url="https://docs.aws.amazon.com/cli/latest/reference/rds/copy-db-snapshot.html"/>
            <reference name="Amazon docs: copy snapshot" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CopySnapshot.html"/>
            <reference name="Amazon docs: create db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-instance.html"/>
            <reference name="Amazon docs: create db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-db-snapshot.html"/>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: describe db snapshots" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-snapshots.html"/>
            <reference name="Amazon docs: encryption" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html"/>
            <reference name="Amazon docs: list aliases" url="https://docs.aws.amazon.com/cli/latest/reference/kms/list-aliases.html"/>
          </references>
          <standards>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="1.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="CIS AWS Standard"/>
            <standard ref="2.3.1" supportedStandardRef="CIS-AWS-Standard-Level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all current RDS instances and review the encryption status of the DB
                            instance:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            aws rds describe-db-instances --query 'DBInstances[*].{DBName:DBName,
                            EncryptionEnabled:StorageEncrypted, CMK:KmsKeyId}'
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.692">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.4" name="Enable event subscriptions for DataBase security on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;AWS Relational Database Services offers customers a managed database engine solution
                        for hosting customer created databases which can allow for a reduction in operational burden on
                        customers.&lt;/p&gt;
                        &lt;p&gt;RDS event subscriptions provide notification of selected event changes at a DB security
                        group level.&lt;/p&gt;
                        &lt;p&gt;Event subscriptions are designed to provide incident notification of events which may
                        affect the network availability of the RDS instance.&lt;/p&gt;
                        &lt;p&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;/p&gt;
                        &lt;p&gt;Using the Amazon unified CLI:&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a new event subscription for DB Security Group events:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;p&gt;aws rds create-event-subscription --subscription-name rds_event_subscription
                        --sns-topic-arn
                        sns_topic_arn
                        --source-type db-security-group --event-categories rds_events
                        --source-ids events_source_ids --enabled&lt;/p&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.4" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-security-group&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.694">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-4.3" name="Enable Event subscriptions for Instance level events on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  AWS Relational Database Services offers customers a managed database engine solution for hosting customer created databases which can allow for a reduction in operational burden on customers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  RDS event subscriptions provide notification of selected event changes at DataBase engine level such as: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Deletion&lt;/li&gt; 
  &lt;li&gt;Failure&lt;/li&gt; 
  &lt;li&gt;Failover&lt;/li&gt; 
  &lt;li&gt;Low Storage&lt;/li&gt; 
  &lt;li&gt;Maintenance&lt;/li&gt; 
 &lt;/ul&gt; 
  Event subscriptions are designed to provide incident notification of events which may affect the availability of a RDS database instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified CLI: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Create a new event subscription for DB instance level events:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds create-event-subscription --subscription-name &amp;lt;rds_event_subscription&amp;gt; --sns-topic-arn sns_topic_arn --source-type &amp;lt;db-instance&amp;gt; --event-categories &amp;lt;rds_events&amp;gt; --source-ids &amp;lt;events_source_ids&amp;gt; --enabled 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: create event subscription" url="https://docs.aws.amazon.com/cli/latest/reference/rds/create-event-subscription.html"/>
            <reference name="Amazon docs: describe event subcriptions" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-event-subscriptions.html"/>
            <reference name="Amazon docs: user event messages" url="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html#USER_Events.Messages"/>
          </references>
          <standards>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="4.3" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified CLI:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;List all present event subscriptions and review the value of &amp;quot;db-instance&amp;quot;
                            associated with &amp;quot;SourceType&amp;quot; element:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-event-subscriptions --query
                            'EventSubscriptionsList[*].{SourceType:SourceType, SourceIdsList:SourceIdsList,
                            EventCategoriesList:EventCategoriesList}'
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &amp;quot;EventCategoriesList&amp;quot; will list all event categories which will be
                            reported on
                            &lt;/div&gt;
                            &lt;div&gt;
                            &amp;quot;SourceIdsList&amp;quot; will list all RDS DB instances included (null=all
                            instances)
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.694">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.5" name="Enable Multi-AZ on RDS" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides AWS managed high availability of the Database Tier across 2 availability zones within a region through asynchronous replication at the data layer. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br /&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each no-multi-az DB instance, and make it Multi-AZ enabled:&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --multi-az 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.5" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances are Multi-AZ enabled:&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{MultiAZ:MultiAZ,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.692">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-3.8" name="Set Backup retention policy on RDS" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Amazon Relational Database Service (RDS) is a managed relational database service which handles routine database tasks such as provisioning, patching, backup, recovery, failure detection, and repair. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
  There are 6 database engines available for customer to run their database workloads on: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Amazon Aurora (MySQL Compatible)&lt;/li&gt; 
  &lt;li&gt;MySQL&lt;/li&gt; 
  &lt;li&gt;MariaDB&lt;/li&gt; 
  &lt;li&gt;Oracle&lt;/li&gt; 
  &lt;li&gt;Microsoft SQL Server&lt;/li&gt; 
  &lt;li&gt;PostgreSQL&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Provides a managed backup function of the RDS Database, it is possible to define the backup window and retention period of the backup. Each customer should have a retention policy set for the type of data being stored. It is recommended to set this to at least 7. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Possible values are from 0 to 35 days. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Using the Amazon unified command line interface: 
 &lt;/div&gt; 
 &lt;div style=""&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Modify each DB instance with a Backup Retention Period of 0, and set a desired Backup Retention Period in days (recommended value = 7):&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;blockquote&gt; 
 &lt;blockquote&gt; 
  &lt;div&gt; 
   &lt;div style=""&gt;
     aws rds modify-db-instance --db-instance-identifier &amp;lt;your_db_instance&amp;gt; --backup-retention-period &amp;lt;backup_retention_period&amp;gt; 
   &lt;/div&gt; 
  &lt;/div&gt; 
 &lt;/blockquote&gt; 
&lt;/blockquote&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon docs: describe db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/describe-db-instances.html"/>
            <reference name="Amazon docs: modify db instances" url="https://docs.aws.amazon.com/cli/latest/reference/rds/modify-db-instance.html"/>
          </references>
          <standards>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="3.8" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Using the Amazon unified command line interface:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check if your application DB instances have a Backup Retention Period set (0 =
                            there is no backup retention in place, 7 = there are 7 daily backups retained):&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            aws rds describe-db-instances --filters Name=tag:data_tier_tag,Values=data_tier_tag_value
                            --query &amp;quot;DBInstances[*].{BackupRetentionPeriod:BackupRetentionPeriod,
                            DBInstanceIdentifier:DBInstanceIdentifier}&amp;quot;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.693">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="Hydras-AWS-RDS-01" name="Use SSL to Encrypt the connection to a DB Instance" issueId="" issueLink="" platform="" cost="1" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use SSL from your application to encrypt a connection to a DB instance running MySQL, MariaDB,
                        Amazon Aurora, SQL Server, Oracle, or PostgreSQL. Each DB engine has its own process for
                        implementing SSL. To learn how to implement SSL for your particular DB instance, please see link
                        provided in &amp;quot;References&amp;quot; section.</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the SSL protocol is used to encrypt the data in transit.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:27.690">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AMAZON WEB SERVICES" name="Amazon Web Services" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="NON-UPDATED-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized access to data on EC2 instances" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>Attackers gain access to data on EC2 instances by exploiting weaknesses in non-updated or misconfigured systems.</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-EC2-6.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ACCESS-TO-DATA-AWS" issueId="" issueLink="" name="Sensitive data is compromised through unauthorized access to data" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to sensitive data when the data is in transit in clear text, or when the data is stored without encryption.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-S3-7.3">
                  <countermeasures>
                    <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AWS-S3-7.4">
                  <countermeasures>
                    <countermeasure ref="aws-tier-1.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="Hydras-AWS-RDS-01" mitigation="50"/>
                <countermeasure ref="aws-tier-1.4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DATA-DELETED-EASY-AWS" issueId="" issueLink="" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="NOT_BACKUP_POLICIES">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS-AWS" issueId="" issueLink="" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers gain undetected access to the security configurations and changes made by the attackers are undetected and unaudited.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="no-notification-incident">
                  <countermeasures>
                    <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                    <countermeasure ref="aws-tier-4.4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-4.3" mitigation="50"/>
                <countermeasure ref="aws-tier-4.4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.2">
                  <countermeasures>
                    <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="database-publically-accesible">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="no-access-control-onrds">
                  <countermeasures>
                    <countermeasure ref="aws-tier-6.34" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-3.5" mitigation="34"/>
                <countermeasure ref="aws-tier-6.30" mitigation="33"/>
                <countermeasure ref="aws-tier-6.34" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2d263da1-5055-4b15-b56d-38c0b8727753" diagramComponentId="0f547c49-1bb5-4245-a598-128ddaf6cf56" ref="6b236eb0-e1fc-4481-8634-1224ad463bb8" name="AWS SSO (Single Sign-On)" desc="" library="Hydras-AWS-Foundation" parentComponentRef="" componentDefinitionRef="CD-SSO" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="AWS-Network-5.1" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weakness might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:25.133">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AWS-IAM-2.7" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>Credentials for groups and roles not properly configured. User accounts are configured with excessive privileges.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:25.132">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AWS-SSO1" name="Control access to AWS SSO" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control access to AWS SSO&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Every AWS resource is owned by an AWS account, and permissions to create or access the resources are governed by permissions policies. An account administrator can attach permissions policies to IAM identities (that is, users, groups, and roles). Some services (such as AWS Lambda) also support attaching permissions policies to resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example - Allow a user to view AWS SSO&lt;/p&gt; 
&lt;p&gt;The following permissions policy grants read-only permissions to a user so they can view all of the settings and directory information configured within AWS SSO.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; This example policy is provided purely for illustrative purposes. In a production environment, AWS recommends that you use the AWS Managed Policy for Read-Only access to AWS SSO.&lt;/p&gt; 
&lt;p&gt;{ "Version": "2012-10-17", "Statement": [ { "Sid": "VisualEditor0", "Effect": "Allow", "Action": [ "ds:DescribeDirectories", "ds:DescribeTrusts", "iam:ListPolicies", "organizations:DescribeOrganization", "organizations:DescribeAccount", "organizations:ListParents", "organizations:ListChildren", "organizations:ListAccounts", "organizations:ListRoots", "organizations:ListAccountsForParent", "organizations:ListOrganizationalUnitsForParent", "sso:ListManagedPoliciesInPermissionSet", "sso:ListPermissionSetsProvisionedToAccount", "sso:ListAccountAssignments", "sso:ListAccountsForProvisionedPermissionSet", "sso:ListPermissionSetsProvisionedToAccount", "sso:ListPermissionSets", "sso:DescribePermissionSet", "sso:GetInlinePolicyForPermissionSet", "sso-directory:DescribeDirectory", "sso-directory:SearchUsers", "sso-directory:SearchGroups" ], "Resource": "*" } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Overview of managing access permissions to your AWS SSO resources" url="https://docs.aws.amazon.com/singlesignon/latest/userguide/iam-auth-access-overview.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;With the IAM policy simulator, you can test and troubleshoot identity-based policies, IAM permissions boundaries, Organizations service control policies, and resource-based policies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:24.417">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="aws-tier-5.1" name="Tag all resources" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="support" library="Hydras-AWS-Foundation" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
 &lt;b&gt;Description&lt;/b&gt;:
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Tags enable customers to categorize AWS resources in different ways, for example, by purpose, owner, or environment.
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  Each tag consists of a key and an optional value, both of which customer's define.
  You should define a set of tags for the following items to help you track each instance's owner and operating environment, cost center, and other items.
&lt;/div&gt;
&lt;div&gt;
 &lt;ol&gt;
  &lt;li&gt;Amazon EC2 instances&lt;/li&gt;
  &lt;li&gt;ELB&lt;/li&gt;
  &lt;li&gt;EBS Volumes&lt;/li&gt;
  &lt;li&gt;S3 Buckets&lt;/li&gt;
 &lt;/ol&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
  A resource may have up to 10 tags associated with key &amp;amp; value such as:
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Key=tier, Value=app&lt;/li&gt;
  &lt;li&gt;Key=environment, Value=production&lt;/li&gt;
  &lt;li&gt;Key=costcenter, Value=sales&lt;/li&gt;
 &lt;/ul&gt;
 &lt;div&gt;
  &lt;b&gt;Remediation:&lt;/b&gt;
 &lt;/div&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;&lt;br&gt;&lt;/b&gt;
  Tag all your 3 tier Web Application resources based on their tier membership (Web, App, Data), and your organizational requirements.
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="PCI Cloud Compliance" url="https://d0.awsstatic.com/whitepapers/compliance/AWS_Anitian_Wookbook_PCI_Cloud_Compliance.pdf"/>
            <reference name="Resource groups and tagging" url="https://aws.amazon.com/blogs/aws/resource-groups-and-tagging/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark"/>
            <standard ref="5.1" supportedStandardRef="cis-amazon-web-services-three-tier-web-architecture-benchmark-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify tags are being used.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:24.418">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="UNAUTHORIZED-CONECTIONS-AWS" issueId="" issueLink="" name="Attackers gain unauthorized network access" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-Network-5.1">
                  <countermeasures>
                    <countermeasure ref="aws-tier-5.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="aws-tier-5.1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Hydras-AWS-Foundation">
          <threats>
            <threat ref="AWS-LOSS-CONTROL-ENV" issueId="" issueLink="" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="support" library="Hydras-AWS-Foundation" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the control of the environment, due to improper definition and configuration of user accounts or role groups.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AWS-IAM-2.7">
                  <countermeasures>
                    <countermeasure ref="C-AWS-SSO1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AWS-SSO1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ad90390d-3798-4e1f-a206-63e248c99fbc" diagramComponentId="c256e5df-a0f1-481b-8d2e-36c27764400a" ref="3550da2c-6145-4b2a-8f63-305b169e245c" name="AWS VPC (Virtual Private Cloud)" desc="" library="" parentComponentRef="f1abecbe-1bcc-4ca8-a7f3-4f68765bd1dc" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="2a858bee-5838-4061-b5a5-f846d8e209e7" diagramComponentId="c9891a55-f7e7-41bc-a6a1-9e0829d52585" ref="9946907e-d4e3-473b-b962-186f4a54e3e5" name="Change Password" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-CHANGE-PASSWORD" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" name="Do not use GET requests for state changing operations" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use GET requests to retrieve resource representation/information only - and not modify it in any way. As GET requests do not change the resource's state, these are said to be safe methods.&lt;/p&gt;&lt;p&gt;Additionally, GET APIs should be idempotent. Making multiple identical requests must produce the same result every time until another API (POST or PUT) has changed the state of the resource on the server.&lt;/p&gt;&lt;p&gt;If the Request-URI refers to a data-producing process, it is the produced data that shall be returned as the entity in the response and not the source text of the process, unless that text happens to be the output of the process.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTTP Methods" url="https://restfulapi.net/http-methods/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate all GET controller methods and ensure that they don't modify the state of the server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.974">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.616">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.088">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.085">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.617">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-password-recovery" name="Implement Secure Password Recovery Mechanism" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is common for an application to have a mechanism for a user to gain access to their account in the event they forget their password. A good design workflow for a password recovery feature will use multi-factor authentication elements. For example, it may ask a security question - something they know, and then send a generated token to a device - something they own.&lt;/p&gt;&lt;p&gt;To get this control in our approach, we have to abide by the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Send a Token Over a Protected Side-Channel: &lt;/strong&gt;Send a multi-factor token challenge with a randomly-generated code longer than 6 characters (containing both letters and numbers), by a secure channel, such TLS and&amp;nbsp;valid for a specific time period (no longer than 20 minutes) or until the password is successfully reset.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Allow user to change password in the existing session:&lt;/strong&gt; Display a simple HTML form with one input field for the code, one for the new password, and one to confirm the new password. Verify the correct code is provided and be sure to enforce all password complexity requirements that exist in other areas of the application. Avoid sending the username as a parameter when the form is submitted.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notify user: &amp;nbsp;&lt;/strong&gt;Ensure the application notifies the user, when the password is changed.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; It is important to keep audit records when password change requests are submitted, when reset messages were sent to users and when users utilize them. It is especially important to log failed attempts to answer security questions and failed attempted use of expired tokens. This data can be used to detect abuse and malicious behavior. Data such as time, IP address, and browser information can be used to spot trends of suspicious use.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Other Considerations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Whenever a successful password reset occurs, all other sessions should be invalidated.&lt;/li&gt;&lt;li&gt;Strength of the questions used for password reset should vary based on the nature of the credentials. Administrator credentials should have a higher requirement.&lt;/li&gt;&lt;li&gt;The ideal implementation should rotate the questions asked in order to avoid automation.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp CheatSheetSeries: Forgot Password" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Forgot_Password_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the recovery secret code is not sent in clear text to the user.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password hints or secret questions are not present.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password credential recovery does not reveal the current password in any way..&lt;/li&gt;&lt;li&gt;Check that the user is notified, when&amp;nbsp;an authentication factor is changed or replaced.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.618">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-DELETE-SESSIONS-MENU" name="Offer to destroy all active sessions when users change their password" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be renewed or regenerated by the web application after any privilege level change within the associated user session. The most common scenario where the session ID regeneration is mandatory is during the authentication process, as the privilege level of the user changes from the unauthenticated (or anonymous) state to the authenticated state though in some cases still not yet the authorized state.&lt;/p&gt;&lt;p&gt;Common scenarios to consider include; password changes, permission changes, or switching from a regular user role to an administrator role within the web application. For all sensitive pages of the web application, any previous session IDs must be ignored, only the current session ID must be assigned to every new request received for the protected resource, and the old or previous session ID must be destroyed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The most common web development frameworks provide session functions and methods to renew the session ID, such as request.getSession(true) &amp;amp; HttpSession.invalidate() (J2EE), Session.Abandon() &amp;amp; Response.Cookies.Add(new...) (ASP .NET), or session_start() &amp;amp; session_regenerate_id(true) (PHP).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.975">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-BRUTE-FORCE" name="Prevent brute force attacks" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement appropriate protection to prevent users from brute-forcing token generation and token checking with mechanisms such as rate limiting or CAPTCHA. And remember that OTP length must be at least 6 characters long and a combination of different characters (not only numbers, not only letters, ...).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Protect Against Automated Attacks" url="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any captcha enabled and investigate if making continuous requests with an automated tool like Burp it is still accepting the request and generating or checking OTPs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:25.872">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-INVALID" name="Prevent old or used OTPs from being reused by invalidating them" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;One-time passwords (OTP) are secrets used during operations that need added security or as part of user enrollment processes. Despite their short lifespan, only one OTP should be valid at any given time, and therefore, all previous OTPs should be invalidated whenever a new one is generated or after the OTP has expired.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Invalidate Previous OTPs" url="https://docs.fluidattacks.com/criteria/requirements/347"/>
          </references>
          <standards>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Request an OTP and try to use it a couple of times. Verify that the OTP cannot be used twice or more.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:25.873">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" name="Prevent Simultaneous Logins" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It's possible that the application needs or wants to have simultaneous session, in this case, please control the number of the total active session and limit it.&lt;/p&gt;&lt;p&gt;If the application does not want to allow simultaneous session logons, it must take effective actions after each new authentication event, implicitly terminating the previously available session, or asking the user (through the old, new or both sessions) about the session that must remain active.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Open different browsers, or a "normal" tab and an "anonymous" tab, and check the following points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Have you received some notification in some tab?&lt;/li&gt;&lt;li&gt;Was it possible to log in on the new login attempt? if the answer is yes, then has the previously open session been closed?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the first session has been closed, it is recommended to check that it has been carried out correctly. To do this, use a proxy in the process, and forward requests prior to logout and check the response.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.976">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.976">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" name="Send a message to the user each time the system detects that the user is logging in from a new device or IP" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Aside from the IP address, there are a number of different factors that can be used to attempt to fingerprint a device. Some of these can be obtained passively by the server from the HTTP headers (particularly the "User-Agent" header), including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Operating system&lt;/li&gt;&lt;li&gt;Browser&lt;/li&gt;&lt;li&gt;Language&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using JavaScript it is possible to access far more information, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Screen resolution&lt;/li&gt;&lt;li&gt;Installed fonts&lt;/li&gt;&lt;li&gt;Installed browser plugins&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using these various attributes, it is possible to create a fingerprint of the device. This fingerprint can then be matched against any browser attempting to login to the account, and if it doesn't match then the user can be prompted for additional authentication. Many users will have multiple devices or browsers that they use, so it is not practical to block attempts that do not match the existing fingerprints.&lt;/p&gt;&lt;p&gt;To take in mind: data submitted from client can be spoofed by an attacker.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Credential Stuffing Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use the application and try to log in from different devices. Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Does the notification arrive?&lt;/li&gt;&lt;li&gt;Are the user's trusted devices saved in server (DB)?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.975">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should be used in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.086">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.087">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://pwning.owasp-juice.shop/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:26.088">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-112-OTP-GENERATION-ABUSE" issueId="" issueLink="" name="An attacker can send a lot of OTP requests to increase the likelihood of matching one of the generated codes in a later brute force attack" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;For example, in a password reset functionality based on the delivery of a code by email or SMS to the user, an attacker can send a lot of requests to it, generating a lot of valid codes with the goal of increasing the chances of matching the code in a brute force attack. The attack takes place in the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Automation of requests to the password reset functionality (new codes don't invalidate older ones).&lt;/li&gt;&lt;li&gt;Creation of a custom dictionary to try to match valid codes (e.g.: if a code has only 5 numbers, the dictionary is as follows: [00000, 00001,..., 99999]).&lt;/li&gt;&lt;li&gt;Brute force attack on the functionality to check the OTP and find a match.&lt;/li&gt;&lt;li&gt;Once the attacker knows a valid code he/she can proceed with the password change.&lt;/li&gt;&lt;/ol&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-OTP-BRUTE-FORCE" mitigation="50"/>
                <countermeasure ref="C-OTP-INVALID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" issueId="" issueLink="" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-180-ACTIVE-SESSION" issueId="" issueLink="" name="Attackers keep their stolen sessions active even after the legitimate users have changed their passwords" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker is able to maintain their access to a victim account in the application even when the legitimate user of the account changes their password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DELETE-SESSIONS-MENU" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-600-CRED-CHANGE" issueId="" issueLink="" name="An attacker uses user's credentials to get access to their account and change their password, preventing the legitimate user from logging in" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Reusing public breached credentials, an attacker is able to log in to the victim's account and update their credentials to maintain the account takeover attack and be able to use stored card data to execute fraudulent transactions.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" mitigation="25"/>
                <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" mitigation="25"/>
                <countermeasure ref="CWE-654" mitigation="25"/>
                <countermeasure ref="secure-password-recovery" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-62-CRED-CHANGE" issueId="" issueLink="" name="An attacker can force the user to change their credentials without noticing it" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If the user isn't required to re-authenticate, then it may be possible to carry out a CSRF attack against the password reset form, allowing their account to be compromised.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-AVOID-GET-SENSITIVE-OPERATIONS" mitigation="25"/>
                <countermeasure ref="cwe-352-csrf" mitigation="25"/>
                <countermeasure ref="secure-password-recovery" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-114-CRED-CHANGE" issueId="" issueLink="" name="An attacker abuses the password change functionallity to change the password of other users without knowing their credentials" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Example 1 (password change):&lt;/p&gt;&lt;p&gt;Step 1. An attacker logs in with their account and go to the change password function.&lt;/p&gt;&lt;p&gt;Step 2. The attacker uses an HTTP proxy to intercept the request.&lt;/p&gt;&lt;p&gt;Step 3. After intercepting the request, they modify the user ID of the request and they update it to the victim user ID. If the server process sucessfully this request the attacker was able to change the password of the user ID account to one of their election.&lt;/p&gt;&lt;p&gt;Example 2 (password reset):&lt;/p&gt;&lt;p&gt;Step 1. An attacker does a password reset in their account.&lt;/p&gt;&lt;p&gt;Step 2. The attacker receives the password reset link and this includes two parameters in the URL: the user ID and the token (https://host.com/resetpassword?userid=1232&amp;amp;token=xodkdosff32eksl)&lt;/p&gt;&lt;p&gt;Step 3. The attacker copy the received URL, edit the userid parameter (victim account) and launches the request. If the server process sucessfully this request the attacker was able to reset the password of the user ID account to one of their election.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="secure-password-recovery" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="19c2ad66-eb09-47d4-990e-b610fd4c439c" diagramComponentId="0edfa080-7915-4d1f-8a4b-7683cdd4bee6" ref="e5646f35-f3ea-4639-bfa9-568ee8b4e327" name="FedRAMP Environment" desc="" library="fedramp" parentComponentRef="" componentDefinitionRef="fedramp-environment" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="WEB-SRV-ADM" name="Access to management functions is not limited to web service administrators" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable
                        user identity or consumes a significant amount of resources, gives access to sensitive data or
                        sensitive business logic.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references>
              <reference name="CWE-306: Missing Authentication for Critical Function" url="https://cwe.mitre.org/data/definitions/306.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CSD-ADM-OPEN" name="Access to the administration interfaces is open to untrusted parties" state="0" impact="100" issueId="" issueLink="">
          <desc>The application does not restrict access to administration interfaces to untrusted parties. 
This fact could allow an attacker to chain vulnerabilities in order to gain unauthorized access to the system. </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-384" name="Application allows for leveraging a session ID not produced by the application" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                    Authenticating a user, or otherwise establishing a new user session, without invalidating any session identifier gives an attacker the opportunity to steal authenticated sessions. Such a scenario is commonly observed when:
                    &lt;/div&gt;
                    &lt;div&gt;
                    &lt;ul&gt;
                    &lt;li&gt;A web application authenticates a user without first invalidating the existing session, thereby continuing to use the session already associated with the user.&lt;/li&gt;
                    &lt;li&gt;An attacker is able to force a known session identifier on a user so that, once the user authenticates, the attacker has access to the authenticated session.&lt;/li&gt;
                    &lt;li&gt;The application or container uses predictable session identifiers. In the generic exploit of session fixation vulnerabilities, an attacker creates a new session on a web application and records the associated session identifier. The attacker then causes the victim to associate, and possibly authenticate, against the server using that session identifier, giving the attacker access to the user's account through the active session.&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.512">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-639" name="Authorization Bypass Through User-Controlled Key" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The system's authorization functionality does not prevent one user from gaining access to another user's data or record by modifying the key value identifying the data.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Retrieval of a user record occurs in the system based on some key value that is under user control. The key would typically identify a user related record stored in the system and would be used to look up that record for presentation to the user. It is likely that an attacker would have to be an authenticated user in the system. However, the authorization process would not properly check the data access operation to ensure that the authenticated user performing the operation has sufficient entitlements to perform the requested data access, hence bypassing any other authorization checks present in the system. One manifestation of this weakness would be if a system used sequential or otherwise easily guessable session ids that would allow one user to easily switch to another user's session and read/modify their data.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references>
              <reference name="CWE-639: Authorization Bypass Through User-Controlled Key" url="https://cwe.mitre.org/data/definitions/639.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.511">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.519">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-352" name="Cross Site Request Forgery" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application does not, or can not, sufficiently verify whether a well-formed, valid,
                        consistent request was intentionally provided by the user who submitted the request.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;When a web server is designed to receive a request from a client without any
                        mechanism for verifying that it was intentionally sent, then it might be possible for an
                        attacker to trick a client into making an unintentional request to the web server which will be
                        treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc.
                        and can result in exposure of data or unintended code execution.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.512">
              <output/>
            </source>
            <references>
              <reference name="CWE-352: Cross-Site Request Forgery (CSRF)" url="https://cwe.mitre.org/data/definitions/352.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="EU-GDPR-LOGICAL-DELETE-DATA-INACTIVITY" name="Data is retained for longer than is necessary" state="0" impact="100" issueId="" issueLink="">
          <desc>Storing personal data too long might lead to negative consequences for the data subject (e.g. a large amount of data might lead to invasive profiling, identity theft, ...)
          &lt;br/&gt;&lt;br/&gt;Data subject = person of whom data is processed.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-425" name="Direct Request ('Forced Browsing')" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application does not adequately enforce appropriate authorization on all restricted
                        URLs, scripts, or files.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;Web applications susceptible to direct request attacks often make the false
                        assumption that such resources can only be reached through a given navigation path and so only
                        apply authorization at certain points in the path.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.512">
              <output/>
            </source>
            <references>
              <reference name="CWE-425: Direct Request ('Forced Browsing')" url="https://cwe.mitre.org/data/definitions/425.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-159" name="Failure to Sanitize Special Elements" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Weaknesses in this attack category do not properly filter and interpret special elements in user-controlled input which could cause adverse impact on the software behavior and integrity.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="" issueLink="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently
                        proves that the claim is correct.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references>
              <reference name="CWE-287: Improper Authentication" url="https://cwe.mitre.org/data/definitions/287.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-22" name="Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Many file operations are intended to take place within a restricted directory. By using special elements such as ".." and "/" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the "../" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Path traversal also covers the use of absolute pathnames such as "/usr/local/bin", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add ".txt" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references>
              <reference name="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" url="https://cwe.mitre.org/data/definitions/22.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-209" name="Information Exposure Through an Error Message" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software generates an error message that includes sensitive information about its environment, users, or associated data.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;This sensitive information may be valuable on its own (such as a password), or it may be useful for launching other deadlier attacks. If an attack fails, an attacker may use error information provided by the server to launch another more focused attack. For example, an attempt to exploit a path traversal weakness (CWE-22) might yield the full pathname of the installed application. In turn, this could be used to select the proper number of ".." sequences to navigate to the targeted file. An attack using SQL injection (CWE-89) might not initially succeed, but an error message could reveal the malformed query, which would expose query logic and possibly even passwords or other sensitive information used within the query.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.509">
              <output/>
            </source>
            <references>
              <reference name="CWE-209: Information Exposure Through an Error Message" url="https://cwe.mitre.org/data/definitions/209.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-525" name="Information Exposure Through Browser Caching" state="0" impact="100" issueId="" issueLink="">
          <desc>For each web page, the application should have an appropriate caching policy specifying the
                        extent to which the page and its form fields should be cached.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references>
              <reference name="CWE-525: Information Exposure Through Browser Caching" url="https://cwe.mitre.org/data/definitions/525.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.509">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-653" name="Insufficient Compartmentalization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;When a weakness occurs in functionality that is accessible by lower-privileged users, then without strong boundaries, an attack might extend the scope of the damage to higher-privileged users.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.519">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-613" name="Insufficient Session Expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>Insufficient Session Expiration is when a web site permits an attacker to reuse old session credentials or session IDs for authorization.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references>
              <reference name="CWE-613: Insufficient Session Expiration" url="https://cwe.mitre.org/data/definitions/613.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-345" name="Insufficient Verification of Data Authenticity" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.511">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.519">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-370" name="Missing Check for Certificate Revocation after Initial Check" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not check the revocation status of a
                        certificate after its initial revocation check, which can cause the software to
                        perform privileged actions even after the certificate is revoked at a later
                        time.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.512">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.511">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-654" name="Reliance on a Single Factor in a Security Decision" state="0" impact="100" issueId="" issueLink="">
          <desc>A protection mechanism relies exclusively, or to a large extent, on the evaluation of a single condition or the integrity of a single object or entity in order to make a decision about granting access to restricted resources or functionality.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.514">
              <output/>
            </source>
            <references>
              <reference name="CWE-654: Reliance on a Single Factor in a Security Decision" url="https://cwe.mitre.org/data/definitions/654.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.519">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-307" name="The application does not implement anti-automation mechanisms to prevent automated long-time sustained probes" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly limit the number or frequency of interactions that it has with an actor, such as the number of incoming requests.

This can allow the actor to perform actions more frequently than expected. The actor could be a human or an automated process such as a virus or bot. This could be used to cause a denial of service, to compromise program logic (such as limiting humans to a single vote), or for other purposes. For example, an authentication routine might not limit the number of times an attacker can guess a password, or a website might conduct a poll but only expect humans to vote a maximum of once a day.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SRV-JSON-SIG" name="The application does not implement any integrity control on transmitted JSON data" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If JSON data is not validated for authenticity and integrity then the application functionality could be subverted which may lead to sensitive data leaks or bypassing of critical business logic.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CSD-SESS-REAUTH" name="The application does not re-authenticate on critical functions" state="0" impact="100" issueId="" issueLink="">
          <desc>The application does not require the user to re-authenticate for specific critical functions,
                        like password change or changes to sensitive security settings.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.509">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-255" name="The application does not wipe used and not needed passwords or key material" state="0" impact="100" issueId="" issueLink="">
          <desc>When using password or key material within an application, these are copied in memory and can be copied back to the disk depending on several factors.

If the application handles passwords or key material, an attacker with access to the system could inspect the memory or the hard disk to retrieve back those secrets on its original form.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.510">
              <output/>
            </source>
            <references>
              <reference name="OWASP Top 10 - A5 Security Missconfiguration" url="https://www.owasp.org/index.php/Top_10_2013-A5-Security_Misconfiguration"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.508">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-598" name="The application sends sensitive information using the URL query string" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application uses the GET method to process requests that contain sensitive
                        information, which can expose that information through the browser's history, Referers, web
                        logs, and other sources.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.513">
              <output/>
            </source>
            <references>
              <reference name="CWE-598: Information Exposure Through Query Strings in GET Request" url="https://cwe.mitre.org/data/definitions/598.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-523" name="Unprotected Transport of Credentials" state="0" impact="100" issueId="" issueLink="">
          <desc>Login pages not using adequate measures to protect the user name and password while they are in transit from the client to the server.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.512">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="WEB-PATH-ROOT" name="Uploaded files are stored within the webroot path" state="0" impact="100" issueId="" issueLink="">
          <desc>If uploaded files are stored within the webroot path, they might be accessible to unauthorized
                        parties.&amp;nbsp;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.511">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software contains a hard-coded credential, such as an password or cryptographic key, which is used for its own inbound authentication, outbound communication to external components, or encryption of internal data.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.519">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-330" name="Use of Insufficiently Random Values" state="0" impact="100" issueId="" issueLink="">
          <desc>The software may use insufficiently random numbers or values in a security context that depends on unpredictable numbers.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.511">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SSL-WEAK-CIPHERS" name="Use of weak TLS cipher suites" state="0" impact="100" issueId="" issueLink="">
          <desc>A weak TLS cipher suite could allow an attacker to sniff the transmission by exploiting this weakness.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="SSL-WEAK-PROTOCOL" name="Use of weak TLS protocols" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;A cryptographically weak SSL/TLS protocol could allow an attacker to covertly observe "sniff" the traffic or impersonate the server.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:02.520">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate and authorized users can access the application data. It is important that an application prevent unauthorized users gaining inappropriate access to each other's data. Although user A and user B may both be trusted to access data within the application, they may be only authorized to access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are the manipulation of an ID value or other object reference sent in the URL or body of an HTTP request).&lt;/p&gt;&lt;p&gt;It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this is done by checking the validity of the session token issued after login.&lt;/li&gt;&lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g. their confirmed identify is checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt;&lt;li&gt;Access controls should be granular and make it possible to issue to individual resources to individual users or roles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework.&lt;/p&gt;&lt;p&gt;Object-level authorization checks should be considered in every function that accesses a data source using input from the user.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Favor not using an ID that has been sent from the client, but instead use an ID that is stored in the session object when accessing a database record by the record ID.&lt;/li&gt;&lt;li&gt;Use an authorization mechanism to check if the logged-in user has access to perform the requested action on the record in every function that uses an input from the client to access a record in the database.&lt;/li&gt;&lt;li&gt;Use random and unpredictable values as GUIDs for records' IDs.&lt;/li&gt;&lt;li&gt;Write tests to evaluate the authorization mechanism. Do not deploy vulnerable changes that break these tests.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="5.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;&lt;li&gt;Login as user A in browser A.&lt;/li&gt;&lt;li&gt;Login as user B in browser B.&lt;/li&gt;&lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;ol&gt;&lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;&lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;&lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;&lt;li&gt;Perform the operation as user A again, but this time intercept all the requests and replace user A's session ID with that of user B.&lt;/li&gt;&lt;li&gt;Ensure that user A's sensitive data is &lt;strong&gt;not &lt;/strong&gt;visible.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To ensure object-level authorization checks are in place:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Map out all locations in the application in which user input is used to reference objects directly. For example, locations where user input is used to access a database row, a file, application page, etc.&lt;/li&gt;&lt;li&gt;Modify the value of the parameter used to reference objects to see if the application raises an authorization error.&lt;/li&gt;&lt;li&gt;Assess whether it is possible to retrieve objects belonging to other users or otherwise bypass authorization.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-23" name="Authenticate communications sessions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system protects the authenticity of communications sessions.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The following enhancements can be done:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Invalidate session identifiers at logout&lt;/li&gt;&lt;li&gt;Generate unique session identifiers with randomization&lt;/li&gt;&lt;li&gt;Allow the use of organization-defined certificate authorities to verify the establishment of protected sessions&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-23 Session Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/83-08_02_SC-23"/>
          </references>
          <standards>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-23" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-23" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-23" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This control addresses communications protection at the session, versus packet level (e.g., sessions in service-oriented architectures providing web-based services) and establishes grounds for confidence at both ends of communications sessions in ongoing identities of other parties and in the validity of information transmitted. Authenticity protection includes, for example, protecting against man-in-the-middle attacks/session hijacking and the insertion of false information into sessions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AVOID-API-KEYS" name="Avoid the usage of static &quot;API keys&quot; and similar" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Avoid the use of static "API keys" or similar when accessing external systems. Create mechanisms to generate, manage and delete API keys to grant access to external systems.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-03 Device Identification And Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/182-08_02_IA-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.10.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.10.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-1"/>
            <standard ref="23" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="26" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API2:2023-Broken Authentication" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the application is not using any static &amp;quot;API keys&amp;quot; or
                            similar.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-639" name="Avoid using direct references to files" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. Many flaws in applications result from unsafe handling of filenames or path data, for example directory traversal and arbitrary file disclosure. Use of filenames or other direct references to objects such as files on the server-side increases the risk of compromise of the system or unauthorized access to other files, content, or functionality.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Avoid using direct references to files or validate file name.&lt;/li&gt;&lt;li&gt;For example, instead of using:&amp;nbsp;www.example.com/open.jsp?file=details.txt&amp;nbsp;use:&amp;nbsp;www.example.com/open.jsp?file=[GUID]&amp;nbsp;and then use a lookup table on the server to associate the [GUID] value with file details.txt.&lt;/li&gt;&lt;li&gt;Files should be stored outside the web-root to prevent an attacker browsing directly to them.&lt;/li&gt;&lt;li&gt;Do not use obscurity to prevent access; for example do not rely on renaming a file to include a random string to prevent direct download or disclosure.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If direct references are used to access files from within the web-root deviating from recommended security practice, the following must be implemented:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String input validation must be applied.&amp;nbsp; Identify and filter for directory traversal meta-characters such as "../" or "..\" or "/", together with encoded variations and derivations.&lt;/li&gt;&lt;li&gt;Use of a strict white-list of files that may be downloaded.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;When a parameter that represents a file or a file path is found in the application:&lt;/li&gt;&lt;li&gt;For each of them try to change this parameter to gain access to unexpected files.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For example: www.example.com/open.jsp?file=details.txt&amp;nbsp;&lt;br&gt;Shouldn't be implemented that way and if so, it should not be possible to access locations outside of this domain (i.e. file=/etc/passwd or file= &lt;a href="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;, etc.).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" name="Configure and enable appropriate certification revocation" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Configure and enable appropriate certification revocation for each certificate created, such as
                        Online Certificate Status Protocol (OCSP) Stapling.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        OCSP is a protocol to check if an SSL certificate has been revoked. Instead of the client
                        downloading a large list of revoked certificates, they can simply submit a request to a CA
                        server, which returns a signed response with the certificate current status.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="Certificate revocation" url="https://medium.com/@alexeysamoshkin/how-ssl-certificate-revocation-is-broken-in-practice-af3b63b9cb3"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that appropriate certification revocation is enabled and configured.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.474">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AC-19" name="Define access control for portable and mobile devices" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A mobile device is a computing device that: (i) has a small form factor such that it can easily be carried by a single individual; (ii) is designed to operate without a physical connection (e.g., wirelessly transmit or receive information); (iii) possesses local, non-removable or removable data storage; and (iv) includes a self-contained power source. Mobile devices may also include voice communication capabilities, on-board sensors that allow the device to capture information, and/or built-in features for synchronizing local data with remote locations. Examples include smart phones, E-readers, and tablets. Mobile devices are typically associated with a single individual and the device is usually in close proximity to the individual; however, the degree of proximity can vary depending upon on the form factor and size of the device.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The processing, storage, and transmission capability of the mobile device may be comparable to or merely a subset of desktop systems, depending upon the nature and intended purpose of the device. Due to the large variety of mobile devices with different technical characteristics and capabilities, organizational restrictions may vary for the different classes/types of such devices. Usage restrictions and specific implementation guidance for mobile devices include, for example, configuration management, device identification and authentication, implementation of mandatory protective software (e.g., malicious code detection, firewall), scanning devices for malicious code, updating virus protection software, scanning for critical software updates and patches, conducting primary operating system (and possibly other resident software) integrity checks, and disabling unnecessary hardware (e.g., wireless, infrared).&amp;nbsp;&lt;/p&gt;&lt;p&gt;Organizations are cautioned that the need to provide adequate security for mobile devices goes beyond the requirements in this control. Many safeguards and countermeasures for mobile devices are reflected in other security controls in the catalog allocated in the initial control baselines as starting points for the development of security plans and overlays using the tailoring process. There may also be some degree of overlap in the requirements articulated by the security controls within the different families of controls. AC-20 addresses mobile devices that are not organization-controlled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AC-19 Access Control For Portable And Mobile Devices" url="https://www.opensecurityarchitecture.org/cms/library/0802control-catalogue/201-08-02-ac-19"/>
          </references>
          <standards>
            <standard ref="AC-19" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-19" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-19" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-19" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AC-17" name="Define access control for remote access" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Remote access is access to organizational information systems by users (or processes acting on behalf of users) communicating through external networks (e.g., the Internet). Remote access methods include, for example, dial-up, broadband, and wireless. Organizations often employ encrypted virtual private networks (VPNs) to enhance confidentiality and integrity over remote connections. The use of encrypted VPNs does not make the access non-remote; however, the use of VPNs, when adequately provisioned with appropriate security controls (e.g., employing appropriate encryption techniques for confidentiality and integrity protection) may provide sufficient assurance to the organization that it can effectively treat such connections as internal networks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Still, VPN connections traverse external networks, and the encrypted VPN does not enhance the availability of remote connections. Also, VPNs with encrypted tunnels can affect the organizational capability to adequately monitor network communications traffic for malicious code. Remote access controls apply to information systems other than public web servers or systems designed for public access. This control addresses authorization prior to allowing remote access without specifying the formats for such authorization. While organizations may use interconnection security agreements to authorize remote access connections, such agreements are not required by this control. Enforcing access restrictions for remote connections is addressed in AC-3.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AC-17 Remote Access" url="https://www.opensecurityarchitecture.org/cms/library/0802control-catalogue/199-08-02-ac-17"/>
          </references>
          <standards>
            <standard ref="AC-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-17" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AC-18" name="Define access control for wireless access" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Wireless technologies include, for example, microwave, packet radio (UHF/VHF), 802.11x, and Bluetooth. Wireless networks use authentication protocols (e.g., EAP/TLS, PEAP), which provide credential protection and mutual authentication.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AC-18 Wireless Access Restrictions" url="https://www.opensecurityarchitecture.org/cms/library/0802control-catalogue/200-08-02-ac-18"/>
          </references>
          <standards>
            <standard ref="AC-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-18" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-18" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-18" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-7" name="Define boundary protection by monitoring communications and implementing subnetworks" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Monitors and controls communications at the external boundary of the system and at key internal boundaries within the system;&lt;/p&gt;&lt;p&gt;b. Implements subnetworks for publicly accessible system components that are physically or logically separated from internal organizational networks; and&lt;/p&gt;&lt;p&gt;c. Connects to external networks or information systems only through managed interfaces consisting of boundary protection devices arranged in accordance with an organizational security architecture.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-07 Boundary Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/67-08_02_SC-07"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Managed interfaces include, for example, gateways, routers, firewalls, guards, network-based malicious code analysis and virtualization systems, or encrypted tunnels implemented within a security architecture (e.g., routers protecting firewalls or application gateways residing on protected subnetworks). Subnetworks that are physically or logically separated from internal networks are referred to as demilitarized zones or DMZs. Restricting or prohibiting interfaces within organizational information systems includes, for example, restricting external web traffic to designated web servers within managed interfaces and prohibiting external traffic that appears to be spoofing internal addresses. Organizations consider the shared nature of commercial telecommunications services in the implementation of security controls associated with the use of such services. Commercial telecommunications services are commonly based on network components and consolidated management systems shared by all attached commercial customers, and may also include third party-provided access lines and other service elements. Such transmission services may represent sources of increased risk despite contract security provisions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.472">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-6" name="Define resource priority by monitoring communications and implementing subnetworks" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Priority protection helps prevent lower-priority processes from delaying or interfering with the information system servicing any higher-priority processes. Quotas prevent users or processes from obtaining more than predetermined amounts of resources. This control does not apply to information system components for which there are only single users/roles.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-06 Resource Priority" url="https://www.opensecurityarchitecture.org/cms/library/0802control-catalogue/66-08-02-sc-06"/>
          </references>
          <standards>
            <standard ref="ID.AM-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When authentication is performed solely on the client-side, the user's credentials (e.g., username and password) are sent to the server for verification. However, an attacker can intercept and modify these credentials before they are sent to the server, allowing them to gain unauthorized access to the application.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Furthermore, client-side authentication does not provide any protection against attacks that target the server-side of the application. For example, an attacker could exploit a vulnerability in the server-side code to gain access to sensitive data or functionality without needing to authenticate at all.&lt;/p&gt;&lt;p&gt;All data on the client-side must be considered tainted. As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AU-5" name="Develop alerts for audit failures" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Alerts in the event of an audit processing failure; and&lt;/p&gt;&lt;p&gt;b. Takes the following additional actions: shut down information system, overwrite oldest audit records, stop generating audit records.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AU-05 Response To Audit Processing Failures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/174-08_02_AU-05"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-5" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-5" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit processing failures include, for example, software/hardware errors, failures in the audit capturing mechanisms, and audit storage capacity being reached or exceeded. Organizations may choose to define additional actions for different audit processing failures (e.g., by type, by location, by severity, or a combination of such factors). This control applies to each audit data storage repository (i.e., distinct information system component where audit records are stored), the total audit storage capacity of organizations (i.e., all audit data storage repositories combined), or both.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AU-1" name="Develop audit and accountability procedures" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Develops, documents, and disseminates to:&lt;/p&gt;&lt;p&gt;1. An audit and accountability policy that addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and compliance; and&lt;/p&gt;&lt;p&gt;2. Procedures to facilitate the implementation of the audit and accountability policy and associated audit and accountability controls; and&lt;/p&gt;&lt;p&gt;b. Reviews and updates the current:&lt;/p&gt;&lt;p&gt;1. Audit and accountability policy; and&lt;/p&gt;&lt;p&gt;2. Audit and accountability procedures.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AU-01 Audit And Accountability Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/36-08_02_AU-01"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="AU-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This control addresses the establishment of policy and procedures for the effective implementation of selected security controls and control enhancements in the AU family. Policy and procedures reflect applicable federal laws, Executive Orders, directives, regulations, policies, standards, and guidance. Security program policies and procedures at the organization level may make the need for system-specific policies and procedures unnecessary. The policy can be included as part of the general information security policy for organizations or conversely, can be represented by multiple policies reflecting the complex nature of certain organizations. The procedures can be established for the security program in general and for particular information systems, if needed. The organizational risk management strategy is a key factor in establishing policy and procedures.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AU-7" name="Develop audit records report processes" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system provides an audit reduction and report generation capability that:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Supports on-demand audit review, analysis, and reporting requirements and after-the-fact investigations of security incidents; and&lt;/p&gt;&lt;p&gt;b. Does not alter the original content or time ordering of audit records.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AU-07 Audit Reduction And Report Generation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/176-08_02_AU-07"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="AU-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit reduction is a process that manipulates collected audit information and organizes such information in a summary format that is more meaningful to analysts. Audit reduction and report generation capabilities do not always emanate from the same information system or from the same organizational entities conducting auditing activities. Audit reduction capability can include, for example, modern data mining techniques with advanced data filters to identify anomalous behavior in audit records. The report generation capability provided by the information system can generate customizable reports. Time ordering of audit records can be a significant issue if the granularity of the timestamp in the record is insufficient.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-5" name="Develop security safeguards for denial of service attacks" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system protects against or limits the effects of organization-defined types of denial of service attacks by employing security safeguards.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-05 Denial Of Service Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/65-08_02_SC-05"/>
          </references>
          <standards>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-5" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;A variety of technologies exist to limit, or in some cases, eliminate the effects of denial of service attacks. For example, boundary protection devices can filter certain types of packets to protect information system components on internal organizational networks from being directly affected by denial of service attacks. Employing increased capacity and bandwidth combined with service redundancy may also reduce the susceptibility to denial of service attacks.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-16.6" name="Do not store user files under the web root" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;div&gt;
                        Storage of user-controlled content in folders accessible through the web-server increases the risk of exposure, and also facilitates attacks relying on the upload and execution, or distribution, of malicious content.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                         &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                          In the case of proprietary user data, it may also expose the restricted data to compromise through direct browsing or direct object reference manipulation if access controls are not securely implemented
                        &lt;/div&gt;
                        &lt;div&gt;
                         &lt;ul&gt;
                          &lt;li&gt;Store uploaded files and other content in segregated folders outside of the web root directory tree to prevent direct access.&lt;/li&gt;
                          &lt;li&gt;File content that is intended to be accessed by users from the client-side should be streamed with appropriate MIME types.&lt;/li&gt;
                          &lt;li&gt;Ensure appropriate permissions are applied to the files and the folders; they should only be readable by the relevant service accounts, and should not be executable.&lt;/li&gt;
                          &lt;li&gt;Ideally, the folder containing the files should not be accessible through the web-application even in the event of a directory traversal or server-side file include vulnerability.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the data sources that the application is using to retrieve data (other
                            systems, upload methods, etc.).&lt;/li&gt;
                            &lt;li&gt;Check this data is being stored outside of the WebRoot so there will be no way to
                            access them from external locations.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-backups-securely" name="Encrypt Backups securely on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Sensitive data and Backups of sensitive data shall be stored securely by encryption (data at rest).
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption should be used to protect the data.&lt;/li&gt;
  &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent storage.&lt;/li&gt;
  &lt;li&gt;The key for encrypting and decrypting the data should not be accessible from the same host.&amp;nbsp;&lt;/li&gt;
  &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
  &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference to a bespoke implementation).&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.1.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the functions of the application which are storing backups with sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.1" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.6" supportedStandardRef="swift-cscf"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-311-AT-REST" name="Encrypt data stored on the host (data at rest)" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Data stored on the server or the client must be protected by encryption (data
                        &lt;i&gt;at rest&lt;/i&gt;).
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographically strong symmetric or asymmetric (public-key) encryption&amp;nbsp;should
                        be used to protect the data.&lt;/li&gt;
                        &lt;li&gt;Encryption should be performed before the data is written to disk or other persistent
                        storage.&lt;/li&gt;
                        &lt;li&gt;The key for encrypting and decrypting the data should &lt;i&gt;not&lt;/i&gt; be
                        accessible from the same host.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The encryption and decryption operation should be performed on a different host.&lt;/li&gt;
                        &lt;li&gt;A recognized, proven, and tested implementation/library should be used (in preference
                        to a bespoke implementation).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the functions of the application which are storing sensitive data.&lt;/li&gt;&lt;li&gt;For each of the functions check they are using an external service to encrypt the data.&lt;/li&gt;&lt;li&gt;Check that neither the sensitive data nor the keys used to encrypt the data are stored on the host after the encryption process completes.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.460">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-15" name="Ensure that collaborative computing devices cannot be activated remotely" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Prohibits remote activation of collaborative computing devices with exceptions where remote activation is to be allowed; and&lt;/p&gt;&lt;p&gt;b. Provides an explicit indication of use to users physically present at the devices.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-15 Collaborative Computing" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/75-08_02_SC-15"/>
          </references>
          <standards>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-15" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-15" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-15" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Collaborative computing devices include, for example, networked white boards, cameras, and microphones. Explicit indication of use includes, for example, signals to users when collaborative computing devices are activated.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" name="Ensure that only strong algorithms, cyphers and protocols are used" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Ensure that the application is using strong algorithms, cyphers and protocols. The general
                        practice and required minimum key lengths depend on the scenarios listed below.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048 bits&lt;/li&gt;
                        &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                        &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                        &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                        &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                        &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="NIST SP 800-175b" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-175b.pdf"/>
            <reference name="NIST SP 800-57" url="https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP cryptographic storage" url="https://www.owasp.org/index.php/Cryptographic_Storage_Cheat_Sheet"/>
            <reference name="OWASP key management" url="https://www.owasp.org/index.php/Key_Management_Cheat_Sheet"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.9.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.2.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.7" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Cryptographic protocols comply to the best practices listed bellow:
                            &lt;br /&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Key exchange: Diffie-Hellman key exchange with minimum 2048
                            bits&lt;/li&gt;
                            &lt;li&gt;Message Integrity: HMAC-SHA2&lt;/li&gt;
                            &lt;li&gt;Message Hash: SHA2 256 bits&lt;/li&gt;
                            &lt;li&gt;Asymmetric encryption: RSA 2048 bits&lt;/li&gt;
                            &lt;li&gt;Symmetric-key algorithm: AES 128 bits&lt;/li&gt;
                            &lt;li&gt;Password Hashing: Argon2, PBKDF2, Scrypt, Bcrypt.&lt;br /&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-IA-2" name="Ensure the system uniquely identifies organizational users" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system uniquely identifies and authenticates organizational users (or processes acting on behalf of organizational users).&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Organizational users include employees or individuals that organizations deem to have equivalent status of employees (e.g., contractors, guest researchers). This control applies to all accesses other than: (i) accesses that are explicitly identified and documented in AC-14; and (ii) accesses that occur through authorized use of group authenticators without individual authentication. Organizations may require unique identification of individuals in group accounts (e.g., shared privilege accounts) or for detailed accountability of individual activity. Organizations employ passwords, tokens, or biometrics to authenticate user identities, or in the case multifactor authentication, or some combination thereof. Access to organizational information systems is defined as either local access or network access. Local access is any access to organizational information systems by users (or processes acting on behalf of users) where such access is obtained by direct connections without the use of networks. Network access is access to organizational information systems by users (or processes acting on behalf of users) where such access is obtained through network connections (i.e., nonlocal accesses). Remote access is a type of network access that involves communication through external networks (e.g., the Internet). Internal networks include local area networks and wide area networks. In addition, the use of encrypted virtual private networks (VPNs) for network connections between organization-controlled endpoints and non-organization controlled endpoints may be treated as internal networks from the perspective of protecting the confidentiality and integrity of information traversing the network.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA IA-02 User Identification And Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/22-08_02_IA-02"/>
          </references>
          <standards>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations can satisfy the identification and authentication requirements in this control by complying with the requirements in Homeland Security Presidential Directive 12 consistent with the specific organizational implementation plans. Multifactor authentication requires the use of two or more different factors to achieve authentication. The factors are defined as: (i) something you know (e.g., password, personal identification number [PIN]); (ii) something you have (e.g., cryptographic identification device, token); or (iii) something you are (e.g., biometric). Multifactor solutions that require devices separate from information systems gaining access include, for example, hardware tokens providing time-based or challenge-response authenticators and smart cards such as the U.S. Government Personal Identity Verification card and the DoD common access card. In addition to identifying and authenticating users at the information system level (i.e., at logon), organizations also employ identification and authentication mechanisms at the application level, when necessary, to provide increased information security. Identification and authentication requirements for other than organizational users are described in IA-8.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AC-20" name="Establish conditions to access external information systems" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization establishes terms and conditions, consistent with any trust relationships established with other organizations owning, operating, and/or maintaining external information systems, allowing authorized individuals to:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Access the information system from external information systems; and&lt;/p&gt;&lt;p&gt;b. Process, store, or transmit organization-controlled information using external information systems.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AC-20 Use Of External Information Systems" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/202-08_02_AC-20"/>
          </references>
          <standards>
            <standard ref="AC-20" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-20" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-20" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-20" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="ID.AM-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;External information systems are information systems or components of information systems that are outside of the authorization boundary established by organizations and for which organizations typically have no direct supervision and authority over the application of required security controls or the assessment of control effectiveness. External information systems include, for example: (i) personally owned information systems/devices (e.g., notebook computers, smart phones, tablets, personal digital assistants); (ii) privately owned computing and communications devices resident in commercial or public facilities (e.g., hotels, train stations, convention centers, shopping malls, or airports); (iii) information systems owned or controlled by nonfederal governmental organizations; and (iv) federal information systems that are not owned by, operated by, or under the direct supervision and authority of organizations. This control also addresses the use of external information systems for the processing, storage, or transmission of organizational information, including, for example, accessing cloud services (e.g., infrastructure as a service, platform as a service, or software as a service) from organizational information systems. For some external information systems (i.e., information systems operated by other federal agencies, including organizations subordinate to those agencies), the trust relationships that have been established between those organizations and the originating organization may be such, that no explicit terms and conditions are required. Information systems within these organizations would not be considered external. These situations occur when, for example, there are pre-existing sharing/trust agreements (either implicit or explicit) established between federal agencies or organizations subordinate to those agencies, or when such trust agreements are specified by applicable laws, Executive Orders, directives, or policies. Authorized individuals include, for example, organizational personnel, contractors, or other individuals with authorized access to organizational information systems and over which organizations have the authority to impose rules of behavior with regard to system access. Restrictions that organizations impose on authorized individuals need not be uniform, as those restrictions may vary depending upon the trust relationships between organizations. Therefore, organizations may choose to impose different security restrictions on contractors than on state, local, or tribal governments. This control does not apply to the use of external information systems to access public interfaces to organizational information systems (e.g., individuals accessing federal information through www.usa.gov). Organizations establish terms and conditions for the use of external information systems in accordance with organizational security policies and procedures. Terms and conditions address as a minimum: types of applications that can be accessed on organizational information systems from external information systems; and the highest security category of information that can be processed, stored, or transmitted on external information systems. If terms and conditions with the owners of external information systems cannot be established, organizations may impose restrictions on organizational personnel using those external systems.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-24" name="Identify well-defined states for preserving system information in case of a failure" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system must fail to a known-state for preserving system state information in failure.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;In general, you should design your security mechanism so that a failure will follow the same execution path as disallowing the operation. For example, security methods like isAuthorized(), isAuthenticated(), and validate() should all return false if there is an exception during processing. If security controls can throw exceptions, they must be very clear about exactly what that condition means.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OWASP: Fail securely" url="https://owasp.org/www-community/Fail_securely"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="SC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-24" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Failure in a known state addresses security concerns in accordance with the mission/business needs of organizations. Failure in a known secure state helps to prevent the loss of confidentiality, integrity, or availability of information in the event of failures of organizational information systems or system components. Failure in a known safe state helps to prevent systems from failing to a state that may cause injury to individuals or destruction to property. Preserving information system state information facilitates system restart and return to the operational mode of organizations with less disruption of mission/business processes.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-IA-6" name="Implement a method for obscuring authenticator feedback" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system obscures feedback of authentication information during the authentication process to protect the information from possible exploitation/use by unauthorized individuals.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA IA-06 Authenticator Feedback" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/185-08_02_IA-06"/>
          </references>
          <standards>
            <standard ref="IA-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-6" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The feedback from information systems does not provide information that would allow unauthorized individuals to compromise authentication mechanisms. For some types of information systems or system components, for example, desktops/notebooks with relatively large monitors, the threat (often referred to as shoulder surfing) may be significant. For other types of systems or components, for example, mobile devices with 2-4 inch screens, this threat may be less significant, and may need to be balanced against the increased likelihood of typographic input errors due to the small keyboards. Therefore, the means for obscuring the authenticator feedback is selected accordingly. Obscuring the feedback of authentication information includes, for example, displaying asterisks when users type passwords into input devices, or displaying feedback for a very limited time before fully obscuring it.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-18" name="Implement a policy to handle mobile codes and mobile code technologies" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Defines acceptable and unacceptable mobile code and mobile code technologies;&lt;/p&gt;&lt;p&gt;b. Establishes usage restrictions and implementation guidance for acceptable mobile code and mobile code technologies; and&lt;/p&gt;&lt;p&gt;c. Authorizes, monitors, and controls the use of mobile code within the information system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-18 Mobile Code" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/78-08_02_SC-18"/>
          </references>
          <standards>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-18" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-18" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Decisions regarding the employment of mobile code within organizational information systems are based on the potential for the code to cause damage to the systems if used maliciously. Mobile code technologies include, for example, Java, JavaScript, ActiveX, Postscript, PDF, Shockwave movies, Flash animations, and VBScript. Usage restrictions and implementation guidance apply to both the selection and use of mobile code installed on servers and mobile code downloaded and executed on individual workstations and devices (e.g., smart phones). Mobile code policy and procedures address preventing the development, acquisition, or introduction of unacceptable mobile code within organizational information systems.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-19" name="Implement audit processes for VoIP" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Establishes usage restrictions and implementation guidance for Voice over Internet Protocol (VoIP) technologies based on the potential to cause damage to the information system if used maliciously; and&lt;/p&gt;&lt;p&gt;b. Authorizes, monitors, and controls the use of VoIP within the information system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-19 Voice Over Internet Protocol" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/79-08_02_SC-19"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-21" name="Implement data origin authentication and integrity verification on responses from authoritative sources" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system requests and performs data origin authentication and data integrity verification on the name/address resolution responses the system receives from authoritative sources.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-21 Secure Name / Address Resolution Service (Recursive Or Caching Resolver)" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/81-08_02_SC-21"/>
          </references>
          <standards>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-21" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-21" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-21" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-21" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Each client of name resolution services either performs this validation on its own, or has authenticated channels to trusted validation providers. Information systems that provide name and address resolution services for local clients include, for example, recursive resolving or caching domain name system (DNS) servers. DNS client resolvers either perform validation of DNSSEC signatures, or clients use authenticated channels to recursive resolvers that perform such validations. Information systems that use technologies other than the DNS to map between host/service names and network addresses provide other means to enable clients to verify the authenticity and integrity of response data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SRV-JSON-WEB-SIGN" name="Implement JSON Web Signing for sensitive or authentication data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Data received from the client-side may have been modified at source or in transit. JSON Web
                        Signing functionality is available to prevent (or rather detect) such modification.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Sensitive data, in particular any relied on for making access control or other
                        security decisions, should be signed. This provides assurance that:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The data comes from the trusted source and not from an untrusted actor.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The data received is that produced by the trusted party and has not been modified in
                        transit.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the functions of the service which handle JSON data.&lt;/li&gt;&lt;li&gt;If the JSON data is used to make authentication decisions or part of a sensitive business logic flow, then check JSON Web Signing - leveraging JSON Web Tokens - is in use.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.474">
              <output/>
            </source>
            <references>
              <reference name="JSON Web Signing - RFC" url="https://tools.ietf.org/html/rfc7515"/>
              <reference name="RFC 7519" url="https://tools.ietf.org/html/rfc7519"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-10" name="Implement measures to terminate network connections" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system terminates the network connection associated with a communications session at the end of the session or after a time period of inactivity.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-10 Network Disconnect" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/70-08_02_SC-10"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-10" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This control applies to both internal and external networks. Terminating network connections associated with communications sessions include, for example, de-allocating associated TCP/IP address/port pairs at the operating system level, or de-allocating networking assignments at the application level if multiple application sessions are using a single, operating system-level network connection. Time periods of inactivity may be established by organizations and include, for example, time periods by type of network access or for specific network accesses.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-22" name="Implement role separation on DNS servers" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information systems that collectively provide name/address resolution service for an organization are fault-tolerant and implement internal/external role separation.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-22 Architecture And Provisioning For Name / Address Resolution Service" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/82-08_02_SC-22"/>
          </references>
          <standards>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-22" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-22" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-22" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Information systems that provide name and address resolution services include, for example, domain name system (DNS) servers. To eliminate single points of failure and to enhance redundancy, organizations employ at least two authoritative domain name system servers, one configured as the primary server and the other configured as the secondary server. Additionally, organizations typically deploy the servers in two geographically separated network subnetworks (i.e., not located in the same physical facility). For role separation, DNS servers with internal roles only process name and address resolution requests from within organizations (i.e., from internal clients). DNS servers with external roles only process name and address resolution information requests from clients external to organizations (i.e., on external networks including the Internet). Organizations specify clients that can access authoritative DNS servers in particular roles (e.g., by address ranges, explicit lists).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-KEY-MGMT" name="Isolate cryptographic processes - including master secrets - and consider the use of a virtualized or physical hardware key vaults (HSM)" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cryptographic processes require the use of a private key or a secret. If the private key is stored poorly in the same service to be accessed, a compromise of the system could lead to this private key or secret being stolen. This would give the attacker access to all information.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;The way to prevent this is to keep cryptographic functionalities on a separate service that performs the encryption/decryption on demand. It is better if this service uses virtualized or physical hardware key vaults like a Hardware Security Module because those devices store the private key and secrets securely.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Key vaults and such implement security measures to prevent this information being extracted from them&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.6.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.6.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.10.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.10.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Identify the parts of your component which are using cryptographic functions.&lt;/li&gt;&lt;li&gt;Check these are implemented by an external service which is configured securely.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.474">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-VAL-LOG" name="Log and reject all data validation failures" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Data validation failures, together with access control violations, are symptomatic of malicious activity where an attacker is attempting to subvert the protections in place. It is therefore likely that unexpected input detected by the application relates to an attack. Rejecting and logging such activity, and ideally terminating the session, increases the likelihood of detecting and inhibiting structured attacks against the application.
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Log all validation failures when rejecting requests.&lt;/li&gt;
  &lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;
  &lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;
  &lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.5.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.19" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-IA-5" name="Manage information system authenticators" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization manages information system authenticators by:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Verifying, as part of the initial authenticator distribution, the identity of the individual, group, role, or device receiving the authenticator;&lt;/p&gt;&lt;p&gt;b. Establishing initial authenticator content for authenticators defined by the organization;&lt;/p&gt;&lt;p&gt;c. Ensuring that authenticators have sufficient strength of mechanism for their intended use;&lt;/p&gt;&lt;p&gt;d. Establishing and implementing administrative procedures for initial authenticator distribution, for lost/compromised or damaged authenticators, and for revoking authenticators;&lt;/p&gt;&lt;p&gt;e. Changing default content of authenticators prior to information system installation;&lt;/p&gt;&lt;p&gt;f. Establishing minimum and maximum lifetime restrictions and reuse conditions for authenticators;&lt;/p&gt;&lt;p&gt;g. Changing/refreshing authenticators [Assignment: organization-defined time period by authenticator type];&lt;/p&gt;&lt;p&gt;h. Protecting authenticator content from unauthorized disclosure and modification;&lt;/p&gt;&lt;p&gt;i. Requiring individuals to take, and having devices implement, specific security safeguards to protect authenticators; and&lt;/p&gt;&lt;p&gt;j. Changing authenticators for group/role accounts when membership to those accounts changes.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA IA-05 Authenticator Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/184-08_02_IA-05"/>
          </references>
          <standards>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-5" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Individual authenticators include, for example, passwords, tokens, biometrics, PKI certificates, and key cards. Initial authenticator content is the actual content (e.g., the initial password) as opposed to requirements about authenticator content (e.g., minimum password length). In many cases, developers ship information system components with factory default authentication credentials to allow for initial installation and configuration. Default authentication credentials are often well known, easily discoverable, and present a significant security risk. The requirement to protect individual authenticators may be implemented via control PL-4 or PS-6 for authenticators in the possession of individuals and by controls AC-3, AC-6, and SC-28 for authenticators stored within organizational information systems (e.g., passwords stored in hashed or encrypted formats, files containing encrypted or hashed passwords accessible with administrator privileges). Information systems support individual authenticator management by organization-defined settings and restrictions for various authenticator characteristics including, for example, minimum password length, password composition, validation time window for time synchronous one-time tokens, and number of allowed rejections during the verification stage of biometric authentication. Specific actions that can be taken to safeguard authenticators include, for example, maintaining possession of individual authenticators, not loaning or sharing individual authenticators with others, and reporting lost, stolen, or compromised authenticators immediately. Authenticator management includes issuing and revoking, when no longer needed, authenticators for temporary access such as that required for remote maintenance. Device authenticators include, for example, certificates and passwords.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-IA-4" name="Manage information system identifiers" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization manages information system identifiers by:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Receiving authorization from personnel or roles to assign an individual, group, role, or device identifier;&lt;/p&gt;&lt;p&gt;b. Selecting an identifier that identifies an individual, group, role, or device;&lt;/p&gt;&lt;p&gt;c. Assigning the identifier to the intended individual, group, role, or device;&lt;/p&gt;&lt;p&gt;d. Preventing reuse of identifiers for a time period; and&lt;/p&gt;&lt;p&gt;e. Disabling the identifier after a time period of inactivity.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA IA-04 Identifier Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/183-08_02_IA-04"/>
          </references>
          <standards>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Common device identifiers include, for example, media access control (MAC), Internet protocol (IP) addresses, or device-unique token identifiers. Management of individual identifiers is not applicable to shared information system accounts (e.g., guest and anonymous accounts). Typically, individual identifiers are the user names of the information system accounts assigned to those individuals. In such instances, the account management activities of AC-2 use account names provided by IA-4. This control also addresses individual identifiers not necessarily associated with information system accounts (e.g., identifiers used in physical security control databases accessed by badge reader systems for access to information systems). Preventing reuse of identifiers implies preventing the assignment of previously used individual, group, role, or device identifiers to different individuals, groups, roles, or devices.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AC-8" name="Notify users about the terms of use of the system" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;System use notifications can be implemented using messages or warning banners displayed before individuals log in to information systems. System use notifications are used only for access via logon interfaces with human users and are not required when such human interfaces do not exist. Organizations consider system use notification messages/banners displayed in multiple languages based on specific organizational needs and the demographics of information system users. Organizations also consult with the Office of the General Counsel for legal review and approval of warning banner content.&lt;/p&gt;&lt;p&gt;a. Displays to users an organization-defined system use notification message or banner before granting access to the system that provides privacy and security notices consistent with applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance and states that:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Users are accessing a U.S. Government information system;&lt;/li&gt;&lt;li&gt;2. Information system usage may be monitored, recorded, and subject to audit;&lt;/li&gt;&lt;li&gt;3. Unauthorized use of the information system is prohibited and subject to criminal and civil penalties; and&lt;/li&gt;&lt;li&gt;4. Use of the information system indicates consent to monitoring and recording;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;b. Retains the notification message or banner on the screen until users acknowledge the usage conditions and take explicit actions to log on to or further access the information system; and&lt;/p&gt;&lt;p&gt;c. For publicly accessible systems:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Displays system use information organization-defined conditions, before granting further access;&lt;/li&gt;&lt;li&gt;2. Displays references, if any, to monitoring, recording, or auditing that are consistent with privacy accommodations for such systems that generally prohibit those activities; and&lt;/li&gt;&lt;li&gt;3. Includes a description of the authorized uses of the system.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AC-08 System Use Notification" url="https://www.opensecurityarchitecture.org/cms/library/0802control-catalogue/30-08-02-ac-08"/>
          </references>
          <standards>
            <standard ref="AC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-8" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the banner is displayed when attempting to access a system.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.468">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-4" name="Prevent unauthorized information transfer through shared system resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system prevents unauthorized and unintended information transfer via shared system resources.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-04 Information Remnance" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/64-08_02_SC-04"/>
          </references>
          <standards>
            <standard ref="SC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-4" supportedStandardRef="fedramp-moderate-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This control prevents information, including encrypted representations of information, produced by the actions of prior users/roles (or the actions of processes acting on behalf of prior users/roles) from being available to any current users/roles (or current processes) that obtain access to shared system resources (e.g., registers, main memory, hard disks) after those resources have been released back to information systems. The control of information in shared resources is also commonly referred to as object reuse and residual information protection. This control does not address: (i) information remanence which refers to residual representation of data that has been nominally erased or removed; (ii) covert channels (including storage and/or timing channels) where shared resources are manipulated to violate information flow restrictions; or (iii) components within information systems for which there are only single users/roles.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-SESS-FED" name="Provide a section with a list of all active sessions and information about them" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The application should provide a section with a list of all the active sessions. That list should contain as much information as possible and should allow the user to invalidate all sessions or any of them selectively.</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-10 Concurrent Session Control" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/32-08_02_AC-10"/>
            <reference name="OSA AC-11 Session Lock" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/33-08_02_AC-11"/>
            <reference name="OSA AC-12 Session Termination" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/34-08_02_AC-12"/>
          </references>
          <standards>
            <standard ref="3.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Find the section with the list of active sessions within the application features&lt;/li&gt;&lt;li&gt;Open an authenticated session on two or three different browsers.&lt;/li&gt;&lt;li&gt;Check the sessions are listed.&lt;/li&gt;&lt;li&gt;Close the sessions by logging out of the application.&lt;/li&gt;&lt;li&gt;Check the sessions listed relating to the ones you created have now disappeared.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-20" name="Provide data origin authentication and integrity verification artifacts" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Provides additional data origin authentication and integrity verification artifacts along with the authoritative name resolution data the system returns in response to external name/address resolution queries; and&lt;/p&gt;&lt;p&gt;b. Provides the means to indicate the security status of child zones and (if the child supports secure resolution services) to enable verification of a chain of trust among parent and child domains, when operating as part of a distributed, hierarchical namespace.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-20 Secure Name / Address Resolution Service (Authoritative Source)" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/80-08_02_SC-20"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-20" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-20" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-20" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-20" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;This control enables external clients including, for example, remote Internet clients, to obtain origin authentication and integrity verification assurances for the host/service name to network address resolution information obtained through the service. Information systems that provide name and address resolution services include, for example, domain name system (DNS) servers. Additional artifacts include, for example, DNS Security (DNSSEC) digital signatures and cryptographic keys. DNS resource records are examples of authoritative data. The means to indicate the security status of child zones includes, for example, the use of delegation signer resource records in the DNS. The DNS security controls reflect (and are referenced from) OMB Memorandum 08-23. Information systems that use technologies other than the DNS to map between host/service names and network addresses provide other means to assure the authenticity and integrity of response data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-255" name="Remove default credentials and role-based accounts from the application" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Security is often compromised through default or predictable account credentials, such as
                        'admin/admin'. Best-practice dictates that accounts are only enabled when required, do not have
                        common account names, and force users to choose unique strong passwords rather than using vendor
                        defaults.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Ensure all default application and software accounts are disabled or removed if not
                        required&lt;/li&gt;
                        &lt;li&gt;Strong passwords should be set on accounts that are required, default credentials must
                        be changed.&lt;/li&gt;
                        &lt;li&gt;Build application accounts from a least-privilege perspective.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Accounts should only be enabled if required.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Users should have individual accounts rather than role-based ones (e.g. dave-admin,
                        sue-admin rather than a shared 'admin' user)&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
          </references>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.10.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify all the authentication points for this component.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that authentication with default credentials is not possible.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Having gained access to an account, for example through session hijacking or cross-site scripting, an attack may compromise data and functionality accessible to the victim. This may include elevating privileges or accessing sensitive data and functionality, such as changing passwords, creating accounts, or transferring funds.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;These critical functions and sensitive data should be further protected from attack using a risk-based authentication model requiring re-authentication via multi-factor authentication, or use of a token to sign transactions or operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement re-authentication on key functions (such as requiring the old password before setting a new one).&lt;/li&gt;&lt;li&gt;Use secondary authentication such as a transaction PIN to allow financial transfers.&lt;/li&gt;&lt;li&gt;Critical administrative functionality should require multi-factor authentication (such as a hard or soft token).&lt;/li&gt;&lt;li&gt;Consider use of signing technologies or tokens that enable the server-side to verify the authenticity of a request and mitigate Man in the Middle (MiTM) or Man in the Browser (MiTB) attacks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify critical functionalities of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the risk appetite for those functionalities.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Validate that re-authentication is required for those functions if deemed
                            necessary.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-306-SERVICE" name="Require authentication before presenting restricted data" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For less sensitive but still restricted data, simple verification of the location of the user may suffice (e.g. IP restrictions).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;For non-sensitive but non-public data, access could be restricted by IP address, limiting access to internal networks, workstations, or gateways&lt;/li&gt;&lt;li&gt;For more sensitive data, TLS client-side certificates may be appropriate&lt;/li&gt;&lt;li&gt;Where secret or other sensitive data is handled, a full authentication process to identify and validate users with single or multi-factor authentication may be required&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-22" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-22" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Identify which parts of the service present sensitive data.&amp;nbsp;&lt;/li&gt;
                &lt;li&gt;Try to obtain access to this information without any type of authentication, for example, attempt to navigate directly to URLs that present sensitive data.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="TLS-STRONG-PROTOCOLS" name="Require cryptographically secure protocols (e.g. TLSv1.2 and above)" issueId="" issueLink="" platform="" cost="1" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only cryptographically strong ciphers should be used. Best-practice dictates that a subset of 'known good' ciphers and protocols must be defined and enforced on the server. &amp;nbsp;This may, however, cause compatibility issues with older browsers, requiring a balance between accessibility and security.&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define and enforce a list of acceptable ciphers and protocols. Disable SSLv3 and earlier protocols on the service.&lt;/li&gt;
 &lt;li&gt;Ideally, only TLSv1.2 and newer versions should be supported.&lt;/li&gt;
 &lt;li&gt;If TLSv1.1 or 1.0 are required, known secure configurations and ciphers should be selected.&lt;/li&gt;
 &lt;li&gt;SSLv3.0 and earlier should not be used.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-12 Cryptographic Key Establishment And Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/72-08_02_SC-12"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="SSL Labs - SSL/TLS Deployment Best Practices" url="https://www.ssllabs.com/projects/best-practices/"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Use automated tools to identify all of the SSL/TLS protocols supported by the
                            service.&lt;/li&gt;
                            &lt;li&gt;Verify that TLSv1.2 is supported.&lt;/li&gt;
                            &lt;/ol&gt;Some of the tools that can perform these tests are:
                            &lt;ul&gt;
                            &lt;li&gt;&lt;a href="https://www.continuumsecurity.net/bdd-security/"&gt;BDD-Security&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://www.ssllabs.com/"&gt;SSLabs&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://github.com/mozilla/cipherscan"&gt;cipherscan&lt;/a&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="TLS-STRONG-CIPHERS" name="Require cryptographically strong TLS cipher suites" issueId="" issueLink="" platform="" cost="1" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only cryptographically strong ciphers should be used. Best-practice dictates that a subset of ' &lt;i&gt;known good&lt;/i&gt;' ciphers and protocols must be defined and enforced on the server. &amp;nbsp;This may, however, cause compatibility issues with older browsers, requiring a balance between accessibility and security.&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Define and enforce a list of acceptable ciphers and protocols.&lt;/li&gt;
 &lt;li&gt;Explicitly disable known-bad ciphers and protocols, such as:
  &lt;ul&gt;
   &lt;li&gt;Null and export ciphers.&lt;/li&gt;
   &lt;li&gt;DH, MD5 and other weak cryptography.&lt;/li&gt;
   &lt;li&gt;Ciphers with keys smaller than 128 bits.&lt;/li&gt;
   &lt;li&gt;CBC ciphers with TLSv1.0 or earlier.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-01 System And Communications Protection Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/61-08_02_SC-01"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
            <reference name="SSL Labs - SSL/TLS Deployment Best Practices" url="https://www.ssllabs.com/projects/best-practices/"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Use automated tools to identify all the SSL/TLS protocols supported by the
                            service.&lt;/li&gt;
                            &lt;li&gt;Verify that cryptographically weak (also known as &amp;quot;export&amp;quot;
                            class) ciphers are not supported.&lt;/li&gt;
                            &lt;ol&gt;
                            &lt;br /&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;Some of the tools that can perform these tests are:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;ul&gt;
                            &lt;li&gt;&lt;a href="https://www.continuumsecurity.net/bdd-security/" rel="nofollow"&gt;BDD-Security&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://www.ssllabs.com/" rel="nofollow"&gt;SSLabs&lt;/a&gt;&lt;/li&gt;
                            &lt;li&gt;&lt;a href="https://github.com/mozilla/cipherscan" rel="nofollow"&gt;cipherscan&lt;/a&gt;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="WEB-SRV-ADM-AUTH" name="Restrict access to administrative functionality" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        If inadequate controls are in place, lower privileged users may be able to access higher
                        privilege or administrative functionality to subvert security within the application.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Restrict administration functions to designated administrators only through robust
                        access controls.&lt;/li&gt;
                        &lt;li&gt;Ensure this restriction is applied at the server-side; do not rely on 'secret' areas
                        of the application, menu hiding, or other client-side techniques to protect the functionality.&lt;/li&gt;
                        &lt;li&gt;Measures to prevent cross-site request forgery must be present on administrative
                        functions.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Try to access administration resources with a user who is not an administrator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the access is forbidden.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-ADM-TRUST" name="Restrict access to administrative interfaces" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access to administrative interfaces to trusted actors from trusted locations to reduce the application attack surface and likelihood of compromise.&lt;/p&gt; 
&lt;p&gt;Restrict administrative access to specific networks or hosts.&lt;/p&gt; 
&lt;div&gt;
  Use strong authentication for privileged access, for example a 2FA. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
          </references>
          <standards>
            <standard ref="2.4.10.13" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.13" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Try to access the administrative interface from an untrusted location. For example, if you are using a Wordpress &lt;span class="caps"&gt;CMS&lt;/span&gt; you should restrict access to /wp-admin which should not be available from the internet but only from trusted networks or IP addresses.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.461">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-AU-6" name="Review audit records for indications of unusual activity" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Reviews and analyzes information system audit records for indications of inappropriate or unusual activity; and&lt;/p&gt;&lt;p&gt;b. Reports findings to organization-defined personnel or roles, stop generating audit records.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA AU-06 Audit Monitoring, Analysis, And Reporting" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/175-08_02_AU-06"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-6" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-2" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit review, analysis, and reporting covers information security-related auditing performed by organizations including, for example, auditing that results from monitoring of account usage, remote access, wireless connectivity, mobile device connection, configuration settings, system component inventory, use of maintenance tools and nonlocal maintenance, physical access, temperature and humidity, equipment delivery and removal, communications at the information system boundaries, use of mobile code, and use of VoIP. Findings can be reported to organizational entities that include, for example, incident response team, help desk, information security group/department. If organizations are prohibited from reviewing and analyzing audit information or unable to conduct such activities (e.g., in certain national security applications or systems), the review/analysis may be carried out by other organizations granted such authority.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.469">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-39" name="Separate execution domain for each executing process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system maintains a separate execution domain for each executing process.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The following enhancements can be done:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement hardware separation mechanisms to facilitate process separation (e.g. hardware memory management)&lt;/li&gt;&lt;li&gt;Create execution domains for each threat in a multi-threaded processing&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="SC-39" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-39" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-39" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-39" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Information systems can maintain separate execution domains for each executing process by assigning each process a separate address space. Each information system process has a distinct address space so that communication between processes is performed in a manner controlled through the security functions, and one process cannot modify the executing code of another process. Maintaining separate execution domains for executing processes can be achieved, for example, by implementing separate address spaces. This capability is available in most commercial operating systems that employ multi-state processor technologies.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-2" name="Separate user functionality from information system management functionality" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system separates user functionality (including user interface services) from information system management functionality.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The following enhancements can be done:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Prevent the presentation of information system management-related functionality at an interface for non-privileged users (e.g. not presenting administration options until users establish sessions with administrator privileges)&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-02 Application Partitioning" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/62-08_02_SC-02"/>
          </references>
          <standards>
            <standard ref="SC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-2" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Information system management functionality includes, for example, functions necessary to administer databases, network components, workstations, or servers, and typically requires privileged user access. The separation of user functionality from information system management functionality is either physical or logical. Organizations implement separation of system management-related functionality from user functionality by using different computers, different central processing units, different instances of operating systems, different network addresses, virtualization techniques, or combinations of these or other methods, as appropriate. This type of separation includes, for example, web administrative interfaces that use separate authentication methods for users of any other information system resources. Separation of system and user functionality may include isolating administrative interfaces on different domains and with additional access controls.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-525-CACHING" name="Set Cache-Control headers on sensitive and authenticated content" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Browsers, servers, and upstream/intermediate devices may cache (temporarily store) data sent in
                        HTTP sessions for performance reasons. The protocol allows for a number of HTTP headers and
                        directives to control what data may be cached, where, and for how long. It is important to specify
                        cache-controls to prevent the exposure of sensitive data through the inappropriate caching
                        of authenticated and otherwise restricted access data, either in the users' browser or other
                        devices.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Configure the server or application to set cache-control headers on sensitive content.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The following headers are recommended:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;
                        &lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;
                        &lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;
                        &lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;
                        &lt;li&gt;Pragma: no-cache&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
          </references>
          <standards>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Review the HTTP Server responses to ensure appropriate cache directives are returned for all sensitive and authenticated content.&lt;/li&gt;&lt;li&gt;Using a browser:&lt;/li&gt;&lt;li&gt;Open the Web Developer Console.&lt;ul&gt;&lt;li&gt;Make requests to the different component end-points.&lt;/li&gt;&lt;li&gt;Verify the cache controls returned as part of these responses.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite):&lt;ul&gt;&lt;li&gt;Browse the site through the proxy.&lt;/li&gt;&lt;li&gt;Review server responses and/or use automated scanning to analyze cache headers.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The following is an example of what should be set to prevent a disclosure of sensitive data:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;&lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;&lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;&lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;&lt;li&gt;Pragma: no-cache&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="pseudo-random-number-generator" name="Use a cryptographically secure pseudo-random number generator" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use a well-vetted algorithm that is currently considered to be strong and secure by experts in the field and ensure well-tested implementation with adequate length seeds. In general, if a pseudo-random number generator is not advertised as being cryptographically secure, then it is probably a statistical PRNG and should not be used in a security-sensitive context.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Pseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 256-bit seed is a good starting point for producing a "random enough" number.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure that all random numbers, especially those used for cryptographic parameters (keys, IV's, MAC tags), random file names, random GUIDs, and random strings are generated in a cryptographically strong fashion.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that random algorithms are seeded with sufficient entropy, containing at least 112 bits of entropy (typically a six digit random number is sufficient).&amp;nbsp; If less than 112 bits of entropy, ensure salting with a unique and random 32-bit salt and hashed with an approved one-way hash.&lt;/p&gt;&lt;p&gt;Use a secure pseudo-random number generator ensuring it leverages an appropriate length seed. The recommendation by FIPS 140-2 is 256-bit seed.&lt;/p&gt;&lt;p&gt;Ensure that the challenge nonce was generated with at least 64 bits and it is unique over the lifetime of the cryptographic device.&lt;/p&gt;&lt;p&gt;Tools like NIST RNG Test tool (as used in PCI PTS Derived Test Requirements) can be used to comprehensively assess the quality of a Random Number Generator by reading e.g. 128MB of data from the RNG source and then assessing its randomness properties with the tool.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The following libraries are considered weak random numbers generators and should not be used.&amp;nbsp;&lt;/p&gt;&lt;p&gt;C library: random(), rand() instead use getrandom(2)&amp;nbsp;&lt;/p&gt;&lt;p&gt;Java library: java.util.Random() instead use java.security.SecureRandom&lt;/p&gt;&lt;p&gt;For secure random number generation, refer to NIST SP 800-90A. CTR-DRBG, HASH-DRBG, HMAC-DRBG. Refer to NIST SP800-22 A Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications, and the testing toolkit.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST Security Policies for Random and Pseudorandom Number Generators for Cryptographic Applications" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-22r1a.pdf"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
          </references>
          <standards>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Check that an adequately strong algorithm is used to generate random values, and that those random values are of a minimum 256-bit seed.&lt;/span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="NIST-800-53-IA-7" name="Use a cryptographic module for authentication" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The information system implements mechanisms for authentication to a cryptographic module that meet the requirements of applicable federal laws, Executive Orders, directives, policies, regulations, standards, and guidance for such authentication.&lt;/strong&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA IA-07 Cryptographic Module Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/186-08_02_IA-07"/>
          </references>
          <standards>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The feedback from information systems does not provide information that would allow unauthorized individuals to compromise authentication Authentication mechanisms may be required within a cryptographic module to authenticate an operator accessing the module and to verify that the operator is authorized to assume the requested role and perform services within that role.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.470">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.464">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-147" name="Validate input parameters to prevent HTTP Parameter Pollution" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>All data received from external sources should be considered tainted and a potential risk, regardless of the source or transport method. HTTP Parameter Pollution attacks result when parameters are added or inserted into requests, and are inappropriately or unsafely handled by the server. For example, injection of parameters into strings or cookies sent to the application can result in the variables being interpreted out of sequence, exploiting flaws in the business logic and flow.
&lt;div&gt;
 &lt;div&gt;
  &lt;ul&gt;
  &lt;/ul&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;p&gt;For example, there was a bug in the Blogger platform which illustrates this vulnerability. The bug allowed malicious users to take ownership of the victim's blog by using the following HTTP request:&lt;/p&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;POST /add-authors.do HTTP/1.1&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;security_token=attackertoken&amp;amp;&lt;b&gt;blogID=attackerblogidvalue&lt;/b&gt;&amp;amp;&lt;b&gt;blogID=victimblogidvalue&lt;/b&gt;&amp;amp;authorsList=goldshlager19test%40gmail.com(attacker email)&amp;amp;ok=Invite&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;p&gt;The flaw resided in the authentication mechanism used by the web application, as the security check was performed on the first&amp;nbsp;&lt;code&gt;blogID&lt;/code&gt;&amp;nbsp;parameter, whereas the actual operation used the second occurrence.&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify parameters within the application used for authentication decisions, or critical business logic.&lt;/li&gt;&lt;li&gt;Send specially forged requests to the application in which those parameters are duplicated, or passed through other methods (e.g. POST parameters in the URL as GET fields, cookies as form fields etc.)&lt;ul&gt;&lt;li&gt;Review the application logic to ensure:&lt;/li&gt;&lt;li&gt;The same parameter is for all the decisions.&lt;/li&gt;&lt;li&gt;Parameters received over unexpected or non compliant methods result in a security exception.&lt;/li&gt;&lt;li&gt;Duplicate parameters are identified and result in a security exception.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should fail-safe; i.e. unexpected or suspicious behavior should result in termination of the user's session and a security event being logged.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A number of tools can be used to aid in testing:&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly inside your browser with the Developer Tools&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data)&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for HTTP Parameter Pollution" url="https://www.owasp.org/index.php/Testing_for_HTTP_Parameter_pollution_(OTG-INPVAL-004)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.462">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="fedramp" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T16:26:01.463">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="fedramp-requirements" name="FedRAMP Requirements" desc="" library="fedramp">
          <threats>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" issueId="" issueLink="" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="EU-GDPR-LOGICAL-DELETE-DATA-INACTIVITY">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-4" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="33"/>
                <countermeasure ref="LOG-RETENTION" mitigation="33"/>
                <countermeasure ref="NIST-800-53-SC-4" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-485" issueId="" issueLink="" name="An attacker obtains an authoritative signer's private signature key by exploiting a cryptographic weaknesses" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>An attacker obtains an authoritative or reputable signer's private signature key by
                                exploiting a cryptographic weakness in the signature algorithm or pseudorandom number
                                generation and then uses this key to forge signatures from the original signer to
                                mislead a victim into performing actions which benefit the attacker.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-330">
                  <countermeasures>
                    <countermeasure ref="pseudo-random-number-generator" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="pseudo-random-number-generator" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="AUTH-DATASTORE-LEAST-PRIV" issueId="" issueLink="" name="Attackers who compromise the application or application server could directly access and modify the data store" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>If attackers gain access to the application or the application server, then they could
                                directly access the data store using the privilege assigned to the application.
                                &lt;div&gt;
                                If the data store user account used by the application has elevated privileges then this
                                could allow attackers to perform unauthorized operations such as dropping tables,
                                modifying the database schema or modifying data.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="1" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="SRV-JSON-SIG">
                  <countermeasures>
                    <countermeasure ref="CWE-598" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="BACKUP-COMPROMISE" issueId="" issueLink="" name="Sensitive data is compromised if a backup of the data is compromised" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Sensitive data could be compromised if an attacker gained access to a backup copy of
                                that data.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="store-backups-securely" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="store-backups-securely" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-101" issueId="" issueLink="" name="Unauthorised data could be accessed by manipulating parameters sent to the application" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>The application could be tricked into exposing data to unauthorized users by
                                manipulating the parameters it accepts. All data received from the client side could be
                                subject to manipulation, including fields like cookies and HTTP headers, if these are
                                used as inputs to the application.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-22">
                  <countermeasures>
                    <countermeasure ref="CWE-639" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="50"/>
                <countermeasure ref="CWE-639" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-204-AUTOCOMPLETE" issueId="" issueLink="" name="Attackers with access to a victim's client could read locally stored credentials" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>If the application accepts sensitive data through forms, then browsers could cache that data and play it if an attacker views the same form in the same browser. This requires the attacker to have access to the victim's browser.</desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-525">
                  <countermeasures>
                    <countermeasure ref="CWE-525-CACHING" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-525-CACHING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-102" issueId="" issueLink="" name="Session sidejacking takes advantage of an unencrypted communication channel between a victim and target system" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Session side-jacking takes advantage of an unencrypted communication channel between a victim and target system. The attacker sniffs traffic on a network looking for session tokens in unencrypted traffic. Once a session token is captured, the attacker performs malicious actions by using the stolen token with the targeted application to impersonate the victim.
&lt;br /&gt;This attack is a specific method of session hijacking, which is exploiting a valid session token to gain unauthorized access to a target system or information. Other methods to perform a session hijacking are session fixation, cross-site scripting, or compromising a user or server machine and stealing the session token.
&lt;br /&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-523">
                  <countermeasures>
                    <countermeasure ref="CWE-603" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-603" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-USERNAME" issueId="" issueLink="" name="User accounts compromised through username guessing" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Attackers could perform a brute force attack against the login function by choosing a
                                simple password that users are likely to use for the site, and that meets the site's
                                password policy.
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Then they could use an automated script to iterate through a list of
                                possible usernames. &amp;nbsp;These could be obtained from a dictionary, or generated
                                through pure brute force means. &amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This type of attack cannot be defended against using an account lockout policy because
                                each username is only attempted once.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-307">
                  <countermeasures>
                    <countermeasure ref="network-rate-limit" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-115" issueId="" issueLink="" name="Authentication Bypass" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An attacker gains access to the application, service, or device with the privileges of an authorized or privileged user by evading - or circumventing - an authentication mechanism. The attacker is therefore able to access protected data without authentication ever having taken place. This refers to an attacker gaining access equivalent to an authenticated user without ever going through an authentication procedure. &lt;/p&gt; This is usually the result of the attacker using an unexpected access procedure that does not go through the proper checkpoints where authentication should occur. For example, a web site might assume that all users will click through a given link in order to access secure material and simply authenticate everyone that clicks the link. However, an attacker might be able to reach secured web content by explicitly entering the path to the content rather than clicking through the authentication link, thereby avoiding the check entirely. This attack pattern differs from other authentication attacks in that attacks of this pattern avoid authentication entirely, rather than faking authentication by exploiting flaws or by stealing credentials from legitimate users.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-IA-6" mitigation="25"/>
                    <countermeasure ref="NIST-800-53-SC-18" mitigation="25"/>
                    <countermeasure ref="NIST-800-53-SC-23" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="CWE-306-SERVICE" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-306-SERVICE" mitigation="25"/>
                <countermeasure ref="NIST-800-53-IA-6" mitigation="25"/>
                <countermeasure ref="NIST-800-53-SC-18" mitigation="25"/>
                <countermeasure ref="NIST-800-53-SC-23" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-122" issueId="" issueLink="" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-15" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-639">
                  <countermeasures>
                    <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="50"/>
                <countermeasure ref="NIST-800-53-SC-15" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-60" issueId="" issueLink="" name="An attacker reuses a valid session ID to spoof the target system in order to gain privileges" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>This attack targets the reuse of valid session ID to spoof the target system in order
                                to gain privileges. The attacker tries to reuse a stolen session ID used previously
                                during a transaction to perform spoofing and session hijacking. Another name for this
                                type of attack is Session Replay.
                                &lt;br /&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-613">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-10" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-SC-10" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-607" issueId="" issueLink="" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-SC-5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-151" issueId="" issueLink="" name="An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials. Alternatively, an attacker may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the identity of the message, but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="CSD-KEY-MGMT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-KEY-MGMT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-158" issueId="" issueLink="" name="Sensitive data is compromised through network sniffing attacks" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An attacker monitoring network traffic between nodes of a public or multicast network.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The attacker need not be able to prevent reception or change content but must simply be able to observe and read the traffic.&lt;/li&gt;&lt;li&gt;The attacker might precipitate or indirectly influence the content of the observed transaction, but the attacker is never the intended recipient of the information.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="STRONG-ALGORITHMS-PROTOCOLS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-215" issueId="" issueLink="" name="Attackers gain access to services or data by sending malformed, or otherwise unexpected messages to a target application" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes the application's log or error messages returned. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's their desired behavior. In this attack, the purpose of the fuzzing is to observe the application's log and error messages, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. By observing logs and error messages, the attacker can potentially learn details about the configuration of the target application and might be able to cause the target to disclose sensitive information.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-209">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.1" mitigation="20"/>
                    <countermeasure ref="NIST-800-53-AC-17" mitigation="16"/>
                    <countermeasure ref="NIST-800-53-AC-18" mitigation="16"/>
                    <countermeasure ref="NIST-800-53-AC-19" mitigation="16"/>
                    <countermeasure ref="NIST-800-53-AC-8" mitigation="16"/>
                    <countermeasure ref="NIST-800-53-SC-6" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="20"/>
                <countermeasure ref="NIST-800-53-AC-17" mitigation="16"/>
                <countermeasure ref="NIST-800-53-AC-18" mitigation="16"/>
                <countermeasure ref="NIST-800-53-AC-19" mitigation="16"/>
                <countermeasure ref="NIST-800-53-AC-8" mitigation="16"/>
                <countermeasure ref="NIST-800-53-SC-6" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-217" issueId="" issueLink="" name="Sensitive data is compromised through attacks against SSL/TLS" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Attackers could gain access to sensitive data in transit over an SSL connection by
                                exploiting weaknesses in the SSL configuration. The use of cryptographically weak
                                protocols and/or ciphers could be used to decrypt or otherwise gain access to the
                                encrypted data.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="SSL-WEAK-CIPHERS">
                  <countermeasures>
                    <countermeasure ref="TLS-STRONG-CIPHERS" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="SSL-WEAK-PROTOCOL">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-IA-7" mitigation="34"/>
                    <countermeasure ref="TLS-STRONG-PROTOCOLS" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-IA-7" mitigation="34"/>
                <countermeasure ref="TLS-STRONG-CIPHERS" mitigation="33"/>
                <countermeasure ref="TLS-STRONG-PROTOCOLS" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-232" issueId="" issueLink="" name="Anonymous users could gain access to sensitive data" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Attackers could access data for which they are not authorized by connecting directly
                                to the resource, without authenticating. E.g.: GET /userdetails?ID=145 to gain direct
                                access to that user's personal information.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references>
                <reference name="OWASP Development Guide: Authorization" url="https://www.owasp.org/index.php/Guide_to_Authorization"/>
                <reference name="OWASP Top Ten" url="https://www.owasp.org/index.php/Top_10_2007-Failure_to_Restrict_URL_Access"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-654">
                  <countermeasures>
                    <countermeasure ref="CWE-654" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-654" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-384" issueId="" issueLink="" name="Application API Message Manipulation via Man-in-the-Middle" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack may allow an attacker to gain unauthorized privileges within the application, or conduct further attacks such as phishing, other deceptive strategies for spreading malware, or traditional web-application attacks. These techniques require use of specialized software that allows the attacker to "man-in-the-middle" (MITM) communications between the web browser and the remote system. Despite the use of MITM software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. "Man-in-the-Middle" attacks are not normally at the network layer, but the application-layer, the root cause of which is the master application's trust in the integrity of code supplied by the client.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-345">
                  <countermeasures>
                    <countermeasure ref="SRV-JSON-WEB-SIGN" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SRV-JSON-WEB-SIGN" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-385" issueId="" issueLink="" name="Transaction or Event Tampering via Application API Manipulation" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An attacker hosts or joins an event or transaction within an application framework in order to change the content of messages or items that are being exchanged. Performing this attack allows the attacker to manipulate content in such a way as to produce messages or content that look authentic but may contain: deceptive links, substitute one item for another, spoof an existing item and conduct a false exchange, or otherwise change the quantities or identity of what is being exchanged. This techniques requires use of specialized software that allows the attacker to man-in-the-middle communications between the web browser and the remote system in order to change the content of various application elements. Often, items exchanged in games can be monetized in the "real world" via sales for coin, virtual dollars, etc. The purpose of the attack is to scam the victim by trapping the data packets involved in the exchange and altering the integrity of the transfer process.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-345">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-20" mitigation="50"/>
                    <countermeasure ref="NIST-800-53-SC-21" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-SC-20" mitigation="50"/>
                <countermeasure ref="NIST-800-53-SC-21" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-39" issueId="" issueLink="" name="Attacker gains access by manipulation of an authentication token or other sensitive data" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;In circumstances in which an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) this data could potentially be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="AVOID-API-KEYS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AVOID-API-KEYS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-62" issueId="" issueLink="" name="An attacker crafts malicious web links and distributes them hoping to induce users to click on the link and execute a malicious action" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level.
&lt;br&gt;This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply "riding" the existing session cookie.
&lt;br&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-352">
                  <countermeasures>
                    <countermeasure ref="cwe-352-csrf" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="cwe-352-csrf" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-633" issueId="" issueLink="" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSD-SESS-REAUTH">
                  <countermeasures>
                    <countermeasure ref="CSD-SESS-REAUTH" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-SESS-REAUTH" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-87" issueId="" issueLink="" name="Attackers gain access to data or services by directly accessing the resources" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>An attacker employs forceful browsing to access portions of a website that are
                                otherwise unreachable through direct URL entry.&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Usually, a front controller or similar design pattern is employed to protect
                                access to portions of a web application.&amp;nbsp;
                                &lt;/div&gt;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Forceful browsing enables an attacker to access information, perform
                                privileged operations and otherwise reach sections of the web application that have been
                                improperly protected.
                                &lt;br /&gt;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-384">
                  <countermeasures>
                    <countermeasure ref="CSD-SESS-FED" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-425">
                  <countermeasures>
                    <countermeasure ref="CWE-285" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-SESS-FED" mitigation="50"/>
                <countermeasure ref="CWE-285" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-93" issueId="" issueLink="" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-AU-5" mitigation="20"/>
                    <countermeasure ref="NIST-800-53-AU-6" mitigation="20"/>
                    <countermeasure ref="NIST-800-53-SC-19" mitigation="20"/>
                    <countermeasure ref="NIST-800-53-SC-7" mitigation="20"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-AU-5" mitigation="20"/>
                <countermeasure ref="NIST-800-53-AU-6" mitigation="20"/>
                <countermeasure ref="NIST-800-53-SC-19" mitigation="20"/>
                <countermeasure ref="NIST-800-53-SC-7" mitigation="20"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-ADM-IFACE" issueId="" issueLink="" name="Attackers gain access to the system through an unprotected administration interface" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Administrative interfaces grant access to sensitive operations that can typically
                                affect key security mechanisms, like modifying credentials and adding/removing user
                                accounts.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSD-ADM-OPEN">
                  <countermeasures>
                    <countermeasure ref="CSD-ADM-TRUST" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="WEB-SRV-ADM">
                  <countermeasures>
                    <countermeasure ref="WEB-SRV-ADM-AUTH" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-ADM-TRUST" mitigation="50"/>
                <countermeasure ref="WEB-SRV-ADM-AUTH" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-AUTH-PWD" issueId="" issueLink="" name="Attackers gain access to the system by accessing current user's password" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>If an attacker has access to the password exchange method when the user resets his
                                password, he would have access to the system as this user.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-AC-20" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-AC-20" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" issueId="" issueLink="" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-DEF-PWD" issueId="" issueLink="" name="Attackers gain access to the system using default passwords" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;Default passwords are usually public or can be obtained from manuals or technical data sheets. An attacker may use them to gain access to a system or user data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-255">
                  <countermeasures>
                    <countermeasure ref="CWE-255" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-255" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CWE-778-AUTH" issueId="" issueLink="" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="12"/>
                    <countermeasure ref="CSD-VAL-LOG" mitigation="12"/>
                    <countermeasure ref="CWE-662" mitigation="12"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="12"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="12"/>
                    <countermeasure ref="NIST-800-53-AU-1" mitigation="16"/>
                    <countermeasure ref="NIST-800-53-AU-7" mitigation="12"/>
                    <countermeasure ref="NIST-800-53-SC-24" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="12"/>
                <countermeasure ref="CSD-VAL-LOG" mitigation="12"/>
                <countermeasure ref="CWE-662" mitigation="12"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="12"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="12"/>
                <countermeasure ref="NIST-800-53-AU-1" mitigation="16"/>
                <countermeasure ref="NIST-800-53-AU-7" mitigation="12"/>
                <countermeasure ref="NIST-800-53-SC-24" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="FILE-MAL-UPLOAD" issueId="" issueLink="" name="Attackers gain unauthorised access through malicious file upload" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>Files that contain malicious content could cause the application to execute the
                                content and therefore grant unauthorized access to the service or the data it contains.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-159">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="WEB-PATH-ROOT">
                  <countermeasures>
                    <countermeasure ref="ASVS-16.6" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-16.6" mitigation="50"/>
                <countermeasure ref="DATA-VAL" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="HOST-COMPROMISE" issueId="" issueLink="" name="Sensitive data is compromised if the host itself is compromised" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>If sensitive data is stored or processed on the host, then should the host itself be
                                compromised by an attacker, the confidentiality and/or the integrity of the data would
                                also be at risk.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-311-AT-REST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="NTW-MITM" issueId="" issueLink="" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="34"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="34"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="33"/>
                <countermeasure ref="CWE-327" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="WEB-QUERY-PARAM" issueId="" issueLink="" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;Sensitive data directly inserted as a parameters in the URL string could all too easily leak that data inside logs, browser history, etc.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Additionally this information could potentially be leveraged by an attacker to gain access to the entire system or user data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-598">
                  <countermeasures>
                    <countermeasure ref="CWE-598" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="privilege-escalation-through-unprotected-resources" issueId="" issueLink="" name="Attackers try to escalate privileges by accessing unprotected resources" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;Privilege escalation occurs when a user gets access to more resources or functionality than they are normally allowed, and such elevation or changes should have been prevented by the application. This is usually caused by a flaw in the application. The result is that the application performs actions with more privileges than those intended by the developer or system administrator.&lt;/p&gt;&lt;p&gt;The degree of escalation depends on what privileges the attacker is authorized to possess, and what privileges can be obtained in a successful exploit. For example, a programming error that allows a user to gain extra privilege after successful authentication limits the degree of escalation, because the user is already authorized to hold some privilege. Likewise, a remote attacker gaining superuser privilege without any authentication presents a greater degree of escalation.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="OWASP Web Checklist" url="https://github.com/0xRadi/OWASP-Web-Checklist"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-653">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-2" mitigation="34"/>
                    <countermeasure ref="NIST-800-53-SC-22" mitigation="33"/>
                    <countermeasure ref="NIST-800-53-SC-39" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-SC-2" mitigation="34"/>
                <countermeasure ref="NIST-800-53-SC-22" mitigation="33"/>
                <countermeasure ref="NIST-800-53-SC-39" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="ssrf-threat" issueId="" issueLink="" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="CWE-601" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-601" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="vulnerable-session-management" issueId="" issueLink="" name="An attacker can obtain a valid session identifier to impersonate legitimate users" state="Expose" source="RULES" edited="false" owner="support" library="fedramp" editable="true">
              <desc>&lt;p&gt;Session management for Web applications is an application layer responsibility. Session security is critical to the overall security of the application. Vulnerabilities that are specific to session management are great threats to any web application and are also among the most challenging to find and fix.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;Sessions are targets for malicious users because they can be used to gain access to a system without having to authenticate.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="75"/>
              <references>
                <reference name="Secure Session Management: Preventing Security Voids in Web Applications" url="https://www.sans.org/reading-room/whitepapers/webservers/paper/1594"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-IA-2" mitigation="25"/>
                    <countermeasure ref="NIST-800-53-IA-4" mitigation="25"/>
                    <countermeasure ref="NIST-800-53-IA-5" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-370">
                  <countermeasures>
                    <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-IA-2" mitigation="25"/>
                <countermeasure ref="NIST-800-53-IA-4" mitigation="25"/>
                <countermeasure ref="NIST-800-53-IA-5" mitigation="25"/>
                <countermeasure ref="PROPER-REVOCATION-CERTIFICATE" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4c054601-97b2-4071-bc5e-9f555cec21a0" diagramComponentId="aaac96df-8eb7-4dd1-9e18-0acc27746948" ref="70a78f32-86da-4797-b1fd-31acc1cc0f67" name="Generic SSO" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="69568ccf-e538-4d43-8c46-2895f6d20a28" diagramComponentId="60c71acd-20d2-4e4b-a324-76f9021a62ad" ref="cece0ec6-d373-4f35-8d22-1c4af7e9b6c9" name="Login (IR-Functional-Components)" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-LOGIN" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" name="Attach timestamps or sequence numbers to each sent message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To avoid replay attacks, a type of man in the middle attack, it is recommended to add a timestamp or sequence numbers in the exchanged messages, this will allow the receiver to discard messages with a duplicated sequence number or timestamp.&lt;/p&gt;&lt;p&gt;An example of sequence number in its messages is the TCP protocol with its ACK.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Transaction Authorization Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Transaction_Authorization_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application.&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verifies if there is a timestamp or sequence number and that no duplicates are allowed.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AUTHZ-AFTER-AUTHN" name="Authorize after you authenticate" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Authorization should be conducted as an explicit check, and as necessary even after an initial authentication has been completed. Authorization depends not only on the privileges associated with an authenticated user, but also on the context of the request. The time of the request and the location of the requesting user may both need to be taken into account.&lt;/p&gt;&lt;p&gt;Sometimes a user's authorization for a system or service needs to be revoked, for example, when an employee leaves a company. If the authorization mechanism fails to allow for such revocation, the system is vulnerable to abuse by authenticated users exercising out-of-date authorizations.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authorize After You Authenticate" url="https://cybersecurity.ieee.org/blog/2015/11/13/authorize-after-you-authenticate/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate that no authorization process is conducted before an authentication process has previously finished.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SAML-VERIFY-IDP-X509" name="Check if the X509Certificate entity is really the correct certificate for your Identity Provider" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is necessary to ensure the identity of the supplier by verifying the certificate of the messages, to ensure that it is the correct one.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="SAML Raider - SAML2 Burp Extension" url="https://github.com/portswigger/saml-raider"/>
            <reference name="SAML Security Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/SAML_Security_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check if it is possible to remove the signature&lt;/li&gt;&lt;li&gt;Sign the SAML Response with own certificate&lt;/li&gt;&lt;li&gt;Check the signature algorithm in use&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-524" name="Clear caches of sensitive data" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications storing or caching data locally are at risk of attack and compromise of that data. Local temporary storage, thumbnail images, and configuration files often contain excerpts of sensitive information that may be left on the device during or after the application is used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure all temporary files, caches, and storage are purged after use and when the application is closed.&lt;/li&gt;&lt;li&gt;Do not allow the application to cache sensitive information outside of the OS provided secure stores.&lt;/li&gt;&lt;li&gt;Use OS controls to restrict thumbnails of the application in cases where sensitive information is displayed.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check the application for the use of caching.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify they are periodically emptied.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:49.408">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-SSO" name="Consider using Single Sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Single Sign-on (SSO) occurs when a user logs in to one application and is then signed in to other applications automatically, regardless of the platform, technology, or domain the user is using. The user signs in only one time, hence the name of the feature (Single Sign-on).&lt;/p&gt;&lt;p&gt;SSO provides a seamless experience for users when using your applications and services. Instead of having to remember separate sets of credentials for each application or service, users can simply log in once and access your full suite of applications.&lt;/p&gt;&lt;p&gt;Whenever users go to a domain that requires authentication, they are redirected to the authentication domain where they may be asked to log in. If the user is already logged in at the authentication domain, they can be immediately redirected to the original domain without signing in again.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Single Sign-On" url="https://auth0.com/docs/authenticate/single-sign-on"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any chance to connect to a SSO from your application&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When authentication is performed solely on the client-side, the user's credentials (e.g., username and password) are sent to the server for verification. However, an attacker can intercept and modify these credentials before they are sent to the server, allowing them to gain unauthorized access to the application.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Furthermore, client-side authentication does not provide any protection against attacks that target the server-side of the application. For example, an attacker could exploit a vulnerability in the server-side code to gain access to sensitive data or functionality without needing to authenticate at all.&lt;/p&gt;&lt;p&gt;All data on the client-side must be considered tainted. As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:49.165">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.143">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.142">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.964">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.963">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-FORCE-LOGOUT" name="Force logout if account permissions have been revoked" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Active sessions could be used by a malicious actor even after the account has been removed or blocked from the system. This could open the door to MitM attacks and session hijacking attacks while the application connects to the IdP to confirm that the session has no more rights to operate.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Man-in-the-middle Attack" url="https://owasp.org/www-community/attacks/Manipulator-in-the-middle_attack"/>
            <reference name="Session Hijacking Attack" url="https://owasp.org/www-community/attacks/Session_hijacking_attack"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check periodically the session status with the SSO/IdP and force the log off process in case the active account was blocked/deleted.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-session-generation-and-expiration" name="Implement a secure Session Generation and Expiration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID exchange mechanism based on cookies provides multiple security features in the form of Session Generation and Expiration which is tracked in a session. This session is typically stored on the server for traditional web based session management. A session identifier is then given to the user so they can identify which server-side session contains the correct user data. The client only needs to maintain this session identifier, which also keeps sensitive server-side session data off of the client.&lt;/p&gt;&lt;p&gt;Here are a few controls to consider when building or implementing session management solutions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that the session id is long, unique and random. The session ID length must be at least 128 bits (16 bytes)&lt;/li&gt;&lt;li&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks such as when an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good PRNG (Pseudo Random Number Generator) must be used. The session ID value must provide at least 64 bits of entropy (if a good PRNG is used, this value is estimated to be half the length of the session ID).&lt;/li&gt;&lt;li&gt;The application should generate a new session or at least rotate the session id during authentication and re-authentication.&lt;/li&gt;&lt;li&gt;The application should not treat OAuth and refresh tokens as their own session identifiers. Moreover, it should allow users to terminate trust relationships with linked applications.&lt;/li&gt;&lt;li&gt;The CSPs (Credential Service Provider) should re-authenticate the subscriber if it has not been authenticated since a given inactivity period. CSPs should inform the RP (Relying Parties) the last authentication time, to know if re-authentication is needed.&lt;/li&gt;&lt;li&gt;When a user chooses to log out (or otherwise has their session terminated), the user session must be terminated on the server-side, not solely at the client-side (for example by deleting or reissuing a session ID token/cookie).&lt;ul&gt;&lt;li&gt;Revoke user sessions on the server-side.&lt;/li&gt;&lt;li&gt;Redirect users to the login page, or provide a login prompt.&lt;/li&gt;&lt;li&gt;Where possible, ensure the session is not reused by the application server.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should implement an idle timeout after a period of inactivity and an absolute maximum lifetime for each session, after which users must re-authenticate. If the application has implemented a functionality to be always logged in, the application must force users to re-authenticate for more sensitive actions.&lt;/li&gt;&lt;li&gt;The length of the timeouts should be inversely proportional with the value of the data protected.&lt;ul&gt;&lt;li&gt;30 days&lt;/li&gt;&lt;li&gt;12 hours or 30 minutes of inactivity, 2FA optional&lt;/li&gt;&lt;li&gt;12 hours or 15 minutes of inactivity, with 2FA&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp Cheatsheet: Session Management" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="7.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2.1" supportedStandardRef="nist-800-63"/>
            <standard ref="AC-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check that sessions are renewed following the steps below:&lt;ul&gt;&lt;li&gt;Log in to the application.&lt;/li&gt;&lt;li&gt;Open another browser and go to the login page.&lt;/li&gt;&lt;li&gt;Log in to the application for the second time.&lt;/li&gt;&lt;li&gt;Check that the old session and session id are removed.&lt;/li&gt;&lt;li&gt;Check that a new session is created with new session id.&lt;/li&gt;&lt;li&gt;Check that the old and new session ids are different.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that sessions tokens are generated from a source with sufficient entropy and they are not predictable.&lt;/li&gt;&lt;li&gt;Check that the refresh tokens and OAuth sessions with linked applications have not been terminated by users.&lt;/li&gt;&lt;li&gt;Check the CSPs force the RP to re-authenticate after a certain period of inactivity.&lt;/li&gt;&lt;li&gt;Check that the logout and expiration invalidate the session token, following the steps below:&lt;ul&gt;&lt;li&gt;Open a browser.&lt;/li&gt;&lt;li&gt;Authenticate as a user A.&lt;/li&gt;&lt;li&gt;Get the Session ID and note it.&lt;/li&gt;&lt;li&gt;Logout of the service.&lt;/li&gt;&lt;li&gt;Set up the noted Session ID.&lt;/li&gt;&lt;li&gt;Try to access an authenticated section of the service and you should not be able to do it as user A.&lt;/li&gt;&lt;li&gt;To edit the cookies you can either use a proxy (i.e. OWASP ZAP, Burp, Fiddler, etc.) or a browser extension which allows you to tamper the cookies (i.e. Tamper Data, Cookie Manager, etc.).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check that the session expires after a certain period of inactivity following the steps below:&lt;ul&gt;&lt;li&gt;Verify the expected inactive timeout.&lt;/li&gt;&lt;li&gt;Check 'normal' use through a browser:&lt;ul&gt;&lt;li&gt;Go to the authentication feature of the component.&lt;/li&gt;&lt;li&gt;Authenticate as a user.&lt;/li&gt;&lt;li&gt;Leave the session open for a given time (check the expiration time that has been agreed to be implemented).&lt;/li&gt;&lt;li&gt;Revisit an authenticated page and determine if the session has expired (e.g. the session is no longer authenticated).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check the control is enforced on the server side and not using code in the browser:&lt;ul&gt;&lt;li&gt;Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and determine which cookies or other tokens are used to maintain session state. Alternatively, capture an authenticated application request for replay.&lt;/li&gt;&lt;li&gt;Store and replay the request after the timeout period to see if the application responds with authenticated data.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Review application operation and determine if any behavior artificially holds the session open, for example, heartbeat requests or calls to update data feeds sent from the client to the server are sometimes mistakenly interpreted as user activity, holding the session open.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.147">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-THREAD-CONCURRENCY" name="Implement threading, concurrency and asynchronicity" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to make your application more responsive to a user and maximize the performance of your user's computer, we have different coding techniques. Not so long ago, apps got faster simply by buying a newer PC or server and then that trend has reversed. Users still want responsive UI and business owners want servers that scale with their business. The transition to mobile and cloud and an internet-connected population of &amp;gt;3B users has resulted in a new set of software patterns.&lt;/p&gt;&lt;p&gt;Using multiple threads of execution is one of the most powerful ways to keep your application responsive to the user and at the same time make use of the processor in between or even during user events.&lt;/p&gt;&lt;p&gt;We use concurrency to take advantage of the hardware, so you can parallelize your code to distribute work across multiple processors.&lt;/p&gt;&lt;p&gt;Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Parallel Processing, Concurrency, and Async Programming in .NET" url="https://docs.microsoft.com/en-us/dotnet/standard/parallel-processing-and-concurrency"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for bottlenecks in the workflow of the application that may cause a denial of service attack if exploited such as a misconfigured file reader that blocks the main thread if more than one file is uploaded to the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ACCOUNT-LOCKDOWN" name="Instead of completely locking out an account, place it in a lockdown mode with limited capabilities" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Depending on how critical the application is, accounts can be entirely locked out or just flagged to have most of their permissions removed. This is useful to ensure that the user experience remains good while at the same time protect the system of potential attacks due to an account misuse.&lt;/p&gt;&lt;p&gt;Developers should check that this lockdown mode doesn't reveal any potential information that could be relevant to an attacker as well as the actions that the user can do. Developers must provide a process to recover the account to its normal behavior.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Attempt to login several times with a wrong password&lt;/li&gt;&lt;li&gt;Login with the right password and check if the behavior is the same with and without having failed the login attempts.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-TOKEN-TIMEOUT" name="Invalidate a session after a predefined idle time has passed" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to keep the authenticated state and track the users progress, applications provide users with a session identifier or token which binds the user authentication credentials to the user HTTP traffic and the appropriate access controls enforced by the web application.&lt;/p&gt;&lt;p&gt;It is mandatory to set expiration timeouts for every session, establishing the amount of time a session will remain active. Insufficient session expiration by the web application increases the exposure of other session-based attacks, as for the attacker to be able to reuse a valid session ID and hijack the associated session.&lt;/p&gt;&lt;p&gt;The session expiration timeout values must be set accordingly with the purpose and nature of the web application, and balance security and usability. There are two automatic session expiration, iddle timeout and absolute timeout. Both values are highly dependent on how critical the web application and its data are. Common idle timeouts ranges are 2-5 minutes for high-value applications and 15-30 minutes for low risk applications. Absolute timeouts depend on how long a user usually uses the application. If the application is intended to be used by an office worker for a full day, an appropriate absolute timeout range could be between 4 and 8 hours.&lt;/p&gt;&lt;p&gt;When a session expires, the web application must take active actions to invalidate the session on both sides, client and server. The latter is the most relevant and mandatory from a security perspective.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Set session timeout to the minimal value possible depending on the context of the application.&lt;/li&gt;&lt;li&gt;Avoid "infinite" session timeout.&lt;/li&gt;&lt;li&gt;Prefer declarative definition of the session timeout in order to apply a global timeout for all application sessions.&lt;/li&gt;&lt;li&gt;Trace session creation/destruction in order to analyse the creation trend and try to detect a normal number of session creations (application profiling phase in a attack).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-BRUTE-FORCE" name="Prevent brute force attacks" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement appropriate protection to prevent users from brute-forcing token generation and token checking with mechanisms such as rate limiting or CAPTCHA. And remember that OTP length must be at least 6 characters long and a combination of different characters (not only numbers, not only letters, ...).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Protect Against Automated Attacks" url="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any captcha enabled and investigate if making continuous requests with an automated tool like Burp it is still accepting the request and generating or checking OTPs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:49.283">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-INVALID" name="Prevent old or used OTPs from being reused by invalidating them" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;One-time passwords (OTP) are secrets used during operations that need added security or as part of user enrollment processes. Despite their short lifespan, only one OTP should be valid at any given time, and therefore, all previous OTPs should be invalidated whenever a new one is generated or after the OTP has expired.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Invalidate Previous OTPs" url="https://docs.fluidattacks.com/criteria/requirements/347"/>
          </references>
          <standards>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Request an OTP and try to use it a couple of times. Verify that the OTP cannot be used twice or more.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:49.284">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" name="Prevent Simultaneous Logins" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It's possible that the application needs or wants to have simultaneous session, in this case, please control the number of the total active session and limit it.&lt;/p&gt;&lt;p&gt;If the application does not want to allow simultaneous session logons, it must take effective actions after each new authentication event, implicitly terminating the previously available session, or asking the user (through the old, new or both sessions) about the session that must remain active.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Open different browsers, or a "normal" tab and an "anonymous" tab, and check the following points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Have you received some notification in some tab?&lt;/li&gt;&lt;li&gt;Was it possible to log in on the new login attempt? if the answer is yes, then has the previously open session been closed?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the first session has been closed, it is recommended to check that it has been carried out correctly. To do this, use a proxy in the process, and forward requests prior to logout and check the response.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SESSION-ID-ON-PARAMETER" name="Prevent the attacker from making the user use his session by accepting session IDs only from cookies, not from GET or POST parameters" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The preferred session ID exchange mechanism should allow defining advanced token properties, such as the token expiration date and time, or granular usage constraints. This is one of the reasons why cookies (RFCs 2109 &amp;amp; 2965 &amp;amp; 6265) are one of the most extensively used session ID exchange mechanisms, offering advanced capabilities not available in other methods.&lt;/p&gt;&lt;p&gt;The usage of specific session ID exchange mechanisms, such as those where the ID is included in the URL, might disclose the session ID (in web links and logs, web browser history and bookmarks, the Referer header or search engines), as well as facilitate other attacks, such as the manipulation of the ID or session fixation attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review the code and check where the session ID is set.&lt;/li&gt;&lt;li&gt;Functional test, review the traffic (requests and responses), and verify thtat the session ID only appears in the cookie.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" name="Send a message to the user each time the system detects that the user is logging in from a new device or IP" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Aside from the IP address, there are a number of different factors that can be used to attempt to fingerprint a device. Some of these can be obtained passively by the server from the HTTP headers (particularly the "User-Agent" header), including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Operating system&lt;/li&gt;&lt;li&gt;Browser&lt;/li&gt;&lt;li&gt;Language&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using JavaScript it is possible to access far more information, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Screen resolution&lt;/li&gt;&lt;li&gt;Installed fonts&lt;/li&gt;&lt;li&gt;Installed browser plugins&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using these various attributes, it is possible to create a fingerprint of the device. This fingerprint can then be matched against any browser attempting to login to the account, and if it doesn't match then the user can be prompted for additional authentication. Many users will have multiple devices or browsers that they use, so it is not practical to block attempts that do not match the existing fingerprints.&lt;/p&gt;&lt;p&gt;To take in mind: data submitted from client can be spoofed by an attacker.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Credential Stuffing Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use the application and try to log in from different devices. Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Does the notification arrive?&lt;/li&gt;&lt;li&gt;Are the user's trusted devices saved in server (DB)?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-525-CACHING" name="Set Cache-Control headers on sensitive and authenticated content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Browsers, servers, and upstream/intermediate devices may cache (temporarily store) data sent in
                        HTTP sessions for performance reasons. The protocol allows for a number of HTTP headers and
                        directives to control what data may be cached, where, and for how long. It is important to specify
                        cache-controls to prevent the exposure of sensitive data through the inappropriate caching
                        of authenticated and otherwise restricted access data, either in the users' browser or other
                        devices.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Configure the server or application to set cache-control headers on sensitive content.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The following headers are recommended:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;
                        &lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;
                        &lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;
                        &lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;
                        &lt;li&gt;Pragma: no-cache&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
          </references>
          <standards>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Review the HTTP Server responses to ensure appropriate cache directives are returned for all sensitive and authenticated content.&lt;/li&gt;&lt;li&gt;Using a browser:&lt;/li&gt;&lt;li&gt;Open the Web Developer Console.&lt;ul&gt;&lt;li&gt;Make requests to the different component end-points.&lt;/li&gt;&lt;li&gt;Verify the cache controls returned as part of these responses.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite):&lt;ul&gt;&lt;li&gt;Browse the site through the proxy.&lt;/li&gt;&lt;li&gt;Review server responses and/or use automated scanning to analyze cache headers.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The following is an example of what should be set to prevent a disclosure of sensitive data:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;&lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;&lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;&lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;&lt;li&gt;Pragma: no-cache&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:49.409">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.735">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-LOGOUT" name="The logout function should be prominently visible to the user" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Developers must create a logout functionality that is clearly visible for the user when navigating the application.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if the logout functionality is accessible and how hard it is to disconnect from the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.144">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SIGN-REQUESTS" name="Use of digital signatures to make it easier for the receiver to authenticate if the sender is really the person they think they are" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Making use of digital signatures on exchanged messages will make it more difficult for man-in-the-middle attacks to occur, so add a digital signature to your important messages if you want to verify the sender identity.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Top Ten Proactive Controls 2018 - C6: Implement Digital Identity" url="https://owasp.org/www-project-proactive-controls/v3/en/c6-digital-identity"/>
            <reference name="RFC7515" url="https://tools.ietf.org/html/rfc7515"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application and configuration&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verify if signature is being used.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ONE-TIME-PASSWORD" name="Use one-time passwords" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use One Time Password (TOTP) codes. This can be achieved with:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Hardware&lt;/li&gt;&lt;li&gt;Software (cheaper option).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Software option would typically involve the user installing a TOTP application on their mobile phone, and then scanning a QR code provided by the web application which provides the initial seed. The authenticator app then generates a six digit number every 30 or 60 seconds.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Multi-Factor Authentication Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Multifactor_Authentication_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Try logging into the application several times:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Do you use the same password all the time?&lt;/li&gt;&lt;li&gt;Or do you use a different password each time?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should be used in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.964">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-RANDOM-SESSION-KEYS" name="Use random-session session keys, which are time-specific and will change with time making it difficult for an attacker to fool the receiver with an old message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Cryptographically Secure Pseudorandom Number Generator must be used.&lt;/p&gt;&lt;p&gt;Additionally, a random session ID is not enough; it must also be unique to avoid duplicated IDs. A random session ID must not already exist in the current session ID space.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Log in and log out, while saving the session IDs and check:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The session id is different in every log in to the application?&lt;/li&gt;&lt;li&gt;Is it predictable? For example, one session ID is 123ABC&lt;strong&gt;D&lt;/strong&gt; and the next 123ABC&lt;strong&gt;E&lt;/strong&gt; (the example contains a short key to understanding).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To perform these checks it is possible to use DevTools from the browser or an easier way using a proxy to logall requests.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.145">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="RFC6819-5.1.5.3" name="Use short expiration time" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>A short expiration time for tokens is a means of protection against
   the following threats:&amp;nbsp;  
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;replay&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;token leak (a short expiration time will reduce impact)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;online guessing (a short expiration time will reduce the
      likelihood of success)&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
Note: Short token duration requires more precise clock synchronization between the authorization server and resource server. Furthermore, shorter duration may require more token refreshes (access token) or repeated end-user authorization processes (authorization "code" and refresh token).</desc>
          <implementations/>
          <references>
            <reference name="RFC6819" url="https://tools.ietf.org/html/rfc6819"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the token expiration time in the authorization server policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.146">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.964">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://pwning.owasp-juice.shop/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.964">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SAML-2.0-SC-C-6.4.3" name="Verify SAML assertion signatures and authenticate the issuer" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The browser/POST profile requires the SAML response carrying SAML assertions to be signed, thus providing both message integrity and authentication. The Service Provider site MUST verify the signature and authenticate the issuer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   The following recommendations were proposed in response: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Always perform schema validation on the XML document prior to using it for any security--related purposes:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Always use local, trusted copies of schemas for validation.&lt;/li&gt; 
    &lt;li&gt;Never allow automatic download of schemas from third party locations.&lt;/li&gt; 
    &lt;li&gt;If possible, inspect schemas and perform schema hardening, to disable possible wildcard -type or relaxed processing statements.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Securely validate the digital signature:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If you expect only one signing key, use StaticKeySelector. Obtain the key directly from the identity provider, store it in local file and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect more than one signing key, use X509KeySelector (the JKS variant). Obtain these keys directly form the identity providers, store them in local JKS and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect a heterogeneous signed documents (many certificates from many identity providers, multi-level validation paths), implement full trust establishment model based on PKIX and trusted root certificates.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Avoid signature-wrapping attacks.&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Never use getElementsByTagName to select security related elements in an XML document without prior validation.&lt;/li&gt; 
    &lt;li&gt;Always use absolute XPath expressions to select elements, unless a hardened schema is used for validation.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Assertions and Protocols for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf"/>
            <reference name="OWASP SAML Cheat Sheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/SAML_Security_Cheat_Sheet.md"/>
            <reference name="Profiles for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf"/>
            <reference name="Security and Privacy Considerations for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-sec-consider-2.0-os.pdf"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:48.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-593-SSO-SYNC" issueId="" issueLink="" name="Attackers are able to keep their application session active after the SSO/IdP blocks/deletes their account" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If a user successfully logs in via SSO and falls prey to a phishing attack, the attacker gets access to all the endpoints of the external applications within the cloud that the user is provisioned for.&lt;/p&gt;&lt;p&gt;If the attack is detected, the user account can be disabled. However, the user may still remain logged in. This could allow the attacker to stay logged on with access to the linked application.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-FORCE-LOGOUT" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130-DOS-AUTH" issueId="" issueLink="" name="Attackers can execute Denial of Service attacks to prevent valid users from accessing the system" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker leverages the security functionality of the system aimed at thwarting potential attacks (like automatic block of accounts after a number of failed login attempts) to launch a denial of service attack against a legitimate system user.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="25"/>
                <countermeasure ref="C-THREAD-CONCURRENCY" mitigation="25"/>
                <countermeasure ref="network-rate-limit" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-180-SAML-SPOOFING" issueId="" issueLink="" name="Attackers can modify the SAML response from the Identify Provider and change assertions' values to impersonate valid users in the Service Provider" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Sometimes not only does the Service Provider fail to check the validity of the signature in the SAML response, but it doesn't even verify its mere presence. The equivalent of a Service Provider accepting unsigned SAML assertions is accepting a username without checking the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SAML-VERIFY-IDP-X509" mitigation="50"/>
                <countermeasure ref="SAML-2.0-SC-C-6.4.3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-115-LOGIN-BYPASS" issueId="" issueLink="" name="Attackers can bypass the login system using a less hardened alternative for accessing the system" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The basic way to take advantage of the application's access control flaws is called "forced browsing".&lt;/p&gt;&lt;p&gt;Let's say that the website http://mysite.com It is a website that supports the authenticity of the user and the administrator will be taken to the appropriate webpage after validation. But if an attacker knows the URL, he or she can enter it in their browser, for example&lt;/p&gt;&lt;p&gt;http://mysite.com/admin_page or http://mysite.com/user_page&lt;/p&gt;&lt;p&gt;If it is a secure website, it will be redirected to the login page. But if those pages are allowed to be accessed, it will be incomplete access control and will cause damage.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="20"/>
                <countermeasure ref="C-AUTHZ-AFTER-AUTHN" mitigation="20"/>
                <countermeasure ref="CWE-603" mitigation="20"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-49-BRUTE-FORCE-AUTH" issueId="" issueLink="" name="Attackers can brute force the authentication system to find valid credentials" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Hackers launch brute-force attacks using widely available tools that utilize wordlists and smart rulesets to intelligently and automatically guess user passwords. Although such attacks are easy to detect, they are not so easy to prevent.&lt;/p&gt;&lt;p&gt;For example, many HTTP brute-force tools can relay requests through a list of open proxy servers. Since each request appears to come from a different IP address, you cannot block these attacks simply by blocking the IP address. To further complicate things, some tools try a different username and password on each attempt, so you cannot lock out a single account for failed password attempts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="16"/>
                <countermeasure ref="C-ACCOUNT-LOCKDOWN" mitigation="16"/>
                <countermeasure ref="CWE-654" mitigation="16"/>
                <countermeasure ref="network-rate-limit" mitigation="20"/>
                <countermeasure ref="require-use-strong-passwords" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-60-MALICIOUS-REPLY" issueId="" issueLink="" name="Attackers use replay attacks to execute malicious actions" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;A replay attack is a kind of man-in-the-middle attack in which an attacker sniffs messages being sent on a channel to intercept them and resend them under the cloak of authentic messages. What makes the replay attack particularly harmful is that the attacker does not even need to decrypt the message they resend but can still fool the receiver into thinking that the received message is legitimate.&lt;/p&gt;&lt;p&gt;One example of replay attack is called pass the hash. This is referring to the hash value that is associated with a password that is sent across the network during the authentication process. If the attacker can gain access to the hash, they may be able to replay that hash back to the server and pretend that they are the original workstation.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ONE-TIME-PASSWORD" mitigation="20"/>
                <countermeasure ref="C-RANDOM-SESSION-KEYS" mitigation="20"/>
                <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" mitigation="20"/>
                <countermeasure ref="C-SIGN-REQUESTS" mitigation="20"/>
                <countermeasure ref="RFC6819-5.1.5.3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-600-CRED-STUFFING" issueId="" issueLink="" name="Attackers take control of another user's account without being detected if they get to know the password for that account" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Credential stuffing is the automated injection of stolen username and password pairs ("credentials") in to website login forms, in order to fraudulently gain access to user accounts.&lt;/p&gt;&lt;p&gt;Since many users will re-use the same password and username/email, when those credentials are exposed (by a database breach or phishing attack, for example) submitting those sets of stolen credentials into dozens or hundreds of other sites can allow an attacker to compromise those accounts too.&lt;/p&gt;&lt;p&gt;Credential Stuffing is a subset of the brute force attack category. Brute forcing will attempt to try multiple passwords against one or multiple accounts; guessing a password, in other words. Credential Stuffing typically refers to specifically using known (breached) username / password pairs against other websites.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-SSO" mitigation="20"/>
                <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" mitigation="20"/>
                <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" mitigation="20"/>
                <countermeasure ref="CWE-654" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-600-SESSION-REUSE" issueId="" issueLink="" name="An attacker can reuse old session credentials or session IDs for authorization" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;At his town's public library, John logs onto his bank's Web site to transfer money from his checking account to his savings account. Once John completes his transaction he gets distracted, forgets to sign off from his bank's Web site, and walks away from the computer.&amp;nbsp;&lt;/p&gt;&lt;p&gt;A second user, Malcolm, now uses the same computer as John. Instead of using the browser to navigate to a new site, Malcolm simply explores the browser history to return to the previous URL where John's account information was displayed.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Because John's session is still active Malcolm can now transfer money, open new accounts, order additional credit cards, or perform any other actions available to John via the bank's Web site.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-LOGOUT" mitigation="50"/>
                <countermeasure ref="C-TOKEN-TIMEOUT" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-61-SESSION-FIXATION" issueId="" issueLink="" name="The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The attack consists of obtaining a valid session ID (e.g. by connecting to the application), inducing a user to authenticate himself with that session ID, and then hijacking the user-validated session by the knowledge of the used session ID. The attacker has to provide a legitimate Web application session ID and try to make the victim's browser use it. There are several techniques to execute the attack; it depends on how the Web application deals with session tokens. Below are some of the most common techniques:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Session token in the URL argument.&lt;/li&gt;&lt;li&gt;Session token in a hidden form field.&lt;/li&gt;&lt;li&gt;Session ID in a cookie.&lt;/li&gt;&lt;li&gt;Client-side script.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SESSION-ID-ON-PARAMETER" mitigation="50"/>
                <countermeasure ref="secure-session-generation-and-expiration" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-CRACK-PASSWORD-HASH" issueId="" issueLink="" name="A malicious user has access to the users' password hashes and tries to crack the passwords" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Although it is not possible to "decrypt" password hashes to obtain the original passwords, it is possible to "crack" the hashes in some circumstances.&lt;/p&gt;&lt;p&gt;The basic steps are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Select a password you think the victim has chosen (e.g.password1!).&lt;/li&gt;&lt;li&gt;Calculate the hash.&lt;/li&gt;&lt;li&gt;Compare the hash you calculated with the hash of the victim. If they match, you have correctly "cracked" the hash and now know the plaintext value of their password.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This process is repeated for a large number of potential passwords. Different methods can be used to select candidate passwords, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Lists of passwords obtained from other compromised sites.&lt;/li&gt;&lt;li&gt;Brute force (trying every possible candidate).&lt;/li&gt;&lt;li&gt;Dictionaries or wordlists of common passwords&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" issueId="" issueLink="" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-SENSITIVE-DATA-URL" issueId="" issueLink="" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Regardless of using encryption, the following URL will expose information in the locations detailed below:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;https://vulnerablehost.com/authuser?user=bob&amp;amp;authz_token=1234&amp;amp;expire=1500000000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The parameter values for user, authz_token, and expire will be exposed in the following locations when using HTTP or HTTPS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Referer Header&lt;/li&gt;&lt;li&gt;Web Logs&lt;/li&gt;&lt;li&gt;Shared Systems&lt;/li&gt;&lt;li&gt;Browser History&lt;/li&gt;&lt;li&gt;Browser Cache&lt;/li&gt;&lt;li&gt;Shoulder Surfing&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-OTP-GENERATION-ABUSE" issueId="" issueLink="" name="An attacker can send a lot of OTP requests to increase the likelihood of matching one of the generated codes in a later brute force attack" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;For example, in a password reset functionality based on the delivery of a code by email or SMS to the user, an attacker can send a lot of requests to it, generating a lot of valid codes with the goal of increasing the chances of matching the code in a brute force attack. The attack takes place in the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Automation of requests to the password reset functionality (new codes don't invalidate older ones).&lt;/li&gt;&lt;li&gt;Creation of a custom dictionary to try to match valid codes (e.g.: if a code has only 5 numbers, the dictionary is as follows: [00000, 00001,..., 99999]).&lt;/li&gt;&lt;li&gt;Brute force attack on the functionality to check the OTP and find a match.&lt;/li&gt;&lt;li&gt;Once the attacker knows a valid code he/she can proceed with the password change.&lt;/li&gt;&lt;/ol&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-OTP-BRUTE-FORCE" mitigation="50"/>
                <countermeasure ref="C-OTP-INVALID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-CACHED-DATA" issueId="" issueLink="" name="Sensitive data is compromised by inspecting cached data in the client side" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker can also use a decompiler to decompile a downloaded Java applet in order to look for information such as hardcoded IP addresses, file paths, passwords or other such contents.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-524" mitigation="50"/>
                <countermeasure ref="CWE-525-CACHING" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="044fb2d6-a7f5-4128-82d2-d4a4c12cde19" diagramComponentId="3efa5f53-afc9-40e0-8eb0-e9e41346df73" ref="3593e3d1-3cad-4317-8ad7-9895bc5045bf" name="Login &amp; Password" desc="" library="IR-Functional-Components" parentComponentRef="aa3c02da-c572-437f-b5a6-2b8c6aaeabf5" componentDefinitionRef="CD-LOGIN" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" name="Attach timestamps or sequence numbers to each sent message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To avoid replay attacks, a type of man in the middle attack, it is recommended to add a timestamp or sequence numbers in the exchanged messages, this will allow the receiver to discard messages with a duplicated sequence number or timestamp.&lt;/p&gt;&lt;p&gt;An example of sequence number in its messages is the TCP protocol with its ACK.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Transaction Authorization Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Transaction_Authorization_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application.&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verifies if there is a timestamp or sequence number and that no duplicates are allowed.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-654" name="Authenticate users (multi - or two-factor - authentication [2FA])" issueId="" issueLink="" platform="" cost="1" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should ensure users have undergone an Identification and Verification (ID&amp;amp;V) process before allowing access to secret, sensitive or otherwise restricted data. For more sensitive applications hosting data or functionality requiring greater assurance over the identification of users, a multi - or two-factor - authentication process is recommended. Together with asserting their identity and a password/phrase/PIN (something you know), such systems require additional factors, such as biometric validation (something you are), user-initiated action such as a button press on a FIDO hardware key or a token (something you have).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement multi-factor authentication for applications providing access to sensitive data or functionality, and for highly privileged user access (e.g. administrators).&lt;/li&gt;&lt;li&gt;This should leverage something such as a soft or hard-token verification in addition to the secret password/pass-phrase for example.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
          </references>
          <standards>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.5" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.9" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check for authentication functions of the component.&lt;/li&gt;&lt;li&gt;Verify at least a combination of the following factors is used within the authentication process.&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Something that you are: mainly biometric characteristics of yourself such as fingerprint, facial recognition, iris recognition, etc.)&lt;/li&gt;&lt;li&gt;Something that you know: a PIN, password, pass phrase, etc.&lt;/li&gt;&lt;li&gt;Something that you have: a hardware token, a card, a dongle, a mobile phone, etc.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-AUTHZ-AFTER-AUTHN" name="Authorize after you authenticate" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Authorization should be conducted as an explicit check, and as necessary even after an initial authentication has been completed. Authorization depends not only on the privileges associated with an authenticated user, but also on the context of the request. The time of the request and the location of the requesting user may both need to be taken into account.&lt;/p&gt;&lt;p&gt;Sometimes a user's authorization for a system or service needs to be revoked, for example, when an employee leaves a company. If the authorization mechanism fails to allow for such revocation, the system is vulnerable to abuse by authenticated users exercising out-of-date authorizations.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authorize After You Authenticate" url="https://cybersecurity.ieee.org/blog/2015/11/13/authorize-after-you-authenticate/"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate that no authorization process is conducted before an authentication process has previously finished.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SAML-VERIFY-IDP-X509" name="Check if the X509Certificate entity is really the correct certificate for your Identity Provider" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is necessary to ensure the identity of the supplier by verifying the certificate of the messages, to ensure that it is the correct one.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="SAML Raider - SAML2 Burp Extension" url="https://github.com/portswigger/saml-raider"/>
            <reference name="SAML Security Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/SAML_Security_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check if it is possible to remove the signature&lt;/li&gt;&lt;li&gt;Sign the SAML Response with own certificate&lt;/li&gt;&lt;li&gt;Check the signature algorithm in use&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-524" name="Clear caches of sensitive data" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications storing or caching data locally are at risk of attack and compromise of that data. Local temporary storage, thumbnail images, and configuration files often contain excerpts of sensitive information that may be left on the device during or after the application is used.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure all temporary files, caches, and storage are purged after use and when the application is closed.&lt;/li&gt;&lt;li&gt;Do not allow the application to cache sensitive information outside of the OS provided secure stores.&lt;/li&gt;&lt;li&gt;Use OS controls to restrict thumbnails of the application in cases where sensitive information is displayed.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check the application for the use of caching.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify they are periodically emptied.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.218">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-SSO" name="Consider using Single Sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Single Sign-on (SSO) occurs when a user logs in to one application and is then signed in to other applications automatically, regardless of the platform, technology, or domain the user is using. The user signs in only one time, hence the name of the feature (Single Sign-on).&lt;/p&gt;&lt;p&gt;SSO provides a seamless experience for users when using your applications and services. Instead of having to remember separate sets of credentials for each application or service, users can simply log in once and access your full suite of applications.&lt;/p&gt;&lt;p&gt;Whenever users go to a domain that requires authentication, they are redirected to the authentication domain where they may be asked to log in. If the user is already logged in at the authentication domain, they can be immediately redirected to the original domain without signing in again.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Single Sign-On" url="https://auth0.com/docs/authenticate/single-sign-on"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any chance to connect to a SSO from your application&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-603" name="Deploy a robust server-side validation and authentication system" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When authentication is performed solely on the client-side, the user's credentials (e.g., username and password) are sent to the server for verification. However, an attacker can intercept and modify these credentials before they are sent to the server, allowing them to gain unauthorized access to the application.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Furthermore, client-side authentication does not provide any protection against attacks that target the server-side of the application. For example, an attacker could exploit a vulnerability in the server-side code to gain access to sensitive data or functionality without needing to authenticate at all.&lt;/p&gt;&lt;p&gt;All data on the client-side must be considered tainted. As such, decisions on authentication (or Identification and Verification - ID&amp;amp;V) must be made or validated on the server-side to prevent their subversion.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure credentials are passed securely from client to server.&lt;/li&gt;&lt;li&gt;The server should compare the credentials with those stored on the server-side (e.g. the hashed password compared against those stored for the claimed identity).&lt;/li&gt;&lt;li&gt;Implement controls to mitigate brute-force attacks; for example through rate-limiting, account lockouts, or escalating timeouts.&lt;/li&gt;&lt;li&gt;Once authenticated, a non-predictable and cryptographically secure token should be passed securely to the client-side to validate further interaction with the server.&lt;/li&gt;&lt;li&gt;Messages returned to the user during authentication, in particular when the process fails, should not reveal to the user whether the username was valid. Returning generic errors prevents an attacker enumerating valid account IDs for subsequent attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(d)" supportedStandardRef="hipaa-required"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify which functions the service provides which are authenticated or performing a privileged action.&lt;/li&gt;&lt;li&gt;Try to access them without providing any type of authentication.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A clear example of what you should look for would be an API endpoint which allows a client to update a resource, you should ensure this call checks the authentication on the server side (by checking the session having validated the authentication credentials previously).&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.2" supportedStandardRef="swift-cscf"/>
            <standard ref="2.11A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.9" supportedStandardRef="swift-cscf"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.652">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.712">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" name="Ensure that access control mechanisms are centralized" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access control, authentication and authorization procedures should be centralized, and all roles, permissions, groups and users shall be controlled - or gain access - through this mechanism.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;To ensure roles, groups and permissions are assigned properly to users, we need to have centralized access control, to grant or deny access easily and securely.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that access control mechanisms are centralized.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.709">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.792">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.790">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-FORCE-LOGOUT" name="Force logout if account permissions have been revoked" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Active sessions could be used by a malicious actor even after the account has been removed or blocked from the system. This could open the door to MitM attacks and session hijacking attacks while the application connects to the IdP to confirm that the session has no more rights to operate.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Man-in-the-middle Attack" url="https://owasp.org/www-community/attacks/Manipulator-in-the-middle_attack"/>
            <reference name="Session Hijacking Attack" url="https://owasp.org/www-community/attacks/Session_hijacking_attack"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check periodically the session status with the SSO/IdP and force the log off process in case the active account was blocked/deleted.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-session-generation-and-expiration" name="Implement a secure Session Generation and Expiration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID exchange mechanism based on cookies provides multiple security features in the form of Session Generation and Expiration which is tracked in a session. This session is typically stored on the server for traditional web based session management. A session identifier is then given to the user so they can identify which server-side session contains the correct user data. The client only needs to maintain this session identifier, which also keeps sensitive server-side session data off of the client.&lt;/p&gt;&lt;p&gt;Here are a few controls to consider when building or implementing session management solutions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that the session id is long, unique and random. The session ID length must be at least 128 bits (16 bytes)&lt;/li&gt;&lt;li&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks such as when an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good PRNG (Pseudo Random Number Generator) must be used. The session ID value must provide at least 64 bits of entropy (if a good PRNG is used, this value is estimated to be half the length of the session ID).&lt;/li&gt;&lt;li&gt;The application should generate a new session or at least rotate the session id during authentication and re-authentication.&lt;/li&gt;&lt;li&gt;The application should not treat OAuth and refresh tokens as their own session identifiers. Moreover, it should allow users to terminate trust relationships with linked applications.&lt;/li&gt;&lt;li&gt;The CSPs (Credential Service Provider) should re-authenticate the subscriber if it has not been authenticated since a given inactivity period. CSPs should inform the RP (Relying Parties) the last authentication time, to know if re-authentication is needed.&lt;/li&gt;&lt;li&gt;When a user chooses to log out (or otherwise has their session terminated), the user session must be terminated on the server-side, not solely at the client-side (for example by deleting or reissuing a session ID token/cookie).&lt;ul&gt;&lt;li&gt;Revoke user sessions on the server-side.&lt;/li&gt;&lt;li&gt;Redirect users to the login page, or provide a login prompt.&lt;/li&gt;&lt;li&gt;Where possible, ensure the session is not reused by the application server.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should implement an idle timeout after a period of inactivity and an absolute maximum lifetime for each session, after which users must re-authenticate. If the application has implemented a functionality to be always logged in, the application must force users to re-authenticate for more sensitive actions.&lt;/li&gt;&lt;li&gt;The length of the timeouts should be inversely proportional with the value of the data protected.&lt;ul&gt;&lt;li&gt;30 days&lt;/li&gt;&lt;li&gt;12 hours or 30 minutes of inactivity, 2FA optional&lt;/li&gt;&lt;li&gt;12 hours or 15 minutes of inactivity, with 2FA&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp Cheatsheet: Session Management" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="3.6.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1" supportedStandardRef="nist-800-63"/>
            <standard ref="7.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7.2.1" supportedStandardRef="nist-800-63"/>
            <standard ref="AC-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check that sessions are renewed following the steps below:&lt;ul&gt;&lt;li&gt;Log in to the application.&lt;/li&gt;&lt;li&gt;Open another browser and go to the login page.&lt;/li&gt;&lt;li&gt;Log in to the application for the second time.&lt;/li&gt;&lt;li&gt;Check that the old session and session id are removed.&lt;/li&gt;&lt;li&gt;Check that a new session is created with new session id.&lt;/li&gt;&lt;li&gt;Check that the old and new session ids are different.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that sessions tokens are generated from a source with sufficient entropy and they are not predictable.&lt;/li&gt;&lt;li&gt;Check that the refresh tokens and OAuth sessions with linked applications have not been terminated by users.&lt;/li&gt;&lt;li&gt;Check the CSPs force the RP to re-authenticate after a certain period of inactivity.&lt;/li&gt;&lt;li&gt;Check that the logout and expiration invalidate the session token, following the steps below:&lt;ul&gt;&lt;li&gt;Open a browser.&lt;/li&gt;&lt;li&gt;Authenticate as a user A.&lt;/li&gt;&lt;li&gt;Get the Session ID and note it.&lt;/li&gt;&lt;li&gt;Logout of the service.&lt;/li&gt;&lt;li&gt;Set up the noted Session ID.&lt;/li&gt;&lt;li&gt;Try to access an authenticated section of the service and you should not be able to do it as user A.&lt;/li&gt;&lt;li&gt;To edit the cookies you can either use a proxy (i.e. OWASP ZAP, Burp, Fiddler, etc.) or a browser extension which allows you to tamper the cookies (i.e. Tamper Data, Cookie Manager, etc.).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check that the session expires after a certain period of inactivity following the steps below:&lt;ul&gt;&lt;li&gt;Verify the expected inactive timeout.&lt;/li&gt;&lt;li&gt;Check 'normal' use through a browser:&lt;ul&gt;&lt;li&gt;Go to the authentication feature of the component.&lt;/li&gt;&lt;li&gt;Authenticate as a user.&lt;/li&gt;&lt;li&gt;Leave the session open for a given time (check the expiration time that has been agreed to be implemented).&lt;/li&gt;&lt;li&gt;Revisit an authenticated page and determine if the session has expired (e.g. the session is no longer authenticated).&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Check the control is enforced on the server side and not using code in the browser:&lt;ul&gt;&lt;li&gt;Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and determine which cookies or other tokens are used to maintain session state. Alternatively, capture an authenticated application request for replay.&lt;/li&gt;&lt;li&gt;Store and replay the request after the timeout period to see if the application responds with authenticated data.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Review application operation and determine if any behavior artificially holds the session open, for example, heartbeat requests or calls to update data feeds sent from the client to the server are sometimes mistakenly interpreted as user activity, holding the session open.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.717">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-THREAD-CONCURRENCY" name="Implement threading, concurrency and asynchronicity" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to make your application more responsive to a user and maximize the performance of your user's computer, we have different coding techniques. Not so long ago, apps got faster simply by buying a newer PC or server and then that trend has reversed. Users still want responsive UI and business owners want servers that scale with their business. The transition to mobile and cloud and an internet-connected population of &amp;gt;3B users has resulted in a new set of software patterns.&lt;/p&gt;&lt;p&gt;Using multiple threads of execution is one of the most powerful ways to keep your application responsive to the user and at the same time make use of the processor in between or even during user events.&lt;/p&gt;&lt;p&gt;We use concurrency to take advantage of the hardware, so you can parallelize your code to distribute work across multiple processors.&lt;/p&gt;&lt;p&gt;Async programming is a key technique that makes it straightforward to handle blocking I/O and concurrent operations on multiple cores.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Parallel Processing, Concurrency, and Async Programming in .NET" url="https://docs.microsoft.com/en-us/dotnet/standard/parallel-processing-and-concurrency"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for bottlenecks in the workflow of the application that may cause a denial of service attack if exploited such as a misconfigured file reader that blocks the main thread if more than one file is uploaded to the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ACCOUNT-LOCKDOWN" name="Instead of completely locking out an account, place it in a lockdown mode with limited capabilities" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Depending on how critical the application is, accounts can be entirely locked out or just flagged to have most of their permissions removed. This is useful to ensure that the user experience remains good while at the same time protect the system of potential attacks due to an account misuse.&lt;/p&gt;&lt;p&gt;Developers should check that this lockdown mode doesn't reveal any potential information that could be relevant to an attacker as well as the actions that the user can do. Developers must provide a process to recover the account to its normal behavior.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Attempt to login several times with a wrong password&lt;/li&gt;&lt;li&gt;Login with the right password and check if the behavior is the same with and without having failed the login attempts.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.712">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-TOKEN-TIMEOUT" name="Invalidate a session after a predefined idle time has passed" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to keep the authenticated state and track the users progress, applications provide users with a session identifier or token which binds the user authentication credentials to the user HTTP traffic and the appropriate access controls enforced by the web application.&lt;/p&gt;&lt;p&gt;It is mandatory to set expiration timeouts for every session, establishing the amount of time a session will remain active. Insufficient session expiration by the web application increases the exposure of other session-based attacks, as for the attacker to be able to reuse a valid session ID and hijack the associated session.&lt;/p&gt;&lt;p&gt;The session expiration timeout values must be set accordingly with the purpose and nature of the web application, and balance security and usability. There are two automatic session expiration, iddle timeout and absolute timeout. Both values are highly dependent on how critical the web application and its data are. Common idle timeouts ranges are 2-5 minutes for high-value applications and 15-30 minutes for low risk applications. Absolute timeouts depend on how long a user usually uses the application. If the application is intended to be used by an office worker for a full day, an appropriate absolute timeout range could be between 4 and 8 hours.&lt;/p&gt;&lt;p&gt;When a session expires, the web application must take active actions to invalidate the session on both sides, client and server. The latter is the most relevant and mandatory from a security perspective.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Set session timeout to the minimal value possible depending on the context of the application.&lt;/li&gt;&lt;li&gt;Avoid "infinite" session timeout.&lt;/li&gt;&lt;li&gt;Prefer declarative definition of the session timeout in order to apply a global timeout for all application sessions.&lt;/li&gt;&lt;li&gt;Trace session creation/destruction in order to analyse the creation trend and try to detect a normal number of session creations (application profiling phase in a attack).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-BRUTE-FORCE" name="Prevent brute force attacks" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement appropriate protection to prevent users from brute-forcing token generation and token checking with mechanisms such as rate limiting or CAPTCHA. And remember that OTP length must be at least 6 characters long and a combination of different characters (not only numbers, not only letters, ...).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Protect Against Automated Attacks" url="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any captcha enabled and investigate if making continuous requests with an automated tool like Burp it is still accepting the request and generating or checking OTPs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.499">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-INVALID" name="Prevent old or used OTPs from being reused by invalidating them" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;One-time passwords (OTP) are secrets used during operations that need added security or as part of user enrollment processes. Despite their short lifespan, only one OTP should be valid at any given time, and therefore, all previous OTPs should be invalidated whenever a new one is generated or after the OTP has expired.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Invalidate Previous OTPs" url="https://docs.fluidattacks.com/criteria/requirements/347"/>
          </references>
          <standards>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Request an OTP and try to use it a couple of times. Verify that the OTP cannot be used twice or more.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.500">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" name="Prevent Simultaneous Logins" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It's possible that the application needs or wants to have simultaneous session, in this case, please control the number of the total active session and limit it.&lt;/p&gt;&lt;p&gt;If the application does not want to allow simultaneous session logons, it must take effective actions after each new authentication event, implicitly terminating the previously available session, or asking the user (through the old, new or both sessions) about the session that must remain active.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="swift-cscf"/>
            <standard ref="1.4" supportedStandardRef="swift-cscf"/>
            <standard ref="1.5" supportedStandardRef="swift-cscf"/>
            <standard ref="AC-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Open different browsers, or a "normal" tab and an "anonymous" tab, and check the following points:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Have you received some notification in some tab?&lt;/li&gt;&lt;li&gt;Was it possible to log in on the new login attempt? if the answer is yes, then has the previously open session been closed?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If the first session has been closed, it is recommended to check that it has been carried out correctly. To do this, use a proxy in the process, and forward requests prior to logout and check the response.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SESSION-ID-ON-PARAMETER" name="Prevent the attacker from making the user use his session by accepting session IDs only from cookies, not from GET or POST parameters" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The preferred session ID exchange mechanism should allow defining advanced token properties, such as the token expiration date and time, or granular usage constraints. This is one of the reasons why cookies (RFCs 2109 &amp;amp; 2965 &amp;amp; 6265) are one of the most extensively used session ID exchange mechanisms, offering advanced capabilities not available in other methods.&lt;/p&gt;&lt;p&gt;The usage of specific session ID exchange mechanisms, such as those where the ID is included in the URL, might disclose the session ID (in web links and logs, web browser history and bookmarks, the Referer header or search engines), as well as facilitate other attacks, such as the manipulation of the ID or session fixation attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review the code and check where the session ID is set.&lt;/li&gt;&lt;li&gt;Functional test, review the traffic (requests and responses), and verify thtat the session ID only appears in the cookie.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="require-use-strong-passwords" name="Require the use of strong passwords" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords used either as a sole verification credentials, or as part of a multi-factor authentication, are a key aspect of application security, and strong password selection should be encouraged and enforced. The application should allow flexibility in user password selection, and enforce minimum criteria for password quality. This should include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Minimum password length requirements, to mitigate brute-force and dictionary attacks.&lt;/li&gt; 
 &lt;li&gt;Encourage use of pass-phrases using multiple words, achieving longer passwords more resistant to attack.&lt;/li&gt; 
 &lt;li&gt;Enforce use of mixed case, numeric and/or special characters to increase complexity.&lt;/li&gt; 
 &lt;li&gt;Prevent or discourage use of dictionary words and common passwords through black-lists. For example, a set of commonly used passwords can be found on SecLists at &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&amp;nbsp;&lt;/a&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password length:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password length considers the minimum and maximum length of characters comprising the password of your users. For ease of changing this length, its implementation can be configurable possibly using a properties file or xml configuration file.&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;&lt;b&gt;Minimum length. &lt;/b&gt;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Memory secrets shall be at least 8 characters long. &lt;/li&gt; 
  &lt;li&gt;Memory secrets generated automatically shall be at least 6 numeric characters.&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Maximum length. &lt;/b&gt;People tend to forget their passwords easily. The longer the password, the more likely people are to enter them incorrectly for the system. However, long pass-phrases can be easily remembered, and should not be prevented through unnecessarily strict upper restrictions on length. &lt;/span&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Passwords with 64 characters or longer shall be permitted.&amp;nbsp;&lt;/span&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;b&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt;&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;Password Complexity:&lt;/span&gt;&lt;/p&gt;&lt;/b&gt; 
&lt;ul&gt; 
 &lt;ul&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Passwords with consecutive multiple spaces shall be coalesced and converter into only one space. After this modification, the password length shall be at least 12 characters long.&lt;/li&gt; 
 &lt;li&gt;Unicode characters shall be allowed in the password. A single Unicode code point is considered a character.&lt;/li&gt; 
 &lt;li&gt;Reject those passwords whose are commonly used and they have been already been leaked in a previous compromise. You may choose to block the top 1000 or 10000 most common passwords which meet the above length requirements and are found in compromised password lists. The following link contains the most commonly found passwords: &lt;a href="https://github.com/danielmiessler/SecLists/tree/master/Passwords"&gt;https://github.com/danielmiessler/SecLists/tree/master/Passwords&lt;/a&gt;&lt;/li&gt; 
 &lt;li&gt;Actual passwords must not be stored, to protect them against brute forcing if the database is compromised Screen reader support enabled.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Password Topologies:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Ban commonly used password topologies.&lt;/li&gt; 
 &lt;li&gt;Force multiple users to use different password topologies.&lt;/li&gt; 
 &lt;li&gt;Require a minimum topology change between old and new passwords.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span style="font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline;"&gt;&lt;b&gt;Additional Information:&lt;/b&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Make sure that every character the user types in is actually included in the password. We've seen systems that truncate the password at a length shorter than what the user provided (e.g., truncated at 15 characters when they entered 20).&lt;/li&gt; 
 &lt;li&gt;As application's require more complex password policies, they need to be very clear about what these policies are. The required policy needs to be explicitly stated on the password change page&lt;/li&gt; 
 &lt;li&gt;If the new password doesn't comply with the complexity policy, the error message should describe EVERY complexity rule that the new password does not comply with, not just the 1st rule it doesn't comply with.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;ul&gt; 
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blacklist Top Leaked Passwords" url="https://github.com/danielmiessler/SecLists/tree/master/Passwords"/>
            <reference name="NIST 800-63-B: 5.1.2.2" url="https://pages.nist.gov/800-63-3/sp800-63b.html"/>
            <reference name="OWASP Juice Shop: Broken Authentication" url="https://pwning.owasp-juice.shop/part2/broken-authentication.html"/>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="Owasp CheatSheet: Authentication" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Authentication_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.1" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.11" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.14" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.4" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt; 
 &lt;li&gt;Verify the passwords comply with the company policy for strong passwords.&lt;/li&gt; 
 &lt;li&gt;If there is no policy, check the strength against industry standards as NIST or OWASP.&lt;/li&gt; 
&lt;/ol&gt;An example of strong password policy (&amp;nbsp; 
&lt;a href="https://www.owasp.org/index.php/Authentication_Cheat_Sheet#Implement_Proper_Password_Strength_Controls"&gt;from the OWASP Authentication Cheat Sheet&lt;/a&gt;) is: Password must meet at least 3 out of the following 4 complexity rules: 
&lt;ul&gt; 
 &lt;li&gt;at least 1 uppercase character (A-Z)&lt;/li&gt; 
 &lt;li&gt;at least 1 lowercase character (a-z)&lt;/li&gt; 
 &lt;li&gt;at least 1 digit (0-9)&lt;/li&gt; 
 &lt;li&gt;at least 1 special character (punctuation). Do not forget to treat space as special characters too&lt;/li&gt; 
 &lt;li&gt;at least 10 characters&lt;/li&gt; 
 &lt;li&gt;at most 128 characters&lt;/li&gt; 
&lt;/ul&gt;not more than 2 identical characters in a row (e.g., 111 not allowed).</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" name="Send a message to the user each time the system detects that the user is logging in from a new device or IP" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Aside from the IP address, there are a number of different factors that can be used to attempt to fingerprint a device. Some of these can be obtained passively by the server from the HTTP headers (particularly the "User-Agent" header), including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Operating system&lt;/li&gt;&lt;li&gt;Browser&lt;/li&gt;&lt;li&gt;Language&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using JavaScript it is possible to access far more information, such as:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Screen resolution&lt;/li&gt;&lt;li&gt;Installed fonts&lt;/li&gt;&lt;li&gt;Installed browser plugins&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Using these various attributes, it is possible to create a fingerprint of the device. This fingerprint can then be matched against any browser attempting to login to the account, and if it doesn't match then the user can be prompted for additional authentication. Many users will have multiple devices or browsers that they use, so it is not practical to block attempts that do not match the existing fingerprints.&lt;/p&gt;&lt;p&gt;To take in mind: data submitted from client can be spoofed by an attacker.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Credential Stuffing Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Credential_Stuffing_Prevention_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use the application and try to log in from different devices. Note the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Does the notification arrive?&lt;/li&gt;&lt;li&gt;Are the user's trusted devices saved in server (DB)?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-525-CACHING" name="Set Cache-Control headers on sensitive and authenticated content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Browsers, servers, and upstream/intermediate devices may cache (temporarily store) data sent in
                        HTTP sessions for performance reasons. The protocol allows for a number of HTTP headers and
                        directives to control what data may be cached, where, and for how long. It is important to specify
                        cache-controls to prevent the exposure of sensitive data through the inappropriate caching
                        of authenticated and otherwise restricted access data, either in the users' browser or other
                        devices.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Configure the server or application to set cache-control headers on sensitive content.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The following headers are recommended:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;
                        &lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;
                        &lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;
                        &lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;
                        &lt;li&gt;Pragma: no-cache&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
          </references>
          <standards>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Review the HTTP Server responses to ensure appropriate cache directives are returned for all sensitive and authenticated content.&lt;/li&gt;&lt;li&gt;Using a browser:&lt;/li&gt;&lt;li&gt;Open the Web Developer Console.&lt;ul&gt;&lt;li&gt;Make requests to the different component end-points.&lt;/li&gt;&lt;li&gt;Verify the cache controls returned as part of these responses.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite):&lt;ul&gt;&lt;li&gt;Browse the site through the proxy.&lt;/li&gt;&lt;li&gt;Review server responses and/or use automated scanning to analyze cache headers.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;The following is an example of what should be set to prevent a disclosure of sensitive data:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Expires: Tue, 03 Jul 2001 06:00:00 GMT 9.4&lt;/li&gt;&lt;li&gt;Last-Modified: {now} GMT&lt;/li&gt;&lt;li&gt;Cache-Control: no-store, no-cache, must-revalidate, max-age=0&lt;/li&gt;&lt;li&gt;Cache-Control: post-check=0, pre-check=0&lt;/li&gt;&lt;li&gt;Pragma: no-cache&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.220">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="store-passwords-unrecoverable-form" name="Store passwords in an unrecoverable form" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;To protect user passwords from accidental or deliberate exposure, the application should store cryptographic hashes of passwords instead of the actual passwords.&lt;/span&gt;&lt;/p&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Do not store actual passwords in the data storage for verification during login.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Instead, create a cryptographic hash of the password using a strong hash function that includes a work factor and a built in 'salt' value, like bcrypt or scrypt. This reduces the risk of brute-force attacks and rainbow tables, and allows flexibility to adapt the hashing function to balance security and performance. Establish some restrictions, depending on the used function:&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;The salt length must be at least 32 bits.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If bcrypt is used, the work factor must be as large as verification server performance allows, typically at least 13.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
   &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;If we use the PBKDF2, the iteration count shall be as large as verification server performance allows, and it will typically allow at least 100,000 iterations.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;li&gt;&lt;p&gt;&lt;span style="font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Alternatively, use a strong hash function like SHA-384 together with a unique 'salt' value for every account.&amp;nbsp; Apply multiple iterations of the hash to create the additional computational work required to mitigate brute-force attacks. The secret 'salt' value must be stored separately from the hashed passwords.&lt;/span&gt;&lt;/p&gt;&lt;/li&gt; 
 &lt;/ul&gt;&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="Owasp CheatSheetSeries: Password Storage" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Password_Storage_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.6" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.5" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.8" supportedStandardRef="iotsf-class-2"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.3.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Review the mechanism for matching credentials from the client-side to stored credentials for a user.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;span&gt;Best practices dictate that the system should match a strong salted hash (SHA256 or greater and a unique hash for each account) to the one stored at the time the password was set.&lt;/span&gt;&lt;/li&gt; 
   &lt;li&gt;For example, it is recommended to use a system salt of 32 bits or more, a keyed HMAC hash using &lt;span style="font-family: Arial; font-size: 11pt; font-weight: 700; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;SHA-2 or SHA-3,&lt;/span&gt;&lt;span style="font-family: Arial; font-size: 11pt; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt; and the stretching algorithm PBKDF2 with at least 10,000 iterations.&lt;/span&gt;&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not a clear-text password&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm the stored credential is not an encrypted password which may be recovered (decrypted) at the server- or client- side.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hashing algorithm in use is cryptographically secure (e.g. is not SHA1/MD5 or a flawed algorithm).&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Confirm that the hash is created from the password together with a unique salt value for the user. This prevents the use of rainbow tables, or the identification of password collisions among users.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
  &lt;li&gt;&lt;span&gt;&lt;span style="font-size: 11pt; white-space: pre-wrap; font-family: Arial;"&gt;Consider using an algorithm with a configurable work factor, set to a high value to inhibit attacks.&lt;/span&gt;&lt;/span&gt;&lt;/li&gt; 
 &lt;/ol&gt;&lt;/span&gt; 
&lt;span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.148">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-IMPLEMENT-LOGOUT" name="The logout function should be prominently visible to the user" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Developers must create a logout functionality that is clearly visible for the user when navigating the application.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if the logout functionality is accessible and how hard it is to disconnect from the application.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-SIGN-REQUESTS" name="Use of digital signatures to make it easier for the receiver to authenticate if the sender is really the person they think they are" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Making use of digital signatures on exchanged messages will make it more difficult for man-in-the-middle attacks to occur, so add a digital signature to your important messages if you want to verify the sender identity.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Top Ten Proactive Controls 2018 - C6: Implement Digital Identity" url="https://owasp.org/www-project-proactive-controls/v3/en/c6-digital-identity"/>
            <reference name="RFC7515" url="https://tools.ietf.org/html/rfc7515"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Review code application and configuration&lt;/li&gt;&lt;li&gt;Check the exchanged messages and verify if signature is being used.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.715">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-ONE-TIME-PASSWORD" name="Use one-time passwords" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use One Time Password (TOTP) codes. This can be achieved with:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Hardware&lt;/li&gt;&lt;li&gt;Software (cheaper option).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Software option would typically involve the user installing a TOTP application on their mobile phone, and then scanning a QR code provided by the web application which provides the initial seed. The authenticator app then generates a six digit number every 30 or 60 seconds.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Multi-Factor Authentication Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Multifactor_Authentication_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Try logging into the application several times:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Do you use the same password all the time?&lt;/li&gt;&lt;li&gt;Or do you use a different password each time?&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.713">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should be used in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.791">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-RANDOM-SESSION-KEYS" name="Use random-session session keys, which are time-specific and will change with time making it difficult for an attacker to fool the receiver with an old message" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be unpredictable (random enough) to prevent guessing attacks, where an attacker is able to guess or predict the ID of a valid session through statistical analysis techniques. For this purpose, a good Cryptographically Secure Pseudorandom Number Generator must be used.&lt;/p&gt;&lt;p&gt;Additionally, a random session ID is not enough; it must also be unique to avoid duplicated IDs. A random session ID must not already exist in the current session ID space.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Log in and log out, while saving the session IDs and check:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The session id is different in every log in to the application?&lt;/li&gt;&lt;li&gt;Is it predictable? For example, one session ID is 123ABC&lt;strong&gt;D&lt;/strong&gt; and the next 123ABC&lt;strong&gt;E&lt;/strong&gt; (the example contains a short key to understanding).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To perform these checks it is possible to use DevTools from the browser or an easier way using a proxy to logall requests.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="RFC6819-5.1.5.3" name="Use short expiration time" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>A short expiration time for tokens is a means of protection against
   the following threats:&amp;nbsp;  
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;replay&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;token leak (a short expiration time will reduce impact)&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;online guessing (a short expiration time will reduce the
      likelihood of success)&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;
Note: Short token duration requires more precise clock synchronization between the authorization server and resource server. Furthermore, shorter duration may require more token refreshes (access token) or repeated end-user authorization processes (authorization "code" and refresh token).</desc>
          <implementations/>
          <references>
            <reference name="RFC6819" url="https://tools.ietf.org/html/rfc6819"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the token expiration time in the authorization server policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.792">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://pwning.owasp-juice.shop/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:45.792">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SAML-2.0-SC-C-6.4.3" name="Verify SAML assertion signatures and authenticate the issuer" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  The browser/POST profile requires the SAML response carrying SAML assertions to be signed, thus providing both message integrity and authentication. The Service Provider site MUST verify the signature and authenticate the issuer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   The following recommendations were proposed in response: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Always perform schema validation on the XML document prior to using it for any security--related purposes:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Always use local, trusted copies of schemas for validation.&lt;/li&gt; 
    &lt;li&gt;Never allow automatic download of schemas from third party locations.&lt;/li&gt; 
    &lt;li&gt;If possible, inspect schemas and perform schema hardening, to disable possible wildcard -type or relaxed processing statements.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Securely validate the digital signature:&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;If you expect only one signing key, use StaticKeySelector. Obtain the key directly from the identity provider, store it in local file and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect more than one signing key, use X509KeySelector (the JKS variant). Obtain these keys directly form the identity providers, store them in local JKS and ignore any KeyInfo elements in the document.&lt;/li&gt; 
    &lt;li&gt;If you expect a heterogeneous signed documents (many certificates from many identity providers, multi-level validation paths), implement full trust establishment model based on PKIX and trusted root certificates.&lt;/li&gt; 
   &lt;/ul&gt; 
   &lt;li&gt;Avoid signature-wrapping attacks.&lt;/li&gt; 
   &lt;ul&gt; 
    &lt;li&gt;Never use getElementsByTagName to select security related elements in an XML document without prior validation.&lt;/li&gt; 
    &lt;li&gt;Always use absolute XPath expressions to select elements, unless a hardened schema is used for validation.&lt;/li&gt; 
   &lt;/ul&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Assertions and Protocols for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-core-2.0-os.pdf"/>
            <reference name="OWASP SAML Cheat Sheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/SAML_Security_Cheat_Sheet.md"/>
            <reference name="Profiles for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-profiles-2.0-os.pdf"/>
            <reference name="Security and Privacy Considerations for SAML 2.0" url="https://docs.oasis-open.org/security/saml/v2.0/saml-sec-consider-2.0-os.pdf"/>
          </references>
          <standards>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:44.716">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-60-MALICIOUS-REPLY" issueId="" issueLink="" name="Attackers use replay attacks to execute malicious actions" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;A replay attack is a kind of man-in-the-middle attack in which an attacker sniffs messages being sent on a channel to intercept them and resend them under the cloak of authentic messages. What makes the replay attack particularly harmful is that the attacker does not even need to decrypt the message they resend but can still fool the receiver into thinking that the received message is legitimate.&lt;/p&gt;&lt;p&gt;One example of replay attack is called pass the hash. This is referring to the hash value that is associated with a password that is sent across the network during the authentication process. If the attacker can gain access to the hash, they may be able to replay that hash back to the server and pretend that they are the original workstation.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ONE-TIME-PASSWORD" mitigation="20"/>
                <countermeasure ref="C-RANDOM-SESSION-KEYS" mitigation="20"/>
                <countermeasure ref="C-SET-TIMESTAMP-ON-REQUEST" mitigation="20"/>
                <countermeasure ref="C-SIGN-REQUESTS" mitigation="20"/>
                <countermeasure ref="RFC6819-5.1.5.3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-CACHED-DATA" issueId="" issueLink="" name="Sensitive data is compromised by inspecting cached data in the client side" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker can also use a decompiler to decompile a downloaded Java applet in order to look for information such as hardcoded IP addresses, file paths, passwords or other such contents.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-524" mitigation="50"/>
                <countermeasure ref="CWE-525-CACHING" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-593-SSO-SYNC" issueId="" issueLink="" name="Attackers are able to keep their application session active after the SSO/IdP blocks/deletes their account" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If a user successfully logs in via SSO and falls prey to a phishing attack, the attacker gets access to all the endpoints of the external applications within the cloud that the user is provisioned for.&lt;/p&gt;&lt;p&gt;If the attack is detected, the user account can be disabled. However, the user may still remain logged in. This could allow the attacker to stay logged on with access to the linked application.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-FORCE-LOGOUT" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-115-LOGIN-BYPASS" issueId="" issueLink="" name="Attackers can bypass the login system using a less hardened alternative for accessing the system" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The basic way to take advantage of the application's access control flaws is called "forced browsing".&lt;/p&gt;&lt;p&gt;Let's say that the website http://mysite.com It is a website that supports the authenticity of the user and the administrator will be taken to the appropriate webpage after validation. But if an attacker knows the URL, he or she can enter it in their browser, for example&lt;/p&gt;&lt;p&gt;http://mysite.com/admin_page or http://mysite.com/user_page&lt;/p&gt;&lt;p&gt;If it is a secure website, it will be redirected to the login page. But if those pages are allowed to be accessed, it will be incomplete access control and will cause damage.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ACCESS-CONTROL-CENTRALIZED" mitigation="20"/>
                <countermeasure ref="C-AUTHZ-AFTER-AUTHN" mitigation="20"/>
                <countermeasure ref="CWE-603" mitigation="20"/>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-130-DOS-AUTH" issueId="" issueLink="" name="Attackers can execute Denial of Service attacks to prevent valid users from accessing the system" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker leverages the security functionality of the system aimed at thwarting potential attacks (like automatic block of accounts after a number of failed login attempts) to launch a denial of service attack against a legitimate system user.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="25"/>
                <countermeasure ref="C-THREAD-CONCURRENCY" mitigation="25"/>
                <countermeasure ref="network-rate-limit" mitigation="25"/>
                <countermeasure ref="security-logging" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-180-SAML-SPOOFING" issueId="" issueLink="" name="Attackers can modify the SAML response from the Identify Provider and change assertions' values to impersonate valid users in the Service Provider" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Sometimes not only does the Service Provider fail to check the validity of the signature in the SAML response, but it doesn't even verify its mere presence. The equivalent of a Service Provider accepting unsigned SAML assertions is accepting a username without checking the password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SAML-VERIFY-IDP-X509" mitigation="50"/>
                <countermeasure ref="SAML-2.0-SC-C-6.4.3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-49-BRUTE-FORCE-AUTH" issueId="" issueLink="" name="Attackers can brute force the authentication system to find valid credentials" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Hackers launch brute-force attacks using widely available tools that utilize wordlists and smart rulesets to intelligently and automatically guess user passwords. Although such attacks are easy to detect, they are not so easy to prevent.&lt;/p&gt;&lt;p&gt;For example, many HTTP brute-force tools can relay requests through a list of open proxy servers. Since each request appears to come from a different IP address, you cannot block these attacks simply by blocking the IP address. To further complicate things, some tools try a different username and password on each attempt, so you cannot lock out a single account for failed password attempts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="16"/>
                <countermeasure ref="C-ACCOUNT-LOCKDOWN" mitigation="16"/>
                <countermeasure ref="CWE-654" mitigation="16"/>
                <countermeasure ref="network-rate-limit" mitigation="20"/>
                <countermeasure ref="require-use-strong-passwords" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-600-CRED-STUFFING" issueId="" issueLink="" name="Attackers take control of another user's account without being detected if they get to know the password for that account" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Credential stuffing is the automated injection of stolen username and password pairs ("credentials") in to website login forms, in order to fraudulently gain access to user accounts.&lt;/p&gt;&lt;p&gt;Since many users will re-use the same password and username/email, when those credentials are exposed (by a database breach or phishing attack, for example) submitting those sets of stolen credentials into dozens or hundreds of other sites can allow an attacker to compromise those accounts too.&lt;/p&gt;&lt;p&gt;Credential Stuffing is a subset of the brute force attack category. Brute forcing will attempt to try multiple passwords against one or multiple accounts; guessing a password, in other words. Credential Stuffing typically refers to specifically using known (breached) username / password pairs against other websites.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-SSO" mitigation="20"/>
                <countermeasure ref="C-NEW-LOCATION-LOGIN-ALERT" mitigation="20"/>
                <countermeasure ref="C-PREVENT-SIMULTANEOUS-LOGIN" mitigation="20"/>
                <countermeasure ref="CWE-654" mitigation="20"/>
                <countermeasure ref="security-logging" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-600-SESSION-REUSE" issueId="" issueLink="" name="An attacker can reuse old session credentials or session IDs for authorization" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;At his town's public library, John logs onto his bank's Web site to transfer money from his checking account to his savings account. Once John completes his transaction he gets distracted, forgets to sign off from his bank's Web site, and walks away from the computer.&amp;nbsp;&lt;/p&gt;&lt;p&gt;A second user, Malcolm, now uses the same computer as John. Instead of using the browser to navigate to a new site, Malcolm simply explores the browser history to return to the previous URL where John's account information was displayed.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Because John's session is still active Malcolm can now transfer money, open new accounts, order additional credit cards, or perform any other actions available to John via the bank's Web site.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-IMPLEMENT-LOGOUT" mitigation="50"/>
                <countermeasure ref="C-TOKEN-TIMEOUT" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-61-SESSION-FIXATION" issueId="" issueLink="" name="The attacker induces a client to establish a session with the target software using a session identifier provided by the attacker" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The attack consists of obtaining a valid session ID (e.g. by connecting to the application), inducing a user to authenticate himself with that session ID, and then hijacking the user-validated session by the knowledge of the used session ID. The attacker has to provide a legitimate Web application session ID and try to make the victim's browser use it. There are several techniques to execute the attack; it depends on how the Web application deals with session tokens. Below are some of the most common techniques:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Session token in the URL argument.&lt;/li&gt;&lt;li&gt;Session token in a hidden form field.&lt;/li&gt;&lt;li&gt;Session ID in a cookie.&lt;/li&gt;&lt;li&gt;Client-side script.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="75" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-SESSION-ID-ON-PARAMETER" mitigation="50"/>
                <countermeasure ref="secure-session-generation-and-expiration" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-OTP-GENERATION-ABUSE" issueId="" issueLink="" name="An attacker can send a lot of OTP requests to increase the likelihood of matching one of the generated codes in a later brute force attack" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;For example, in a password reset functionality based on the delivery of a code by email or SMS to the user, an attacker can send a lot of requests to it, generating a lot of valid codes with the goal of increasing the chances of matching the code in a brute force attack. The attack takes place in the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Automation of requests to the password reset functionality (new codes don't invalidate older ones).&lt;/li&gt;&lt;li&gt;Creation of a custom dictionary to try to match valid codes (e.g.: if a code has only 5 numbers, the dictionary is as follows: [00000, 00001,..., 99999]).&lt;/li&gt;&lt;li&gt;Brute force attack on the functionality to check the OTP and find a match.&lt;/li&gt;&lt;li&gt;Once the attacker knows a valid code he/she can proceed with the password change.&lt;/li&gt;&lt;/ol&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-OTP-BRUTE-FORCE" mitigation="50"/>
                <countermeasure ref="C-OTP-INVALID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-SENSITIVE-DATA-URL" issueId="" issueLink="" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Regardless of using encryption, the following URL will expose information in the locations detailed below:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;https://vulnerablehost.com/authuser?user=bob&amp;amp;authz_token=1234&amp;amp;expire=1500000000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The parameter values for user, authz_token, and expire will be exposed in the following locations when using HTTP or HTTPS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Referer Header&lt;/li&gt;&lt;li&gt;Web Logs&lt;/li&gt;&lt;li&gt;Shared Systems&lt;/li&gt;&lt;li&gt;Browser History&lt;/li&gt;&lt;li&gt;Browser Cache&lt;/li&gt;&lt;li&gt;Shoulder Surfing&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" issueId="" issueLink="" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-CRACK-PASSWORD-HASH" issueId="" issueLink="" name="A malicious user has access to the users' password hashes and tries to crack the passwords" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Although it is not possible to "decrypt" password hashes to obtain the original passwords, it is possible to "crack" the hashes in some circumstances.&lt;/p&gt;&lt;p&gt;The basic steps are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Select a password you think the victim has chosen (e.g.password1!).&lt;/li&gt;&lt;li&gt;Calculate the hash.&lt;/li&gt;&lt;li&gt;Compare the hash you calculated with the hash of the victim. If they match, you have correctly "cracked" the hash and now know the plaintext value of their password.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This process is repeated for a large number of potential passwords. Different methods can be used to select candidate passwords, including:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Lists of passwords obtained from other compromised sites.&lt;/li&gt;&lt;li&gt;Brute force (trying every possible candidate).&lt;/li&gt;&lt;li&gt;Dictionaries or wordlists of common passwords&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="store-passwords-unrecoverable-form" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="51400f57-776c-461e-b44f-f04e5b864b22" diagramComponentId="0c71e662-2d7c-4fc0-bc80-4cff7f58179a" ref="9db8384d-8173-4668-97d8-b4c5e6a7f4e9" name="Reset Password" desc="" library="IR-Functional-Components" parentComponentRef="" componentDefinitionRef="CD-RESET-PASSWORD" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-REFERRER-POLICY-RESET-PASSWORD" name="Consider using a Referrer-Policy HTTP header for the reset password page" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If you use URL tokens to reset password, ensure that the reset password page adds the Referrer Policy tag with the noreferrer value in order to avoid referrer leakage.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Testing for Weak Password Change or Reset Functionalities" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/04-Authentication_Testing/09-Testing_for_Weak_Password_Change_or_Reset_Functionalities"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the application configuration to verify if the Referrer header is configured&lt;/li&gt;&lt;li&gt;Check the traffic on the password reset functionality and verify the headers&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-598" name="Ensure no sensitive data is sent in the URL" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed in the URL (address bar) between client and server is likely to be exposed in logs on the server, or intermediate devices (such as proxies or other network devices), or in local browser logs/history. A common mistake is, for example, to pass a SessionID value as a parameter in the URL of a get request between hosts. To mitigate the risk of exposure of sensitive data, this sensitive data should only be sent in the body of an HTTP message (for example a POST request), or in the HTTP headers (i.e. standard headers such as the Cookie values, or a custom X- header).&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure sensitive, private, or otherwise restricted data is not sent in a URL value.&lt;/li&gt;&lt;li&gt;Pass sensitive data only in appropriately protected fields in the body or headers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Sensitive Data Exposure" url="https://pwning.owasp-juice.shop/part2/sensitive-data-exposure.html"/>
          </references>
          <standards>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Using an intercepting proxy (e.g. OWASP Zap, BurpSuite)&lt;/li&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Browse the site through the proxy.&lt;/li&gt;
                            &lt;li&gt;Programmatically or manually visit all authenticated content and functionality
                            within the application.&lt;/li&gt;
                            &lt;li&gt;Review logs to determine if sensitive data is sent in the URL at any point. If
                            should only be sent in HTTP headers (i.e. a cookie) or as part of the body (e.g. in a POST
                            or PUT request).&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;ol&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.457">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.1" name="Ensure sensitive data is not revealed through error output messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the application does not output error messages or stack traces containing sensitive
                        data that could assist an attacker, including the session id, software/framework versions and
                        personal information.</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application does not output error massages or stack traces containing sensitive data.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.273">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.908">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.905">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.275">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-password-recovery" name="Implement Secure Password Recovery Mechanism" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is common for an application to have a mechanism for a user to gain access to their account in the event they forget their password. A good design workflow for a password recovery feature will use multi-factor authentication elements. For example, it may ask a security question - something they know, and then send a generated token to a device - something they own.&lt;/p&gt;&lt;p&gt;To get this control in our approach, we have to abide by the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Send a Token Over a Protected Side-Channel: &lt;/strong&gt;Send a multi-factor token challenge with a randomly-generated code longer than 6 characters (containing both letters and numbers), by a secure channel, such TLS and&amp;nbsp;valid for a specific time period (no longer than 20 minutes) or until the password is successfully reset.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Allow user to change password in the existing session:&lt;/strong&gt; Display a simple HTML form with one input field for the code, one for the new password, and one to confirm the new password. Verify the correct code is provided and be sure to enforce all password complexity requirements that exist in other areas of the application. Avoid sending the username as a parameter when the form is submitted.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Notify user: &amp;nbsp;&lt;/strong&gt;Ensure the application notifies the user, when the password is changed.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Logging:&lt;/strong&gt; It is important to keep audit records when password change requests are submitted, when reset messages were sent to users and when users utilize them. It is especially important to log failed attempts to answer security questions and failed attempted use of expired tokens. This data can be used to detect abuse and malicious behavior. Data such as time, IP address, and browser information can be used to spot trends of suspicious use.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Other Considerations:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Whenever a successful password reset occurs, all other sessions should be invalidated.&lt;/li&gt;&lt;li&gt;Strength of the questions used for password reset should vary based on the nature of the credentials. Administrator credentials should have a higher requirement.&lt;/li&gt;&lt;li&gt;The ideal implementation should rotate the questions asked in order to avoid automation.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Owasp CheatSheetSeries: Forgot Password" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Forgot_Password_Cheat_Sheet.md"/>
          </references>
          <standards>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="A.3" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Check the recovery secret code is not sent in clear text to the user.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password hints or secret questions are not present.&lt;/li&gt;&lt;li&gt;Check that&amp;nbsp;password credential recovery does not reveal the current password in any way..&lt;/li&gt;&lt;li&gt;Check that the user is notified, when&amp;nbsp;an authentication factor is changed or replaced.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.7" supportedStandardRef="swift-cscf"/>
            <standard ref="2.8A" supportedStandardRef="swift-cscf"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.4" supportedStandardRef="swift-cscf"/>
            <standard ref="6.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.3A" supportedStandardRef="swift-cscf"/>
            <standard ref="7.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.275">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-DELETE-SESSIONS-MENU" name="Offer to destroy all active sessions when users change their password" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The session ID must be renewed or regenerated by the web application after any privilege level change within the associated user session. The most common scenario where the session ID regeneration is mandatory is during the authentication process, as the privilege level of the user changes from the unauthenticated (or anonymous) state to the authenticated state though in some cases still not yet the authorized state.&lt;/p&gt;&lt;p&gt;Common scenarios to consider include; password changes, permission changes, or switching from a regular user role to an administrator role within the web application. For all sensitive pages of the web application, any previous session IDs must be ignored, only the current session ID must be assigned to every new request received for the protected resource, and the old or previous session ID must be destroyed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Session Management Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The most common web development frameworks provide session functions and methods to renew the session ID, such as request.getSession(true) &amp;amp; HttpSession.invalidate() (J2EE), Session.Abandon() &amp;amp; Response.Cookies.Add(new...) (ASP .NET), or session_start() &amp;amp; session_regenerate_id(true) (PHP).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-BRUTE-FORCE" name="Prevent brute force attacks" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement appropriate protection to prevent users from brute-forcing token generation and token checking with mechanisms such as rate limiting or CAPTCHA. And remember that OTP length must be at least 6 characters long and a combination of different characters (not only numbers, not only letters, ...).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Protect Against Automated Attacks" url="https://cheatsheetseries.owasp.org/cheatsheets/Authentication_Cheat_Sheet.html#protect-against-automated-attacks"/>
          </references>
          <standards>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check if there is any captcha enabled and investigate if making continuous requests with an automated tool like Burp it is still accepting the request and generating or checking OTPs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.666">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-OTP-INVALID" name="Prevent old or used OTPs from being reused by invalidating them" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;One-time passwords (OTP) are secrets used during operations that need added security or as part of user enrollment processes. Despite their short lifespan, only one OTP should be valid at any given time, and therefore, all previous OTPs should be invalidated whenever a new one is generated or after the OTP has expired.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Forgot Password Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Forgot_Password_Cheat_Sheet.html"/>
            <reference name="Invalidate Previous OTPs" url="https://docs.fluidattacks.com/criteria/requirements/347"/>
          </references>
          <standards>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Request an OTP and try to use it a couple of times. Verify that the OTP cannot be used twice or more.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.667">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="pseudo-random-number-generator" name="Use a cryptographically secure pseudo-random number generator" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use a well-vetted algorithm that is currently considered to be strong and secure by experts in the field and ensure well-tested implementation with adequate length seeds. In general, if a pseudo-random number generator is not advertised as being cryptographically secure, then it is probably a statistical PRNG and should not be used in a security-sensitive context.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Pseudo-random number generators can produce predictable numbers if the generator is known and the seed can be guessed. A 256-bit seed is a good starting point for producing a "random enough" number.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure that all random numbers, especially those used for cryptographic parameters (keys, IV's, MAC tags), random file names, random GUIDs, and random strings are generated in a cryptographically strong fashion.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that random algorithms are seeded with sufficient entropy, containing at least 112 bits of entropy (typically a six digit random number is sufficient).&amp;nbsp; If less than 112 bits of entropy, ensure salting with a unique and random 32-bit salt and hashed with an approved one-way hash.&lt;/p&gt;&lt;p&gt;Use a secure pseudo-random number generator ensuring it leverages an appropriate length seed. The recommendation by FIPS 140-2 is 256-bit seed.&lt;/p&gt;&lt;p&gt;Ensure that the challenge nonce was generated with at least 64 bits and it is unique over the lifetime of the cryptographic device.&lt;/p&gt;&lt;p&gt;Tools like NIST RNG Test tool (as used in PCI PTS Derived Test Requirements) can be used to comprehensively assess the quality of a Random Number Generator by reading e.g. 128MB of data from the RNG source and then assessing its randomness properties with the tool.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The following libraries are considered weak random numbers generators and should not be used.&amp;nbsp;&lt;/p&gt;&lt;p&gt;C library: random(), rand() instead use getrandom(2)&amp;nbsp;&lt;/p&gt;&lt;p&gt;Java library: java.util.Random() instead use java.security.SecureRandom&lt;/p&gt;&lt;p&gt;For secure random number generation, refer to NIST SP 800-90A. CTR-DRBG, HASH-DRBG, HMAC-DRBG. Refer to NIST SP800-22 A Statistical Test Suite for Random and Pseudorandom Number Generators for Cryptographic Applications, and the testing toolkit.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST Security Policies for Random and Pseudorandom Number Generators for Cryptographic Applications" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-22r1a.pdf"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
          </references>
          <standards>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.7.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.8.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.7.2" supportedStandardRef="nist-800-63"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="6.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;&lt;span style="font-size: 11pt; font-family: Arial; font-variant-numeric: normal; font-variant-east-asian: normal; vertical-align: baseline; white-space: pre-wrap;"&gt;Check that an adequately strong algorithm is used to generate random values, and that those random values are of a minimum 256-bit seed.&lt;/span&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.587">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="C-MFA-FOR-PASSWORD-RECOVERY" name="Use MFA to implement a secure self-service password recovery process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Multi-factor authentication can be used as a safe method to recover a lost password.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Go to the Recover password functionality of the application&lt;/li&gt;&lt;li&gt;Follow the necessary steps until a MFA process shows up&lt;/li&gt;&lt;li&gt;Check that the MFA process works successfully&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:31.586">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-89-PREPARED" name="Use prepared statements for all database queries" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Database injection attacks, such as SQLi (SQL Injection) rely on sending tainted client-side data which is used in dynamic SQL queries on the server-side in an unsafe manner. Creating queries by concatenating strings using untrusted data may result in&amp;nbsp;vulnerable code;&amp;nbsp;for example, an attacker appending an 'OR' statement to the customerName parameter in order to bypass checks and retrieve additional data from the database:&lt;/p&gt;&lt;p&gt;
 &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String query = "SELECT user FROM users WHERE name = '"&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;+ request.getParameter("customerName")+"'";&lt;/p&gt;&lt;p&gt;The use of prepared statements with carefully controlled and validated input conditions mitigates SQLi and related attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Database queries should always be executed using prepared statements or parameterized queries.&lt;/li&gt;&lt;li&gt;Queries through an Object-Relational mapper should also be treated as tainted input, and again executed using prepared statements to mitigate the threat.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations>
            <implementation platform="C#">
              <desc>ClN0cmluZyBxdWVyeSA9ICJTRUxFQ1QgYWNjb3VudF9iYWxhbmNlIEZST00gdXNlcl9kYXRhIFdIRVJFIHVzZXJfbmFtZSA9ID8iOwp0cnkgewogCU9sZURiQ29tbWFuZCBjb21tYW5kID0gbmV3IE9sZURiQ29tbWFuZChxdWVyeSwgY29ubmVjdGlvbik7CiAJY29tbWFuZC5QYXJhbWV0ZXJzLkFkZChuZXcgT2xlRGJQYXJhbWV0ZXIoImN1c3RvbWVyTmFtZSIsIEN1c3RvbWVyTmFtZSBOYW1lLlRleHQpKTsKIAlPbGVEYkRhdGFSZWFkZXIgcmVhZGVyID0gY29tbWFuZC5FeGVjdXRlUmVhZGVyKCk7IAkKIH0gY2F0Y2ggKE9sZURiRXhjZXB0aW9uIHNlKSB7CiAJLy8gZXJyb3IgaGFuZGxpbmcKIH0g</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For inputs receiving data that is subsequently added to - or used - in an SQL query:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure SQL meta-characters are identified and properly escaped or encoded.&lt;/li&gt;&lt;li&gt;Data should be used in the form of parameterized SQL queries, rather than dynamically generated queries.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To test data validation:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Review the code processing potentially tainted user input to SQL queries and confirm the data is executed only in pre-prepared parameterized SQL queries.&lt;/li&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.)&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.907">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="FILE-DATA-CHECK" name="Validate the file format before processing" issueId="" issueLink="" platform="" cost="1" risk="66" state="Recommended" owner="support" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Attackers may attempt to bypass controls on uploaded content by renaming, embedding, or otherwise manipulating benign files with malicious content. As with client-side data, the application should screen uploaded content before processing it.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;File contents and file-system path data must be checked for safety.&lt;/li&gt;&lt;li&gt;Consider directory traversal, local file inclusion, and OS injection attacks when validating filenames.&lt;/li&gt;&lt;li&gt;Verify the MIME type is correct and appropriate, and matches content.&lt;/li&gt;&lt;li&gt;Files with an structured format should be checked against the expected format/definition (e.g. XML against a XSD or DTD).&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: XXE" url="https://pwning.owasp-juice.shop/part2/xxe.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A4:2017-XML External Entities (XXE)" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify structured data being processed by your component which is coming from untrusted sources.&lt;/li&gt;&lt;li&gt;Check there is a validation method for the format and the structure.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Examples of this is to check JSON against a JSON schema, XML against an XSD or a DTD, or checking that a received file which is purported to be an image is actually an image.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.908">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-131-REFERRER-TOKEN" issueId="" issueLink="" name="A potential attacker that manages an external site can access the password reset token for an account inspecting the HTTP Referrer header" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If the page that the user is taken to includes content from other parties (such as loading scripts from other domains), then the reset token in the URL may be exposed in the HTTP Referer header sent in these requests.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-REFERRER-POLICY-RESET-PASSWORD" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-37-SENSITIVE-DATA-URL" issueId="" issueLink="" name="Sensitive data is compromised through query parameters in the URL" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Regardless of using encryption, the following URL will expose information in the locations detailed below:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;https://vulnerablehost.com/authuser?user=bob&amp;amp;authz_token=1234&amp;amp;expire=1500000000&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The parameter values for user, authz_token, and expire will be exposed in the following locations when using HTTP or HTTPS:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Referer Header&lt;/li&gt;&lt;li&gt;Web Logs&lt;/li&gt;&lt;li&gt;Shared Systems&lt;/li&gt;&lt;li&gt;Browser History&lt;/li&gt;&lt;li&gt;Browser Cache&lt;/li&gt;&lt;li&gt;Shoulder Surfing&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-598" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-112-OTP-GENERATION-ABUSE" issueId="" issueLink="" name="An attacker can send a lot of OTP requests to increase the likelihood of matching one of the generated codes in a later brute force attack" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;For example, in a password reset functionality based on the delivery of a code by email or SMS to the user, an attacker can send a lot of requests to it, generating a lot of valid codes with the goal of increasing the chances of matching the code in a brute force attack. The attack takes place in the following steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Automation of requests to the password reset functionality (new codes don't invalidate older ones).&lt;/li&gt;&lt;li&gt;Creation of a custom dictionary to try to match valid codes (e.g.: if a code has only 5 numbers, the dictionary is as follows: [00000, 00001,..., 99999]).&lt;/li&gt;&lt;li&gt;Brute force attack on the functionality to check the OTP and find a match.&lt;/li&gt;&lt;li&gt;Once the attacker knows a valid code he/she can proceed with the password change.&lt;/li&gt;&lt;/ol&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-OTP-BRUTE-FORCE" mitigation="50"/>
                <countermeasure ref="C-OTP-INVALID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-137-INJECTION" issueId="" issueLink="" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="CWE-89-PREPARED" mitigation="20"/>
                <countermeasure ref="DATA-VAL" mitigation="20"/>
                <countermeasure ref="FILE-DATA-CHECK" mitigation="20"/>
                <countermeasure ref="SER-UNTRUST" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-575-ENUM-USERS" issueId="" issueLink="" name="Attackers can enumerate the existence of valid accounts in the system using error/informational messages" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If your login page has different error messages for unrecognized usernames and incorrect passwords, an attacker can write a script to submit lengthy lists of common usernames and test the response. With those results, the attacker can then infer which usernames are valid.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASVS-8.1" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="security-logging" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-115-PASS-RESET-BYPASS" issueId="" issueLink="" name="Attackers can bypass the change password process using a less hardened alternative for accessing the system" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;The password reset process provides an alternative mechanism to access a user's account, and so should be at least as secure as the usual authentication process. However, it can provide an easier way to compromise the account, especially if it uses weaker authentication factors such as security questions.&lt;/p&gt;&lt;p&gt;The majority of pre-generated security questions are fairly simplistic in nature and can lead to insecure answers. For example:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The answers may be known to family members or close friends of the user, e.g. "What is your mother's maiden name?", "What is your date of birth?".&lt;/li&gt;&lt;li&gt;The answers may be easily guessable, e.g. "What is your favorite color?", "What is your favorite baseball team?".&lt;/li&gt;&lt;li&gt;The answers may be brute forcible, e.g. "What is the first name of your favorite high school teacher?" - the answer is probably on some easily downloadable lists of popular first names, and therefore a simple brute force attack can be scripted.&lt;/li&gt;&lt;li&gt;The answers may be publicly discoverable, e.g. "What is your favorite movie?" - the answer may easily be found on the user's social media profile page.&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-MFA-FOR-PASSWORD-RECOVERY" mitigation="50"/>
                <countermeasure ref="secure-password-recovery" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-180-SESS-PERSISTENCE" issueId="" issueLink="" name="Attackers keep their stolen sessions active even after the legitimate users have reset their passwords" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An attacker is able to persist their access to a victim account in the application even when the legitimate user of the account reset their password.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DELETE-SESSIONS-MENU" mitigation="50"/>
                <countermeasure ref="security-logging" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-59-BRUTE-FORCE-TOKENS" issueId="" issueLink="" name="Attackers may attempt to detect patterns in the password reset tokens and try all possible combinations of letters and numbers" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;If tokens are generated based on known values, such as by taking the MD5 hash of the user's email with md5($email), an attacker will be able to generate password reset tokens for any account to compromise any account.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="pseudo-random-number-generator" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-114-CRED-CHANGE" issueId="" issueLink="" name="An attacker abuses the password change functionallity to change the password of other users without knowing their credentials" state="Expose" source="RULES" edited="false" owner="support" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Example 1 (password change):&lt;/p&gt;&lt;p&gt;Step 1. An attacker logs in with their account and go to the change password function.&lt;/p&gt;&lt;p&gt;Step 2. The attacker uses an HTTP proxy to intercept the request.&lt;/p&gt;&lt;p&gt;Step 3. After intercepting the request, they modify the user ID of the request and they update it to the victim user ID. If the server process sucessfully this request the attacker was able to change the password of the user ID account to one of their election.&lt;/p&gt;&lt;p&gt;Example 2 (password reset):&lt;/p&gt;&lt;p&gt;Step 1. An attacker does a password reset in their account.&lt;/p&gt;&lt;p&gt;Step 2. The attacker receives the password reset link and this includes two parameters in the URL: the user ID and the token (https://host.com/resetpassword?userid=1232&amp;amp;token=xodkdosff32eksl)&lt;/p&gt;&lt;p&gt;Step 3. The attacker copy the received URL, edit the userid parameter (victim account) and launches the request. If the server process sucessfully this request the attacker was able to reset the password of the user ID account to one of their election.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="secure-password-recovery" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="858f3a6f-77f1-48f9-8f7c-f5418db91683" diagramComponentId="3ecfc42c-a5ad-4008-84f8-541ce142f46e" ref="47f6b52c-5d8b-40d3-b2b7-d1da665a8c5e" name="SAAS" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="empty-component" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="509a4d05-f242-44f3-9ca8-2d217cd228b7" diagramComponentId="f1c106e9-955b-4fb1-b663-dad355519fc0" ref="71b5280f-5c9c-4d98-9fa8-d0f1154512e9" name="Some Resource" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="3422855e-6e6a-4464-8d29-ce4b2f3c2de6" diagramComponentId="053a16b6-4928-4211-9014-bfb023e66067" ref="f1abecbe-1bcc-4ca8-a7f3-4f68765bd1dc" name="Some Resources" desc="" library="" parentComponentRef="e5646f35-f3ea-4639-bfa9-568ee8b4e327" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="4d898a06-0a79-4111-8a75-e6fe8716de25" diagramComponentId="16522298-6f65-41bd-9317-0f0554194a6f" ref="f5a71ec5-cb58-4608-8c4a-a667cd446e45" name="Some Resources" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="e167b0e3-07fa-4f2f-af60-c89aad9475a2" diagramComponentId="45002156-d4dd-4f4b-9d86-bd113db12be5" ref="db64e514-0041-4d61-9617-ccfe03f4210a" name="SSO Project Component" desc="" library="" parentComponentRef="47f6b52c-5d8b-40d3-b2b7-d1da665a8c5e" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="3d1cf6d6-7eef-43de-ae53-797a13b0de84" diagramComponentId="4eba5305-6cd5-4bd3-84c4-aa43b156024e" ref="a2b01f0d-f522-4750-a9ab-e2a4cdb9babe" name="Token" desc="" library="IR-Functional-Components" parentComponentRef="70a78f32-86da-4797-b1fd-31acc1cc0f67" componentDefinitionRef="CD-ACCESS-TOKEN" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-287" name="Improper Authentication" state="0" impact="100" issueId="" issueLink="">
          <desc>When an actor claims to have a given identity, the software does not prove or insufficiently
                        proves that the claim is correct.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.998">
              <output/>
            </source>
            <references>
              <reference name="CWE-287: Improper Authentication" url="https://cwe.mitre.org/data/definitions/287.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-233" name="Improper Handling of Parameters" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software does not properly handle cases in which the expected number of parameters, fields, or arguments is not provided in input, or if those parameters are undefined.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-345" name="Insufficient Verification of Data Authenticity" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not sufficiently verify the origin or authenticity of data, in a way that causes it to accept invalid data.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-306" name="Missing Authentication for Critical Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not perform any authentication for functionality that requires a provable user identity or consumes a significant amount of resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CSD-SESS-REAUTH" name="The application does not re-authenticate on critical functions" state="0" impact="100" issueId="" issueLink="">
          <desc>The application does not require the user to re-authenticate for specific critical functions,
                        like password change or changes to sensitive security settings.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.997">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-798" name="Use of Hard-coded Credentials" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software contains a hard-coded credential, such as an password or cryptographic key, which is used for its own inbound authentication, outbound communication to external components, or encryption of internal data.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.998">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="http-headers-authentication" name="Authenticate the HTTP headers added by a trusted proxy or SSO devices" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Bearer authentication (also called token authentication) is an HTTP authentication scheme that involves security tokens called bearer tokens. The name "Bearer authentication" can be understood as "give access to the bearer of this token". The bearer token is a cryptic string, usually generated by the server in response to a login request. The client must send this token in the Authorization header when making requests to protected resources:&amp;nbsp;&lt;br&gt;&lt;br&gt;Authorization: Bearer &amp;lt;token&amp;gt;&amp;nbsp;&lt;br&gt;&lt;br&gt;The Bearer authentication scheme was originally created as part of OAuth 2.0 in RFC 6750, but is sometimes also used on its own. Similar to Basic authentication, Bearer authentication should only be used over HTTPS (SSL).&amp;nbsp;&lt;br&gt;&lt;br&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&amp;nbsp;&lt;br&gt;Bearer tokens included&amp;nbsp; in HTTP headers by a trusted proxy or SSO devices must be validated by sending them back to the identity provider(IdP) that issued them. This has the advantage that such tokens can be revoked by the IdP, for example as part of a global logout operation, without leaving previously logged-in sessions still active. Global logout might also make it necessary to validate JWTs with the IdP.&amp;nbsp;&lt;br&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="JSON Web Token for Java" url="https://cheatsheetseries.owasp.org/cheatsheets/JSON_Web_Token_Cheat_Sheet_for_Java.html"/>
            <reference name="Validating OAuth 2.0 Access Tokens with NGINX and NGINX Plus" url="https://www.nginx.com/blog/validating-oauth-2-0-access-tokens-nginx/"/>
          </references>
          <standards>
            <standard ref="14.5.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.5.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Try to delete or modify HTTP headers that include bearer tokens issued by SSO devices using a man in the middle proxy a see if the operation is still successful.
&lt;br /&gt;
&lt;br /&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.737">
              <output/>
            </source>
            <references>
              <reference name="Testing for Exposed Session Variables (OTG-SESS-004)" url="https://www.owasp.org/index.php/Testing_for_Exposed_Session_Variables_(OTG-SESS-004)"/>
              <reference name="Testing for Session Management Schema (OTG-SESS-001)" url="https://www.owasp.org/index.php/Testing_for_Session_Management_Schema_(OTG-SESS-001)"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="AVOID-API-KEYS" name="Avoid the usage of static &quot;API keys&quot; and similar" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Avoid the use of static "API keys" or similar when accessing external systems. Create mechanisms to generate, manage and delete API keys to grant access to external systems.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-03 Device Identification And Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/182-08_02_IA-03"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.10.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.13.27" supportedStandardRef="iotsf-class-2"/>
            <standard ref="23" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="26" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.1.1" supportedStandardRef="nist-800-63"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API2:2023-Broken Authentication" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the application is not using any static &amp;quot;API keys&amp;quot; or
                            similar.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.735">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="revoke-compromised-authentication-tokens" name="Implement an effective process to revoke compromised authentication tokens" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Theft or loss of an authentication token can undermine security in any multi-factor authentication process. Loss of a physical token or mobile device with soft-tokens, or compromise of a client-side certificate could mean an attacker has all of the factors required to authenticate to a system and bypass the protections provided by multi-factor authentication.&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Define an organization process to identify or report lost or compromised authentication tokens/factors&lt;/li&gt; 
 &lt;li&gt;Implement technical controls to suspend or revoke compromised tokens or accounts&lt;/li&gt; 
 &lt;li&gt;These processes should be implementable in a timely manner to reduce the attack window&lt;/li&gt; 
 &lt;li&gt;Implement mechanisms to renew authentication tokens/factors within a sufficient timeframe before they are revoked.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.5.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.5.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.8" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.2.3" supportedStandardRef="nist-800-63"/>
            <standard ref="6.1.4" supportedStandardRef="nist-800-63"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify there is a working process in place to revoke a given token in a timely manner.&lt;/li&gt;&lt;li&gt;Verify the renewal of authentication tokens/factors is completed in sufficient time.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.738">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="SRV-JSON-WEB-SIGN" name="Implement JSON Web Signing for sensitive or authentication data" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Data received from the client-side may have been modified at source or in transit. JSON Web
                        Signing functionality is available to prevent (or rather detect) such modification.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Sensitive data, in particular any relied on for making access control or other
                        security decisions, should be signed. This provides assurance that:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;The data comes from the trusted source and not from an untrusted actor.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;The data received is that produced by the trusted party and has not been modified in
                        transit.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the functions of the service which handle JSON data.&lt;/li&gt;&lt;li&gt;If the JSON data is used to make authentication decisions or part of a sensitive business logic flow, then check JSON Web Signing - leveraging JSON Web Tokens - is in use.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.737">
              <output/>
            </source>
            <references>
              <reference name="JSON Web Signing - RFC" url="https://tools.ietf.org/html/rfc7515"/>
              <reference name="RFC 7519" url="https://tools.ietf.org/html/rfc7519"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="follow-jwt-standard-generation-token" name="Implement token generation for stateless server following the recommendation of the JWT standard" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;JSON Web Token (JWT) is an open standard (RFC 7519) that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. This information can be verified and trusted because it is digitally signed. A JWT token is created during authentication and is verified by the server (or servers) before any processing.&lt;/p&gt;&lt;p&gt;However, JWT's are often not saved by the server after initial creation. JWT's are typically created and then handed to a client without being saved by the server in any way. The integrity of the token is maintained through the use of digital signatures so a server can later verify that the JWT is still valid and not been tampered with since its creation.&lt;/p&gt;&lt;p&gt;This approach is both stateless and portable in the way that client and server technologies can be different yet still interact.&lt;/p&gt;&lt;p&gt;Ensure implementation of the following requirements to protect the stateless token for digital signatures, encryption and other countermeasures following the requirements of JWT standard.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To create a JWT, the following steps are performed. The order of the steps is not significant in cases where there are no dependencies between the inputs and outputs of the steps.&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Create a JWT Claims Set containing the desired claims.&amp;nbsp; Note that whitespace is explicitly allowed in the representation and no canonicalization need be performed before encoding.&lt;/li&gt;&lt;li&gt;Let the Message be the octets of the UTF-8 representation of the JWT Claims Set.&lt;/li&gt;&lt;li&gt;Create a JOSE Header containing the desired set of Header Parameters. The JWT MUST conform to either the [JWS] or [JWE] specifications. Note that whitespace is explicitly allowed in the representation and no canonicalization need be performed before encoding.&lt;/li&gt;&lt;li&gt;Depending upon whether the JWT is a JWS or JWE, there are two cases:&lt;ul&gt;&lt;li&gt;If the JWT is a JWS, create a JWS using the Message as the JWS Payload; all steps specified in [JWS] for creating a JWS MUST be followed.&lt;/li&gt;&lt;li&gt;Else, if the JWT is a JWE, create a JWE using the Message as the plaintext for the JWE; all steps specified in [JWE] for creating a JWE MUST be followed.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;If a nested signing or encryption operation will be performed, let the Message be the JWS or JWE, and return to Step 3, using a "cty" (content type) value of "JWT" in the new JOSE Header created in that step.&lt;/li&gt;&lt;li&gt;Otherwise, let the resulting JWT be the JWS or JWE.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="RFC 7519" url="https://tools.ietf.org/html/rfc7519"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="3.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the stateless token uses digital signatures, encryption and other countermeasures to protect against tampering, enveloping, relay, null cipher and key substitution attacks.&lt;/p&gt;&lt;p&gt;When validating a JWT, the following steps are performed. The order of the steps is not significant in cases where there are no dependencies between the inputs and outputs of the steps.&amp;nbsp; If any of the listed steps fail, then the JWT MUST be rejected -- that is, treated by the application as an invalid input.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Verify that the JWT contains at least one period ('.') character.&lt;/li&gt;&lt;li&gt;Let the Encoded JOSE Header be the portion of the JWT before the first period ('.') character.&lt;/li&gt;&lt;li&gt;Base64url decode the Encoded JOSE Header following the restriction that no line breaks, whitespace, or other additional characters have been used.&lt;/li&gt;&lt;li&gt;Verify that the resulting octet sequence is a UTF-8-encoded representation of a completely valid JSON object conforming to RFC 7159 [RFC7159]; let the JOSE Header be this JSON object.&lt;/li&gt;&lt;li&gt;Verify that the resulting JOSE Header includes only parameters and values whose syntax and semantics are both understood and supported or that are specified as being ignored when not understood.&lt;/li&gt;&lt;li&gt;Determine whether the JWT is a JWS or a JWE using any of the methods described in Section 9 of [JWE].&lt;/li&gt;&lt;li&gt;Depending upon whether the JWT is a JWS or JWE, there are two cases:&lt;ul&gt;&lt;li&gt;If the JWT is a JWS, follow the steps specified in [JWS] for validating a JWS.&amp;nbsp; Let the Message be the result of base64url decoding the JWS Payload.&lt;/li&gt;&lt;li&gt;Else, if the JWT is a JWE, follow the steps specified in [JWE] for validating a JWE.&amp;nbsp; Let the Message be the resulting plaintext.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;If the JOSE Header contains a "cty" (content type) value of "JWT", then the Message is a JWT that was the subject of nested signing or encryption operations.&amp;nbsp; In this case, return to Step 1, using the Message as the JWT.&lt;/li&gt;&lt;li&gt;Otherwise, base64url decode the Message following the restriction that no line breaks, whitespace, or other additional characters have been used.&lt;/li&gt;&lt;li&gt;Verify that the resulting octet sequence is a UTF-8-encoded representation of a completely valid JSON object conforming to RFC 7159 [RFC7159]; let the JWT Claims Set be this JSON object.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Finally, note that it is an application decision which algorithms may be used in a given context.&amp;nbsp; Even if a JWT can be successfully validated, unless the algorithms used in the JWT are acceptable to the application, it SHOULD reject the JWT.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.738">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="minimise-parameters-request" name="Minimize the number of parameters in a request" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP requests should contain only the necessary parameters to perform the action (such as hidden fields, Ajax variables, cookies and header values). And the response only return the required information. If unnecessary information is included in the HTTP request, the attack surface is enlarged unnecessarily.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify all requests have only the necessary parameters needed to work correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Having gained access to an account, for example through session hijacking or cross-site scripting, an attack may compromise data and functionality accessible to the victim. This may include elevating privileges or accessing sensitive data and functionality, such as changing passwords, creating accounts, or transferring funds.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;These critical functions and sensitive data should be further protected from attack using a risk-based authentication model requiring re-authentication via multi-factor authentication, or use of a token to sign transactions or operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement re-authentication on key functions (such as requiring the old password before setting a new one).&lt;/li&gt;&lt;li&gt;Use secondary authentication such as a transaction PIN to allow financial transfers.&lt;/li&gt;&lt;li&gt;Critical administrative functionality should require multi-factor authentication (such as a hard or soft token).&lt;/li&gt;&lt;li&gt;Consider use of signing technologies or tokens that enable the server-side to verify the authenticity of a request and mitigate Man in the Middle (MiTM) or Man in the Browser (MiTB) attacks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1" supportedStandardRef="swift-cscf"/>
            <standard ref="4.2" supportedStandardRef="swift-cscf"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2" supportedStandardRef="swift-cscf"/>
            <standard ref="5.4" supportedStandardRef="swift-cscf"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify critical functionalities of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the risk appetite for those functionalities.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Validate that re-authentication is required for those functions if deemed
                            necessary.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-25T02:57:46.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-151" issueId="" issueLink="" name="An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Identity Spoofing refers to the action of assuming (i.e., taking on) the identity of some other entity (human or non-human) and then using that identity to accomplish a goal. An adversary may craft messages that appear to come from a different principle or use stolen / spoofed authentication credentials. Alternatively, an attacker may intercept a message from a legitimate sender and attempt to make it look like the message comes from them without changing its content. The latter form of this attack can be used to hijack credentials from legitimate users. Identity Spoofing attacks need not be limited to transmitted messages - any resource that is associated with an identity (for example, a file with a signature) can be the target of an attack where the adversary attempts to change the identity. This attack differs from Content Spoofing attacks where the adversary does not wish to change the identity of the message, but instead wishes to change what the message says. In an Identity Spoofing attack, the adversary is attempting to change the identity of the content.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-287">
                  <countermeasures>
                    <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-306">
                  <countermeasures>
                    <countermeasure ref="http-headers-authentication" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="http-headers-authentication" mitigation="50"/>
                <countermeasure ref="revoke-compromised-authentication-tokens" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-384" issueId="" issueLink="" name="Application API Message Manipulation via Man-in-the-Middle" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attacker manipulates either egress or ingress data from a client within an application framework in order to change the content of messages. Performing this attack may allow an attacker to gain unauthorized privileges within the application, or conduct further attacks such as phishing, other deceptive strategies for spreading malware, or traditional web-application attacks. These techniques require use of specialized software that allows the attacker to "man-in-the-middle" (MITM) communications between the web browser and the remote system. Despite the use of MITM software, the attack is actually directed at the server, as the client is one node in a series of content brokers that pass information along to the application framework. "Man-in-the-Middle" attacks are not normally at the network layer, but the application-layer, the root cause of which is the master application's trust in the integrity of code supplied by the client.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-345">
                  <countermeasures>
                    <countermeasure ref="SRV-JSON-WEB-SIGN" mitigation="50"/>
                    <countermeasure ref="follow-jwt-standard-generation-token" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SRV-JSON-WEB-SIGN" mitigation="50"/>
                <countermeasure ref="follow-jwt-standard-generation-token" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-39" issueId="" issueLink="" name="Attacker gains access by manipulation of an authentication token or other sensitive data" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;In circumstances in which an application holds important data client-side in tokens (cookies, URLs, data files, and so forth) this data could potentially be manipulated. If client or server-side application components reinterpret that data as authentication tokens or data (such as store item pricing or wallet information) then even opaquely manipulating that data may bear fruit for an Attacker.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-233">
                  <countermeasures>
                    <countermeasure ref="minimise-parameters-request" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798">
                  <countermeasures>
                    <countermeasure ref="AVOID-API-KEYS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AVOID-API-KEYS" mitigation="50"/>
                <countermeasure ref="minimise-parameters-request" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-633" issueId="" issueLink="" name="An adversary exploits a weakness in authentication to create an access token to associate a process/thread" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary exploits a weakness in authentication to create an access token (or equivalent) that impersonates a different entity, and then associates a process/thread to that that impersonated token. This action causes a downstream user to make a decision or take action that is based on the assumed identity.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSD-SESS-REAUTH">
                  <countermeasures>
                    <countermeasure ref="CSD-SESS-REAUTH" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSD-SESS-REAUTH" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e1e515e5-ff5f-4415-8ceb-d8ae3c727f33" diagramComponentId="9f1f1574-6af9-48c9-bc01-1735285937e7" ref="411fa1c9-795a-45ad-a566-e08b058f5d76" name="Unauthenticated User" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="3280b448-7843-4544-91fc-8663fae188eb" diagramComponentId="9a22b442-4c6a-4d2b-bc4d-c8cece5fcf1e" ref="ed687610-d75c-461f-8ede-ff390dbc0c14" name="Unauthenticated User" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="843b3aa1-bc27-43ee-8f58-d19de1e055ab" diagramComponentId="79a0b7dd-b18a-4004-b158-464d2d48f4c1" ref="1a9add6e-6f63-493a-8551-a0349e0c028e" name="Web Client" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="web-client" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.138">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.810">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.531">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.136">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.137">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.137">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:30.135">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.1" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.6" supportedStandardRef="swift-cscf"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-low-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.942">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.942">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.940">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.942">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.492">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.943">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.640">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.942">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.942">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" issueId="" issueLink="" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" issueId="" issueLink="" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-63" issueId="" issueLink="" name="An adversary embeds malicious scripts in content that will be served to web browsers" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" issueId="" issueLink="" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DEP-CLIENT-TECH" issueId="" issueLink="" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b6b0817d-e36b-42a0-8609-3ed906bb9acb" diagramComponentId="6b8801bc-0907-4ef1-918a-5eca989284cd" ref="b6455908-d262-488d-bd47-503b18c745cc" name="Web Client" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="web-client" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.208">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:28.898">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:28.647">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.207">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.207">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.207">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.205">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="2.1" supportedStandardRef="swift-cscf"/>
            <standard ref="2.4A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.5A" supportedStandardRef="swift-cscf"/>
            <standard ref="2.6" supportedStandardRef="swift-cscf"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-low-baseline"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.019">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:28.585">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.2" supportedStandardRef="swift-cscf"/>
            <standard ref="6.3" supportedStandardRef="swift-cscf"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:28.780">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="53" state="Recommended" owner="support" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-02-28T10:11:29.021">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
          <settings>
            <issueTrackers>
              <jira>
                <fields/>
              </jira>
            </issueTrackers>
          </settings>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" issueId="" issueLink="" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" issueId="" issueLink="" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CAPEC-63" issueId="" issueLink="" name="An adversary embeds malicious scripts in content that will be served to web browsers" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" issueId="" issueLink="" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
            <threat ref="DEP-CLIENT-TECH" issueId="" issueLink="" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="support" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="STRIDE" value=""/>
              </customFields>
              <settings>
                <issueTrackers>
                  <jira>
                    <fields/>
                  </jira>
                </issueTrackers>
              </settings>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e9995888-b7e8-479b-91fb-9454876ad247" diagramComponentId="8c73c52d-259b-4e2c-b596-c803f9a77887" ref="f9121616-c975-420f-88ca-cb2db1021abe" name="Web Client" desc="" library="" parentComponentRef="" componentDefinitionRef="" generatedByRules="false" persistent="false">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings>
        <issueTrackers>
          <jira>
            <fields/>
          </jira>
        </issueTrackers>
      </settings>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
  <threadFixScans/>
</project>

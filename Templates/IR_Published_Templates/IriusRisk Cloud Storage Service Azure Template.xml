<?xml version="1.0" encoding="UTF-8"?>
<template ref="iriusrisk-cloud-storage-service-azure-template" name="IriusRisk Cloud Storage Service Azure Template" tags="" modelUpdated="">
  <desc>Involves storing, accessing, and managing data over the cloud, necessitating secure data transmission and storage.</desc>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
  </trustZones>
  <questions/>
  <assets>
    <asset type="" name="Customer Data" desc="Data that uniquely identifies customers." identifier="">
      <classification name="Personally Identifiable Information" desc="&#10;                Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity.&#10;                " confidentiality="80" integrity="80" availability="20"/>
    </asset>
    <asset type="" name="Personally Identifiable Information" desc="Any information relating to an identified or identifiable natural person &#13;&#10;('Data Subject') an identifiable person is one who can be identified, &#13;&#10;directly or indirectly, in particular by reference to an identification &#13;&#10;number or to one or more factors specific to his physical, physiological, &#13;&#10;mental, economic, cultural or social identity." identifier="">
      <classification name="Personally Identifiable Information" desc="&#10;                Any information relating to an identified or identifiable natural person ('Data Subject');&#10;                an identifiable person is one who can be identified, directly or indirectly,&#10;                in particular by reference to an identification number or to one or more factors specific to his&#10;                physical, physiological, mental, economic, cultural or social identity.&#10;                " confidentiality="80" integrity="80" availability="20"/>
    </asset>
  </assets>
  <settings/>
  <dataflows>
    <dataflow name="AWS Lambda -&gt; AWS Glacier" ref="11be9256-158b-4190-a3ec-6cd7cb2bb539" source="83ced909-d674-4e94-a1cd-fd4e6aa29534" target="8c7fe4ee-6828-4ecc-accc-571a8d5ba69e">
      <assets/>
      <tags>
        <tag tag="trigger_restore"/>
      </tags>
    </dataflow>
    <dataflow name="AWS CloudFront -&gt; AWS CloudWatch" ref="64ccd339-0d1a-45aa-af39-afbd91e0ea48" source="ee803c64-dbd1-4983-80f0-37c207b52df1" target="83ced909-d674-4e94-a1cd-fd4e6aa29534">
      <assets/>
      <tags>
        <tag tag="object_not_found"/>
      </tags>
    </dataflow>
    <dataflow name="AWS CloudFront -&gt; AWS S3 (Simple Storage Service)" ref="c4ecd281-c079-424f-9c0b-4e4ec335a36e" source="ee803c64-dbd1-4983-80f0-37c207b52df1" target="8ab89f6e-8afa-4d2e-92d3-81ab142a9e8f">
      <assets/>
      <tags>
        <tag tag="retrieve_object"/>
      </tags>
    </dataflow>
    <dataflow name="User -&gt; AWS CloudFront" ref="c9e8a87a-d149-4db3-93ea-5678ffd31242" source="cd051b43-00ed-41d2-9f74-f87f38795134" target="ee803c64-dbd1-4983-80f0-37c207b52df1">
      <assets/>
      <tags>
        <tag tag="request_data"/>
      </tags>
    </dataflow>
    <dataflow name="AWS Glacier -&gt; AWS S3 (Simple Storage Service)" ref="db8350d7-8808-4fd1-9b89-bcaedd413cdf" source="8c7fe4ee-6828-4ecc-accc-571a8d5ba69e" target="8ab89f6e-8afa-4d2e-92d3-81ab142a9e8f">
      <assets/>
      <tags>
        <tag tag="restore_object"/>
      </tags>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="status" value="Design"/>
  </customFields>
  <components>
    <component uuid="fc1a557a-993b-4f7d-97a1-d84037debfd9" diagramComponentId="a437215b-893c-481d-ba3d-57910775f1fb" ref="8ab89f6e-8afa-4d2e-92d3-81ab142a9e8f" name="Azure Blob Storage" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="CD-MICROSOFT-AZURE-BLOB-STORAGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.390">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.388">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.389">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-S03" name="Configure Azure Storage settings for each storage" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be selected to secure Azure Storages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that 'Secure transfer required' is set to 'Enabled'&lt;/li&gt;
 &lt;li&gt;Ensure that 'Enable Infrastructure Encryption' for Each Storage Account in Azure Storage is Set to 'enabled'&lt;/li&gt;
 &lt;li&gt;Ensure that 'Enable key rotation reminders' is enabled for each Storage Account&lt;/li&gt;
 &lt;li&gt;Ensure that storage account access keys are periodically regenerated&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Queue service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure that shared access signature tokens expire within an hour&lt;/li&gt;
 &lt;li&gt;Ensure that 'Public access level' is set to Private for blob containers&lt;/li&gt;
 &lt;li&gt;Ensure default network access rule for Storage Accounts is set to deny&lt;/li&gt;
 &lt;li&gt;Ensure 'Trusted Microsoft Services' is enabled for Storage Account access&lt;/li&gt;
 &lt;li&gt;Ensure soft delete is enabled for Azure Storage&lt;/li&gt;
 &lt;li&gt;Ensure storage for critical data are encrypted with Customer Managed Key&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Blob service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Table service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure the "Minimum TLS version" for storage accounts is set to "Version 1.2"&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To enable Infrastructure Encryption:&lt;/p&gt;
&lt;p&gt;1. When creating a storage account, proceed as normal, but stop on the 'Advanced'&amp;nbsp;&lt;br&gt;tab.&lt;br&gt;2. Select 'Enabled' next to Infrastructure Encryption.&amp;nbsp;&lt;br&gt;If a infrastructure encryption was not enabled on blob storage creation, there is no official way to enable it.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In order to fix other options:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Go to Storage Accounts&lt;/li&gt;
 &lt;li&gt;For each storage account 
  &lt;ol&gt;
   &lt;li&gt;Go to Access keys 
    &lt;ol&gt;
     &lt;li&gt;Click Set rotation reminder&lt;/li&gt;
     &lt;li&gt;Check the Enable key rotation reminders&lt;/li&gt;
     &lt;li&gt;In the Send reminders field select Custom, then set the Remind me every: field to 90 and the period drop down menu to Days.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Configuration 
    &lt;ol&gt;
     &lt;li&gt;Go to Allow Blob public access 
      &lt;ol&gt;
       &lt;li&gt;Set Disabled if no anonymous access is needed on the storage account&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Set Secure transfer required to Enabled&lt;/li&gt;
     &lt;li&gt;&amp;nbsp;Set the minimum TLS version to be Version 1.2&amp;nbsp;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Diagnostics settings (classic) from Monitoring (classic) 
    &lt;ol&gt;
     &lt;li&gt;Set the Status to On, if set to Off.&lt;/li&gt;
     &lt;li&gt;Select Queue properties. 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Queue service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Select Blob properties 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Blob service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Select Table properties 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Table service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Shared access signature 
    &lt;ol&gt;
     &lt;li&gt;Set Start and expiry date/time within an hour&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Containers under BLOB SERVICE 
    &lt;ol&gt;
     &lt;li&gt;For each container, click Access policy 
      &lt;ol&gt;
       &lt;li&gt;Set Public access level to Private (no anonymous access)&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Firewalls and virtual networks 
    &lt;ol&gt;
     &lt;li&gt;Ensure that you have elected to allow access from Selected networks.&lt;/li&gt;
     &lt;li&gt;Enable check box for Allow trusted Microsoft services to access this storage account.&lt;/li&gt;
     &lt;li&gt;Add rules to allow traffic from specific network.&lt;/li&gt;
     &lt;li&gt;Click Save to apply your changes.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Data Protection 
    &lt;ol&gt;
     &lt;li&gt;Select set soft delete enabled and enter a number of days you want to retain soft deleted data.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Encryption 
    &lt;ol&gt;
     &lt;li&gt;Set Customer Managed Keys&lt;/li&gt;
     &lt;li&gt;Select the Encryption key and enter the appropriate setting value&lt;/li&gt;
     &lt;li&gt;Click Save&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ensure that storage account access keys are periodically regenerated by following Microsoft Azure documentation for &lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal#regenerate-storage-access-keys" target="_blank"&gt;regenerating storage account access keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, some of these actions can be done with the Azure CLI 2.0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use the below command to enable Secure transfer required for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;storageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --https-only true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to Set the minimum TLS version for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update \&lt;br&gt;--name &amp;lt;storage-account&amp;gt; \&lt;br&gt;--resource-group &amp;lt;resource-group&amp;gt; \&lt;br&gt;--min-tls-version TLS1_2&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable Infrastructure encryption required for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account create \&lt;br&gt;--name &amp;lt;storage-account&amp;gt; \&lt;br&gt;--resource-group &amp;lt;resource-group&amp;gt; \&lt;br&gt;--location &amp;lt;location&amp;gt; \&lt;br&gt;--sku Standard_RAGRS \&lt;br&gt;--kind StorageV2 \&lt;br&gt;--require-infrastructure-encryption&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Queue service.&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services q --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ensure the below command output contains null&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage container list --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt; --query '[*].properties.publicAccess'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ensure allowBlobPublicAccess is false&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account show --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --query allowBlobPublicAccess --output tsv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Identify the container name from previous command. Set the permission for public access to private(off) for the above container name, using the below command&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage container set-permission --name &amp;lt;containerName&amp;gt; --public-access off --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Set Disabled if no anonymous access is wanted on the storage account&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --allow-blob-public-access false&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to update default-action to Deny.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --default-action Deny&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to update trusted Microsoft services.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --bypass AzureServices&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Update retention days in below command&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage blob service-properties delete-policy update --days-retained &amp;lt;RetentionDaysValue&amp;gt; --account-name &amp;lt;StorageAccountName&amp;gt; --enable true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Blob service.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services b --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Table service.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services t --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.14" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.15" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.15" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.185">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE2" name="Configure operational backup for Azure Blob Storage" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure operational backup for Azure Blob Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Backup and configure the backup source on a desired frequency and with a desired retention period. Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts. Backup of blobs is configured at the storage account level. So, all blobs in the storage account are protected with operational backup.&lt;br&gt; You can configure backup for multiple storage accounts using the Backup Center. You can also configure backup for a storage account using the storage account's Data Protection properties.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Azure Backup is currently only supported for Azure Blob storage. Queue and table data can be backed up by using the AzCopy command line tool.&lt;/p&gt; 
&lt;p&gt;For detailed information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-configure-manage"/>
            <reference name="Overview of operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-overview"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure you have configured operational backup for Azure Blob Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE4" name="Configure private endpoints for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private endpoints for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use private endpoints for your Azure Storage accounts to allow clients on a virtual network (VNet) to securely access data over a Private Link. The private endpoint uses a separate IP address from the VNet address space for each storage account service. Network traffic between the clients on the VNet and the storage account traverses over the VNet and a private link on the Microsoft backbone network, eliminating exposure from the public internet.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Private endpoints are not available for general-purpose v1 storage accounts.&lt;/p&gt; 
&lt;p&gt;Using private endpoints for your storage account enables you to:&lt;br&gt; - Secure your storage account by configuring the storage firewall to block all connections on the public endpoint for the storage service.&lt;br&gt; - Increase security for the virtual network (VNet), by enabling you to block exfiltration of data from the VNet.&lt;br&gt; - Securely connect to storage accounts from on-premises networks that connect to the VNet using VPN or ExpressRoutes with private-peering.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create storage account with a private endpoint&lt;/p&gt; 
&lt;p&gt;In this section, you'll create a storage account and configure the private endpoint.&lt;/p&gt; 
&lt;p&gt;1. In the left-hand menu, select Create a resource &amp;gt; Storage &amp;gt; Storage account, or search for Storage account in the search box.&lt;/p&gt; 
&lt;p&gt;2. In the Basics tab of Create storage account enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Project Details &lt;br&gt; Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Instance details &lt;br&gt; Storage account name: Enter mystorageaccount. If the name is unavailable, enter a unique name.&lt;br&gt; Location: Select (US) East US.&lt;br&gt; Performance: Leave the default Standard.&lt;br&gt; Redundancy: Select Locally-redundant storage (LRS).&lt;/p&gt; 
&lt;p&gt;3. Select the Networking tab or select the Next: Networking button.&lt;/p&gt; 
&lt;p&gt;4. In the Networking tab, under Network connectivity select Disable public access and use private access.&lt;/p&gt; 
&lt;p&gt;5. In Private endpoint, select + Add private endpoint.&lt;/p&gt; 
&lt;p&gt;6. In Create private endpoint enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Location: Select East US.&lt;br&gt; Name: Enter myPrivateEndpoint.&lt;br&gt; Storage sub-resource: Leave the default blob.&lt;br&gt; Networking&lt;br&gt; Virtual network: Select myVNet.&lt;br&gt; Subnet: Select mySubnet.&lt;br&gt; Private DNS integration&lt;br&gt; Integrate with private DNS zone: Leave the default Yes.&lt;br&gt; Private DNS Zone: Leave the default (New) privatelink.blob.core.windows.net.&lt;/p&gt; 
&lt;p&gt;7. Select OK.&lt;/p&gt; 
&lt;p&gt;8. Select Review + create.&lt;/p&gt; 
&lt;p&gt;9. Select Create.&lt;/p&gt; 
&lt;p&gt;10. Select Resource groups in the left-hand navigation pane.&lt;/p&gt; 
&lt;p&gt;11. Select myResourceGroup.&lt;/p&gt; 
&lt;p&gt;12. Select the storage account you created in the previous steps.&lt;/p&gt; 
&lt;p&gt;13. In the Security + networking section of the storage account, select Access keys.&lt;/p&gt; 
&lt;p&gt;14. Select Show keys, then select copy on the Connection string for key1.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Connect to a storage account using an Azure Private Endpoint" url="https://learn.microsoft.com/en-us/azure/private-link/tutorial-private-endpoint-storage-portal"/>
            <reference name="Use private endpoints for Azure Storage" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-private-endpoints"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test connectivity to private endpoint&lt;/p&gt;

	&lt;p&gt;In this section, you'll use the virtual machine described in Reference URLs to connect to the storage account across the private endpoint using Microsoft Azure Storage Explorer.&lt;/p&gt;

	&lt;p&gt;1. Select Resource groups in the left-hand navigation pane.&lt;/p&gt;

	&lt;p&gt;2. Select myResourceGroup.&lt;/p&gt;

	&lt;p&gt;3. Select myVM.&lt;/p&gt;

	&lt;p&gt;4. On the overview page for myVM, select Connect then Bastion.&lt;/p&gt;

	&lt;p&gt;5. Enter the username and password that you entered during the virtual machine creation.&lt;/p&gt;

	&lt;p&gt;6. Select Connect button.&lt;/p&gt;

	&lt;p&gt;7. Open Windows PowerShell on the server after you connect.&lt;/p&gt;

	&lt;p&gt;8. Enter nslookup &lt;storage-account-name&gt;.blob.core.windows.net. Replace &lt;storage-account-name&gt; with the name of the storage account you created in the previous steps. You'll receive a message similar to what is displayed below:&lt;/p&gt;

	&lt;p&gt;Server:  UnKnown&lt;br /&gt;
Address:  168.63.129.16&lt;/p&gt;

	&lt;p&gt;Non-authoritative answer:&lt;br /&gt;
Name:    mystorageaccount.privatelink.blob.core.windows.net&lt;br /&gt;
Address:  10.1.0.5&lt;br /&gt;
Aliases:  mystorageaccount.blob.core.windows.net&lt;br /&gt;
A private IP address of 10.1.0.5 is returned for the storage account name. This address is in mySubnet subnet of myVNet virtual network you created previously.&lt;/p&gt;

	&lt;p&gt;9. Install Microsoft Azure Storage Explorer on the virtual machine.&lt;/p&gt;

	&lt;p&gt;10. Select Finish after the Microsoft Azure Storage Explorer is installed. Leave the box checked to open the application.&lt;/p&gt;

	&lt;p&gt;11. In the Select Resource screen, select Storage account or service to add a connection in Microsoft Azure Storage Explorer to your storage account that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;12. In the Select Connection Method screen, select Connection string, and then Next.&lt;/p&gt;

	&lt;p&gt;13. In the box under Connection String, paste the connection string from the storage account you copied in the previous steps. The storage account name will automatically populate in the box under Display name.&lt;/p&gt;

	&lt;p&gt;14. Select Next.&lt;/p&gt;

	&lt;p&gt;15. Verify the settings are correct in Summary.&lt;/p&gt;

	&lt;p&gt;16. Select Connect, then select mystorageaccount from the Storage Accounts left-hand menu.&lt;/p&gt;

	&lt;p&gt;17. Under Blob Containers, you see mycontainer that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;18. Close the connection to myVM.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.185">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE1" name="Discover, classify, and label sensitive data for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Discover, classify, and label sensitive data for Azure Storage&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Establish and maintain an inventory of the sensitive data, based on the defined sensitive data scope. Use tools to discover, classify and label the in- scope sensitive data.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Use tools such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data resides in Azure Storage.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect to Azure Blob storage in Microsoft Purview" url="https://learn.microsoft.com/en-us/azure/purview/register-scan-azure-blob-storage-source"/>
            <reference name="Security Control v3: Data protection" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-1-discover-classify-and-label-sensitive-data"/>
          </references>
          <standards>
            <standard ref="DP-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure you are using a tool such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data that reside in Azure Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Azure Defender for servers&lt;/li&gt;&lt;li&gt;Azure Defender for App Service&lt;/li&gt;&lt;li&gt;Azure Defender for Storage&lt;/li&gt;&lt;li&gt;Azure Defender for SQL&lt;/li&gt;&lt;li&gt;Azure Defender for Kubernetes&lt;/li&gt;&lt;li&gt;Azure Defender for container registries&lt;/li&gt;&lt;li&gt;Azure Defender for Key Vault&lt;/li&gt;&lt;li&gt;Azure Defender for Resource Manager&lt;/li&gt;&lt;li&gt;Azure Defender for DNS&lt;/li&gt;&lt;li&gt;Azure Defender for IoT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;To enable Azure Defender on one subscription:&lt;/p&gt;&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br&gt;2. Select the subscription or workspace that you want to protect.&lt;br&gt;3. Select Azure Defender on to upgrade.&lt;br&gt;4. Select Save.&lt;/p&gt;&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br&gt;- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.13" supportedStandardRef="cis-azure-standard"/>
            <standard ref="2.1.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.183">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE3" name="Restrict access with Azure Storage Firewall" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access with Azure Storage Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, storage accounts accept connections from clients on any network. Configure your storage account's firewall by restricting access to clients from specific public IP address ranges, select virtual networks, or specific Azure resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Change the default network access rule&lt;/p&gt; 
&lt;p&gt;1. Go to the storage account you want to secure.&lt;/p&gt; 
&lt;p&gt;2. Locate the Networking settings under Security + networking.&lt;/p&gt; 
&lt;p&gt;3. Choose which type of public network access you want to allow.&lt;/p&gt; 
&lt;p&gt;- To allow traffic from all networks, select Enabled from all networks.&lt;/p&gt; 
&lt;p&gt;- To allow traffic only from specific virtual networks, select Enabled from selected virtual networks and IP addresses.&lt;/p&gt; 
&lt;p&gt;- To block traffic from all networks, select Disabled.&lt;/p&gt; 
&lt;p&gt;4. Select Save to apply your changes.&lt;/p&gt; 
&lt;p&gt;Caution&lt;br&gt; By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. For this reason, if you set Public network access to Disabled after previously setting it to Enabled from selected virtual networks and IP addresses, any resource instances and exceptions you had previously configured, including Allow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services may still have access to the storage account after setting Public network access to Disabled.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Changing this setting can impact your application's ability to connect to Azure Storage. Make sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change the default network access rule" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal#change-the-default-network-access-rule"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure access is restricted with Azure Storage Firewall.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards>
            <standard ref="IM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.186">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-S03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-S03" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="354c5eb8-ce66-4c1c-9e8d-fa136af2dc41" diagramComponentId="c1746699-646e-42ae-b907-b3ca994742b2" ref="8c7fe4ee-6828-4ecc-accc-571a8d5ba69e" name="Azure Blob Storage - Cool tier" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="CD-MICROSOFT-AZURE-BLOB-STORAGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.268">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.268">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.268">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.269">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-S03" name="Configure Azure Storage settings for each storage" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be selected to secure Azure Storages.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that 'Secure transfer required' is set to 'Enabled'&lt;/li&gt;
 &lt;li&gt;Ensure that 'Enable Infrastructure Encryption' for Each Storage Account in Azure Storage is Set to 'enabled'&lt;/li&gt;
 &lt;li&gt;Ensure that 'Enable key rotation reminders' is enabled for each Storage Account&lt;/li&gt;
 &lt;li&gt;Ensure that storage account access keys are periodically regenerated&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Queue service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure that shared access signature tokens expire within an hour&lt;/li&gt;
 &lt;li&gt;Ensure that 'Public access level' is set to Private for blob containers&lt;/li&gt;
 &lt;li&gt;Ensure default network access rule for Storage Accounts is set to deny&lt;/li&gt;
 &lt;li&gt;Ensure 'Trusted Microsoft Services' is enabled for Storage Account access&lt;/li&gt;
 &lt;li&gt;Ensure soft delete is enabled for Azure Storage&lt;/li&gt;
 &lt;li&gt;Ensure storage for critical data are encrypted with Customer Managed Key&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Blob service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure Storage logging is enabled for Table service for read, write, and delete requests&lt;/li&gt;
 &lt;li&gt;Ensure the "Minimum TLS version" for storage accounts is set to "Version 1.2"&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To enable Infrastructure Encryption:&lt;/p&gt;
&lt;p&gt;1. When creating a storage account, proceed as normal, but stop on the 'Advanced'&amp;nbsp;&lt;br&gt;tab.&lt;br&gt;2. Select 'Enabled' next to Infrastructure Encryption.&amp;nbsp;&lt;br&gt;If a infrastructure encryption was not enabled on blob storage creation, there is no official way to enable it.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In order to fix other options:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Go to Storage Accounts&lt;/li&gt;
 &lt;li&gt;For each storage account 
  &lt;ol&gt;
   &lt;li&gt;Go to Access keys 
    &lt;ol&gt;
     &lt;li&gt;Click Set rotation reminder&lt;/li&gt;
     &lt;li&gt;Check the Enable key rotation reminders&lt;/li&gt;
     &lt;li&gt;In the Send reminders field select Custom, then set the Remind me every: field to 90 and the period drop down menu to Days.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Configuration 
    &lt;ol&gt;
     &lt;li&gt;Go to Allow Blob public access 
      &lt;ol&gt;
       &lt;li&gt;Set Disabled if no anonymous access is needed on the storage account&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Set Secure transfer required to Enabled&lt;/li&gt;
     &lt;li&gt;&amp;nbsp;Set the minimum TLS version to be Version 1.2&amp;nbsp;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Diagnostics settings (classic) from Monitoring (classic) 
    &lt;ol&gt;
     &lt;li&gt;Set the Status to On, if set to Off.&lt;/li&gt;
     &lt;li&gt;Select Queue properties. 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Queue service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Select Blob properties 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Blob service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
     &lt;li&gt;Select Table properties 
      &lt;ol&gt;
       &lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Table service.&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Shared access signature 
    &lt;ol&gt;
     &lt;li&gt;Set Start and expiry date/time within an hour&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Containers under BLOB SERVICE 
    &lt;ol&gt;
     &lt;li&gt;For each container, click Access policy 
      &lt;ol&gt;
       &lt;li&gt;Set Public access level to Private (no anonymous access)&lt;/li&gt;
      &lt;/ol&gt;&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Firewalls and virtual networks 
    &lt;ol&gt;
     &lt;li&gt;Ensure that you have elected to allow access from Selected networks.&lt;/li&gt;
     &lt;li&gt;Enable check box for Allow trusted Microsoft services to access this storage account.&lt;/li&gt;
     &lt;li&gt;Add rules to allow traffic from specific network.&lt;/li&gt;
     &lt;li&gt;Click Save to apply your changes.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Data Protection 
    &lt;ol&gt;
     &lt;li&gt;Select set soft delete enabled and enter a number of days you want to retain soft deleted data.&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
   &lt;li&gt;Go to Encryption 
    &lt;ol&gt;
     &lt;li&gt;Set Customer Managed Keys&lt;/li&gt;
     &lt;li&gt;Select the Encryption key and enter the appropriate setting value&lt;/li&gt;
     &lt;li&gt;Click Save&lt;/li&gt;
    &lt;/ol&gt;&lt;/li&gt;
  &lt;/ol&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ensure that storage account access keys are periodically regenerated by following Microsoft Azure documentation for &lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal#regenerate-storage-access-keys" target="_blank"&gt;regenerating storage account access keys&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Alternatively, some of these actions can be done with the Azure CLI 2.0.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Use the below command to enable Secure transfer required for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;storageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --https-only true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to Set the minimum TLS version for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update \&lt;br&gt;--name &amp;lt;storage-account&amp;gt; \&lt;br&gt;--resource-group &amp;lt;resource-group&amp;gt; \&lt;br&gt;--min-tls-version TLS1_2&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable Infrastructure encryption required for a Storage Account&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account create \&lt;br&gt;--name &amp;lt;storage-account&amp;gt; \&lt;br&gt;--resource-group &amp;lt;resource-group&amp;gt; \&lt;br&gt;--location &amp;lt;location&amp;gt; \&lt;br&gt;--sku Standard_RAGRS \&lt;br&gt;--kind StorageV2 \&lt;br&gt;--require-infrastructure-encryption&amp;nbsp;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Queue service.&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services q --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ensure the below command output contains null&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage container list --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt; --query '[*].properties.publicAccess'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ensure allowBlobPublicAccess is false&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account show --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --query allowBlobPublicAccess --output tsv&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Identify the container name from previous command. Set the permission for public access to private(off) for the above container name, using the below command&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage container set-permission --name &amp;lt;containerName&amp;gt; --public-access off --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Set Disabled if no anonymous access is wanted on the storage account&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --allow-blob-public-access false&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to update default-action to Deny.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --default-action Deny&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to update trusted Microsoft services.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --bypass AzureServices&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Update retention days in below command&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage blob service-properties delete-policy update --days-retained &amp;lt;RetentionDaysValue&amp;gt; --account-name &amp;lt;StorageAccountName&amp;gt; --enable true&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Blob service.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services b --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use the below command to enable the Storage Logging for Table service.&amp;nbsp;&lt;/p&gt;
&lt;blockquote&gt;
 &lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services t --log rwd --retention 90&lt;/p&gt;
&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.14" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.15" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.15" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API8:2023-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.148">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE2" name="Configure operational backup for Azure Blob Storage" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure operational backup for Azure Blob Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Backup and configure the backup source on a desired frequency and with a desired retention period. Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts. Backup of blobs is configured at the storage account level. So, all blobs in the storage account are protected with operational backup.&lt;br&gt; You can configure backup for multiple storage accounts using the Backup Center. You can also configure backup for a storage account using the storage account's Data Protection properties.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Azure Backup is currently only supported for Azure Blob storage. Queue and table data can be backed up by using the AzCopy command line tool.&lt;/p&gt; 
&lt;p&gt;For detailed information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-configure-manage"/>
            <reference name="Overview of operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-overview"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure you have configured operational backup for Azure Blob Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE4" name="Configure private endpoints for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private endpoints for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use private endpoints for your Azure Storage accounts to allow clients on a virtual network (VNet) to securely access data over a Private Link. The private endpoint uses a separate IP address from the VNet address space for each storage account service. Network traffic between the clients on the VNet and the storage account traverses over the VNet and a private link on the Microsoft backbone network, eliminating exposure from the public internet.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Private endpoints are not available for general-purpose v1 storage accounts.&lt;/p&gt; 
&lt;p&gt;Using private endpoints for your storage account enables you to:&lt;br&gt; - Secure your storage account by configuring the storage firewall to block all connections on the public endpoint for the storage service.&lt;br&gt; - Increase security for the virtual network (VNet), by enabling you to block exfiltration of data from the VNet.&lt;br&gt; - Securely connect to storage accounts from on-premises networks that connect to the VNet using VPN or ExpressRoutes with private-peering.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create storage account with a private endpoint&lt;/p&gt; 
&lt;p&gt;In this section, you'll create a storage account and configure the private endpoint.&lt;/p&gt; 
&lt;p&gt;1. In the left-hand menu, select Create a resource &amp;gt; Storage &amp;gt; Storage account, or search for Storage account in the search box.&lt;/p&gt; 
&lt;p&gt;2. In the Basics tab of Create storage account enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Project Details &lt;br&gt; Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Instance details &lt;br&gt; Storage account name: Enter mystorageaccount. If the name is unavailable, enter a unique name.&lt;br&gt; Location: Select (US) East US.&lt;br&gt; Performance: Leave the default Standard.&lt;br&gt; Redundancy: Select Locally-redundant storage (LRS).&lt;/p&gt; 
&lt;p&gt;3. Select the Networking tab or select the Next: Networking button.&lt;/p&gt; 
&lt;p&gt;4. In the Networking tab, under Network connectivity select Disable public access and use private access.&lt;/p&gt; 
&lt;p&gt;5. In Private endpoint, select + Add private endpoint.&lt;/p&gt; 
&lt;p&gt;6. In Create private endpoint enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Location: Select East US.&lt;br&gt; Name: Enter myPrivateEndpoint.&lt;br&gt; Storage sub-resource: Leave the default blob.&lt;br&gt; Networking&lt;br&gt; Virtual network: Select myVNet.&lt;br&gt; Subnet: Select mySubnet.&lt;br&gt; Private DNS integration&lt;br&gt; Integrate with private DNS zone: Leave the default Yes.&lt;br&gt; Private DNS Zone: Leave the default (New) privatelink.blob.core.windows.net.&lt;/p&gt; 
&lt;p&gt;7. Select OK.&lt;/p&gt; 
&lt;p&gt;8. Select Review + create.&lt;/p&gt; 
&lt;p&gt;9. Select Create.&lt;/p&gt; 
&lt;p&gt;10. Select Resource groups in the left-hand navigation pane.&lt;/p&gt; 
&lt;p&gt;11. Select myResourceGroup.&lt;/p&gt; 
&lt;p&gt;12. Select the storage account you created in the previous steps.&lt;/p&gt; 
&lt;p&gt;13. In the Security + networking section of the storage account, select Access keys.&lt;/p&gt; 
&lt;p&gt;14. Select Show keys, then select copy on the Connection string for key1.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Connect to a storage account using an Azure Private Endpoint" url="https://learn.microsoft.com/en-us/azure/private-link/tutorial-private-endpoint-storage-portal"/>
            <reference name="Use private endpoints for Azure Storage" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-private-endpoints"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test connectivity to private endpoint&lt;/p&gt;

	&lt;p&gt;In this section, you'll use the virtual machine described in Reference URLs to connect to the storage account across the private endpoint using Microsoft Azure Storage Explorer.&lt;/p&gt;

	&lt;p&gt;1. Select Resource groups in the left-hand navigation pane.&lt;/p&gt;

	&lt;p&gt;2. Select myResourceGroup.&lt;/p&gt;

	&lt;p&gt;3. Select myVM.&lt;/p&gt;

	&lt;p&gt;4. On the overview page for myVM, select Connect then Bastion.&lt;/p&gt;

	&lt;p&gt;5. Enter the username and password that you entered during the virtual machine creation.&lt;/p&gt;

	&lt;p&gt;6. Select Connect button.&lt;/p&gt;

	&lt;p&gt;7. Open Windows PowerShell on the server after you connect.&lt;/p&gt;

	&lt;p&gt;8. Enter nslookup &lt;storage-account-name&gt;.blob.core.windows.net. Replace &lt;storage-account-name&gt; with the name of the storage account you created in the previous steps. You'll receive a message similar to what is displayed below:&lt;/p&gt;

	&lt;p&gt;Server:  UnKnown&lt;br /&gt;
Address:  168.63.129.16&lt;/p&gt;

	&lt;p&gt;Non-authoritative answer:&lt;br /&gt;
Name:    mystorageaccount.privatelink.blob.core.windows.net&lt;br /&gt;
Address:  10.1.0.5&lt;br /&gt;
Aliases:  mystorageaccount.blob.core.windows.net&lt;br /&gt;
A private IP address of 10.1.0.5 is returned for the storage account name. This address is in mySubnet subnet of myVNet virtual network you created previously.&lt;/p&gt;

	&lt;p&gt;9. Install Microsoft Azure Storage Explorer on the virtual machine.&lt;/p&gt;

	&lt;p&gt;10. Select Finish after the Microsoft Azure Storage Explorer is installed. Leave the box checked to open the application.&lt;/p&gt;

	&lt;p&gt;11. In the Select Resource screen, select Storage account or service to add a connection in Microsoft Azure Storage Explorer to your storage account that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;12. In the Select Connection Method screen, select Connection string, and then Next.&lt;/p&gt;

	&lt;p&gt;13. In the box under Connection String, paste the connection string from the storage account you copied in the previous steps. The storage account name will automatically populate in the box under Display name.&lt;/p&gt;

	&lt;p&gt;14. Select Next.&lt;/p&gt;

	&lt;p&gt;15. Verify the settings are correct in Summary.&lt;/p&gt;

	&lt;p&gt;16. Select Connect, then select mystorageaccount from the Storage Accounts left-hand menu.&lt;/p&gt;

	&lt;p&gt;17. Under Blob Containers, you see mycontainer that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;18. Close the connection to myVM.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.148">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE1" name="Discover, classify, and label sensitive data for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Discover, classify, and label sensitive data for Azure Storage&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Establish and maintain an inventory of the sensitive data, based on the defined sensitive data scope. Use tools to discover, classify and label the in- scope sensitive data.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Use tools such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data resides in Azure Storage.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect to Azure Blob storage in Microsoft Purview" url="https://learn.microsoft.com/en-us/azure/purview/register-scan-azure-blob-storage-source"/>
            <reference name="Security Control v3: Data protection" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-1-discover-classify-and-label-sensitive-data"/>
          </references>
          <standards>
            <standard ref="DP-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure you are using a tool such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data that reside in Azure Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Azure Defender for servers&lt;/li&gt;&lt;li&gt;Azure Defender for App Service&lt;/li&gt;&lt;li&gt;Azure Defender for Storage&lt;/li&gt;&lt;li&gt;Azure Defender for SQL&lt;/li&gt;&lt;li&gt;Azure Defender for Kubernetes&lt;/li&gt;&lt;li&gt;Azure Defender for container registries&lt;/li&gt;&lt;li&gt;Azure Defender for Key Vault&lt;/li&gt;&lt;li&gt;Azure Defender for Resource Manager&lt;/li&gt;&lt;li&gt;Azure Defender for DNS&lt;/li&gt;&lt;li&gt;Azure Defender for IoT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;To enable Azure Defender on one subscription:&lt;/p&gt;&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br&gt;2. Select the subscription or workspace that you want to protect.&lt;br&gt;3. Select Azure Defender on to upgrade.&lt;br&gt;4. Select Save.&lt;/p&gt;&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br&gt;- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.13" supportedStandardRef="cis-azure-standard"/>
            <standard ref="2.1.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.147">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE3" name="Restrict access with Azure Storage Firewall" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access with Azure Storage Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, storage accounts accept connections from clients on any network. Configure your storage account's firewall by restricting access to clients from specific public IP address ranges, select virtual networks, or specific Azure resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Change the default network access rule&lt;/p&gt; 
&lt;p&gt;1. Go to the storage account you want to secure.&lt;/p&gt; 
&lt;p&gt;2. Locate the Networking settings under Security + networking.&lt;/p&gt; 
&lt;p&gt;3. Choose which type of public network access you want to allow.&lt;/p&gt; 
&lt;p&gt;- To allow traffic from all networks, select Enabled from all networks.&lt;/p&gt; 
&lt;p&gt;- To allow traffic only from specific virtual networks, select Enabled from selected virtual networks and IP addresses.&lt;/p&gt; 
&lt;p&gt;- To block traffic from all networks, select Disabled.&lt;/p&gt; 
&lt;p&gt;4. Select Save to apply your changes.&lt;/p&gt; 
&lt;p&gt;Caution&lt;br&gt; By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. For this reason, if you set Public network access to Disabled after previously setting it to Enabled from selected virtual networks and IP addresses, any resource instances and exceptions you had previously configured, including Allow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services may still have access to the storage account after setting Public network access to Disabled.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Changing this setting can impact your application's ability to connect to Azure Storage. Make sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change the default network access rule" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal#change-the-default-network-access-rule"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure access is restricted with Azure Storage Firewall.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.149">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards>
            <standard ref="IM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.148">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-S03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-S03" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="43bded9e-e1af-4dcf-a1bd-84dcb989b58b" diagramComponentId="b93fcc35-3c12-4139-8007-355300aaf288" ref="ee803c64-dbd1-4983-80f0-37c207b52df1" name="Azure CDN (Content Delivery Network)" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="CD-MICROSOFT-AZURE-CDN">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.940">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-CDN1" name="Enable diagnostic logs for Azure CDN" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable diagnostic logs for Azure CDN&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Content Delivery Network is not intended to deploy into virtual networks, because of this you are unable to enable network security group flow logging, route traffic through a firewall or perform packet captures.&lt;br&gt; Content Delivery Network logs all network traffic that it processes for customer access. Enable the network flow capability within your deployed offering resources, and configure these logs to be sent to a storage account for long-term retention and auditing.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable logging with the Azure portal&lt;/p&gt; 
&lt;p&gt;Follow these steps enable logging for your Azure CDN endpoint:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. In the Azure portal, navigate to All resources -&amp;gt; your-cdn-profile&lt;/p&gt; 
&lt;p&gt;3. Select the CDN endpoint for which you want to enable diagnostics logs.&lt;/p&gt; 
&lt;p&gt;4. Select Diagnostics logs in the Monitoring section.&lt;/p&gt; 
&lt;p&gt;Enable logging with Azure Storage&lt;/p&gt; 
&lt;p&gt;To use a storage account to store the logs, follow these steps:&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A storage account is required to complete these steps.&lt;/p&gt; 
&lt;p&gt;1. For Diagnostic setting name, enter a name for your diagnostic log settings.&lt;/p&gt; 
&lt;p&gt;2. Select Archive to a storage account, then select CoreAnalytics.&lt;/p&gt; 
&lt;p&gt;3. For Retention (days), choose the number of retention days. A retention of zero days stores the logs indefinitely.&lt;/p&gt; 
&lt;p&gt;4. Select the subscription and storage account for the logs.&lt;/p&gt; 
&lt;p&gt;5. Select Save.&lt;/p&gt; 
&lt;p&gt;Send to Log Analytics&lt;/p&gt; 
&lt;p&gt;To use Log Analytics for the logs, follow these steps:&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; A log analytics workspace is required to complete these steps. &lt;/p&gt; 
&lt;p&gt;1. For Diagnostic setting name, enter a name for your diagnostic log settings.&lt;/p&gt; 
&lt;p&gt;2. Select Send to Log Analytics, then select CoreAnalytics.&lt;/p&gt; 
&lt;p&gt;3. Select the subscription and Log Analytics workspace for the logs.&lt;/p&gt; 
&lt;p&gt;4. Select Save.&lt;/p&gt; 
&lt;p&gt;Stream to an event hub&lt;/p&gt; 
&lt;p&gt;To use an event hub for the logs, follow these steps:&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; An event hub is required to complete these steps.&lt;/p&gt; 
&lt;p&gt;1. For Diagnostic setting name, enter a name for your diagnostic log settings.&lt;/p&gt; 
&lt;p&gt;2. Select Stream to an event hub, then select CoreAnalytics.&lt;/p&gt; 
&lt;p&gt;3. Select the subscription and event hub namespace for the logs.&lt;/p&gt; 
&lt;p&gt;4. Select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Diagnostic logs - Azure Content Delivery Network" url="https://docs.microsoft.com/en-us/azure/cdn/cdn-azure-diagnostic-logs"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that diagnostic logs for Azure CDN are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:55.878">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="INSUFFICIENT-LOGGING-MONITORING" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-CDN1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-CDN1" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="41447c4f-30e3-43a1-b777-75f1c6cbad3b" diagramComponentId="cdde8842-6880-4106-8f1e-2cb57953d10d" ref="83ced909-d674-4e94-a1cd-fd4e6aa29534" name="Azure Functions" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-functions">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-77" name="Improper Neutralization of Special Elements used in a Command ('Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of a command using
                    externally-influenced input from an upstream component, but it does not
                    neutralize or incorrectly neutralizes special elements that could modify the
                    intended command when it is sent to a downstream
                    component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.930">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.931">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.932">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.750">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.749">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WAF-GW" name="Deploy a WAF with Azure Application Gateway" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Deploy a Web Application Firewall (WAF) with Azure Application Gateway in front of an Internet facing app 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enable a Web Application Firewall on Application Gateway, you must create a WAF policy. This policy is where all of the managed rules, custom rules, exclusions, and other customizations such as file upload limit exist. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure a WAF policy and associate that policy to one or more application gateways for protection. A WAF policy consists of two types of security rules: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Custom rules that you create 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Managed rule sets that are a collection of Azure-managed pre-configured set of rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both are present, custom rules are processed before processing the rules in a managed rule set. A rule is made of a match condition, a priority, and an action. Action types supported are: ALLOW, BLOCK, and LOG. You can create a fully customized policy that meets your specific application protection requirements by combining managed and custom rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rules within a policy are processed in a priority order. Priority is a unique integer that defines the order of rules to process. Smaller integer value denotes a higher priority and those rules are evaluated before rules with a higher integer value. Once a rule is matched, the corresponding action that was defined in the rule is applied to the request. Once such a match is processed, rules with lower priorities aren't processed further. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A web application delivered by Application Gateway can have a WAF policy associated to it at the global level, at a per-site level, or at a per-URI level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create a policy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  First, create a basic WAF policy with a managed Default Rule Set (DRS) using the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. On the upper left side of the portal, select Create a resource. Search for WAF, select Web Application Firewall, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On Create a WAF policy page, Basics tab, enter or select the following information, accept the defaults for the remaining settings, and then select Review + create: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Value 
&lt;/div&gt; 
&lt;div&gt;
  Policy for&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Regional WAF (Application Gateway) 
&lt;/div&gt; 
&lt;div&gt;
  Subscription&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your subscription name 
&lt;/div&gt; 
&lt;div&gt;
  Resource group&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your resource group 
&lt;/div&gt; 
&lt;div&gt;
  Policy name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type a unique name for your WAF policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Association tab, enter one of the following settings, then select Add: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value 
&lt;/div&gt; 
&lt;div&gt;
  Associate Application Gateway&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your Application Gateway profile name. 
&lt;/div&gt; 
&lt;div&gt;
  Associate Listeners&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Select the name of your Application Gateway Listener, then select Add. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you assign a policy to your Application Gateway (or listener) that already has a policy in place, the original policy is overwritten and replaced by the new policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select Review + create, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"/>
            <reference name="What is Azure Web Application Firewall on Azure Application Gateway?" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview"/>
          </references>
          <standards>
            <standard ref="GS-9" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-6" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test the application gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Although IIS isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use IIS to test the application gateway: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Find the public IP address for the application gateway on its Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Or, you can select All resources, enter myAGPublicIPAddress in the search box, and then select it in the search results. Azure displays the public IP address on the Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Copy the public IP address, and then paste it into the address bar of your browser. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SERVICE1" name="Disable anonymous access" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable anonymous access 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Unless you need to support anonymous requests, disable anonymous access. Whenever possible, use the App Service authentication module instead of writing code to handle authentication and authorization 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  In the Azure portal, you can configure App Service authorization with a number of behaviors when incoming request is not authenticated. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow only authenticated requests 
&lt;/div&gt; 
&lt;div&gt;
  The option is Log in with &amp;lt;provider&amp;gt;. App Service redirects all anonymous requests to /.auth/login/&amp;lt;provider&amp;gt; for the provider you choose. If the anonymous request comes from a native mobile app, the returned response is an HTTP 401 Unauthorized. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With this option, you don't need to write any authentication code in your app. Finer authorization, such as role-specific authorization, can be handled by inspecting the user's claims. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  Restricting access in this way applies to all calls to your app, which may not be desirable for apps wanting a publicly available home page, as in many single-page applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authentication and authorization in Azure App Service and Azure Functions" url="https://docs.microsoft.com/en-us/azure/app-service/overview-authentication-authorization"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>In the Azure portal, ensure that anonymous access is disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS1" name="Disable remote debugging" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable remote debugging for Azure Functions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Remote debugging for Azure Functions requires certain inbound ports to be opened. Denying the access to these inbound ports, will help you reduce the possibility of a security breach. Ensure that your Azure Functions have remote debugging disabled in order to enhance security and protect them from unauthorized access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Make sure that remote debugging is disabled, except when you are actively debugging your functions. You can disable remote debugging in the General Settings tab of your function app Configuration in the portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Azure Functions" url="https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your Azure Functions have remote debugging disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.750">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-WAF-LOGS" name="Enable WAF logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable WAF logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Web Application Firewall resources using logs. You can save performance, access, and other data or consume it from a resource for monitoring purposes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable logging through the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, find your resource and select Diagnostic settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Application Gateway, three logs are available: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Access log 
&lt;/div&gt; 
&lt;div&gt;
  - Performance log 
&lt;/div&gt; 
&lt;div&gt;
  - Firewall log 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. To start collecting data, select Turn on diagnostics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. The Diagnostics settings page provides the settings for the resource logs. In this example, Log Analytics stores the logs. You can also use event hubs and a storage account to save the resource logs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Type a name for the settings, confirm the settings, and select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logs for Azure Web Application Firewall" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/web-application-firewall-logs"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that all WAF logs are enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS3" name="Function code must validate any data received from a trigger or input binding" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Function code must validate any data received from a trigger or input binding 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  The triggers and bindings used by your functions don't provide any additional data validation. Your code must validate any data received from a trigger or input binding. If an upstream service is compromised, you don't want unvalidated inputs flowing through your functions. For example, if your function stores data from an Azure Storage queue in a relational database, you must validate the data and parameterize your commands to avoid SQL injection attacks.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't assume that the data coming into your function has already been validated or sanitized. It's also a good idea to verify that the data being written to output bindings is valid. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Implement a data validation procedure for the data coming into your functions. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Azure Functions" url="https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your code validates any data received from a trigger or input binding.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake accounts. With this process is ensured that there are not compromised accounts by former employees or by attackers.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;At least every 90 days complete the following:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;&lt;li&gt;Select Azure Active Directory.&lt;/li&gt;&lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt;&lt;li&gt;For any user that should not exist:&lt;/li&gt;&lt;li&gt;Select the user.&lt;/li&gt;&lt;li&gt;Click "Delete".&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.750">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS2" name="Restrict CORS access to Azure Functions" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Restrict CORS access to Azure Functions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Functions supports cross-origin resource sharing (CORS). CORS is configured in the portal and through the Azure CLI. The CORS allowed origins list applies at the function app level. With CORS enabled, responses include the Access-Control-Allow-Origin header. 
&lt;/div&gt; 
&lt;div&gt;
  To prevent malicious code execution on the client, modern browsers block requests from web applications to resources running in a separate domain. Cross-origin resource sharing (CORS) lets an Access-Control-Allow-Origin header declare which origins are allowed to call endpoints on your function app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  When you configure the Allowed origins list for your function app, the Access-Control-Allow-Origin header is automatically added to all responses from HTTP endpoints in your function app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When the wild-card (*) is used, all other domains are ignored. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the az functionapp cors add command to add a domain to the allowed origins list. The following example adds the contoso.com domain: 
&lt;/div&gt; 
&lt;div&gt;
  az functionapp cors add --name &amp;lt;FUNCTION_APP_NAME&amp;gt; \ 
&lt;/div&gt; 
&lt;div&gt;
  --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; \ 
&lt;/div&gt; 
&lt;div&gt;
  --allowed-origins https://contoso.com 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the az functionapp cors show command to list the current allowed origins. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Manage your function app" url="https://docs.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that CORS access is restricted.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.752">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SECRETS" name="Secure application secrets" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Secure application secrets 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Don't store application secrets, such as database credentials, API tokens, or private keys in your code or configuration files. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The commonly accepted approach is to access application secrets as environment variables using the standard pattern in your language of choice. In Azure App Service, you can define environment variables through app settings and connection strings. App settings and connection strings are stored encrypted in Azure. The app settings are decrypted only before being injected into your app's process memory when the app starts. The encryption keys are rotated regularly. Alternatively, you can integrate your Azure App Service app with Azure Key Vault for advanced secrets management. By accessing the Key Vault with a managed identity, your App Service app can securely access the secrets you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that application secrets, such as database credentials, API tokens, or private keys are not stored in your code or configuration files.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-API-MANAGEMENT" name="Use Azure API Management (APIM) to authenticate requests" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Azure API Management (APIM) to authenticate requests 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  APIM provides a variety of API security options for incoming requests. With APIM in place, you can configure your function app to accept requests only from the IP address of your APIM instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  API Management authentication policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with Basic 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-basic policy to authenticate with a backend service using Basic authentication. This policy effectively sets the HTTP Authorization header to the value corresponding to the credentials provided in the policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-basic username="username" password="password" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  Example 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-basic username="testuser" password="testpassword" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with client certificate 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-certificate policy to authenticate with a backend service using client certificate. The certificate needs to be installed into API Management first and is identified by its thumbprint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate thumbprint="thumbprint" certificate-id="resource name"/&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  Examples 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is identified by its thumbprint: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate thumbprint="CA06F56B258B7A0D4F2B05470939478651151984" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is identified by the resource name: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate certificate-id="544fe9ddf3b8f30fb490d90f" /&amp;gt;&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is set in the policy rather than retrieved from the built-in certificate store: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate body="@(context.Variables.GetValueOrDefault&amp;lt;byte[]&amp;gt;("byteCertificate"))" password="optional-certificate-password" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with managed identity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-managed-identity policy to authenticate with a backend service using the managed identity. This policy essentially uses the managed identity to obtain an access token from Azure Active Directory for accessing the specified resource. After successfully obtaining the token, the policy will set the value of the token in the Authorization header using the Bearer scheme. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Both system-assigned identity and any of the multiple user-assigned identity can be used to request token. If client-id is not provided system-assigned identity is assumed. If the client-id variable is provided token is requested for that user-assigned identity from Azure Active Directory 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="resource" client-id="clientid of user-assigned identity" output-token-variable-name="token-variable" ignore-error="true|false"/&amp;gt;&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example 
&lt;/div&gt; 
&lt;div&gt;
  Use managed identity to authenticate with a backend service 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://graph.microsoft.com"/&amp;gt;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://management.azure.com/"/&amp;gt; &amp;lt;!--Azure Resource Manager--&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://vault.azure.net"/&amp;gt; &amp;lt;!--Azure Key Vault--&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="API Management authentication policies" url="https://docs.microsoft.com/en-us/azure/api-management/api-management-authentication-policies"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you use an APIM authentication option to authenticate requests.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="fscott-admin" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2024-04-17T11:52:56.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="34"/>
                    <countermeasure ref="AZURE-API-MANAGEMENT" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="34"/>
                <countermeasure ref="AZURE-API-MANAGEMENT" mitigation="33"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="33"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
                <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                    <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="25"/>
                    <countermeasure ref="AZ-L01" mitigation="25"/>
                    <countermeasure ref="AZ-L05" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="25"/>
                <countermeasure ref="AZ-L01" mitigation="25"/>
                <countermeasure ref="AZ-L05" mitigation="25"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="20"/>
                    <countermeasure ref="AZ-N02" mitigation="16"/>
                    <countermeasure ref="AZURE-FUNCTIONS1" mitigation="16"/>
                    <countermeasure ref="AZURE-FUNCTIONS2" mitigation="16"/>
                    <countermeasure ref="AZURE-WAF-GW" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="20"/>
                <countermeasure ref="AZ-N02" mitigation="16"/>
                <countermeasure ref="AZ-N09" mitigation="16"/>
                <countermeasure ref="AZURE-FUNCTIONS1" mitigation="16"/>
                <countermeasure ref="AZURE-FUNCTIONS2" mitigation="16"/>
                <countermeasure ref="AZURE-WAF-GW" mitigation="16"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="CAPEC-248" name="An attacker injects new items into an existing command to execute a command of their choosing" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-77">
                  <countermeasures>
                    <countermeasure ref="AZURE-FUNCTIONS3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-FUNCTIONS3" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="fscott-admin" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields/>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="9311e028-e0b5-445b-aa7b-c42a51afbc40" diagramComponentId="1f0aad38-28e9-4591-aed2-f23193fe4e08" ref="cd051b43-00ed-41d2-9f74-f87f38795134" name="User" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
</template>

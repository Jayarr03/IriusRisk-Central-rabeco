<?xml version="1.0" encoding="UTF-8"?>
<template ref="ml-ai-example-template" name="ml-ai-example template" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Trade Service -&gt; Users Input" ref="14166cfa-0610-4c03-85ce-1916fb889761" source="bc3f8050-e04c-4f35-95f6-e4290a8cfa2a" target="239ba369-2d9f-4e4c-8129-d86e8da7d042">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Trade Service -&gt; Web UI" ref="14d18152-a3bc-4fef-a628-fe101132b3eb" source="bc3f8050-e04c-4f35-95f6-e4290a8cfa2a" target="ea7cf3e2-8fc6-4dcb-aa4a-f1c1a9d9a987">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Model outputs -&gt; Generic Service Predicted action, e.g., buy/sell" ref="302ccc7f-9af7-4643-9b5e-e51756b343c7" source="c80c37c8-4b1a-45e7-95c3-6005285c2b88" target="a4358da6-d80b-485c-b27c-2313a9e9e45d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Out Of Scope -&gt; Generic Service Predicted action, e.g., buy/sell" ref="56427930-614e-477f-a13b-cb97e7768f7d" source="d5efa9cf-fe64-4ee1-bb46-4db4e978c37d" target="a4358da6-d80b-485c-b27c-2313a9e9e45d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Users Input -&gt; Trained Model" ref="732b0279-7d22-4164-bfe3-19ebcd09ecb0" source="239ba369-2d9f-4e4c-8129-d86e8da7d042" target="4d33876c-2161-4cc7-875c-e6dd1667d7b9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Trained Model -&gt; Model outputs" ref="83c5c582-543d-47a7-a561-017822a20ec4" source="4d33876c-2161-4cc7-875c-e6dd1667d7b9" target="c80c37c8-4b1a-45e7-95c3-6005285c2b88">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Generic Service Predicted action, e.g., buy/sell -&gt; Out Of Scope" ref="90409705-afe8-44ea-9122-9247d88d2c4f" source="a4358da6-d80b-485c-b27c-2313a9e9e45d" target="d5efa9cf-fe64-4ee1-bb46-4db4e978c37d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web UI -&gt; Trade Service" ref="9fc94193-7abf-477c-98c6-f10816f3f9a4" source="ea7cf3e2-8fc6-4dcb-aa4a-f1c1a9d9a987" target="bc3f8050-e04c-4f35-95f6-e4290a8cfa2a">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Data Preparation for Artificial Intelligence Modeling -&gt; Build an Artificial Intelligence model" ref="ad8daa93-3310-4240-9fa2-d8a41037a35d" source="4f45bca0-5751-4558-8273-f3b5838931f8" target="e4ee0eca-a5b9-4f0a-b59f-6b43df89790c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Build an Artificial Intelligence model -&gt; Deployment Setup" ref="eb95e61c-8b32-494c-9fa6-0185ebcbc5b1" source="e4ee0eca-a5b9-4f0a-b59f-6b43df89790c" target="93188c58-de74-4bed-8fb8-21fe54a69945">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="qa_cf" value=""/>
  </customFields>
  <components>
    <component uuid="d644ada8-e95a-4f79-a073-250c8e6d5ea3" diagramComponentId="bc49435e-629a-42dd-b661-19d3f22ab3c8" ref="33c42d7e-6bce-446e-ac2e-006b934959e6" name="API Endpoint - Broker site" desc="" library="IR-Functional-Components" parentComponentRef="d5efa9cf-fe64-4ee1-bb46-4db4e978c37d" componentDefinitionRef="CD-API-ENDPOINT">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="CWE-285" name="Apply authorization checks to segregate and control access to user data" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Applications protecting sensitive or otherwise restricted resources must ensure that only appropriate and authorized users can access the application data. It is important that an application prevent unauthorized users gaining inappropriate access to each other's data. Although user A and user B may both be trusted to access data within the application, they may be only authorized to access different subsets of the protected resources.&amp;nbsp; E.g. user A should not be able to access user B's personal data by manipulating a request (typical examples are the manipulation of an ID value or other object reference sent in the URL or body of an HTTP request).&lt;/p&gt;&lt;p&gt;It is not sufficient to rely on obscurity, for example obfuscated or secret URLs or filenames. The application must validate each request for protected data against the proven identity of the user. Before providing access to restricted resources the application must:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure the user has undergone appropriate authentication (identification and verification, or ID&amp;amp;V). E.g. they must have provided their identity and confirmed this with a password, token, or other verification. Typically this is done by checking the validity of the session token issued after login.&lt;/li&gt;&lt;li&gt;Confirm the user is authorized to access the data or resource they are requesting. E.g. their confirmed identify is checked against a server-side access control matrix to determine whether they may access the requested resource.&lt;/li&gt;&lt;li&gt;Access controls should be granular and make it possible to issue to individual resources to individual users or roles.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;URL and asset based access control is provided by most web-frameworks, and it is preferable to use an established and proven framework.&lt;/p&gt;&lt;p&gt;Object-level authorization checks should be considered in every function that accesses a data source using input from the user.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Favor not using an ID that has been sent from the client, but instead use an ID that is stored in the session object when accessing a database record by the record ID.&lt;/li&gt;&lt;li&gt;Use an authorization mechanism to check if the logged-in user has access to perform the requested action on the record in every function that uses an input from the client to access a record in the database.&lt;/li&gt;&lt;li&gt;Use random and unpredictable values as GUIDs for records' IDs.&lt;/li&gt;&lt;li&gt;Write tests to evaluate the authorization mechanism. Do not deploy vulnerable changes that break these tests.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA CM-07 Least Functionality" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/158-08_02_CM-07"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.2" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.12.3" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.18" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.2" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.3" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="CM-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Using two different browsers configured with an intercepting proxy:&lt;/li&gt;&lt;li&gt;Login as user A in browser A.&lt;/li&gt;&lt;li&gt;Login as user B in browser B.&lt;/li&gt;&lt;li&gt;For every operation that displays sensitive data belonging to user A:&lt;ol&gt;&lt;li&gt;Perform the operation as user A and view their sensitive data.&lt;/li&gt;&lt;li&gt;Obtain the session ID of user B.&lt;/li&gt;&lt;li&gt;Configure the proxy to intercept.&lt;/li&gt;&lt;li&gt;Perform the operation as user A again, but this time intercept all the requests and replace user A's session ID with that of user B.&lt;/li&gt;&lt;li&gt;Ensure that user A's sensitive data is &lt;strong&gt;not &lt;/strong&gt;visible.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;To ensure object-level authorization checks are in place:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Map out all locations in the application in which user input is used to reference objects directly. For example, locations where user input is used to access a database row, a file, application page, etc.&lt;/li&gt;&lt;li&gt;Modify the value of the parameter used to reference objects to see if the application raises an authorization error.&lt;/li&gt;&lt;li&gt;Assess whether it is possible to retrieve objects belonging to other users or otherwise bypass authorization.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.012">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.013">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.014">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" name="Minimize the information that each client receives from the server side to accomplish its intended action" issueId="" issueLink="" platform="" cost="0" risk="73" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Servers are often designed to send more data to the client than is really required, so it's necessary to send the minimum data from the server to the client. It's an easy way to send all information from server to client and then filter in the client's own, but this behaviour can lead to further data leak, in case that an attacker obtains this information, for example by intercepting requests or accessing the browser, so this could increase the risk of a future attack.&lt;/p&gt;&lt;p&gt;It is a good idea to have different endpoints that return different data, according to needs.&lt;/p&gt;&lt;p&gt;An example of bad code in JSP:&lt;/p&gt;&lt;p&gt;&lt;i&gt;Social Security Number: &amp;lt;%= ssn %&amp;gt;&amp;lt;/br&amp;gt;Credit Card Number: &amp;lt;%= ccn %&amp;gt;&lt;/i&gt;&lt;/p&gt;&lt;p&gt;This is a bad code, because it displays a user's credit card and social security numbers, even though they aren't absolutely necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CWE-213: Exposure of Sensitive Information Due to Incompatible Policies" url="https://cwe.mitre.org/data/definitions/213.html"/>
          </references>
          <standards>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Use a proxy to pass browser requests through it and check the responses to see what data the server is sending. Can you get unnecessary data?&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Proxy can be replaced using DevTools from your browser.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.012">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="78" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.002">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="laouad" library="IR-Functional-Components" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:00.013">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="IR-Functional-Components">
          <threats>
            <threat ref="CAPEC-180-BROKEN-ACCESS-CONTROL" name="An attacker exploits a weakness in the configuration of access controls and is able to bypass the intended protection that these measures guard against and thereby obtain unauthorized access to the application" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An Access Control functionality often spans many areas of software depending on the complexity of the access control system. For example, managing access control metadata or building caching for scalability purposes are often additional components in an access control system that need to be built or managed. Vulnerabilities appear when a user is able to successfully request access to something they usually shouldn't have access to. Oftentimes this is found when the authorization is not implemented properly. A typical example would be a certain endpoint on a website that throws a 403 forbidden error which is then bypassed by adding an X-Forwarded-For: "127.0.0.1" header.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="CWE-285" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="no-security-procedures-monitoring" name="Attackers gain access to the system and are not detected" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected. Therefore, they can make changes to the systems and remain undetected. Data integrity is destroyed.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="security-logging" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-INJECTION" name="Attackers gain unauthorized access to data and/or systems through Injection attacks" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;Some of the most common types of injection attacks are SQL injections, cross-site scripting (XSS), code injection, OS command injection, host header injection, and more. A large part of vulnerabilities that exist in web applications can be classified as injection vulnerabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Scenario #1: An application uses untrusted data in the construction of the following vulnerable SQL call:&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;String query = "SELECT * FROM accounts WHERE custID='' request.getParameter("id") + '';&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Scenario #2: Similarly, an application's blind trust in frameworks may result in queries that are still vulnerable, (e.g. Hibernate Query Language (HQL)):&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;Query HQLQuery = session.createQuery("FROM accounts WHERE custID=' '+ request.getParameter("id") + "'");&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;In both cases, the attacker modifies the 'id' parameter value in their browser to send: ' or '1'='1. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;http://example.com/app/accountView?id=''or '1'='1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;This changes the meaning of both queries to return all the records from the accounts table. More dangerous attacks could modify or delete data, or even invoke stored procedures.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="DATA-VAL" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-157-DATA-DISCLOSURE" name="An attacker can inspect the HTTP responses using a proxy to access to sensitive information that is not directly visible in the client application" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;APIs retrieve necessary data from back end systems when client applications make an API call. However, most of the backend systems were not designed to handover the exact data that the client requested. Rather, the API serves more data than what is needed by the client and then a filtering mechanism is used in the client app code to mask or discard unwanted data. If an attacker launches the underlying API and examines the response patterns, they are able to access the redundant data which could contain sensitive information.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Besides returning excessive data records in response to a client request, an API may also expose certain references to the platform technologies used by the application. This allows hackers to look for vulnerabilities on such software and attack the system using that information.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-MINIMIZE-CLIENT-PROCESSING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Functional-Components" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="network-rate-limit" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="14f84dd5-8b27-4788-9739-5ff2afc3e156" diagramComponentId="f2888784-6abc-43c1-b7ba-0704fa9fa68e" ref="e4ee0eca-a5b9-4f0a-b59f-6b43df89790c" name="Build an Artificial Intelligence model" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="" componentDefinitionRef="CD-ML-AI-MODEL-BUILD">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-ML-AI-MODEL-CHOICE" name="Carefully consider the model choice" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Models can be built using different approaches or algorithms. Overall, choosing the right algorithm depends on several factors, including business considerations, data size, accuracy, training time, parameters, and inference performance, among others.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In general, the right choice is typically a combination of these aspects. In terms of security, however, the main algorithmic concern is about the nature of the data, where certain algorithms are more vulnerable to data leaks than others.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Depending on your privacy concerns, and/or compliance considerations, e.g., GPDR, &amp;nbsp;consider auditing the data privacy of the models under consideration, e.g., using tools like Privacy Meter.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Privacy Meter" url="https://github.com/privacytrustlab/ml_privacy_meter"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:24.769">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ROBUST-LEARNING" name="Consider robust learning and defenses against poisoning attacks for online models" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Robustness verification, robust learning techniques, and other defenses against adversarial perturbations have become important aspects when developing an ML/AI model. Techniques for achieving robustness include adversarial training and learning techniques in the presence of outliers or noise. Robust statistics such as stochastic approximation approaches, which have shown to be robust against data poisoning attacks, e.g., training with stochastic gradient descent, is an example.&lt;/p&gt;
&lt;p&gt;Depending on the domain area and the underlying ML/AI framework used, there are a number of tools that can help assess models against adversarial threats, including adversarial tampering. These include the Adversarial Robustness Toolbox, DeepRobust, or AutoAttack.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Adversarial Robustness Toolbox (ART)" url="https://adversarial-robustness-toolbox.readthedocs.io/en/latest/"/>
            <reference name="Adversarial Robustness Tools" url="https://github.com/EthicalML/awesome-production-machine-learning#adversarial-robustness"/>
            <reference name="Robust Machine Learning Models and Their Applications" url="https://dspace.mit.edu/bitstream/handle/1721.1/130760/1252059420-MIT.pdf?sequence=1&amp;isAllowed=y"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:24.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ENV-SETUP" name="Consider the right framework, model, and language for an application" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Setting up the right tool stack for your ML/AI projects is very important to work efficiently and be able to deliver results.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The best ML/AI toolbox would include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Various flavors of Jupyter Notebooks which allow for quick experiments and visualization, and exchanging ideas between team members,&lt;/li&gt;
 &lt;li&gt;Appropriate IDEs with ease of use and possible connectivity with third-party platforms/clouds or useful extensions, e.g., Pycharm or Visual Studio,&lt;/li&gt;
 &lt;li&gt;Code and data versioning, e.g., Github, or Data Version Control (DVC),&lt;/li&gt;
 &lt;li&gt;The framework that provides the right functionality. Scikit-learn, R, TensorFlow, and PyTorch have been some of the favorites of ML/AI teams,&amp;nbsp; 
  &lt;ul&gt;
   &lt;li&gt;For more specialized areas, such as NLP or Computer Vision, more specialized frameworks and libraries exist such as Huggingface, Spacy, NLTK, Gensim, or OpenCV.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;For operationalizing models and managing their lifecycle, tools such as MLflow or Kubeflow are being used to manage ML/AI workflows and pipelines end-to-end.&lt;/li&gt;
 &lt;li&gt;In terms of larger and cloud-based platforms, Amazon SageMaker and Azure ML are the two biggest names. They provide fully-managed cloud services for predictive analytics&lt;/li&gt;
 &lt;li&gt;Running models in production and at scale also involves the language, the programming paradigm, and hosts: 
  &lt;ul&gt;
   &lt;li&gt;While most models are written in Python or R, these might be too slow for production models! Using faster languages such as C/C++ or Java might be a challenge.&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Use powerful hosts and parallel processing, e.g., Apache Spark, to perform iterative and heavy computational operations.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The above only scratches the surface regarding what tools, libraries, and frameworks are available to build your model. &amp;nbsp;The landscape is also rapidly evolving. Make sure to consider the pros and cons of several alternatives before landing on a final solution.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Awesome Production Machine Learning - a curated list of tools to help setup ML/AI projects" url="https://github.com/EthicalML/awesome-production-machine-learning"/>
            <reference name="Guidance and resources on building the right ML/AI platform - Neptune.ai's blog" url="https://neptune.ai/blog"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:25.018">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-EVALUATION-METRICS" name="Consider using data sets with well-known error rates for the model evaluation, in addition to well-established performance evaluation techniques" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When evaluating an ML/AI model for real-world uses, two fundamental questions arise: 1) Is the model good enough? and 2) Is it better than other alternatives?&amp;nbsp;&lt;/p&gt;
&lt;p&gt;To obtain reliable answers to these questions, special care should be taken in the process of selecting data, selecting and building the model, as well as the evaluation metrics used.&lt;/p&gt;
&lt;p&gt;The validation/evaluation strategy of ML/AI models involves the following two main aspects:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Resampling methods, which are techniques of rearranging data samples to inspect if the model performs well. These include: 
  &lt;ul&gt;
   &lt;li&gt;Random Split,&lt;/li&gt;
   &lt;li&gt;Time-Based Split,&lt;/li&gt;
   &lt;li&gt;K-Fold Cross-Validation,&lt;/li&gt;
   &lt;li&gt;Stratified K-Fold, and&lt;/li&gt;
   &lt;li&gt;Bootstrap.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;Classification metrics, &amp;nbsp;including: 
  &lt;ul&gt;
   &lt;li&gt;Accuracy: sensitive to the sum of true positives+true negatives and to the total number of data points. Not sensitive to class imbalance.&lt;/li&gt;
   &lt;li&gt;Precision: sensitive to true positives and false positives. Not sensitive to false negatives or true negatives.&lt;/li&gt;
   &lt;li&gt;Recall: sensitive to true positives and false negatives. Not sensitive to false positives or true negatives.&lt;/li&gt;
   &lt;li&gt;F-score: sensitive to true positives, false positives, and false negatives. Not sensitive to true negatives.&lt;/li&gt;
   &lt;li&gt;Overlap: sensitive to the intersection and overlap of predicted and actual.&lt;/li&gt;
   &lt;li&gt;Likelihood: sensitive to the probability that the model assigns to the test data.&lt;/li&gt;
   &lt;li&gt;Distance: sensitive to the distance between the prediction and the actual value.&lt;/li&gt;
   &lt;li&gt;Correlation: sensitive to each of true positives, true negatives, false positives, and false negatives, but unlike Accuracy metrics they factor in the degree of agreement that would be expected by chance.&lt;/li&gt;
   &lt;li&gt;AUC: Does not rely on a specific classification threshold, but instead calculates the area under a curve parameterized by different thresholds.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other measures include:&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Probabilistic measures, e.g., Akaike Information Criterion (AIC),&lt;/li&gt;
 &lt;li&gt;Regression metrics, e.g., Mean Squared Error or MSE, or&lt;/li&gt;
 &lt;li&gt;Clustering metrics, e.g., Elbow method.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="The Ultimate Guide to Evaluation and Selection of Models in Machine Learning" url="https://neptune.ai/blog/ml-model-evaluation-and-selection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:25.019">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PARAMETERS-PROTECTION" name="Perform sensitivity analyses and lock in the set of model parameters and hyperparameters" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Consider the following to assess and protect parameters and hyperparameters:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Mechanisms in place to protect and lock parameters and hyperparameters.&lt;/li&gt;
 &lt;li&gt;Sensitivity analysis to show how changes in model parameters affect model outputs.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Sensitivity Analysis Library" url="https://github.com/SALib/SALib"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:24.770">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-REPRESENTATION-ROBUSTNESS" name="Review the representation robustness" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Depending on the model used, randomization and encoding techniques have been proposed to potentially increase the resilience of models to adversarial attacks.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For instance, assigning different encoded labels for each classifier in an ensemble structure has been shown to improve the classification performance on adversarial attacks. It has also been demonstrated that randomized defenses against adversarial attacks are more efficient than deterministic ones.&lt;/p&gt;
&lt;p&gt;Representational robustness can manifest in decisions as basic as using word2vec embedding in an NLP system versus one-hot vector encodings, which can help combat some blind spot risks.&lt;/p&gt;
&lt;p&gt;On the purely performance side, initialization strategies based on the properties of the statistical distribution of the data on which the models are trained have also been proposed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Data Driven Initialization for Machine Learning Classification Models" url="https://repository.urosario.edu.co/server/api/core/bitstreams/bb7de9d7-1410-49f2-a27f-70aaf4824dbe/content"/>
            <reference name="Ensemble of Random Binary Output Encoding for Adversarial Robustness" url="https://ieeexplore.ieee.org/document/8813035"/>
            <reference name="Randomization matters - How to defend against strong adversarial attacks" url="https://dl.acm.org/doi/pdf/10.5555/3524938.3525653"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:24.771">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-CATASTROPHIC-FORGETTING" name="Use strategies to counter potential catastrophic forgetting" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Consider using mechanisms to counter potential catastrophic forgetting, such as:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Complement the model with a memory storing previous information, for example, by using memory replay to consolidate internal representations,&lt;/li&gt;
 &lt;li&gt;Train the network while regularizing, and&lt;/li&gt;
 &lt;li&gt;Expand the model if necessary to represent new tasks.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Learn, don’t forget: constructive methods for effective continual learning" url="https://upcommons.upc.edu/bitstream/handle/2117/374177/thesis%20Aitor%20Ganuza.pdf?sequence=1&amp;isAllowed=y"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:26:25.017">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-CATASTROPHIC-INTERFERENCE" name="Models may be subject to catastrophic interference" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;A model is subject to abruptly and drastically forgetting previously learned information upon learning new information. Nowadays, this is more of an issue with autonomous and continuous learning, i.e., without any humans in the loop.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="75" easeOfExploitation="50"/>
              <references>
                <reference name="Continual Learning of Natural Language Processing Tasks: A Survey" url="https://arxiv.org/pdf/2211.12701.pdf"/>
                <reference name="Overcoming catastrophic forgetting in neural networks" url="https://www.pnas.org/doi/10.1073/pnas.1611835114"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-CATASTROPHIC-FORGETTING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-MANIPULATE-ONLINE-SYSTEM" name="An adversary may be able to manipulate an online learning system" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Online models continue to learn during operations. This might lead to a drift from the initial purpose or use case. Attackers might be able to lead the system in the wrong direction with specially crafted data, a.k.a data poisoning.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references>
                <reference name="Concealed Data Poisoning Attacks on NLP Models" url="https://aclanthology.org/2021.naacl-main.13.pdf"/>
                <reference name="ML Attack Models: Adversarial Attacks and Data Poisoning Attacks" url="https://arxiv.org/ftp/arxiv/papers/2112/2112.02797.pdf"/>
                <reference name="ML02:2023 Data Poisoning Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML02_2023-Data_Poisoning_Attack.html"/>
                <reference name="Understand model drift" url="https://datatron.com/what-is-model-drift/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ROBUST-LEARNING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-DATA-REPRESENTATION" name="Adversaries may exploit algorithmic leakage or data representation issues to extract data or attack the model" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Some algorithms are unsuited for processing confidential information. The choice of an algorithm should take into account the nature of the input data as well as how the algorithm represents and store the training data.&lt;/p&gt;
&lt;p&gt;On the other hand, the model initialization and data representation might have an effect on how to defend against strong adversarial attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="Confidential machine learning on untrusted platforms: a survey" url="https://cybersecurity.springeropen.com/articles/10.1186/s42400-021-00092-8"/>
                <reference name="ML01:2023 Input Manipulation Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML01_2023-Input_Manipulation_Attack.html"/>
                <reference name="Machine Learning with Confidential Computing: A Systematization of Knowledge" url="https://arxiv.org/pdf/2208.10134.pdf"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-MODEL-CHOICE" mitigation="50"/>
                <countermeasure ref="C-ML-AI-REPRESENTATION-ROBUSTNESS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-SCALABILITY-ISSUES" name="Models may be subject to failures due to scalability issues" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;The algorithm may not scale in performance in the real world, e.g., prediction time might be too important compared to the rate at which input data comes in. This might lead to denial of service situations.&lt;/p&gt;
&lt;p&gt;There are a number of challenges in the way of scaling and accelerating ML/AI workloads:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Getting feature engineering right, while especially having in mind how they could be efficiently calculated and continuously monitored in production,&lt;/li&gt;
 &lt;li&gt;The tools and setup, especially in terms of programming language, processing power (single machine or distributed computing), and deployment technologies (e.g., containerization),&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;The maintenance of the model over time as it will need frequent fine-tuning and retraining, which might also be time-consuming and computationally expensive.&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="How to Scale ML Projects – Lessons Learned from Experience" url="https://neptune.ai/blog/how-to-scale-ml-projects"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ENV-SETUP" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-EVALUATION-ISSUES" name="Models may be subject to overfitting, or bad evaluation sets" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;A number of risks must be considered when evaluating models' performance, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Overfitting: one of the most prevalent issues in ML/AI systems. This means the model is excellent with training data but does not generalize well.&lt;/li&gt;
 &lt;li&gt;Bad evaluation data: does test data reflect the data expected in production?&lt;/li&gt;
 &lt;li&gt;Bad upstream data: as the expression goes, "garbage in, garbage out". Issues in data upstream make both training and subsequent evaluation difficult.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that evaluation might be motivated by various stakeholder perspectives and interests. Always optimizing for the most common static tests would fail to account for the changes in societal, linguistic, and other relevant factors of the ecosystem and the application at hand. Make sure you validate that the metrics you selected properly measure what you are trying to achieve.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="Evaluation Gaps in Machine Learning Practice" url="https://arxiv.org/abs/2205.05256"/>
                <reference name="What Is Overfitting?" url="https://www.ibm.com/topics/overfitting"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-EVALUATION-METRICS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-MANIPULATE-PARAMETERS" name="An adversary may be able to manipulate model parameters or hyperparameters" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;ML/AI systems have a number of parameters and hyperparameters that might not be easy to understand or comprehensively test. Setting up and tuning models can be regarded as more of a black art than actual science, which make them subject to attacker influence.&lt;/p&gt;
&lt;p&gt;If an attacker can manipulate either the hyperparameters (used to control the learning process) or the parameters (learned by the model to map the input into the desired output), this will have a devastating effect on the performance and reliability of the ML/AI model.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PARAMETERS-PROTECTION" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="50939219-14a2-4311-b44f-a032b5efc0ec" diagramComponentId="ab4d129d-db94-4614-8cf8-d6b8c7d0b8ae" ref="4f45bca0-5751-4558-8273-f3b5838931f8" name="Data Preparation for Artificial Intelligence Modeling" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="" componentDefinitionRef="CD-ML-AI-DATA-PREPARATION-FOR-AI-MODEL">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-494" name="Download of Code Without Integrity Check" state="0" impact="100" issueId="" issueLink="">
          <desc>The product downloads source code or an executable from a remote location and executes the
                        code without sufficiently verifying the origin and integrity of the code.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.653">
              <output/>
            </source>
            <references>
              <reference name="CWE-494: Download of Code Without Integrity Check" url="https://cwe.mitre.org/data/definitions/494.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-359" name="Exposure of Private Information ('Privacy Violation')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly prevent private data (such as credit card numbers) from being accessed by actors who either (1) are not explicitly authorized to access the data or (2) do not have the implicit consent of the people to which the data is related.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.653">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.652">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-922" name="Information Exposure Through Local Storage" state="0" impact="100" issueId="" issueLink="">
          <desc>The software stores sensitive information without properly limiting read or write access by
                        unauthorized actors.
                        If read access is not properly restricted, then attackers can steal the sensitive information.
                        If write access is not properly restricted, then attackers can modify and possibly delete the
                        data, causing incorrect results and possibly a denial of service.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.323">
              <output/>
            </source>
            <references>
              <reference name="CWE-922: Insecure Storage of Sensitive Information" url="https://cwe.mitre.org/data/definitions/922.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.322">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ML-AI-AVOID-DIRECT-LOOPING" name="Avoid direct loops in the data pipeline" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A beneficial feedback loop typically involves bringing in unbiased, external information into your system, which would ensure that, over time, the models do not degrade due to being retrained on biased data that is strongly correlated to the outputs and does not reflect the true data distribution.&lt;/p&gt;
&lt;p&gt;Human-in-the-loop, or human-on-the-loop (only holding overall control over the system), are generally good ideas in ML/AI systems.&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Human-in-the-Loop in Machine Learning: A Handful of Arguments in Favor" url="https://labelyourdata.com/articles/human-in-the-loop-in-machine-learning"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-REDUNDANCY" name="Build and maintain redundant data streams" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Avoid central points of failure or compromise for all critical components of your system including the data stream.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Internally, this involves network pathway, power, geographic, and data redundancy, and can even be extended to individuals, i.e., key staff looking after the data pipeline!&lt;/p&gt;
&lt;p&gt;In addition, when possible, avoid 'vendor lock-in' and consider alternative data sources.&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.227">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PROTECT-SOURCES" name="Carefully select and protect data sources when possible" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When selecting data sources, their security (availability and integrity, and possibly confidentiality) is of paramount importance. This involves:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Analyze the source, e.g., reputation,&lt;/li&gt;
 &lt;li&gt;Evaluate the data quality,&lt;/li&gt;
 &lt;li&gt;Verify the data formats and accessibility options,&lt;/li&gt;
 &lt;li&gt;Verify the reliability of the data, including in terms of their security aspects, as well as legitimacy and biases,&lt;/li&gt;
 &lt;li&gt;Verify the security of the data source, e.g., compliance with security standards and regulations.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to find reliable data sources" url="https://earlygrowthfinancialservices.com/blog/how-to-find-reliable-data-sources/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.227">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-MODEL-SELECTION" name="Consider model selection techniques for more reliable and reproducible inference and predictions" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Model selection in ML/AI is the process of selecting the best algorithm and model architecture for a specific job and/or data. It entails assessing and contrasting various models to identify the one that best fits the data at hand and produces the best results.&lt;/p&gt;
&lt;p&gt;This involves some testing with modeling, as opposed to only relying on the characteristics of the data itself. Selection techniques include model performance comparisons with measurements such as the F-score, accuracy, precision, recall, or the area beneath the receiver's operating characteristic curve (AUC-ROC). Several model performance and validation strategies are used to assess each model's generalization, including sampling and splitting techniques.&lt;/p&gt;
&lt;p&gt;Note that the selection step is a must even though it increases the computational cost and time, such as cross-validation for instance, which requires training and testing multiple times with varied parameters.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Model selection for machine learning" url="https://www.scholarhat.com/tutorial/machinelearning/model-selection-for-machine-learning"/>
            <reference name="The Ultimate Guide to Evaluation and Selection of Models in Machine Learning" url="https://neptune.ai/blog/ml-model-evaluation-and-selection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" name="Consider possible trojanized versions when acquiring shared models" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Never assume what you are downloading is safe! Malicious actors often use trojanized versions of popular applications in an effort to steal information and compromise systems.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In this case, you might be fine-tuning a model with possibly a Trojan that includes sneaky behavior that is unanticipated.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Basic practices include carefully checking the source of the model, as well as using cryptographic methods like digital signatures and secure hashes to verify the authenticity and file integrity.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to Verify Downloaded Files" url="https://www.digitalocean.com/community/tutorials/how-to-verify-downloaded-files"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.581">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PRIVACY-TRAINING-DATA" name="Consider potential privacy issues such as de-identification early on" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Consider how sensitive the input data is and how to protect it early on in the design and model development process. Best practices include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;De-identification and removal of PII (Personal Identifiable Information) in the training data,&lt;/li&gt;
 &lt;li&gt;Obfuscation, or other techniques that might reduce the exposure of the data later on, including randomized/shuffled data, regularization, or restricting/reducing the training sets.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;One example of data anonymization technique used to protect individual privacy in a dataset is k-anonymization. &amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Example tool: ARX Data Anonymization" url="https://github.com/arx-deidentifier/arx"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.581">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-TEST-PACKAGES" name="Consider the security of the data and model supply chain" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In addition to inherent modelization risks, there are additional ones associated with security engineering, software security, and supply chain security. These include trojanization or backdooring of base models or other packages.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Understand and maintain the full list of dependencies and harden the verification and patching pipelines. &amp;nbsp;Consider the following:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Verification of digital signatures/ cryptographic hashes,&lt;/li&gt;
 &lt;li&gt;Use secure repos,&lt;/li&gt;
 &lt;li&gt;Keep packages up-to-date,&lt;/li&gt;
 &lt;li&gt;Use segregated virtual environments,&lt;/li&gt;
 &lt;li&gt;Perform regular code reviews of packages and libraries,&lt;/li&gt;
 &lt;li&gt;Use package verification tools, and&lt;/li&gt;
 &lt;li&gt;Educate users.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure at every step: What is software supply chain security and why does it matter?" url="https://github.blog/2020-09-02-secure-your-software-supply-chain-and-protect-against-supply-chain-threats-github-blog/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.581">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-DATA-VERSION-CONTROL" name="Consider using version control to manage datasets" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data versioning should be treated in the same manner as code versioning.&lt;/p&gt;
&lt;p&gt;There exist several data version control libraries such as DVC which is dedicated to ML/AI data and systems or lakeFS which provides a Git-like functionality for data using S3 or Google Cloud Storage (GCS).&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="(Not Just) Data Version Control" url="https://dvc.org/"/>
            <reference name="Best 7 Data Version Control Tools That Improve Your Workflow With Machine Learning Projects" url="https://neptune.ai/blog/best-data-version-control-tools"/>
            <reference name="Model and Data Versioning" url="https://github.com/EthicalML/awesome-production-machine-learning#model-and-data-versioning"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ACCESS-CONTROL" name="Control the access to data, models, and components" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;On the back-end/ server side, there should be strong controls on who has access to the model, its code and data, and related components and materials (such as designs, or test and validation plans).&lt;/p&gt;
&lt;p&gt;On the client side, users of the model should be authenticated before the system allows them access to using the model.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="A01:2021 – Broken Access Control - How to Prevent?" url="https://owasp.org/Top10/A01_2021-Broken_Access_Control/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PROPER-SLICING" name="Ensure the split data originate from similar data with careful consideration for overlaps" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Make sure that the training, validation, and test sets are 'the same' from data integrity, trustworthiness, and mathematical perspectives.&lt;/p&gt;
&lt;p&gt;Too much overlap or similarity between these sets may lead to overfitting. By contrast, when the evaluation set is too different from the eventual future inputs during operations, it will not measure the true performance.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Use best practices, including when using built-in methods within your favorite ML/AI framework.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Splits and Slicing (TensorFlow)" url="https://www.tensorflow.org/datasets/splits"/>
            <reference name="Train Test Validation Split: How To &amp; Best Practices" url="https://www.v7labs.com/blog/train-validation-test-set"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.581">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-HARDEN-DATA-PIPELINE" name="Harden the data and feedback pipeline" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data pipelines are at the heart of building a robust data practice. It includes the processing of the data, triggering model retraining, notifying when feedback/ metric is received/ reached, etc.&lt;/p&gt;
&lt;p&gt;When considering data and feedback collectors in a production environment, there are several aspects to ensure the security of the deployment. Best practices and considerations include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Secure encrypted end-to-end communication,&lt;/li&gt;
 &lt;li&gt;User identity management,&lt;/li&gt;
 &lt;li&gt;Secure credentials,&lt;/li&gt;
 &lt;li&gt;Audit and log activities,&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Limit the exposure of the automation stages, e.g., scripts that perform data and feedback transformations,&lt;/li&gt;
 &lt;li&gt;Secure storage, and&lt;/li&gt;
 &lt;li&gt;Secure streaming system and pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on your use case and infrastructure, you will have several options for data orchestration, including cloud-based options, such as AWS Glue or Azure Data Factory, among others.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Building a secure data pipeline in AWS Glue" url="https://docs.aws.amazon.com/whitepapers/latest/aws-glue-best-practices-build-secure-data-pipeline/building-a-secure-data-pipeline.html"/>
            <reference name="Security considerations for data movement in Azure Data Factory" url="https://learn.microsoft.com/en-us/azure/data-factory/data-movement-security-considerations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-IDENTIFY-BIAS" name="Identify potential bias in the data" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Measuring and mitigating the effects of potential biases and discriminatory patterns in the data is an important step to make ML/AI models fairer, especially in socially sensitive decision processes.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Bias Testing for Generalized Machine Learning Applications" url="https://github.com/pymetrics/audit-ai"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.030">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-MAINTAIN-QUALITY" name="Maintain data quality and integrity during data pre-processing" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintaining data quality is an essential practice when developing ML/AI models. This allows for a reliable data pipeline, including the data cleaning and feature engineering steps.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Developers might not always be aware of best practices for preparing or transforming the data for a given model type, which can lead to suboptimal representations of input features.&lt;/p&gt;
&lt;p&gt;Many data issues can be identified with some lightweight automation. Some examples include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Numerical features on widely differing scales,&lt;/li&gt;
 &lt;li&gt;Values assigned special meanings, e.g., to represent missing data,&lt;/li&gt;
 &lt;li&gt;Malformed values of special string types, such as dates.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is far from being an exhaustive list. A schema or a set of constraints should be defined for this data validation step, which would depend on the initial data, how it is expected to evolve, and the model type.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Deequ - Unit Tests for Data" url="https://github.com/awslabs/deequ"/>
            <reference name="The Data Linter: Lightweight, Automated Sanity Checking for ML Data Sets" url="http://learningsys.org/nips17/assets/papers/paper_19.pdf"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.031">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-MONITOR-DATA-DRIFT" name="Monitor for data drift, especially for new data and online models" issueId="" issueLink="" platform="" cost="0" risk="44" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data drift is a type of model drift where the properties of the independent variables change, i.e., input distribution changes.&lt;/p&gt;
&lt;p&gt;There are some basic monitoring measures to consider, including the use of statistical tests over time:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Compare the cumulative distributions of the initial training data and the post-training data, e.g., Kolmogorov-Smirnov test,&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Measure how a variable distribution changes, e.g., Population stability Index,&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Compare the feature distribution between the training data and post-training data, e.g., Z-score.&lt;/li&gt;
 &lt;li&gt;Compute the observed values and their mean, compared to a threshold value, e.g., the Page-Hinkley test.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are libraries and built-in verification and validation methods in ML/AI frameworks, such as TensorFlow for instance.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Frouros: A Python library for drift detection" url="https://arxiv.org/pdf/2208.06868.pdf"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.031">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-INPUT-MANIPULATION" name="Protect input from manipulation and poisoned data samples" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Always ensure that the training data is validated and verified before it is used to train the model. This involves the following considerations:&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Ensure that the data pipeline is properly managed and secure enough, e.g., versioning and security controls such as access control,&lt;/li&gt;
 &lt;li&gt;Secure storage,&lt;/li&gt;
 &lt;li&gt;Data monitoring, e.g., for changes in the data distribution, and&lt;/li&gt;
 &lt;li&gt;Logging and auditing.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.581">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-CONSISTENT-REPRESENTATION" name="Reviews of data representations, periodic validation, as well as future featurization options for the data being collected so that it is consistently represented" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Experimentations in the literature have revealed a strong correlation between data consistency and the performance of the ML/AI model. The following is helpful to maintain a consistent representation of the data throughout the ML/AI system lifecycle:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Measure the consistency of the labels assigned to similar items,&lt;/li&gt;
 &lt;li&gt;Detect issues such as low-quality/ambiguous examples or non-IID (independent and identically distributed) sampling,&lt;/li&gt;
 &lt;li&gt;Periodic automated validation to detect labeling errors, duplicates, outliers, etc.,&lt;/li&gt;
 &lt;li&gt;Account for possible changes in the data and alternatives on how to featurize it, and&lt;/li&gt;
 &lt;li&gt;Ensure data integrity while processing and migrating the data, over the network or into a new schema, for instance.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There exist tools around aspects like labeling or validation that can help further automate and speed up the process. Additionaly, consider the use of frameworks for creating portable and production-ready ML/AI pipelines.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Argilla - MLOps for NLP: from data labeling to model monitoring" url="https://github.com/argilla-io/argilla"/>
            <reference name="Cleanlab: clean data and labels by automatically detecting issues in a ML dataset" url="https://github.com/cleanlab/cleanlab"/>
            <reference name="Model Training Orchestration" url="https://github.com/EthicalML/awesome-production-machine-learning#model-training-orchestration"/>
            <reference name="TensorFlow Data Validation" url="https://github.com/tensorflow/data-validation"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-SECURE-STORAGE" name="Secure data storage" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Take measures to protect storage resources and the data stored on them, both on-premises and externally, e.g., on the cloud. This involves:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Access control to regulate who can use the data. The environment should identify, verify, and authorize a user before they access the data. Additional policies can dictate where the data can be copied and under which conditions.&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Storage encryption, which can be built in by the service provider. Otherwise, on-premise encryption should be considered.&lt;/li&gt;
 &lt;li&gt;Isolate data from other systems and networks.&lt;/li&gt;
 &lt;li&gt;Immutable storage as an extra protection layer that can help prevent bad actors from tampering with data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.227">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-SECURE-TRANSFER" name="Secure data transfer" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When data transfer is needed, various secure methods can be employed, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;SSH&lt;/li&gt;
 &lt;li&gt;SSL/TLS&lt;/li&gt;
 &lt;li&gt;VPN&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Also, do not forget to have a backup of your data before starting any migration process.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.228">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-VALIDATE-DATA" name="Validate data algorithmically before feeding it into the data pipeline" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintaining data quality is an essential practice when developing ML/AI models.&lt;/p&gt;
&lt;p&gt;Best practices for monitoring and validating the data include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Consistent scale across the data variables,&lt;/li&gt;
 &lt;li&gt;Data balancing to remove bias,&lt;/li&gt;
 &lt;li&gt;Data sensitivity tests,&lt;/li&gt;
 &lt;li&gt;Outliers recognition,&lt;/li&gt;
 &lt;li&gt;Common statistical checks such as data sparseness or variance, etc. including for assessing the data representativeness for the target application,&lt;/li&gt;
 &lt;li&gt;Checking against the restrictions as to how the acquired data can be used,&lt;/li&gt;
 &lt;li&gt;Others, such as the validity of characters in text, or the correlation between variables, etc.&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These might also depend on the domain area and target modeling.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Data Validation Tool" url="https://github.com/GoogleCloudPlatform/professional-services-data-validator"/>
            <reference name="TensorFlow Data Validation" url="https://github.com/tensorflow/data-validation"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:28:54.228">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-DATA-POISONING" name="An adversary may be able to manipulate training data" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Data is subject to poisoning whereby attackers may intentionally inject malicious data to cause ML/AI training to go awry.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Data engineers should consider what training data in their pipeline an attacker might be able to control and to what extent.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references>
                <reference name="ML02:2023 Data Poisoning Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML02_2023-Data_Poisoning_Attack.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-INPUT-MANIPULATION" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-CHANGING-DATA" name="Changing data distribution and properties will affect the performance of the future model" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;How the data will evolve over time is an important aspect to consider early on, which might affect pre-processing steps, as well as the future model behavior.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-MONITOR-DATA-DRIFT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-RAW-POISONING" name="Data sources may be unreliable due to data poisoning" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Data poisoning is one of the main concerns in adversarial ML/AI. It involves the intentional supply of wrong or misleading data to impact the quality of ML/AI models. The manipulation of the data is aimed at controlling the behavior of the model and delivering false results.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="ML02:2023 Data Poisoning Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML02_2023-Data_Poisoning_Attack.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PROTECT-SOURCES" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-DATA-PRE-PROCESSING" name="Data encoding, normalization, filtering, feature selection, and annotation, may all introduce biases or affect the predictive and generalization qualities of the model" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Raw data needs to be properly pre-processed in order to be processed by a learning algorithm. It will impact both the performance and security of the future ML/AI model. Important aspects to take into consideration are:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Feature discovery/engineering: transforming raw data into features that are easier to interpret and feed into the ML/AI model. This mostly relies on the type of data.&lt;/li&gt;
 &lt;li&gt;Encoding: both data and feature encoding should be carefully considered, e.g., to avoid information loss.&lt;/li&gt;
 &lt;li&gt;Normalization: essentially to use a common scale throughout the data.&lt;/li&gt;
 &lt;li&gt;Partitioning: care must be taken when creating data partitions.&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Other data manipulation or helpers: such as data filters or randomness, which plays an important role in stochastic systems.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="A Comprehensive Guide to Data Preprocessing" url="https://neptune.ai/blog/data-preprocessing-guide"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-IDENTIFY-BIAS" mitigation="50"/>
                <countermeasure ref="C-ML-AI-MAINTAIN-QUALITY" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-UNRELIABLE-SOURCES" name="Data sources may be biased, unbalanced, not representative or properly encoded, or even include copyrighted or illegal material" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Multiple issues can occur with raw input data, including:&amp;nbsp;&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Bias, which can have ethical and moral implications,&lt;/li&gt;
 &lt;li&gt;Imbalance, which reflects unequal distributions of classes within the dataset and will likely result in unstable models and poor performance (biased towards the overrepresented class),&lt;/li&gt;
 &lt;li&gt;Encoding and transformation, which might result in information loss, errors, or inconsistencies,&lt;/li&gt;
 &lt;li&gt;Representativity, which might not have proper coverage or distribution of the target population, and&lt;/li&gt;
 &lt;li&gt;Legality, such as copyrighted material or non-compliance with regulation, e.g., GDPR.&lt;/li&gt;
&lt;/ul&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-VALIDATE-DATA" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-INPUT-INFERENCE" name="An adversary may be able to conduct input inference attacks later on to get information from training data" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Data engineers should keep in mind that inference attacks are one of the most widespread attacks on ML/AI systems, and plan for it early on. The goals of these attacks are espionage and confidentiality.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;There are a number of inference attack types, including input inference. These attacks extract data from the training dataset, which represents a big issue in terms of privacy and GDPR compliance for instance.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="ML04:2023 Membership Inference Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML04_2023-Membership_Inference_Attack.html"/>
                <reference name="Membership Inference Attacks on Machine Learning: A Survey" url="https://arxiv.org/pdf/2103.07853.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-359">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-PRIVACY-TRAINING-DATA" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PRIVACY-TRAINING-DATA" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-LACK-VERSION-CONTROL" name="Insufficient or lack of version control of the data can disrupt the system and lead to inconsistencies and failures" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Insufficient or lack of version control carries multiple risks including working from the wrong data, losing previous states and creating rework, &amp;nbsp;and increasing the risk of inconsistencies, errors, or even total failures of the system without the possibility of rolling back to older data/versions.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Why Use a Version Control System?" url="https://www.git-tower.com/learn/git/ebook/en/desktop-gui/basics/why-use-version-control"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-DATA-VERSION-CONTROL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-INSECURE-STORE-TRANSFER" name="Data confidentiality and integrity can be jeopardized by an adversary taking advantage of data that is insecurely stored or managed" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Data sources that are not sufficiently protected might be manipulated or poisoned, whether at rest or during transfers.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="25" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-SECURE-TRANSFER" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-922">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-SECURE-STORAGE" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-SECURE-STORAGE" mitigation="50"/>
                <countermeasure ref="C-ML-AI-SECURE-TRANSFER" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-FEATURE-ENGINEERING" name="Consider how feature engineering and data representations and encodings might impact the future system output" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Data transformation into features, i.e., in a form that can be easily digested and interpreted by the ML/AI algorithm, is a key aspect in building performant and secure models.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;This involves a number of steps, including feature extraction and encoding, and a number of transformations such as dealing with missing values. Care must be taken early on to build a featurization pipeline that is likely to result in more robust systems.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="Feature Engineering" url="https://www.kaggle.com/learn/feature-engineering"/>
                <reference name="Robust Feature Alignment (an example from image classification)" url="https://github.com/safreita1/unmask"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-CONSISTENT-REPRESENTATION" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-DISABLED-DATA-SOURCES" name="An adversary may target and disable data sources that the system depends on" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Beyond data integrity, confidentiality, and quality; availability is of critical importance, especially when it comes to public data sources.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Data sources, which might be used both during training and post-deployment, can be vulnerable to attacks, including denial of service type of attacks.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="75"/>
              <references>
                <reference name="Understanding Denial-of-Service Attacks" url="https://www.us-cert.gov/ncas/tips/ST04-015"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-REDUNDANCY" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-DATA-SIMILARITY" name="(Di)similarity in training, test, and validation sets can result in overfitting, wrong evaluations, or simply erroneous models" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;If the training, validation, and test sets are not similar from a data integrity, trustworthiness, and mathematical perspective, the model cannot be properly assessed and will ultimately exhibit poor behavior when it is fielded.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PROPER-SLICING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-RAW-DATA-PROPERTIES" name="Raw data properties affect the design, selection, and outputs of ML/AI models" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Have you properly vetted the data being considered, including how it matches the algorithm under consideration? Data properties and quality should be a major consideration in order to reduce the impact of 'garbage in, garbage out'. Is the data fit to serve its purpose in the context of future modeling, i.e., the considered ML/AI technique?&lt;/p&gt;
&lt;p&gt;'Summarized' data via its statistical characteristics, as well as visualization, can be useful to select appropriate cleaning, feature processing, and modeling techniques.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-MODEL-SELECTION" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-LOOPING" name="For future online systems, they may be exposed to using their own output as input data" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;There may be unexpected behavior if data output from the future model is directly used as input, which is referred to as looping.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-AVOID-DIRECT-LOOPING" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-MODEL-SKEWING" name="An adversary may be able to slowly retrain the system with malicious introductions" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;In an online system, an attacker might be able to slowly 'retrain' the system to shift its behavior in unintended directions. This might happen if an attacker compromises the feedback loop in the model lifecycle, e.g., MLOps system.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="75"/>
              <references>
                <reference name="ML08:2023 Model Skewing" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML08_2023-Model_Skewing.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-HARDEN-DATA-PIPELINE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-BACKDOORING" name="An adversary may be able to use a base model or an underlying package as a means of attack ('backdooring')" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;If the model is not built from scratch, consider the possibility that the base models might be trojanized. Adversaries may introduce a backdoor by training the model with poisoned data, or injecting a payload into the model.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;The aim is that the model learns to associate an adversary trigger with the adversary's desired output.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="ML06:2023 Corrupted Packages" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML06_2023-Corrupted_Packages.html"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-ACCESS-CONTROL" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-494">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ACCESS-CONTROL" mitigation="33"/>
                <countermeasure ref="C-ML-AI-TEST-PACKAGES" mitigation="33"/>
                <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="df5de558-aa4f-48e5-9a04-6717f7d8e65f" diagramComponentId="21d0de4b-97fc-4446-b0dc-f07be2e5d903" ref="93188c58-de74-4bed-8fb8-21fe54a69945" name="Deployment Setup" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="" componentDefinitionRef="CD-ML-AI-DEPLOYMENT-SETUP">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-799" name="Improper Control of Interaction Frequency" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly limit the number or frequency of interactions that it has with
                        an actor, such as the number of incoming requests.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;This can allow the actor to perform actions more frequently than expected. The actor
                        could be a human or an automated process such as a virus or bot. This could be used to cause a
                        denial of service, compromise program logic (such as limiting humans to a single vote), or other
                        consequences. For example, an authentication routine might not limit the number of times an
                        attacker can guess a password. Or, a web site might conduct a poll but only expect humans to
                        vote a maximum of once a day.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.737">
              <output/>
            </source>
            <references>
              <reference name="CWE-799: Improper Control of Interaction Frequency" url="https://cwe.mitre.org/data/definitions/799.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-693" name="Protection Mechanism Failure" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not use or incorrectly uses a protection
                        mechanism that provides sufficient defense against directed attacks against the
                        product.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.733">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ML-AI-PROTECT-DEPLOYMENT" name="Consider possible defenses at the deployment stage to secure the outputs or the model" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There is an increasing demand for privacy-preserving techniques in ML/AI, at all levels, from training to inference. While there is no silver bullet when it comes to achieving privacy in ML/AI, certain mechanisms can be used to further secure the outputs or the model, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Obfuscation, e.g., especially for shipped/on-device models, as opposed to remote or cloud-hosted models,&lt;/li&gt;
 &lt;li&gt;Encryption, e.g., homomorphic encryption where training, inference, and output can be based on/generate encrypted data,&lt;/li&gt;
 &lt;li&gt;Decentralizes the data, such as with federated machine learning that strengthens both input and output privacy,&lt;/li&gt;
 &lt;li&gt;Added noise or the use of regularization which has been shown to strengthen anonymization without compromising model accuracy.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A number of ML/AI tools have now integrated privacy-preserving mechanisms such as Tensorflow or PyTorch. There are also tools dedicated to model deployment that can offer security and monitoring features, such as Seldon Core or Evidently.&lt;/p&gt;
&lt;p&gt;In addition to ML/AI-specific solutions, data engineering solutions can also contribute to supporting output and model privacy. These include strong authentication, authorization, and proxy/token-based access to inference.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Model Serving and Monitoring" url="https://github.com/EthicalML/awesome-production-machine-learning#model-serving-and-monitoring"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.650">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ACCESS-CONTROL" name="Control the access to data, models, and components" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;On the back-end/ server side, there should be strong controls on who has access to the model, its code and data, and related components and materials (such as designs, or test and validation plans).&lt;/p&gt;
&lt;p&gt;On the client side, users of the model should be authenticated before the system allows them access to using the model.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="A01:2021 – Broken Access Control - How to Prevent?" url="https://owasp.org/Top10/A01_2021-Broken_Access_Control/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.648">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-RECOVERY" name="Models in production should be able to recover to a known state, reset, or be 'cleaned' if necessary" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Make sure to have a failover mechanism and a business continuity plan. Best practices include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Manage your code base locally, backed by a remote repository,&lt;/li&gt;
 &lt;li&gt;Backup all data, including generated versioned models, important notebooks, and any configuration files,&lt;/li&gt;
 &lt;li&gt;Automate (script out) deployments, and&lt;/li&gt;
 &lt;li&gt;Make use of geo-replication for data storage/accounts if you are using your own deployment setup on a Cloud platform.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Disaster Recovery: Best Practices" url="https://www.cisco.com/en/US/technologies/collateral/tk869/tk769/white_paper_c11-453495.pdf"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.650">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-MONITOR-DRIFT" name="Monitor for model drift by continuously tracking the model's performance metrics in production" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Model drift detection is an active research field. New methods are continuously being proposed in the literature. There are, however, some basic monitoring measures to consider, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continually monitoring the accuracy of the model when possible, e.g., using F-score,&lt;/li&gt;
 &lt;li&gt;Use statistical tests to: 
  &lt;ul&gt;
   &lt;li&gt;Compare the cumulative distributions of the training data and the post-training data, e.g., Kolmogorov-Smirnov test,&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Measure how a variable distribution has changed over time, e.g., Population stability Index, or&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Compare the feature distribution between the training and live data, e.g., Z-score.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Addressing model drift would then involve setting up the right schedule to retrain your model.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Drift detection in the literature - sciencedirect" url="https://www.sciencedirect.com/topics/computer-science/concept-drift-detection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.650">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-RESTRICT-QUERIES" name="Restrict the number of model queries" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Define a resource access policy especially to limit the size and frequency of user queries. There are different ways that you can approach rate limiting, especially for APIs. This would involve:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Limits focused on controlling traffic from individual sources and making sure that users are staying within their prescribed limits, and&lt;/li&gt;&lt;li&gt;Global limits in relation to all the traffic coming into the system from all sources, and ensure that the overall rate limit (e.g., tested capacity of the system or what makes sense with regard to the model's task) is not exceeded.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Ideally, both are used to secure the system, including against denial of service attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.650">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-SECURE-STORAGE" name="Secure data storage" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Take measures to protect storage resources and the data stored on them, both on-premises and externally, e.g., on the cloud. This involves:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Access control to regulate who can use the data. The environment should identify, verify, and authorize a user before they access the data. Additional policies can dictate where the data can be copied and under which conditions.&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Storage encryption, which can be built in by the service provider. Otherwise, on-premise encryption should be considered.&lt;/li&gt;
 &lt;li&gt;Isolate data from other systems and networks.&lt;/li&gt;
 &lt;li&gt;Immutable storage as an extra protection layer that can help prevent bad actors from tampering with data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.651">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ISOLATE-CONTROL" name="Sufficiently isolate production models, with proper security controls and monitoring" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;ML/AI models are exposed by nature. The following should be considered when deploying models to production:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Host segregation to allow for more efficient monitoring,&lt;/li&gt;
 &lt;li&gt;Host protections, e.g., using endpoint security solutions,&lt;/li&gt;
 &lt;li&gt;Secure configuration and proper maintenance, e.g., patch/vulnerability management,&lt;/li&gt;
 &lt;li&gt;Proper access control, and&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Minimal exposure of services.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the other hand, the user should have a clear understanding of his/her responsibility when using third parties hosted MLOps tools / MLaaS (Machine Learning as a Service) offerings to develop and deploy ML/AI models.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Model Serving and Monitoring" url="https://github.com/EthicalML/awesome-production-machine-learning#model-serving-and-monitoring"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.649">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-HOST-COMPROMISE" name="An adversary may be able to exploit the host of the ML/AI system" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Where and how is the model deployed and operating? Attackers might target host servers that are not sufficiently isolated and protected.&lt;br&gt;Note that there is a plethora of tools and platforms (MLOps tools) that are used for model development, deployment, and monitoring (cf. examples in the below reference). This will involve a shared responsibility model with the provider.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="75"/>
              <references>
                <reference name="MLOps landscape" url="https://neptune.ai/blog/mlops-tools-platforms-landscape"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-ISOLATE-CONTROL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ISOLATE-CONTROL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-GARBAGE-DATA" name="Spamming the system with garbage data" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Adversaries may spam the system with data to produce output noise. This may also affect the model behavior in the long run.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-799">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-RESTRICT-QUERIES" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-RESTRICT-QUERIES" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-EXTRACTION" name="An adversary may be able to conduct input inference or model inversion/extraction attacks" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Extraction attacks are quite common and are one of the simplest forms of privacy leakage for ML/AI models. Also called 'inference attacks' or 'model inversion'.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;An attacker might be able to extract details of the data corpus the model was trained on, the inputs (e.g., inferring sensitive data features/input from publicly available results of a model), or the model itself by uncovering its behavior and parameters. This might have serious privacy implications.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="ML03:2023 Model Inversion Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML03_2023-Model_Inversion_Attack.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PROTECT-DEPLOYMENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-ERRONEOUS-MODEL" name="An adversary may be able to manipulate online production models" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Online production systems are subject to manipulation or complete shutdown by an ill-intentioned actor, or any other error or failure. Manipulation of online models might involve data provenance and integrity that results in model drift.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="75"/>
              <references>
                <reference name="Plan for business continuity and resilience" url="https://www.ready.gov/it-disaster-recovery-plan"/>
                <reference name="Understand model drift" url="https://datatron.com/what-is-model-drift/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-MONITOR-DRIFT" mitigation="50"/>
                <countermeasure ref="C-ML-AI-RECOVERY" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-MODEL-STEALING" name="An adversary may be able to steal the model" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;An attacker may be able to gain access to the model itself or the model's parameters, including via an environment breach. The attacker can use this information to recreate the model.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references>
                <reference name="ML05:2023 Model Stealing" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML05_2023-Model_Stealing.html"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-693">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-ACCESS-CONTROL" mitigation="50"/>
                    <countermeasure ref="C-ML-AI-SECURE-STORAGE" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ACCESS-CONTROL" mitigation="50"/>
                <countermeasure ref="C-ML-AI-SECURE-STORAGE" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="afe71945-8447-45e8-9bec-e8289a74c114" diagramComponentId="e2420090-9deb-49db-8759-61354a6c47de" ref="c80c37c8-4b1a-45e7-95c3-6005285c2b88" name="Model outputs" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="" componentDefinitionRef="CD-ML-AI-MODEL-OUTPUTS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-300" name="Channel Accessible by Non-Endpoint ('Man-in-the-Middle')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;In order to establish secure communication between two parties, it is often important to adequately verify the identity of entities at each end of the communication channel. Inadequate or inconsistent verification may result in insufficient or incorrect identification of either communicating entity. This can have negative consequences such as misplaced trust in the entity at the other end of the channel. An attacker can leverage this by interposing between the communicating entities and masquerading as the original entity. In the absence of sufficient verification of an identity, an attacker could potentially eavesdrop and modify &amp;nbsp;communication between the original entities.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.280">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ML-AI-EXPLAINABILITY" name="Consider improving and providing explainability" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Allowing users to comprehend and trust the results of the model does not only help transparency, but the overall security of the system as well.&amp;nbsp;&lt;br&gt;Certain models are explainable by nature, e.g., decision trees, but many others are not. Making inherently opaque models explainable can be done via a number of techniques, called post-hoc explainability techniques, such as:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Learning to generate text explanations,&lt;/li&gt;
 &lt;li&gt;Visualize the model's behavior vi dimensionality reduction for instance,&lt;/li&gt;
 &lt;li&gt;Segmenting the solution space into less complex solution subspaces,&lt;/li&gt;
 &lt;li&gt;Extracting representative examples of the inner relationships and correlations found by the model,&lt;/li&gt;
 &lt;li&gt;Compute the relevance score of features which would unveil the importance granted by the model to each of the variables.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="&quot;Why Should I Trust You?&quot;: Explaining the Predictions of Any Classifier" url="https://arxiv.org/abs/1602.04938"/>
            <reference name="Explainable Artificial Intelligence (XAI): Concepts, Taxonomies, Opportunities and Challenges toward Responsible AI" url="https://arxiv.org/abs/1910.10045"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.241">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-HARDEN-DATA-PIPELINE" name="Harden the data and feedback pipeline" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data pipelines are at the heart of building a robust data practice. It includes the processing of the data, triggering model retraining, notifying when feedback/ metric is received/ reached, etc.&lt;/p&gt;
&lt;p&gt;When considering data and feedback collectors in a production environment, there are several aspects to ensure the security of the deployment. Best practices and considerations include:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Secure encrypted end-to-end communication,&lt;/li&gt;
 &lt;li&gt;User identity management,&lt;/li&gt;
 &lt;li&gt;Secure credentials,&lt;/li&gt;
 &lt;li&gt;Audit and log activities,&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Limit the exposure of the automation stages, e.g., scripts that perform data and feedback transformations,&lt;/li&gt;
 &lt;li&gt;Secure storage, and&lt;/li&gt;
 &lt;li&gt;Secure streaming system and pipeline.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on your use case and infrastructure, you will have several options for data orchestration, including cloud-based options, such as AWS Glue or Azure Data Factory, among others.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Building a secure data pipeline in AWS Glue" url="https://docs.aws.amazon.com/whitepapers/latest/aws-glue-best-practices-build-secure-data-pipeline/building-a-secure-data-pipeline.html"/>
            <reference name="Security considerations for data movement in Azure Data Factory" url="https://learn.microsoft.com/en-us/azure/data-factory/data-movement-security-considerations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.242">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-MONITOR-DRIFT" name="Monitor for model drift by continuously tracking the model's performance metrics in production" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Model drift detection is an active research field. New methods are continuously being proposed in the literature. There are, however, some basic monitoring measures to consider, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Continually monitoring the accuracy of the model when possible, e.g., using F-score,&lt;/li&gt;
 &lt;li&gt;Use statistical tests to: 
  &lt;ul&gt;
   &lt;li&gt;Compare the cumulative distributions of the training data and the post-training data, e.g., Kolmogorov-Smirnov test,&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Measure how a variable distribution has changed over time, e.g., Population stability Index, or&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Compare the feature distribution between the training and live data, e.g., Z-score.&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Addressing model drift would then involve setting up the right schedule to retrain your model.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Drift detection in the literature - sciencedirect" url="https://www.sciencedirect.com/topics/computer-science/concept-drift-detection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.242">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-MODEL-DRIFT" name="Model drift may occur when the data changes becoming unstable and producing unreliable predictions" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Model drift is one of the most prominent issues in ML/AI deployments. It represents the decay of the model's predictive power as a result of the changes in real-world conditions or attacks introducing malicious shifts in the distribution of training data.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="50" easeOfExploitation="100"/>
              <references>
                <reference name="Understand model drift" url="https://datatron.com/what-is-model-drift/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-MONITOR-DRIFT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-MITM-MODEL-OUTPUT" name="An adversary may be able to interpose between the model output and the intended receiver" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Output integrity might be hard to verify given the black-box model most data-driven systems operate in. An attacker might be able to execute a man-in-the-middle type of attack and hijack the model output without alerting the end user or even the model publisher monitoring the system&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references>
                <reference name="ML09:2023 Output Integrity Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML09_2023-Output_Integrity_Attack.html"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-300">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-HARDEN-DATA-PIPELINE" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-HARDEN-DATA-PIPELINE" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-OPACITY" name="Opaque systems may less accepted and make it easier for adversaries to inject erroneous outputs" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Interpretability and transparency might not be the main concerns initially, given that accuracy is what the data engineer would look for the most. This, however, makes attacks a much easier endeavor, since it will be harder to discern if anything has gone wrong. Additionally, the lack of transparency and/or the impossibility of interpretable outputs by humans is likely to increase skepticism about ML/AI systems. &amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="75"/>
              <references>
                <reference name="Artificial intelligence, transparency, and public decision-making" url="https://link.springer.com/article/10.1007/s00146-020-00960-w"/>
                <reference name="What is explainable AI" url="https://www.ibm.com/watson/explainable-ai"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-EXPLAINABILITY" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3d36f35c-336e-4b99-ab42-8fecd30a6941" diagramComponentId="0fc01628-45e1-4af1-be15-b9bfe22f3242" ref="d5efa9cf-fe64-4ee1-bb46-4db4e978c37d" name="Out Of Scope" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="out-of-scope">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="6d28e216-ecbd-4255-ab8d-b09dedbf879d" diagramComponentId="44ffbffc-8caa-4f65-bbe9-a327faa5c8ec" ref="a4358da6-d80b-485c-b27c-2313a9e9e45d" name="Simulator Service. Predicted actions, e.g., buy/sell" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="generic-service">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.209">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.209">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-502" name="Deserialization of Untrusted Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The application deserializes untrusted data without sufficiently verifying that the resulting
                        data will be valid.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.209">
              <output/>
            </source>
            <references>
              <reference name="CWE-502: Deserialization of Untrusted Data" url="https://cwe.mitre.org/data/definitions/502.html"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-15" name="External Control of System or Configuration Setting" state="0" impact="100" issueId="" issueLink="">
          <desc>One or more system settings or configuration elements can be externally controlled by a user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.444">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.864">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-460" name="Improper Cleanup on Thrown Exception" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.209">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-116" name="Improper Encoding or Escaping of Output" state="0" impact="100" issueId="" issueLink="">
          <desc>The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.445">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-841" name="Improper Enforcement of Behavioral Workflow" state="0" impact="100" issueId="" issueLink="">
          <desc>The software supports a session in which more than one behavior
                        must be performed by an actor, but it does not properly ensure that the actor
                        performs the behaviors in the required sequence.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.210">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-95" name="Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. "eval").</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes
                        output that is written to logs.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.863">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.421">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-272" name="Least Privilege Violation" state="0" impact="100" issueId="" issueLink="">
          <desc>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.208">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.865">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-350" name="Reliance on Reverse DNS Resolution for a Security-Critical Action" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.582">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.446">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.761">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L3" name="There is no network protection to protect against Layer 3" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no measures in place to mitigate (D)DoS at a network level.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.762">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L4" name="There is no network protection to protect against Layer 4" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-TLS" name="There is no protection against Layer 6 attacks (SSL/TLS)" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.763">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-541" name="The service returns back-end source code without interpreting it" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If an include file source is accessible, the file may contain usernames and passwords, as well as sensitive information pertaining to the application and system. The source code can also be sent back to a client because of an error condition or an improperly configured handler.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.209">
              <output/>
            </source>
            <references>
              <reference name="CWE-541: Information Exposure Through Include Source Code" url="https://cwe.mitre.org/data/definitions/541.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="dyn-exec" name="Assure that the application avoids the use of eval() or other dynamic code execution features" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Assure that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for scripts that do not properly validate user inputs in the page parameter. A remote user can supply a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution.&lt;/p&gt;&lt;p&gt;Note 1: This attack will execute the code with the same permissions, potentially including operation system commands.&lt;/p&gt;&lt;p&gt;Note 2: Eval injection is prevalent in handler/dispatch procedures that want to invoke a large number of functions, or set a large number of variables.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.226">
              <output/>
            </source>
            <references>
              <reference name="Direct Dynamic Code Evaluation (Eval Injection)" url="https://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection"/>
              <reference name="[SCRIPT_ENGINE_INJECTION] Potential code injection when using Script Engine" url="https://find-sec-bugs.github.io/bugs.htm"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC" name="Detect and notify the usage of automated tools or unusual behavior" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Don't allow users to manipulate a system or guess its behavior based on input or output timing and detect the usage of automated tools or unusual behavior, such as actions not performed in reasonable "human time" or other abnormal time patterns.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;When the usage of automated tools is detected, the application should respond by denying access and notifying the security group.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Use several automated tools to perform normal user actions.&lt;/li&gt;
                            &lt;li&gt;Check that the applications detects these actions, denies the users access and
                            notifies the security group.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.954">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection-against-data-mining" name="Detect and protect against data mining techniques" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data mining is an analytical process that attempts to find correlations or patterns in large data sets for the purpose of data or knowledge discovery. Data storage objects include database records and database fields. Sensitive information can be extracted from data mining operations. When information is personally identifiable information, it may lead to unanticipated revelations about individuals and give rise to privacy risks. Prior to performing data mining activities, organizations determine whether such activities are authorized. Organizations may be subject to applicable laws, executive orders, directives, regulations, or policies that address data mining requirements. Organizational personnel consult with the senior agency official for privacy and legal counsel regarding such requirements.&lt;/p&gt;&lt;p&gt;Data mining prevention and detection techniques include limiting the number and frequency of database queries to increase the work factor needed to determine the contents of databases, limiting types of responses provided to database queries, applying differential privacy techniques or homomorphic encryption, and notifying personnel when atypical database queries or accesses occur. Data mining protection focuses on protecting information from data mining while such information resides in organizational data stores. In contrast, AU-13 focuses on monitoring for organizational information that may have been mined or otherwise obtained from data stores and is available as open-source information residing on external sites, such as social networking or social media websites.&lt;/p&gt;&lt;p&gt;EO 13587 requires the establishment of an insider threat program for deterring, detecting, and mitigating insider threats, including the safeguarding of sensitive information from exploitation, compromise, or other unauthorized disclosure. Data mining protection requires organizations to identify appropriate techniques to prevent and detect unnecessary or unauthorized data mining. Data mining can be used by an insider to collect organizational information for the purpose of exfiltration.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="AC-23" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your system supports policies that protect against data mining such as filtering, throttling and anomaly detection.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.956">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.566">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-FILE-DATA" name="Do not use untrusted client-side data in server-side file operations" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application may be required to perform server-side file operations based on client-side actions. This can expose the application to attack through remote or local file-inclusion, or remote code execution attacks if unsafe data is used in file inclusion, class loader, or reflection capabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tainted, untrusted, client-side data must not be used directly in server-side file load operations.&lt;/li&gt;&lt;li&gt;Where server-side operations are dependent on client-side input, this should be mapped to pre-defined operations on the server-side rather than using tainted client-side input directly.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify sources of data entering the application.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Classify them into trusted and untrusted.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;if they are untrusted, make sure there is a validation and sanitization mechanism before sending this data into another system (Database, Command, etc.).&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.564">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.952">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.954">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.954">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="configuration-integrity" name="Ensure the integrity of all security-relevant configurations to detect tampering" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Web server and application server configurations play a key role in the security of a web application. These servers are responsible for serving content and invoking applications that generate content. In addition, many application servers provide a number of services that web applications can use, including data storage, directory services, mail, messaging, and more. Failure to manage the proper configuration of your servers can lead to a wide variety of security problems.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation:&lt;/b&gt;
&lt;/div&gt;
&lt;div&gt;
  Authorized administrators need to ensure the integrity of all security-relevant configurations to detect tampering.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="14.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
&lt;/div&gt;
&lt;div&gt;
  4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
&lt;/div&gt;
&lt;div&gt;
  4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
&lt;/div&gt;
&lt;div&gt;
  4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
&lt;/div&gt;
&lt;div&gt;
  4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
&lt;/div&gt;
&lt;div&gt;
  4.3.6 Test HTTP Methods (OTG-CONFIG-006)
&lt;/div&gt;
&lt;div&gt;
  4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
&lt;/div&gt;
&lt;div&gt;
  4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
&lt;/div&gt;
&lt;div&gt;
  4.3.9 Test File Permission (OTG-CONFIG-009)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.226">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SA-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.566">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.563">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-dns-domains" name="Identify the DNS domains periodically to update the information about them" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should have a protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify the forward and reverse DNS lookups.&lt;/li&gt;&lt;li&gt;Verify the connection to the DNS was authenticated successfully by username/password or certificate and that they are active.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.531">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-L7" name="Identity which functions of the application are resource consuming and protect and monitor them (optionally set up a WAF)" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DoS attacks against the application layer also aim to use up the memory and process time that the application requires to function properly while minimizing the resources employed by the attacker by using vulnerabilities or flaws in the application. The main characteristics of this type of attack are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The requirement for less bandwidth compared to other methods such as SYN Flood attacks, and as such, the infrastructure necessary to launch a successful attack is usually minor.&lt;/li&gt;&lt;li&gt;Greater difficulty in distinguishing between malicious and legitimate traffic. Many of the most common protection measures or systems focus on the network or transport layer, and as such, they would not be efficient when the target of the attack is the application layer. It is even difficult for the defense systems that monitor this layer to distinguish between malicious and legitimate traffic.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As we have indicated, this type of attack is very specific, and generally require fewer resources from the attacker to achieve devastating effects in the systems attacked. However, this type of attack requires more time to analyze the targeted system in order to discover vulnerabilities or bottlenecks that can be exploited during the attack.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Analyze weaknesses or bottlenecks in the design, the implementation, or even the functioning of the application to identify "heavy" requests that are resource consuming. For example, if the web application has a search engine, an attack could be to carry out searches that require a high level of resources to generate a bottleneck and eventually disable the service.&lt;/li&gt;&lt;li&gt;Implement a challenge to the device making the network request in order to test whether or not it is a bot. This is done through a test much like the CAPTCHA test commonly found when creating an account online. By giving a requirement such as a JavaScript computational challenge, many attacks can be mitigated.&lt;/li&gt;&lt;li&gt;Use of a web application firewall, managing and filtering traffic through an IP reputation database, and through on-the-fly network analysis by engineers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Layer 7 DDoS Attacks" url="https://owasp.org/www-pdf-archive/Layer_7_DDOS.pdf"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 7 DDoS PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space. One well-known application attack is Slowloris, which targets web servers. Verify that the implemented Layer 7 protection mechanisms (Javascript challenges, CAPTCHA tests, WAF) are effective.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.699">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="implement-monitoring-unusual-activities" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement in the application the appropriate limits for specific business actions and transactions, to enforce the correct usage of the application for each user ensuring they cannot bypass important steps in the flow. This business logic limits provide us protection against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/p&gt;&lt;p&gt;All business actions or transactions that exceed the established limits, should be recorded in the logs and monitored as unusual events.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A04:2021-Insecure Design" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.&lt;/li&gt;
   &lt;li&gt;Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/li&gt;
  &lt;li&gt;Verify the application monitors for unusual events or activity from a business logic perspective.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.956">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="error-handling-centralized" name="Implement centralized mechanisms to manage errors and exceptions" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a functionality or a mechanism to manage exceptions in a centralized manner and avoid including duplicated try/catch blocks in the code.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;A well-planned error/exception handling strategy is important for three reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Good error handling does not give an attacker any information which can be leveraged for attacking the application.&lt;/li&gt;&lt;li&gt;A proper centralized error strategy is easier to maintain and reduces the chances of any uncaught errors "Bubbling up" to the front-end of an application.&lt;/li&gt;&lt;li&gt;Information leakages can lead to social engineering exploits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building an infrastructure for consistent error reporting proves more difficult than error handling. All exceptions should be caught as events with the severity of the error. These events will be logged.&lt;/p&gt;&lt;p&gt;The centralized system should reorganize all events and throw the corresponding error or system message in a consistent manner, depending on the severity of the error.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Code Review: Error Handling" url="https://www.owasp.org/index.php/Codereview-Error-Handling"/>
            <reference name="OWASP Error Handling" url="https://www.owasp.org/index.php/Error_Handling"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify that a centralized system is in place to catch errors and exceptions, and these errors are shown in a correct manner.&lt;/li&gt;&lt;li&gt;Verify all errors thrown from the centralized system are displayed in a correct fashion.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.955">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.567">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-TLS" name="Inspect the TLS/SSL traffic on a capable device before sending the connection down on your infrastructure" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;TLS adds another vector for computational attacks since a client can easily (with little computational effort) force the server to expend relatively large computational work. If a web application is delivered over TLS, an attacker can also choose to attack the TLS negotiation process. TLS is computationally expensive so an attacker can reduce a server's availability by sending unintelligible data. In a variation of this attack, an attacker completes the TLS handshake but perpetually renegotiates the encryption method. Or an attacker can attempt to exhaust server resources by opening and closing many TLS sessions.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;To mitigate consider options like offloading the SSL from the origin infrastructure and inspecting the application traffic for signs of attack traffic or violations of policy at an application delivery platform (ADP).&lt;br&gt;A good ADP will also ensure that your traffic is then re-encrypted and forwarded back to the origin infrastructure with unencrypted content only ever residing in protected memory on a secure bastion host.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 6 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt;. It covers all the required tests for TLS &amp;amp; SSL assessments and is regularly updated.&lt;/p&gt;&lt;p&gt;There are many testing options that can be used with &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; and the options you should use will depend greatly on your testing requirements. Below are some useful examples, for an overview of &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; command-line options. run ./testssl.sh with no other options.&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to console&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Test all hosts on a Subnet and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Same as above, but only enumerate each servers supported ciphers:&lt;br&gt;./testssl.sh -E 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.700">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.566">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.564">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-LOGGING" name="Logging the data access and the modification of personal data" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that every access and modification of personal data is logged (The log should be precise enough to know who changed what and when). This includes data access from the application as well as data access from privileged accounts, such as database admins. In practice, this means logging both on application, middleware and operating system (OS) level.
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="Art.5" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Test accessing and modifying user personal data as legitimate users, employees, administrators and malicious actors.&lt;/li&gt;
                &lt;li&gt;Verify appropriate logging of all the above activities are successful and sufficiently detailed.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.565">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.566">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-541" name="Prevent unauthorised access to source code through the service" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to the source-code for the application can aid an attacker in determining bugs or vulnerabilities in the code or logic. For closed-source projects it is therefore important to control and restrict access to the source. Application services may unexpectedly expose code, for example a service providing files to a user could be manipulated to access source code if implemented insecurely.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure source code is not inadvertently disclosed through misconfiguration or vulnerabilities in the service.&lt;/li&gt;&lt;li&gt;Check configuration files are not downloadable directly from the service, and cannot be read and viewed through the service itself.&lt;/li&gt;&lt;li&gt;Ensure backups, operating systems, and version control artifacts do not expose code.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the source code of the application is never returned in cases in which it cannot be interpreted.&lt;/li&gt;&lt;li&gt;Web Servers have a concept called handlers which manage the source code interpretation before sending it to the client. If those handlers are not properly configured, the plain source code could be sent as a default.&lt;/li&gt;&lt;li&gt;Check the handlers are correctly configured to support the types of languages your server uses.&lt;/li&gt;&lt;li&gt;Check also that the source code is not leaked in case of failure.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.954">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-ICMP-Flooding" name="Rate-limit ICMP traffic and prevent the attack from impacting bandwidth and firewall performance" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Common attacks are ICMP Flooding, Ping flood and Ping of death - Layer 3 infrastructure DDoS attack methods that use ICMP messages to overload the targeted network's bandwidth. These kind of attacks can be prevented from taking place by rate-limiting ICMP traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;For example, iptables can be used on Linux systems as follows:&lt;/p&gt;&lt;p&gt;To protect against ping flood attacks the 'limit' module of iptables can be used:&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note that the above lines will protect only against ping request attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To protect against generic ICMP flood attacks we can remove the constraint '--icmp-type echo-request'. This is only good enough to protect against PC to PC attacks. If flood is done using multiple sources or using hardware then this configuration may not be enough. The configuration will also cause denial of service to other users when under attack even from single source, as we are limiting based on protocol without considering the source address of the packet.&lt;/p&gt;&lt;p&gt;Iptables can also be used to prevent abuse of network resources by rate limiting them:&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 4/second --limit-burst 12 -j ACCEPT&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 1/minute --limit-burst 1 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;In the above example we are limiting outgoing connections to port 80. This is useful when we can't completely block outgoing connections but we do not want it to become channel from where people start browsing net or downloading. The limit module can also be used in rate limiting incoming traffic for performance reasons.&lt;/p&gt;&lt;p&gt;Disabling a ping flood is most easily accomplished by disabling the ICMP functionality of the targeted router, computer or other device. A network administrator can access the administrative interface of the device and disable its ability to send and receive any requests using the ICMP, effectively eliminating both the processing of the request and the Echo Reply. The consequence of this is that all network activities that involve ICMP are disabled, making the device unresponsive to ping requests, traceroute requests, and other network activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Ping (ICMP) Flood DDoS Attack" url="https://www.cloudflare.com/learning/ddos/ping-icmp-flood-ddos-attack/"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="Rate limiting using iptables" url="https://www.sbarjatiya.com/notes_wiki/index.php/Rate_limiting_using_iptables"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can execute a Smurf attack (denial-of-service attack that floods a target system via spoofed broadcast ping messages) using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 -1 - flood -a VICTIM_IP BROADCAST_ADDRESS&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.699">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC-006" name="Restrict actions of users that follow unusual patterns" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict actions that users can do outside of the approved/required business process flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This is important because without this safeguard in place attackers may be able to bypass or circumvent work-flows and checks allowing them to prematurely enter or skip required sections of the application potentially allowing actions/transactions to be completed without successfully completing the entire business process, leaving the system with incomplete back-end tracking information.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-02 Flaw Remediation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/40-08_02_SI-02"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
            <reference name="OWASP testing for the circumvention of work flows" url="https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006)"/>
          </references>
          <standards>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application only processes business logic flows in sequential step order and in realistic human time.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.954">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.378">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:06.565">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-BH" name="Use blackholing to mitigate L4 DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DDoS attack blocking, commonly referred to as blackholing, is a method typically used by ISPs to stop a DDoS attack on one of its customers. This approach to block DDoS attacks makes the site in question completely inaccessible to all traffic, both malicious attack traffic and legitimate user traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Blackholing is typically deployed by the ISP to protect other customers on its network from the adverse effects of DDoS attacks such as slow network performance and disrupted service. Common attacks are SYN flood and Smurf attack. For Smurf attack a simple solution is to disable IP broadcasting addresses at each network router and firewall.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Older routers are likely to enable broadcasting by default, while newer routers will likely already have it disabled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Disable broadcasting by default on old routers.&lt;/p&gt;&lt;p&gt;To implement RTBH (Remote Triggered Black Hole) Network Operator sets up a null route for the 192.0.2.1 address on all the backbone routers which participate in BGP:&lt;/p&gt;&lt;p&gt;ip route 192.0.2.1 255.255.255.255 null 0 254&lt;/p&gt;&lt;p&gt;192.0.2.1 is part of 192.0.2.0/24, the TEST-NET, one of the reserved IPv4 address blocks.&lt;/p&gt;&lt;p&gt;Create a route-map to catch routes which need to be blackholed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static routes can be tagged in Cisco IOS - we will tag routes to be blackholed with the value of 66&lt;/li&gt;&lt;li&gt;Set origin to be iBGP&lt;/li&gt;&lt;li&gt;Set local-preference to be 150&lt;ul&gt;&lt;li&gt;higher than any other local-preference set in the backbone&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set community to be no-export and internal marker community (ASN:666)&amp;nbsp;&lt;ul&gt;&lt;li&gt;Don't want prefix to leak outside the AS&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set next-hop to 192.0.2.1 (IPv4) or 100::1 (IPv6)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then introduce the route-map into the BGP configuration.&lt;/p&gt;&lt;p&gt;To implement the trigger, simply null route whatever address or address block needs to be blackholed:&lt;/p&gt;&lt;p&gt;ip route 50.62.124.1 255.255.255.255 null0 tag 66&amp;nbsp;&lt;/p&gt;&lt;p&gt;And this ensures that (for example) 50.62.124.1/32 is announced to the entire backbone with next-hop 192.0.2.1 set.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="RFC 4987 - TCP SYN Flooding Attacks and Common Mitigations" url="https://tools.ietf.org/html/rfc4987"/>
            <reference name="RFC 5635 - Remote Triggered Black Hole Filtering               with Unicast Reverse Path Forwarding (uRPF)" url="https://tools.ietf.org/html/rfc5635"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can simulate a TCP SYN DDoS Attack using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 VICTIM_IP -flood -rand-source -destport 80 -syn -d 120 -w 64&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.698">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.956">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="same-encoding-parsers" name="Use the same encodings and parsers in all application components" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Errors may occur when converting between differently coded character data.&amp;nbsp; There are two general types of encoding errors. If the byte sequence is not valid for the specified charset then the input is considered malformed. If the byte sequence cannot be mapped to an equivalent character sequence then an unmappable character has been encountered.&lt;/p&gt;&lt;p&gt;Special care should be taken when decoding untrusted byte data to ensure that malformed input or unmappable character errors do not result in defects and vulnerabilities.&amp;nbsp; Encoding errors can also occur, for example, encoding a cryptographic key containing malformed input for transmission will result in an error. Encoding and decoding errors typically result in data corruption.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the same encodings and parsers in all application components to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="STR51-J. Use the charset encoder and decoder classes when more control over the encoding process is required" url="https://wiki.sei.cmu.edu/confluence/display/java/STR51-J.+Use+the+charset+encoder+and+decoder+classes+when+more+control+over+the+encoding+process+is+required"/>
          </references>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all application components are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.227">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.226">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:07.225">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="hostile-subdomain-takeover" name="Attackers claim subdomains with the help of external services" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  This attack vector utilizes DNS entries pointing to Service Providers where the pointed sub-domain is currently not in use. Depending on the DNS-entry configuration and which Service Provider it points to, some of these services will allow unverified users to claim these sub-domains as their own.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In the not so rare case, the attacker can also "inherit" the Domain Owner's Wildcard SSL used inside the Service Provider.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
  &lt;b&gt;Attack Scenario&lt;/b&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;ol&gt;
   &lt;li&gt;Your company starts using a new service, eg an external Support Ticketing-service.&lt;/li&gt;
   &lt;li&gt;Your company points a sub-domain to the Support Ticketing-service, eg support.your-domain.com&lt;/li&gt;
   &lt;li&gt;Your company stops using this service but does not remove the sub-domain redirection pointing to the ticketing system.&lt;/li&gt;
   &lt;li&gt;Attacker signs up for the Service and claims the domain as theirs. No verification is done by the Service Provider, and the DNS-setup is already correctly setup.&lt;/li&gt;
   &lt;li&gt;Attacker can now build a complete clone of the real site, add a login form, redirect the user, steal credentials (e.g. admin accounts), cookies and/or completely destroy business credibility for your company.&lt;/li&gt;
  &lt;/ol&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hostile Subdomain Takeover using Heroku/Github/Desk + more" url="https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-350">
                  <countermeasures>
                    <countermeasure ref="identify-dns-domains" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-dns-domains" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-272">
                  <countermeasures>
                    <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-214" name="An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-460">
                  <countermeasures>
                    <countermeasure ref="error-handling-centralized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="error-handling-centralized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="SOURCE-LEAK" name="Attackers gain control of the system through a source code leakage" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Attackers gain unauthorized access to a service by reading raw source code returned by the service, and this code contains confidential information such as authentication credentials or other secrets that can be used to access the service.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Configuration files that can be downloaded from the service could also be leveraged to gain access to sensitive information.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-541">
                  <countermeasures>
                    <countermeasure ref="CWE-541" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-541" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-172" name="Attackers subvert the intended workflow of the application in order to perform unauthorised operations" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;If an application enforces an order in workflows, then attackers could attempt to bypass this order so that they can perform operations for which they are not authorized. The technique can also be used to gain access to unauthorized data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-841">
                  <countermeasures>
                    <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                    <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                    <countermeasure ref="network-rate-limit" mitigation="34"/>
                    <countermeasure ref="protection-against-data-mining" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="protection-against-data-mining" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="availability" name="Availability" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-607" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L3">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L4">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-TLS">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-300" name="Attackers gain control of the connection through a Man In The Middle attack" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
                                This type of attack targets the communication between two components (typically client
                                and server). The attacker places himself in the communication channel between the two
                                components. Whenever one component attempts to communicate with the other (data flow,
                                authentication challenges, etc.), the data first goes to the attacker, who has the
                                opportunity to observe or alter it, and it is then passed on to the other component as
                                if it was never intercepted. This interposition is transparent leaving the two
                                compromised components unaware of the potential corruption or leakage of their
                                communications. The potential for Man-in-the-Middle attacks yields an implicit lack of
                                trust in communication or identify between two components.&amp;nbsp; &amp;nbsp;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-586-SER" name="An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-502">
                  <countermeasures>
                    <countermeasure ref="SER-UNTRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SER-UNTRUST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG-MANAGEMENT" name="Log Management" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.8" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-778-AUTH" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                    <countermeasure ref="CWE-662" mitigation="16"/>
                    <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                    <countermeasure ref="security-logging" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                <countermeasure ref="CWE-662" mitigation="16"/>
                <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="70"/>
                <countermeasure ref="LOG-RETENTION" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="post-data" name="Post data" desc="Data is received (posted) here" library="CS-Default">
          <threats>
            <threat ref="ssrf-threat" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                    <countermeasure ref="CWE-601" mitigation="25"/>
                    <countermeasure ref="DATA-VAL" mitigation="25"/>
                    <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                <countermeasure ref="CWE-601" mitigation="25"/>
                <countermeasure ref="DATA-VAL" mitigation="25"/>
                <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-94" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-176" name="Attackers can manipulate Configuration/Environment" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-15">
                  <countermeasures>
                    <countermeasure ref="configuration-integrity" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="configuration-integrity" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-35" name="Attackers can leverage Executable Code in Non-Executable Files" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attack of this type exploits a system's trust in configuration and resource files, when the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.
&lt;br /&gt;The attack can be directed at a client system, such as causing buffer overrun through loading seemingly benign image files, as in Microsoft Security Bulletin MS04-028 where specially crafted JPEG files could cause a buffer overrun once loaded into the browser. Another example targets clients reading pdf files. In this case the attacker simply appends javascript to the end of a legitimate url for a pdf (http://www.gnucitizen.org/blog/danger-danger-danger/)
&lt;br /&gt;http://path/to/pdf/file.pdf#whatever_name_you_want=javascript:your_code_here
&lt;br /&gt;The client assumes that they are reading a pdf, but the attacker has modified the resource and loaded executable javascript into the client's browser process.
&lt;br /&gt;The attack can also target server processes. The attacker edits the resource or configuration file, for example a web.xml file used to configure security permissions for a J2EE app server, adding role name &amp;quot;public&amp;quot; grants all users with the public role the ability to use the administration functionality.
&lt;br /&gt;The server trusts its configuration file to be correct, but when they are manipulated, the attacker gains full control.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-95">
                  <countermeasures>
                    <countermeasure ref="dyn-exec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="dyn-exec" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-73" name="Attackers upload code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to exploit these vulnerabilities.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-116">
                  <countermeasures>
                    <countermeasure ref="same-encoding-parsers" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="same-encoding-parsers" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="df631004-6ac9-405d-ac55-39c9fe623577" diagramComponentId="fbe5a8dd-a845-4f24-8c65-4057af728d1c" ref="bc3f8050-e04c-4f35-95f6-e4290a8cfa2a" name="Trade Service" desc="" library="CS-Default" parentComponentRef="93188c58-de74-4bed-8fb8-21fe54a69945" componentDefinitionRef="generic-service">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.875">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.874">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-502" name="Deserialization of Untrusted Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The application deserializes untrusted data without sufficiently verifying that the resulting
                        data will be valid.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.875">
              <output/>
            </source>
            <references>
              <reference name="CWE-502: Deserialization of Untrusted Data" url="https://cwe.mitre.org/data/definitions/502.html"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-15" name="External Control of System or Configuration Setting" state="0" impact="100" issueId="" issueLink="">
          <desc>One or more system settings or configuration elements can be externally controlled by a user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.492">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.199">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-460" name="Improper Cleanup on Thrown Exception" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.874">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-116" name="Improper Encoding or Escaping of Output" state="0" impact="100" issueId="" issueLink="">
          <desc>The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-841" name="Improper Enforcement of Behavioral Workflow" state="0" impact="100" issueId="" issueLink="">
          <desc>The software supports a session in which more than one behavior
                        must be performed by an actor, but it does not properly ensure that the actor
                        performs the behaviors in the required sequence.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-95" name="Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. "eval").</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.494">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes
                        output that is written to logs.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.198">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.200">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.200">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:01.968">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-272" name="Least Privilege Violation" state="0" impact="100" issueId="" issueLink="">
          <desc>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.873">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.200">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-350" name="Reliance on Reverse DNS Resolution for a Security-Critical Action" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.244">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.493">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.557">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L3" name="There is no network protection to protect against Layer 3" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no measures in place to mitigate (D)DoS at a network level.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.559">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L4" name="There is no network protection to protect against Layer 4" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.560">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AV-DoS-TLS" name="There is no protection against Layer 6 attacks (SSL/TLS)" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.561">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-541" name="The service returns back-end source code without interpreting it" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If an include file source is accessible, the file may contain usernames and passwords, as well as sensitive information pertaining to the application and system. The source code can also be sent back to a client because of an error condition or an improperly configured handler.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.875">
              <output/>
            </source>
            <references>
              <reference name="CWE-541: Information Exposure Through Include Source Code" url="https://cwe.mitre.org/data/definitions/541.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="dyn-exec" name="Assure that the application avoids the use of eval() or other dynamic code execution features" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Assure that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for scripts that do not properly validate user inputs in the page parameter. A remote user can supply a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution.&lt;/p&gt;&lt;p&gt;Note 1: This attack will execute the code with the same permissions, potentially including operation system commands.&lt;/p&gt;&lt;p&gt;Note 2: Eval injection is prevalent in handler/dispatch procedures that want to invoke a large number of functions, or set a large number of variables.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.250">
              <output/>
            </source>
            <references>
              <reference name="Direct Dynamic Code Evaluation (Eval Injection)" url="https://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection"/>
              <reference name="[SCRIPT_ENGINE_INJECTION] Potential code injection when using Script Engine" url="https://find-sec-bugs.github.io/bugs.htm"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC" name="Detect and notify the usage of automated tools or unusual behavior" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Don't allow users to manipulate a system or guess its behavior based on input or output timing and detect the usage of automated tools or unusual behavior, such as actions not performed in reasonable "human time" or other abnormal time patterns.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;When the usage of automated tools is detected, the application should respond by denying access and notifying the security group.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Use several automated tools to perform normal user actions.&lt;/li&gt;
                            &lt;li&gt;Check that the applications detects these actions, denies the users access and
                            notifies the security group.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.514">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="protection-against-data-mining" name="Detect and protect against data mining techniques" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data mining is an analytical process that attempts to find correlations or patterns in large data sets for the purpose of data or knowledge discovery. Data storage objects include database records and database fields. Sensitive information can be extracted from data mining operations. When information is personally identifiable information, it may lead to unanticipated revelations about individuals and give rise to privacy risks. Prior to performing data mining activities, organizations determine whether such activities are authorized. Organizations may be subject to applicable laws, executive orders, directives, regulations, or policies that address data mining requirements. Organizational personnel consult with the senior agency official for privacy and legal counsel regarding such requirements.&lt;/p&gt;&lt;p&gt;Data mining prevention and detection techniques include limiting the number and frequency of database queries to increase the work factor needed to determine the contents of databases, limiting types of responses provided to database queries, applying differential privacy techniques or homomorphic encryption, and notifying personnel when atypical database queries or accesses occur. Data mining protection focuses on protecting information from data mining while such information resides in organizational data stores. In contrast, AU-13 focuses on monitoring for organizational information that may have been mined or otherwise obtained from data stores and is available as open-source information residing on external sites, such as social networking or social media websites.&lt;/p&gt;&lt;p&gt;EO 13587 requires the establishment of an insider threat program for deterring, detecting, and mitigating insider threats, including the safeguarding of sensitive information from exploitation, compromise, or other unauthorized disclosure. Data mining protection requires organizations to identify appropriate techniques to prevent and detect unnecessary or unauthorized data mining. Data mining can be used by an insider to collect organizational information for the purpose of exfiltration.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="AC-23" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your system supports policies that protect against data mining such as filtering, throttling and anomaly detection.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.515">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.842">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-FILE-DATA" name="Do not use untrusted client-side data in server-side file operations" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application may be required to perform server-side file operations based on client-side actions. This can expose the application to attack through remote or local file-inclusion, or remote code execution attacks if unsafe data is used in file inclusion, class loader, or reflection capabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tainted, untrusted, client-side data must not be used directly in server-side file load operations.&lt;/li&gt;&lt;li&gt;Where server-side operations are dependent on client-side input, this should be mapped to pre-defined operations on the server-side rather than using tainted client-side input directly.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify sources of data entering the application.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Classify them into trusted and untrusted.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;if they are untrusted, make sure there is a validation and sanitization mechanism before sending this data into another system (Database, Command, etc.).&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.249">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.841">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.512">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.&lt;/p&gt;&lt;p&gt;One of the ways to enforce this is by following the deny-by-default principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny-by-default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.514">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.514">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="configuration-integrity" name="Ensure the integrity of all security-relevant configurations to detect tampering" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Web server and application server configurations play a key role in the security of a web application. These servers are responsible for serving content and invoking applications that generate content. In addition, many application servers provide a number of services that web applications can use, including data storage, directory services, mail, messaging, and more. Failure to manage the proper configuration of your servers can lead to a wide variety of security problems.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation:&lt;/b&gt;
&lt;/div&gt;
&lt;div&gt;
  Authorized administrators need to ensure the integrity of all security-relevant configurations to detect tampering.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="14.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
&lt;/div&gt;
&lt;div&gt;
  4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
&lt;/div&gt;
&lt;div&gt;
  4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
&lt;/div&gt;
&lt;div&gt;
  4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
&lt;/div&gt;
&lt;div&gt;
  4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
&lt;/div&gt;
&lt;div&gt;
  4.3.6 Test HTTP Methods (OTG-CONFIG-006)
&lt;/div&gt;
&lt;div&gt;
  4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
&lt;/div&gt;
&lt;div&gt;
  4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
&lt;/div&gt;
&lt;div&gt;
  4.3.9 Test File Permission (OTG-CONFIG-009)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.250">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SA-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.843">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from untrusted data in logs" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.839">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="identify-dns-domains" name="Identify the DNS domains periodically to update the information about them" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should have a protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify the forward and reverse DNS lookups.&lt;/li&gt;&lt;li&gt;Verify the connection to the DNS was authenticated successfully by username/password or certificate and that they are active.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.175">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-L7" name="Identity which functions of the application are resource consuming and protect and monitor them (optionally set up a WAF)" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DoS attacks against the application layer also aim to use up the memory and process time that the application requires to function properly while minimizing the resources employed by the attacker by using vulnerabilities or flaws in the application. The main characteristics of this type of attack are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The requirement for less bandwidth compared to other methods such as SYN Flood attacks, and as such, the infrastructure necessary to launch a successful attack is usually minor.&lt;/li&gt;&lt;li&gt;Greater difficulty in distinguishing between malicious and legitimate traffic. Many of the most common protection measures or systems focus on the network or transport layer, and as such, they would not be efficient when the target of the attack is the application layer. It is even difficult for the defense systems that monitor this layer to distinguish between malicious and legitimate traffic.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As we have indicated, this type of attack is very specific, and generally require fewer resources from the attacker to achieve devastating effects in the systems attacked. However, this type of attack requires more time to analyze the targeted system in order to discover vulnerabilities or bottlenecks that can be exploited during the attack.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Analyze weaknesses or bottlenecks in the design, the implementation, or even the functioning of the application to identify "heavy" requests that are resource consuming. For example, if the web application has a search engine, an attack could be to carry out searches that require a high level of resources to generate a bottleneck and eventually disable the service.&lt;/li&gt;&lt;li&gt;Implement a challenge to the device making the network request in order to test whether or not it is a bot. This is done through a test much like the CAPTCHA test commonly found when creating an account online. By giving a requirement such as a JavaScript computational challenge, many attacks can be mitigated.&lt;/li&gt;&lt;li&gt;Use of a web application firewall, managing and filtering traffic through an IP reputation database, and through on-the-fly network analysis by engineers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Layer 7 DDoS Attacks" url="https://owasp.org/www-pdf-archive/Layer_7_DDOS.pdf"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 7 DDoS PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space. One well-known application attack is Slowloris, which targets web servers. Verify that the implemented Layer 7 protection mechanisms (Javascript challenges, CAPTCHA tests, WAF) are effective.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.412">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="implement-monitoring-unusual-activities" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement in the application the appropriate limits for specific business actions and transactions, to enforce the correct usage of the application for each user ensuring they cannot bypass important steps in the flow. This business logic limits provide us protection against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/p&gt;&lt;p&gt;All business actions or transactions that exceed the established limits, should be recorded in the logs and monitored as unusual events.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A04:2021-Insecure Design" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.&lt;/li&gt;
   &lt;li&gt;Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/li&gt;
  &lt;li&gt;Verify the application monitors for unusual events or activity from a business logic perspective.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.515">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API rate limiting there are several methods that can be applied:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Throttling: based on certain rules a request can be slowed down considerably to allow other requests to be served first&lt;/li&gt;&lt;li&gt;Request queues: limit the number of request in a given period of time (e.g. five requests per second)&lt;/li&gt;&lt;li&gt;Token bucket: commonly used in public APIs, each user has a number of tokens to call the API. After all tokens have been used the user has to wait until the number of tokens are renewed&lt;/li&gt;&lt;li&gt;Fixed window: requests that exceed a fixed limit in a period of time will be blocked temporarily&lt;/li&gt;&lt;li&gt;Leaky bucket: requests are put in a FIFO queue and will be served accordingly&lt;/li&gt;&lt;li&gt;Sliding log: a time-stamped log is used to identify user actions, so the rate limit can be applied for a specified user to avoid more than X actions in a period of time&lt;/li&gt;&lt;li&gt;Sliding window: combination of fixed window and sliding log&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;From a user perspective, implementing timeouts and calling paginated endpoints can reduce the impact of having a very large response that can freeze the system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.5" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API4:2023-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like THC-Hydra, OWASP ZAP or Burp Suite to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.515">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="error-handling-centralized" name="Implement centralized mechanisms to manage errors and exceptions" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a functionality or a mechanism to manage exceptions in a centralized manner and avoid including duplicated try/catch blocks in the code.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;A well-planned error/exception handling strategy is important for three reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Good error handling does not give an attacker any information which can be leveraged for attacking the application.&lt;/li&gt;&lt;li&gt;A proper centralized error strategy is easier to maintain and reduces the chances of any uncaught errors "Bubbling up" to the front-end of an application.&lt;/li&gt;&lt;li&gt;Information leakages can lead to social engineering exploits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building an infrastructure for consistent error reporting proves more difficult than error handling. All exceptions should be caught as events with the severity of the error. These events will be logged.&lt;/p&gt;&lt;p&gt;The centralized system should reorganize all events and throw the corresponding error or system message in a consistent manner, depending on the severity of the error.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Code Review: Error Handling" url="https://www.owasp.org/index.php/Codereview-Error-Handling"/>
            <reference name="OWASP Error Handling" url="https://www.owasp.org/index.php/Error_Handling"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify that a centralized system is in place to catch errors and exceptions, and these errors are shown in a correct manner.&lt;/li&gt;&lt;li&gt;Verify all errors thrown from the centralized system are displayed in a correct fashion.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.515">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Actions to do:&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;&lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Log considerations:&lt;ul&gt;&lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Steps:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.843">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-TLS" name="Inspect the TLS/SSL traffic on a capable device before sending the connection down on your infrastructure" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;TLS adds another vector for computational attacks since a client can easily (with little computational effort) force the server to expend relatively large computational work. If a web application is delivered over TLS, an attacker can also choose to attack the TLS negotiation process. TLS is computationally expensive so an attacker can reduce a server's availability by sending unintelligible data. In a variation of this attack, an attacker completes the TLS handshake but perpetually renegotiates the encryption method. Or an attacker can attempt to exhaust server resources by opening and closing many TLS sessions.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;To mitigate consider options like offloading the SSL from the origin infrastructure and inspecting the application traffic for signs of attack traffic or violations of policy at an application delivery platform (ADP).&lt;br&gt;A good ADP will also ensure that your traffic is then re-encrypted and forwarded back to the origin infrastructure with unencrypted content only ever residing in protected memory on a secure bastion host.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 6 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt;. It covers all the required tests for TLS &amp;amp; SSL assessments and is regularly updated.&lt;/p&gt;&lt;p&gt;There are many testing options that can be used with &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; and the options you should use will depend greatly on your testing requirements. Below are some useful examples, for an overview of &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; command-line options. run ./testssl.sh with no other options.&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to console&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Test all hosts on a Subnet and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Same as above, but only enumerate each servers supported ciphers:&lt;br&gt;./testssl.sh -E 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.412">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2023-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.843">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.24" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.32" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.841">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-LOGGING" name="Logging the data access and the modification of personal data" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that every access and modification of personal data is logged (The log should be precise enough to know who changed what and when). This includes data access from the application as well as data access from privileged accounts, such as database admins. In practice, this means logging both on application, middleware and operating system (OS) level.
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://eur-lex.europa.eu/legal-content/EN/TXT/?uri=CELEX:02016R0679-20160504"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="Art.5" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Test accessing and modifying user personal data as legitimate users, employees, administrators and malicious actors.&lt;/li&gt;
                &lt;li&gt;Verify appropriate logging of all the above activities are successful and sufficiently detailed.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.842">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.14" supportedStandardRef="iso-27002-2022"/>
            <standard ref="8.15" supportedStandardRef="iso-27002-2022"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.842">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-541" name="Prevent unauthorised access to source code through the service" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to the source-code for the application can aid an attacker in determining bugs or vulnerabilities in the code or logic. For closed-source projects it is therefore important to control and restrict access to the source. Application services may unexpectedly expose code, for example a service providing files to a user could be manipulated to access source code if implemented insecurely.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure source code is not inadvertently disclosed through misconfiguration or vulnerabilities in the service.&lt;/li&gt;&lt;li&gt;Check configuration files are not downloadable directly from the service, and cannot be read and viewed through the service itself.&lt;/li&gt;&lt;li&gt;Ensure backups, operating systems, and version control artifacts do not expose code.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the source code of the application is never returned in cases in which it cannot be interpreted.&lt;/li&gt;&lt;li&gt;Web Servers have a concept called handlers which manage the source code interpretation before sending it to the client. If those handlers are not properly configured, the plain source code could be sent as a default.&lt;/li&gt;&lt;li&gt;Check the handlers are correctly configured to support the types of languages your server uses.&lt;/li&gt;&lt;li&gt;Check also that the source code is not leaked in case of failure.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.513">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-ICMP-Flooding" name="Rate-limit ICMP traffic and prevent the attack from impacting bandwidth and firewall performance" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Common attacks are ICMP Flooding, Ping flood and Ping of death - Layer 3 infrastructure DDoS attack methods that use ICMP messages to overload the targeted network's bandwidth. These kind of attacks can be prevented from taking place by rate-limiting ICMP traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;For example, iptables can be used on Linux systems as follows:&lt;/p&gt;&lt;p&gt;To protect against ping flood attacks the 'limit' module of iptables can be used:&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note that the above lines will protect only against ping request attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To protect against generic ICMP flood attacks we can remove the constraint '--icmp-type echo-request'. This is only good enough to protect against PC to PC attacks. If flood is done using multiple sources or using hardware then this configuration may not be enough. The configuration will also cause denial of service to other users when under attack even from single source, as we are limiting based on protocol without considering the source address of the packet.&lt;/p&gt;&lt;p&gt;Iptables can also be used to prevent abuse of network resources by rate limiting them:&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 4/second --limit-burst 12 -j ACCEPT&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 1/minute --limit-burst 1 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;In the above example we are limiting outgoing connections to port 80. This is useful when we can't completely block outgoing connections but we do not want it to become channel from where people start browsing net or downloading. The limit module can also be used in rate limiting incoming traffic for performance reasons.&lt;/p&gt;&lt;p&gt;Disabling a ping flood is most easily accomplished by disabling the ICMP functionality of the targeted router, computer or other device. A network administrator can access the administrative interface of the device and disable its ability to send and receive any requests using the ICMP, effectively eliminating both the processing of the request and the Echo Reply. The consequence of this is that all network activities that involve ICMP are disabled, making the device unresponsive to ping requests, traceroute requests, and other network activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Ping (ICMP) Flood DDoS Attack" url="https://www.cloudflare.com/learning/ddos/ping-icmp-flood-ddos-attack/"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="Rate limiting using iptables" url="https://www.sbarjatiya.com/notes_wiki/index.php/Rate_limiting_using_iptables"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can execute a Smurf attack (denial-of-service attack that floods a target system via spoofed broadcast ping messages) using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 -1 - flood -a VICTIM_IP BROADCAST_ADDRESS&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.411">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC-006" name="Restrict actions of users that follow unusual patterns" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict actions that users can do outside of the approved/required business process flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This is important because without this safeguard in place attackers may be able to bypass or circumvent work-flows and checks allowing them to prematurely enter or skip required sections of the application potentially allowing actions/transactions to be completed without successfully completing the entire business process, leaving the system with incomplete back-end tracking information.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-02 Flaw Remediation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/40-08_02_SI-02"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
            <reference name="OWASP testing for the circumvention of work flows" url="https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006)"/>
          </references>
          <standards>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application only processes business logic flows in sequential step order and in realistic human time.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.514">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:01.816">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.17" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.842">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API3:2023-Broken Object Property Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.248">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-BH" name="Use blackholing to mitigate L4 DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DDoS attack blocking, commonly referred to as blackholing, is a method typically used by ISPs to stop a DDoS attack on one of its customers. This approach to block DDoS attacks makes the site in question completely inaccessible to all traffic, both malicious attack traffic and legitimate user traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Blackholing is typically deployed by the ISP to protect other customers on its network from the adverse effects of DDoS attacks such as slow network performance and disrupted service. Common attacks are SYN flood and Smurf attack. For Smurf attack a simple solution is to disable IP broadcasting addresses at each network router and firewall.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Older routers are likely to enable broadcasting by default, while newer routers will likely already have it disabled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Disable broadcasting by default on old routers.&lt;/p&gt;&lt;p&gt;To implement RTBH (Remote Triggered Black Hole) Network Operator sets up a null route for the 192.0.2.1 address on all the backbone routers which participate in BGP:&lt;/p&gt;&lt;p&gt;ip route 192.0.2.1 255.255.255.255 null 0 254&lt;/p&gt;&lt;p&gt;192.0.2.1 is part of 192.0.2.0/24, the TEST-NET, one of the reserved IPv4 address blocks.&lt;/p&gt;&lt;p&gt;Create a route-map to catch routes which need to be blackholed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static routes can be tagged in Cisco IOS - we will tag routes to be blackholed with the value of 66&lt;/li&gt;&lt;li&gt;Set origin to be iBGP&lt;/li&gt;&lt;li&gt;Set local-preference to be 150&lt;ul&gt;&lt;li&gt;higher than any other local-preference set in the backbone&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set community to be no-export and internal marker community (ASN:666)&amp;nbsp;&lt;ul&gt;&lt;li&gt;Don't want prefix to leak outside the AS&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set next-hop to 192.0.2.1 (IPv4) or 100::1 (IPv6)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then introduce the route-map into the BGP configuration.&lt;/p&gt;&lt;p&gt;To implement the trigger, simply null route whatever address or address block needs to be blackholed:&lt;/p&gt;&lt;p&gt;ip route 50.62.124.1 255.255.255.255 null0 tag 66&amp;nbsp;&lt;/p&gt;&lt;p&gt;And this ensures that (for example) 50.62.124.1/32 is announced to the entire backbone with next-hop 192.0.2.1 set.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="RFC 4987 - TCP SYN Flooding Attacks and Common Mitigations" url="https://tools.ietf.org/html/rfc4987"/>
            <reference name="RFC 5635 - Remote Triggered Black Hole Filtering               with Unicast Reverse Path Forwarding (uRPF)" url="https://tools.ietf.org/html/rfc5635"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can simulate a TCP SYN DDoS Attack using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 VICTIM_IP -flood -rand-source -destport 80 -syn -d 120 -w 64&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:02.410">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:03.516">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="same-encoding-parsers" name="Use the same encodings and parsers in all application components" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Errors may occur when converting between differently coded character data.&amp;nbsp; There are two general types of encoding errors. If the byte sequence is not valid for the specified charset then the input is considered malformed. If the byte sequence cannot be mapped to an equivalent character sequence then an unmappable character has been encountered.&lt;/p&gt;&lt;p&gt;Special care should be taken when decoding untrusted byte data to ensure that malformed input or unmappable character errors do not result in defects and vulnerabilities.&amp;nbsp; Encoding errors can also occur, for example, encoding a cryptographic key containing malformed input for transmission will result in an error. Encoding and decoding errors typically result in data corruption.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the same encodings and parsers in all application components to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="STR51-J. Use the charset encoder and decoder classes when more control over the encoding process is required" url="https://wiki.sei.cmu.edu/confluence/display/java/STR51-J.+Use+the+charset+encoder+and+decoder+classes+when+more+control+over+the+encoding+process+is+required"/>
          </references>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all application components are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.250">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.249">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.249">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="hostile-subdomain-takeover" name="Attackers claim subdomains with the help of external services" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  This attack vector utilizes DNS entries pointing to Service Providers where the pointed sub-domain is currently not in use. Depending on the DNS-entry configuration and which Service Provider it points to, some of these services will allow unverified users to claim these sub-domains as their own.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In the not so rare case, the attacker can also "inherit" the Domain Owner's Wildcard SSL used inside the Service Provider.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
  &lt;b&gt;Attack Scenario&lt;/b&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;ol&gt;
   &lt;li&gt;Your company starts using a new service, eg an external Support Ticketing-service.&lt;/li&gt;
   &lt;li&gt;Your company points a sub-domain to the Support Ticketing-service, eg support.your-domain.com&lt;/li&gt;
   &lt;li&gt;Your company stops using this service but does not remove the sub-domain redirection pointing to the ticketing system.&lt;/li&gt;
   &lt;li&gt;Attacker signs up for the Service and claims the domain as theirs. No verification is done by the Service Provider, and the DNS-setup is already correctly setup.&lt;/li&gt;
   &lt;li&gt;Attacker can now build a complete clone of the real site, add a login form, redirect the user, steal credentials (e.g. admin accounts), cookies and/or completely destroy business credibility for your company.&lt;/li&gt;
  &lt;/ol&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hostile Subdomain Takeover using Heroku/Github/Desk + more" url="https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-350">
                  <countermeasures>
                    <countermeasure ref="identify-dns-domains" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-dns-domains" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-272">
                  <countermeasures>
                    <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                    <countermeasure ref="network-rate-limit" mitigation="34"/>
                    <countermeasure ref="protection-against-data-mining" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="protection-against-data-mining" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-172" name="Attackers subvert the intended workflow of the application in order to perform unauthorised operations" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;If an application enforces an order in workflows, then attackers could attempt to bypass this order so that they can perform operations for which they are not authorized. The technique can also be used to gain access to unauthorized data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-841">
                  <countermeasures>
                    <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                    <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-214" name="An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-460">
                  <countermeasures>
                    <countermeasure ref="error-handling-centralized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="error-handling-centralized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="SOURCE-LEAK" name="Attackers gain control of the system through a source code leakage" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Attackers gain unauthorized access to a service by reading raw source code returned by the service, and this code contains confidential information such as authentication credentials or other secrets that can be used to access the service.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Configuration files that can be downloaded from the service could also be leveraged to gain access to sensitive information.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-541">
                  <countermeasures>
                    <countermeasure ref="CWE-541" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-541" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="availability" name="Availability" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-607" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L3">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L4">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-TLS">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG-MANAGEMENT" name="Log Management" desc="" library="CS-Default">
          <threats>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="70"/>
                <countermeasure ref="LOG-RETENTION" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.8" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-778-AUTH" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                    <countermeasure ref="CWE-662" mitigation="16"/>
                    <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                    <countermeasure ref="security-logging" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="20"/>
                <countermeasure ref="CWE-662" mitigation="16"/>
                <countermeasure ref="EU-GDPR-LOGGING" mitigation="16"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="16"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="16"/>
                <countermeasure ref="security-logging" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-586-SER" name="An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-502">
                  <countermeasures>
                    <countermeasure ref="SER-UNTRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SER-UNTRUST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-300" name="Attackers gain control of the connection through a Man In The Middle attack" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
                                This type of attack targets the communication between two components (typically client
                                and server). The attacker places himself in the communication channel between the two
                                components. Whenever one component attempts to communicate with the other (data flow,
                                authentication challenges, etc.), the data first goes to the attacker, who has the
                                opportunity to observe or alter it, and it is then passed on to the other component as
                                if it was never intercepted. This interposition is transparent leaving the two
                                compromised components unaware of the potential corruption or leakage of their
                                communications. The potential for Man-in-the-Middle attacks yields an implicit lack of
                                trust in communication or identify between two components.&amp;nbsp; &amp;nbsp;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="post-data" name="Post data" desc="Data is received (posted) here" library="CS-Default">
          <threats>
            <threat ref="CAPEC-176" name="Attackers can manipulate Configuration/Environment" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-15">
                  <countermeasures>
                    <countermeasure ref="configuration-integrity" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="configuration-integrity" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-35" name="Attackers can leverage Executable Code in Non-Executable Files" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>An attack of this type exploits a system's trust in configuration and resource files, when the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.
&lt;br /&gt;The attack can be directed at a client system, such as causing buffer overrun through loading seemingly benign image files, as in Microsoft Security Bulletin MS04-028 where specially crafted JPEG files could cause a buffer overrun once loaded into the browser. Another example targets clients reading pdf files. In this case the attacker simply appends javascript to the end of a legitimate url for a pdf (http://www.gnucitizen.org/blog/danger-danger-danger/)
&lt;br /&gt;http://path/to/pdf/file.pdf#whatever_name_you_want=javascript:your_code_here
&lt;br /&gt;The client assumes that they are reading a pdf, but the attacker has modified the resource and loaded executable javascript into the client's browser process.
&lt;br /&gt;The attack can also target server processes. The attacker edits the resource or configuration file, for example a web.xml file used to configure security permissions for a J2EE app server, adding role name &amp;quot;public&amp;quot; grants all users with the public role the ability to use the administration functionality.
&lt;br /&gt;The server trusts its configuration file to be correct, but when they are manipulated, the attacker gains full control.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-95">
                  <countermeasures>
                    <countermeasure ref="dyn-exec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="dyn-exec" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-73" name="Attackers upload code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to exploit these vulnerabilities.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-116">
                  <countermeasures>
                    <countermeasure ref="same-encoding-parsers" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="same-encoding-parsers" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-94" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="ssrf-threat" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                    <countermeasure ref="CWE-601" mitigation="25"/>
                    <countermeasure ref="DATA-VAL" mitigation="25"/>
                    <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                <countermeasure ref="CWE-601" mitigation="25"/>
                <countermeasure ref="DATA-VAL" mitigation="25"/>
                <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1f594d5a-0d4d-4ab7-af41-acc5d5cc76e5" diagramComponentId="771bf9fc-1e87-4c36-9920-6a090b06ab6b" ref="4d33876c-2161-4cc7-875c-e6dd1667d7b9" name="Trained Model" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="93188c58-de74-4bed-8fb8-21fe54a69945" componentDefinitionRef="CD-ML-AI-TRAINED-MODEL">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-506" name="Embedded Malicious Code" state="0" impact="100" issueId="" issueLink="">
          <desc>The application contains code that appears to be malicious in
                        nature.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.059">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-359" name="Exposure of Private Information ('Privacy Violation')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not properly prevent private data (such as credit card numbers) from being accessed by actors who either (1) are not explicitly authorized to access the data or (2) do not have the implicit consent of the people to which the data is related.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.059">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.059">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ML-AI-MODEL-CHOICE" name="Carefully consider the model choice" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Models can be built using different approaches or algorithms. Overall, choosing the right algorithm depends on several factors, including business considerations, data size, accuracy, training time, parameters, and inference performance, among others.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In general, the right choice is typically a combination of these aspects. In terms of security, however, the main algorithmic concern is about the nature of the data, where certain algorithms are more vulnerable to data leaks than others.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Depending on your privacy concerns, and/or compliance considerations, e.g., GPDR, &amp;nbsp;consider auditing the data privacy of the models under consideration, e.g., using tools like Privacy Meter.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Privacy Meter" url="https://github.com/privacytrustlab/ml_privacy_meter"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.984">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" name="Consider possible trojanized versions when acquiring shared models" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Never assume what you are downloading is safe! Malicious actors often use trojanized versions of popular applications in an effort to steal information and compromise systems.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In this case, you might be fine-tuning a model with possibly a Trojan that includes sneaky behavior that is unanticipated.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Basic practices include carefully checking the source of the model, as well as using cryptographic methods like digital signatures and secure hashes to verify the authenticity and file integrity.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to Verify Downloaded Files" url="https://www.digitalocean.com/community/tutorials/how-to-verify-downloaded-files"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.985">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PRIVACY-PRESERVING" name="Consider privacy-preserving techniques and strategies" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Privacy-preserving or privacy-enhancing techniques are designed to prevent the exposure of the model and data.&lt;/p&gt;
&lt;p&gt;First, there are two types of access an adversary might have; 1) White Box, where information about the model or its original training data is available, and 2) Black Box, where there is no knowledge about the model or data. In this case, attackers would explore the model by providing carefully crafted inputs and observing outputs.&lt;/p&gt;
&lt;p&gt;There are a number of attack types, which involve inferring information about the model and data, e.g., model inversion or membership inference.&lt;/p&gt;
&lt;p&gt;Some of the defenses aiming to protect confidentiality and privacy in ML/AI-based systems are:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Differential Privacy: one of the state-of-the-art methods for providing access to information free from inferences. There are two main privacy-preserving model-training approaches in the literature: 1) using noisy stochastic gradient descent (noisy SGD), and 2) Private Aggregation of Teacher Ensembles (PATE).&lt;/li&gt;
 &lt;li&gt;Cryptography; e.g., privacy-enhancing tools based on secure multi-party computation (SMC) and fully homomorphic encryption (FHE) have been proposed to securely train supervised machine learning models.&lt;/li&gt;
 &lt;li&gt;Trusted environments (engineering/setup solution).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other techniques in this space include dropout, weight normalization, dimensionality reduction, selective gradient sharing, etc.&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="An Overview of Privacy in Machine Learning" url="https://arxiv.org/pdf/2005.08679.pdf"/>
            <reference name="ML03:2023 Model Inversion Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML03_2023-Model_Inversion_Attack.html"/>
            <reference name="ML04:2023 Membership Inference Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML04_2023-Membership_Inference_Attack.html"/>
            <reference name="ML05:2023 Model Stealing" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML05_2023-Model_Stealing.html"/>
            <reference name="Privacy Preserving ML" url="https://github.com/EthicalML/awesome-production-machine-learning#privacy-preserving-ml"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.985">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-KEEP-LOGS" name="Keep a history of queries to the model" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Keeping a history of queries to the system is highly recommended. Logging user interaction with the model is not only a powerful tool for user research (behavior study, usability, system metrics analysis, etc.) but will also allow reviews to make sure the system is not unintentionally leaking confidential information.&amp;nbsp;&lt;br&gt;Care must be taken on how you store the logs! Logging can itself introduce a security/privacy risk.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Top seven logging and monitoring best practices" url="https://www.synopsys.com/blogs/software-security/logging-and-monitoring-best-practices/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.984">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PROTECT-SHARED" name="Protect data and IP when sharing or shipping models" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Models sharing or shipping can be treated the same as software delivery and protection:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Consider training data as traditional source code.&lt;/li&gt;
 &lt;li&gt;Consider the model files as compiled executables.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A number of mechanisms/options can be used, including:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Encryption, e.g., for on-device models, only unpacking in memory when the model is running,&lt;/li&gt;
 &lt;li&gt;Obfuscation, e.g., adding random noise to existing samples, or augmenting the dataset with new samples,&amp;nbsp;&lt;/li&gt;
 &lt;li&gt;Copyright traps, or&lt;/li&gt;
 &lt;li&gt;Confidential computing, e.g., built-in hardware-based security.&lt;/li&gt;
&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="ML Model Watermarking" url="https://github.com/SAP/ml-model-watermarking"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:05.985">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-SHARING-TRANSFER" name="An adversary may take advantage of model sharing and/or transfer" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Models storage and transfer may lead to the possibility that what is being reused may be a Trojaned (or otherwise damaged) version of the model. This risk is more pronounced in the case of using ready-to-use models.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="75"/>
              <references>
                <reference name="ML06:2023 Corrupted Packages" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML06_2023-Corrupted_Packages.html"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-PROTECT-SHARED" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-506">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PROTECT-SHARED" mitigation="50"/>
                <countermeasure ref="C-ML-AI-TROJANIZED-VERSIONS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-PRIVACY" name="An adversary may be able to reveal sensitive information available in the model or the data used to build it" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;ML/AI models incorporate information and representations of the data ingested during training, some of which might be sensitive.&lt;br&gt;Algorithm choice might be a key factor to limit the risk, e.g., using a non-parametric method like k-nearest neighbors in a situation with sensitive medical records is probably a bad idea since exemplars will have to be stored on production hosts.&amp;nbsp;&lt;br&gt;In general, however, remember that any model is susceptible to memorizing information present within the training sets.&amp;nbsp;&lt;br&gt;You should also be aware of what outputs the model is producing and how it may reveal sensitive aspects of the training data, e.g., using monitoring.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references>
                <reference name="An Overview of Privacy in Machine Learning" url="https://arxiv.org/pdf/2005.08679.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-359">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-KEEP-LOGS" mitigation="33"/>
                    <countermeasure ref="C-ML-AI-MODEL-CHOICE" mitigation="33"/>
                    <countermeasure ref="C-ML-AI-PRIVACY-PRESERVING" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-KEEP-LOGS" mitigation="33"/>
                <countermeasure ref="C-ML-AI-MODEL-CHOICE" mitigation="33"/>
                <countermeasure ref="C-ML-AI-PRIVACY-PRESERVING" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ce54bad8-7bcc-40d9-8e11-b7c4b19edaa9" diagramComponentId="a1d03bae-e6b7-42ce-8ccd-8b97d0e7cd38" ref="239ba369-2d9f-4e4c-8129-d86e8da7d042" name="Users Input" desc="" library="IR-Machine-Learning-Artificial-Intelligence" parentComponentRef="93188c58-de74-4bed-8fb8-21fe54a69945" componentDefinitionRef="CD-ML-AI-USERS-INPUT">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.525">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-ML-AI-ADVERSARIAL-ATTACKS" name="Consider defenses against adversarial tampering such as adversarial training methods or data preprocessing-based approaches" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Adversarial attacks and defenses are an active and rapidly growing research area. Thousands of research papers have been published in recent years (1200 in 2022!) documenting both attacks and defense techniques. These, however, can be classified into the following categories of defenses:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Model-oriented, including: 
  &lt;ul&gt;
   &lt;li&gt;Robustness improvement for models, e.g., adversarial training methods,&amp;nbsp;&lt;/li&gt;
   &lt;li&gt;Adversarial attack detection, e.g., detect adversarial perturbations of commonly used attack methods, and&lt;/li&gt;
  &lt;/ul&gt;&lt;/li&gt;
 &lt;li&gt;Data-oriented: essentially preprocessing functions: e.g., input cleansing or denoising.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Depending on the domain area and the underlying ML/AI framework used, there are a number of tools that can help assess models against adversarial threats, including adversarial tampering. These include the Adversarial Robustness Toolbox, DeepRobust, or AutoAttack.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Adversarial Attacks and Defenses in Machine Learning-Powered Networks: A Contemporary Survey" url="https://arxiv.org/abs/2303.06302"/>
            <reference name="Adversarial Robustness Toolbox (ART)" url="https://adversarial-robustness-toolbox.readthedocs.io/en/latest/"/>
            <reference name="Adversarial Robustness Tools" url="https://github.com/EthicalML/awesome-production-machine-learning#adversarial-robustness"/>
            <reference name="AutoAttack" url="https://github.com/fra31/auto-attack"/>
            <reference name="DeepRobust" url="https://github.com/DSE-MSU/DeepRobust"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-ACCESS-CONTROL" name="Control the access to data, models, and components" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;On the back-end/ server side, there should be strong controls on who has access to the model, its code and data, and related components and materials (such as designs, or test and validation plans).&lt;/p&gt;
&lt;p&gt;On the client side, users of the model should be authenticated before the system allows them access to using the model.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="A01:2021 – Broken Access Control - How to Prevent?" url="https://owasp.org/Top10/A01_2021-Broken_Access_Control/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-INPUT-VALIDATION" name="Perform input validation by applying anomaly detection" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;This can be considered as part of the data preprocessing functions already mentioned in the overall defenses against adversarial tampering, except that it would attempt to validate the input without further processing.&lt;/p&gt;
&lt;p&gt;Anomaly detection can be a powerful defense mechanism in this case. It would allow to model the distribution of the clean data, i.e., expected values or patterns, and consequently allows to (potentially) reject anomalous inputs that are likely to be malicious.&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Anomaly Detection Learning Resources" url="https://github.com/yzhao062/anomaly-detection-resources"/>
            <reference name="ML01:2023 Input Manipulation Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML01_2023-Input_Manipulation_Attack.html"/>
            <reference name="Outlier and Anomaly Detection" url="https://github.com/EthicalML/awesome-production-machine-learning#outlier-and-anomaly-detection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.475">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-ML-AI-PROTECT-DATA-STREAMS" name="Protect the data stream and consider multiple independent sensors if possible" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;By design, input data will be structured and pre-processed similarly to the training data to be ingested by the model and make predictions. Protecting this input data stream and processing is of prime importance.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Options include using a multi-modal input stream/system which will be harder to completely control. One way to carry this out might be to use multiple sensors that are not similarly designed or that do not have the same engineering failure conditions.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards/>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-07T14:34:06.476">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="IR-Machine-Learning-Artificial-Intelligence">
          <threats>
            <threat ref="T-ML-AI-INPUT-STREAM" name="An adversary may take control of the input stream/pipeline" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;An ML/AI system that takes its input data from open and potentially unprotected sources may be purposefully manipulated or completely controlled by an attacker. If the data is used in retraining, the model will take in the poisoned/manipulated data and produce incorrect predictions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="75" easeOfExploitation="75"/>
              <references>
                <reference name="ML02:2023 Data Poisoning Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML02_2023-Data_Poisoning_Attack.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-ML-AI-PROTECT-DATA-STREAMS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="T-ML-AI-ADVERSARIAL-EXAMPLES" name="An adversary may input adversarial examples to the deployed model" state="Expose" source="RULES" edited="false" owner="laouad" library="IR-Machine-Learning-Artificial-Intelligence" editable="true">
              <desc>&lt;p&gt;Probably the most prevalent attack type on ML/AI models. &amp;nbsp;Adversarial examples are specially crafted inputs with the purpose of confusing a model, resulting essentially in misclassification. Making false predictions as a result of these perturbations will render the model useless.&amp;nbsp;&lt;/p&gt;
&lt;p&gt;In the age of large language models, this includes prompt injection, where input text may trick the system into ignoring instructions, performing unintended actions, or even executing malicious code or instructions.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="LLM01: Prompt Injection (LLM OWASP Top 10)" url="https://owasp.org/www-project-top-10-for-large-language-model-applications/assets/PDF/OWASP-Top-10-for-LLMs-2023-v1_0_1.pdf"/>
                <reference name="ML01:2023 Input Manipulation Attack" url="https://owasp.org/www-project-machine-learning-security-top-10/docs/ML01_2023-Input_Manipulation_Attack.html"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="C-ML-AI-INPUT-VALIDATION" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-ML-AI-ACCESS-CONTROL" mitigation="34"/>
                <countermeasure ref="C-ML-AI-ADVERSARIAL-ATTACKS" mitigation="33"/>
                <countermeasure ref="C-ML-AI-INPUT-VALIDATION" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cf231b15-b15a-48b0-8f14-752222084701" diagramComponentId="29d8f192-35e8-479d-8bfd-3455f4d3cbe5" ref="ea7cf3e2-8fc6-4dcb-aa4a-f1c1a9d9a987" name="Web UI" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="web-ui">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-830" name="Inclusion of Web Functionality from an Untrusted Source" state="0" impact="100" issueId="" issueLink="">
          <desc>The software includes web functionality (such as a web widget)
                        from another domain, which causes it to operate within the domain of the
                        software, potentially granting total access and control of the software to the
                        untrusted source.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.919">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.162">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="ASSETS-HOSTED-BY-APP" name="Ensure that all application assets are hosted by the application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Review periodically all assets which are accessed by the application and ensure that these
                        assets are hosted by the application. If this is not the case and there are assets in external
                        providers or a CDN, you shall move these assets to be hosted by the application and remove them
                        from external providers or CDNs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SI-07 Software And Information Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/45-08_02_SI-07"/>
          </references>
          <standards>
            <standard ref="14.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="PR.DS-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-8" supportedStandardRef="nist-csf"/>
            <standard ref="SI-7" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all assets are hosted by the application, and not by external providers.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:04.861">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="laouad" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.8" supportedStandardRef="iso-27002-2022"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2023-Server Side Request Forgery" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="c1" value="default"/>
            <customField ref="c2" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Forms with user input (including hidden fields)&lt;/li&gt;&lt;li&gt;API calls&lt;/li&gt;&lt;li&gt;HTTP Headers&lt;/li&gt;&lt;li&gt;Application states such as ASP Viewstates&lt;/li&gt;&lt;li&gt;Serialized Java objects&lt;/li&gt;&lt;li&gt;Any data structure received from the client-side&lt;/li&gt;&lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt;&lt;li&gt;Where possible, define a white-list of accepted input or characters&lt;/li&gt;&lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To test data validation:&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&lt;/li&gt;&lt;li&gt;Pass invalid input to the application and review error trapping and handling.&lt;/li&gt;&lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;A number of tools can be used to aid in testing:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly from your browser with the Developer Tools.&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-11-06T15:20:05.041">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-63" name="An adversary embeds malicious scripts in content that will be served to web browsers" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary embeds malicious scripts in content that will be served to web browsers. The goal of the attack is for the target software, the client-side browser, to execute the script with the users' privilege level. An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute code and scripts. Web browsers, for example, have some simple security controls in place, but if a remote attacker is allowed to execute scripts (through injecting them in to user-generated content like bulletin boards) then these controls may be bypassed. Further, these attacks are very difficult for an end user to detect.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-937-WEB" name="Attackers gain unauthorised access to data by compromising third party web resources" state="Expose" source="RULES" edited="false" owner="laouad" library="CS-Default" editable="true">
              <desc>Web applications typically make extensive use of 3rd party web resources such as
                                JavaScript and CSS files.&amp;nbsp; Should attackers gain access to the source code
                                repositories, or even Content Delivery Networks that host these libraries, then they
                                could gain access to applications that use this content.
                                &lt;div&gt;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-830">
                  <countermeasures>
                    <countermeasure ref="ASSETS-HOSTED-BY-APP" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSETS-HOSTED-BY-APP" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="202030957" value=""/>
                <customField ref="cfThreat" value=""/>
                <customField ref="qa" value=""/>
                <customField ref="safety" value=""/>
                <customField ref="threat_custom_field_qa" value=""/>
                <customField ref="threat_custom_field_qa_1" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>
